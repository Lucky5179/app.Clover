!(function () {
  try {
    var e =
        "undefined" != typeof window
          ? window
          : "undefined" != typeof global
          ? global
          : "undefined" != typeof self
          ? self
          : {},
      t = new e.Error().stack;
    t &&
      ((e._sentryDebugIds = e._sentryDebugIds || {}),
      (e._sentryDebugIds[t] = "e280b13d-3244-48a5-a073-f43ce3d92216"),
      (e._sentryDebugIdIdentifier =
        "sentry-dbid-e280b13d-3244-48a5-a073-f43ce3d92216"));
  } catch (e) {}
})(),
  (self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
    [2888],
    {
      79082: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.createCurve = t.getHash = void 0);
        /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */ let r =
            n(41128),
          i = n(31717),
          a = n(96551);
        function o(e) {
          return {
            hash: e,
            hmac: (t, ...n) => (0, r.hmac)(e, t, (0, i.concatBytes)(...n)),
            randomBytes: i.randomBytes,
          };
        }
        (t.getHash = o),
          (t.createCurve = function (e, t) {
            let n = (t) => (0, a.weierstrass)({ ...e, ...o(t) });
            return Object.freeze({ ...n(t), create: n });
          });
      },
      81525: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.validateBasic = t.wNAF = void 0);
        /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */ let r =
            n(94632),
          i = n(40219),
          a = BigInt(0),
          o = BigInt(1);
        (t.wNAF = function (e, t) {
          let n = (e, t) => {
              let n = t.negate();
              return e ? n : t;
            },
            r = (e) => ({
              windows: Math.ceil(t / e) + 1,
              windowSize: 2 ** (e - 1),
            });
          return {
            constTimeNegate: n,
            unsafeLadder(t, n) {
              let r = e.ZERO,
                i = t;
              for (; n > a; )
                n & o && (r = r.add(i)), (i = i.double()), (n >>= o);
              return r;
            },
            precomputeWindow(e, t) {
              let { windows: n, windowSize: i } = r(t),
                a = [],
                o = e,
                s = o;
              for (let e = 0; e < n; e++) {
                (s = o), a.push(s);
                for (let e = 1; e < i; e++) (s = s.add(o)), a.push(s);
                o = s.double();
              }
              return a;
            },
            wNAF(t, i, a) {
              let { windows: s, windowSize: u } = r(t),
                l = e.ZERO,
                c = e.BASE,
                d = BigInt(2 ** t - 1),
                f = 2 ** t,
                p = BigInt(t);
              for (let e = 0; e < s; e++) {
                let t = e * u,
                  r = Number(a & d);
                (a >>= p), r > u && ((r -= f), (a += o));
                let s = t + Math.abs(r) - 1,
                  h = e % 2 != 0,
                  m = r < 0;
                0 === r ? (c = c.add(n(h, i[t]))) : (l = l.add(n(m, i[s])));
              }
              return { p: l, f: c };
            },
            wNAFCached(e, t, n, r) {
              let i = e._WINDOW_SIZE || 1,
                a = t.get(e);
              return (
                a ||
                  ((a = this.precomputeWindow(e, i)),
                  1 !== i && t.set(e, r(a))),
                this.wNAF(i, a, n)
              );
            },
          };
        }),
          (t.validateBasic = function (e) {
            return (
              (0, r.validateField)(e.Fp),
              (0, i.validateObject)(
                e,
                { n: "bigint", h: "bigint", Gx: "field", Gy: "field" },
                { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }
              ),
              Object.freeze({
                ...(0, r.nLength)(e.n, e.nBitLength),
                ...e,
                p: e.Fp.ORDER,
              })
            );
          });
      },
      15134: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.createHasher =
            t.isogenyMap =
            t.hash_to_field =
            t.expand_message_xof =
            t.expand_message_xmd =
              void 0);
        let r = n(94632),
          i = n(40219),
          a = i.bytesToNumberBE;
        function o(e, t) {
          if (e < 0 || e >= 1 << (8 * t))
            throw Error(`bad I2OSP call: value=${e} length=${t}`);
          let n = Array.from({ length: t }).fill(0);
          for (let r = t - 1; r >= 0; r--) (n[r] = 255 & e), (e >>>= 8);
          return new Uint8Array(n);
        }
        function s(e) {
          if (!(e instanceof Uint8Array)) throw Error("Uint8Array expected");
        }
        function u(e) {
          if (!Number.isSafeInteger(e)) throw Error("number expected");
        }
        function l(e, t, n, r) {
          s(e),
            s(t),
            u(n),
            t.length > 255 &&
              (t = r(
                (0, i.concatBytes)((0, i.utf8ToBytes)("H2C-OVERSIZE-DST-"), t)
              ));
          let { outputLen: a, blockLen: l } = r,
            c = Math.ceil(n / a);
          if (c > 255) throw Error("Invalid xmd length");
          let d = (0, i.concatBytes)(t, o(t.length, 1)),
            f = o(0, l),
            p = o(n, 2),
            h = Array(c),
            m = r((0, i.concatBytes)(f, e, p, o(0, 1), d));
          h[0] = r((0, i.concatBytes)(m, o(1, 1), d));
          for (let e = 1; e <= c; e++) {
            let t = [
              (function (e, t) {
                let n = new Uint8Array(e.length);
                for (let r = 0; r < e.length; r++) n[r] = e[r] ^ t[r];
                return n;
              })(m, h[e - 1]),
              o(e + 1, 1),
              d,
            ];
            h[e] = r((0, i.concatBytes)(...t));
          }
          let y = (0, i.concatBytes)(...h);
          return y.slice(0, n);
        }
        function c(e, t, n, r, a) {
          if (
            (s(e),
            s(t),
            u(n),
            t.length > 255 &&
              (t = a
                .create({ dkLen: Math.ceil((2 * r) / 8) })
                .update((0, i.utf8ToBytes)("H2C-OVERSIZE-DST-"))
                .update(t)
                .digest()),
            n > 65535 || t.length > 255)
          )
            throw Error("expand_message_xof: invalid lenInBytes");
          return a
            .create({ dkLen: n })
            .update(e)
            .update(o(n, 2))
            .update(t)
            .update(o(t.length, 1))
            .digest();
        }
        function d(e, t, n) {
          let o;
          (0, i.validateObject)(n, {
            DST: "stringOrUint8Array",
            p: "bigint",
            m: "isSafeInteger",
            k: "isSafeInteger",
            hash: "hash",
          });
          let { p: d, k: f, m: p, hash: h, expand: m, DST: y } = n;
          s(e), u(t);
          let g = (function (e) {
              if (e instanceof Uint8Array) return e;
              if ("string" == typeof e) return (0, i.utf8ToBytes)(e);
              throw Error("DST must be Uint8Array or string");
            })(y),
            b = d.toString(2).length,
            v = Math.ceil((b + f) / 8),
            w = t * p * v;
          if ("xmd" === m) o = l(e, g, w, h);
          else if ("xof" === m) o = c(e, g, w, f, h);
          else if ("_internal_pass" === m) o = e;
          else throw Error('expand must be "xmd" or "xof"');
          let E = Array(t);
          for (let e = 0; e < t; e++) {
            let t = Array(p);
            for (let n = 0; n < p; n++) {
              let i = v * (n + e * p),
                s = o.subarray(i, i + v);
              t[n] = (0, r.mod)(a(s), d);
            }
            E[e] = t;
          }
          return E;
        }
        (t.expand_message_xmd = l),
          (t.expand_message_xof = c),
          (t.hash_to_field = d),
          (t.isogenyMap = function (e, t) {
            let n = t.map((e) => Array.from(e).reverse());
            return (t, r) => {
              let [i, a, o, s] = n.map((n) =>
                n.reduce((n, r) => e.add(e.mul(n, t), r))
              );
              return { x: (t = e.div(i, a)), y: (r = e.mul(r, e.div(o, s))) };
            };
          }),
          (t.createHasher = function (e, t, n) {
            if ("function" != typeof t)
              throw Error("mapToCurve() must be defined");
            return {
              hashToCurve(r, i) {
                let a = d(r, 2, { ...n, DST: n.DST, ...i }),
                  o = e.fromAffine(t(a[0])),
                  s = e.fromAffine(t(a[1])),
                  u = o.add(s).clearCofactor();
                return u.assertValidity(), u;
              },
              encodeToCurve(r, i) {
                let a = d(r, 1, { ...n, DST: n.encodeDST, ...i }),
                  o = e.fromAffine(t(a[0])).clearCofactor();
                return o.assertValidity(), o;
              },
            };
          });
      },
      94632: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.mapHashToField =
            t.getMinHashLength =
            t.getFieldBytesLength =
            t.hashToPrivateScalar =
            t.FpSqrtEven =
            t.FpSqrtOdd =
            t.Field =
            t.nLength =
            t.FpIsSquare =
            t.FpDiv =
            t.FpInvertBatch =
            t.FpPow =
            t.validateField =
            t.isNegativeLE =
            t.FpSqrt =
            t.tonelliShanks =
            t.invert =
            t.pow2 =
            t.pow =
            t.mod =
              void 0);
        /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */ let r =
            n(40219),
          i = BigInt(0),
          a = BigInt(1),
          o = BigInt(2),
          s = BigInt(3),
          u = BigInt(4),
          l = BigInt(5),
          c = BigInt(8);
        function d(e, t) {
          let n = e % t;
          return n >= i ? n : t + n;
        }
        function f(e, t, n) {
          if (n <= i || t < i) throw Error("Expected power/modulo > 0");
          if (n === a) return i;
          let r = a;
          for (; t > i; )
            t & a && (r = (r * e) % n), (e = (e * e) % n), (t >>= a);
          return r;
        }
        function p(e, t) {
          if (e === i || t <= i)
            throw Error(
              `invert: expected positive integers, got n=${e} mod=${t}`
            );
          let n = d(e, t),
            r = t,
            o = i,
            s = a,
            u = a,
            l = i;
          for (; n !== i; ) {
            let e = r / n,
              t = r % n,
              i = o - u * e,
              a = s - l * e;
            (r = n), (n = t), (o = u), (s = l), (u = i), (l = a);
          }
          let c = r;
          if (c !== a) throw Error("invert: does not exist");
          return d(o, t);
        }
        function h(e) {
          let t, n, r;
          let s = (e - a) / o;
          for (t = e - a, n = 0; t % o === i; t /= o, n++);
          for (r = o; r < e && f(r, s, e) !== e - a; r++);
          if (1 === n) {
            let t = (e + a) / u;
            return function (e, n) {
              let r = e.pow(n, t);
              if (!e.eql(e.sqr(r), n)) throw Error("Cannot find square root");
              return r;
            };
          }
          let l = (t + a) / o;
          return function (e, i) {
            if (e.pow(i, s) === e.neg(e.ONE))
              throw Error("Cannot find square root");
            let o = n,
              u = e.pow(e.mul(e.ONE, r), t),
              c = e.pow(i, l),
              d = e.pow(i, t);
            for (; !e.eql(d, e.ONE); ) {
              if (e.eql(d, e.ZERO)) return e.ZERO;
              let t = 1;
              for (let n = e.sqr(d); t < o && !e.eql(n, e.ONE); t++)
                n = e.sqr(n);
              let n = e.pow(u, a << BigInt(o - t - 1));
              (u = e.sqr(n)), (c = e.mul(c, n)), (d = e.mul(d, u)), (o = t);
            }
            return c;
          };
        }
        function m(e) {
          if (e % u === s) {
            let t = (e + a) / u;
            return function (e, n) {
              let r = e.pow(n, t);
              if (!e.eql(e.sqr(r), n)) throw Error("Cannot find square root");
              return r;
            };
          }
          if (e % c === l) {
            let t = (e - l) / c;
            return function (e, n) {
              let r = e.mul(n, o),
                i = e.pow(r, t),
                a = e.mul(n, i),
                s = e.mul(e.mul(a, o), i),
                u = e.mul(a, e.sub(s, e.ONE));
              if (!e.eql(e.sqr(u), n)) throw Error("Cannot find square root");
              return u;
            };
          }
          return h(e);
        }
        BigInt(9),
          BigInt(16),
          (t.mod = d),
          (t.pow = f),
          (t.pow2 = function (e, t, n) {
            let r = e;
            for (; t-- > i; ) (r *= r), (r %= n);
            return r;
          }),
          (t.invert = p),
          (t.tonelliShanks = h),
          (t.FpSqrt = m),
          (t.isNegativeLE = (e, t) => (d(e, t) & a) === a);
        let y = [
          "create",
          "isValid",
          "is0",
          "neg",
          "inv",
          "sqrt",
          "sqr",
          "eql",
          "add",
          "sub",
          "mul",
          "pow",
          "div",
          "addN",
          "subN",
          "mulN",
          "sqrN",
        ];
        function g(e, t, n) {
          if (n < i) throw Error("Expected power > 0");
          if (n === i) return e.ONE;
          if (n === a) return t;
          let r = e.ONE,
            o = t;
          for (; n > i; ) n & a && (r = e.mul(r, o)), (o = e.sqr(o)), (n >>= a);
          return r;
        }
        function b(e, t) {
          let n = Array(t.length),
            r = t.reduce(
              (t, r, i) => (e.is0(r) ? t : ((n[i] = t), e.mul(t, r))),
              e.ONE
            ),
            i = e.inv(r);
          return (
            t.reduceRight(
              (t, r, i) =>
                e.is0(r) ? t : ((n[i] = e.mul(t, n[i])), e.mul(t, r)),
              i
            ),
            n
          );
        }
        function v(e, t) {
          let n = void 0 !== t ? t : e.toString(2).length;
          return { nBitLength: n, nByteLength: Math.ceil(n / 8) };
        }
        function w(e) {
          if ("bigint" != typeof e) throw Error("field order must be bigint");
          let t = e.toString(2).length;
          return Math.ceil(t / 8);
        }
        function E(e) {
          let t = w(e);
          return t + Math.ceil(t / 2);
        }
        (t.validateField = function (e) {
          let t = y.reduce((e, t) => ((e[t] = "function"), e), {
            ORDER: "bigint",
            MASK: "bigint",
            BYTES: "isSafeInteger",
            BITS: "isSafeInteger",
          });
          return (0, r.validateObject)(e, t);
        }),
          (t.FpPow = g),
          (t.FpInvertBatch = b),
          (t.FpDiv = function (e, t, n) {
            return e.mul(t, "bigint" == typeof n ? p(n, e.ORDER) : e.inv(n));
          }),
          (t.FpIsSquare = function (e) {
            let t = (e.ORDER - a) / o;
            return (n) => {
              let r = e.pow(n, t);
              return e.eql(r, e.ZERO) || e.eql(r, e.ONE);
            };
          }),
          (t.nLength = v),
          (t.Field = function (e, t, n = !1, o = {}) {
            if (e <= i) throw Error(`Expected Field ORDER > 0, got ${e}`);
            let { nBitLength: s, nByteLength: u } = v(e, t);
            if (u > 2048)
              throw Error("Field lengths over 2048 bytes are not supported");
            let l = m(e),
              c = Object.freeze({
                ORDER: e,
                BITS: s,
                BYTES: u,
                MASK: (0, r.bitMask)(s),
                ZERO: i,
                ONE: a,
                create: (t) => d(t, e),
                isValid: (t) => {
                  if ("bigint" != typeof t)
                    throw Error(
                      `Invalid field element: expected bigint, got ${typeof t}`
                    );
                  return i <= t && t < e;
                },
                is0: (e) => e === i,
                isOdd: (e) => (e & a) === a,
                neg: (t) => d(-t, e),
                eql: (e, t) => e === t,
                sqr: (t) => d(t * t, e),
                add: (t, n) => d(t + n, e),
                sub: (t, n) => d(t - n, e),
                mul: (t, n) => d(t * n, e),
                pow: (e, t) => g(c, e, t),
                div: (t, n) => d(t * p(n, e), e),
                sqrN: (e) => e * e,
                addN: (e, t) => e + t,
                subN: (e, t) => e - t,
                mulN: (e, t) => e * t,
                inv: (t) => p(t, e),
                sqrt: o.sqrt || ((e) => l(c, e)),
                invertBatch: (e) => b(c, e),
                cmov: (e, t, n) => (n ? t : e),
                toBytes: (e) =>
                  n
                    ? (0, r.numberToBytesLE)(e, u)
                    : (0, r.numberToBytesBE)(e, u),
                fromBytes: (e) => {
                  if (e.length !== u)
                    throw Error(`Fp.fromBytes: expected ${u}, got ${e.length}`);
                  return n
                    ? (0, r.bytesToNumberLE)(e)
                    : (0, r.bytesToNumberBE)(e);
                },
              });
            return Object.freeze(c);
          }),
          (t.FpSqrtOdd = function (e, t) {
            if (!e.isOdd) throw Error("Field doesn't have isOdd");
            let n = e.sqrt(t);
            return e.isOdd(n) ? n : e.neg(n);
          }),
          (t.FpSqrtEven = function (e, t) {
            if (!e.isOdd) throw Error("Field doesn't have isOdd");
            let n = e.sqrt(t);
            return e.isOdd(n) ? e.neg(n) : n;
          }),
          (t.hashToPrivateScalar = function (e, t, n = !1) {
            e = (0, r.ensureBytes)("privateHash", e);
            let i = e.length,
              o = v(t).nByteLength + 8;
            if (o < 24 || i < o || i > 1024)
              throw Error(
                `hashToPrivateScalar: expected ${o}-1024 bytes of input, got ${i}`
              );
            let s = n ? (0, r.bytesToNumberLE)(e) : (0, r.bytesToNumberBE)(e);
            return d(s, t - a) + a;
          }),
          (t.getFieldBytesLength = w),
          (t.getMinHashLength = E),
          (t.mapHashToField = function (e, t, n = !1) {
            let i = e.length,
              o = w(t),
              s = E(t);
            if (i < 16 || i < s || i > 1024)
              throw Error(`expected ${s}-1024 bytes of input, got ${i}`);
            let u = n ? (0, r.bytesToNumberBE)(e) : (0, r.bytesToNumberLE)(e),
              l = d(u, t - a) + a;
            return n
              ? (0, r.numberToBytesLE)(l, o)
              : (0, r.numberToBytesBE)(l, o);
          });
      },
      40219: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.validateObject =
            t.createHmacDrbg =
            t.bitMask =
            t.bitSet =
            t.bitGet =
            t.bitLen =
            t.utf8ToBytes =
            t.equalBytes =
            t.concatBytes =
            t.ensureBytes =
            t.numberToVarBytesBE =
            t.numberToBytesLE =
            t.numberToBytesBE =
            t.bytesToNumberLE =
            t.bytesToNumberBE =
            t.hexToBytes =
            t.hexToNumber =
            t.numberToHexUnpadded =
            t.bytesToHex =
              void 0);
        /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */ let n =
            BigInt(0),
          r = BigInt(1),
          i = BigInt(2),
          a = (e) => e instanceof Uint8Array,
          o = Array.from({ length: 256 }, (e, t) =>
            t.toString(16).padStart(2, "0")
          );
        function s(e) {
          if (!a(e)) throw Error("Uint8Array expected");
          let t = "";
          for (let n = 0; n < e.length; n++) t += o[e[n]];
          return t;
        }
        function u(e) {
          let t = e.toString(16);
          return 1 & t.length ? `0${t}` : t;
        }
        function l(e) {
          if ("string" != typeof e)
            throw Error("hex string expected, got " + typeof e);
          return BigInt("" === e ? "0" : `0x${e}`);
        }
        function c(e) {
          if ("string" != typeof e)
            throw Error("hex string expected, got " + typeof e);
          let t = e.length;
          if (t % 2)
            throw Error(
              "padded hex string expected, got unpadded hex of length " + t
            );
          let n = new Uint8Array(t / 2);
          for (let t = 0; t < n.length; t++) {
            let r = 2 * t,
              i = e.slice(r, r + 2),
              a = Number.parseInt(i, 16);
            if (Number.isNaN(a) || a < 0) throw Error("Invalid byte sequence");
            n[t] = a;
          }
          return n;
        }
        function d(e, t) {
          return c(e.toString(16).padStart(2 * t, "0"));
        }
        function f(...e) {
          let t = new Uint8Array(e.reduce((e, t) => e + t.length, 0)),
            n = 0;
          return (
            e.forEach((e) => {
              if (!a(e)) throw Error("Uint8Array expected");
              t.set(e, n), (n += e.length);
            }),
            t
          );
        }
        (t.bytesToHex = s),
          (t.numberToHexUnpadded = u),
          (t.hexToNumber = l),
          (t.hexToBytes = c),
          (t.bytesToNumberBE = function (e) {
            return l(s(e));
          }),
          (t.bytesToNumberLE = function (e) {
            if (!a(e)) throw Error("Uint8Array expected");
            return l(s(Uint8Array.from(e).reverse()));
          }),
          (t.numberToBytesBE = d),
          (t.numberToBytesLE = function (e, t) {
            return d(e, t).reverse();
          }),
          (t.numberToVarBytesBE = function (e) {
            return c(u(e));
          }),
          (t.ensureBytes = function (e, t, n) {
            let r;
            if ("string" == typeof t)
              try {
                r = c(t);
              } catch (n) {
                throw Error(
                  `${e} must be valid hex string, got "${t}". Cause: ${n}`
                );
              }
            else if (a(t)) r = Uint8Array.from(t);
            else throw Error(`${e} must be hex string or Uint8Array`);
            let i = r.length;
            if ("number" == typeof n && i !== n)
              throw Error(`${e} expected ${n} bytes, got ${i}`);
            return r;
          }),
          (t.concatBytes = f),
          (t.equalBytes = function (e, t) {
            if (e.length !== t.length) return !1;
            for (let n = 0; n < e.length; n++) if (e[n] !== t[n]) return !1;
            return !0;
          }),
          (t.utf8ToBytes = function (e) {
            if ("string" != typeof e)
              throw Error(`utf8ToBytes expected string, got ${typeof e}`);
            return new Uint8Array(new TextEncoder().encode(e));
          }),
          (t.bitLen = function (e) {
            let t;
            for (t = 0; e > n; e >>= r, t += 1);
            return t;
          }),
          (t.bitGet = function (e, t) {
            return (e >> BigInt(t)) & r;
          }),
          (t.bitSet = (e, t, i) => e | ((i ? r : n) << BigInt(t))),
          (t.bitMask = (e) => (i << BigInt(e - 1)) - r);
        let p = (e) => new Uint8Array(e),
          h = (e) => Uint8Array.from(e);
        t.createHmacDrbg = function (e, t, n) {
          if ("number" != typeof e || e < 2)
            throw Error("hashLen must be a number");
          if ("number" != typeof t || t < 2)
            throw Error("qByteLen must be a number");
          if ("function" != typeof n) throw Error("hmacFn must be a function");
          let r = p(e),
            i = p(e),
            a = 0,
            o = () => {
              r.fill(1), i.fill(0), (a = 0);
            },
            s = (...e) => n(i, r, ...e),
            u = (e = p()) => {
              (i = s(h([0]), e)),
                (r = s()),
                0 !== e.length && ((i = s(h([1]), e)), (r = s()));
            },
            l = () => {
              if (a++ >= 1e3) throw Error("drbg: tried 1000 values");
              let e = 0,
                n = [];
              for (; e < t; ) {
                r = s();
                let t = r.slice();
                n.push(t), (e += r.length);
              }
              return f(...n);
            };
          return (e, t) => {
            let n;
            for (o(), u(e); !(n = t(l())); ) u();
            return o(), n;
          };
        };
        let m = {
          bigint: (e) => "bigint" == typeof e,
          function: (e) => "function" == typeof e,
          boolean: (e) => "boolean" == typeof e,
          string: (e) => "string" == typeof e,
          stringOrUint8Array: (e) =>
            "string" == typeof e || e instanceof Uint8Array,
          isSafeInteger: (e) => Number.isSafeInteger(e),
          array: (e) => Array.isArray(e),
          field: (e, t) => t.Fp.isValid(e),
          hash: (e) =>
            "function" == typeof e && Number.isSafeInteger(e.outputLen),
        };
        t.validateObject = function (e, t, n = {}) {
          let r = (t, n, r) => {
            let i = m[n];
            if ("function" != typeof i)
              throw Error(`Invalid validator "${n}", expected function`);
            let a = e[t];
            if ((!r || void 0 !== a) && !i(a, e))
              throw Error(
                `Invalid param ${String(t)}=${a} (${typeof a}), expected ${n}`
              );
          };
          for (let [e, n] of Object.entries(t)) r(e, n, !1);
          for (let [e, t] of Object.entries(n)) r(e, t, !0);
          return e;
        };
      },
      96551: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.mapToCurveSimpleSWU =
            t.SWUFpSqrtRatio =
            t.weierstrass =
            t.weierstrassPoints =
            t.DER =
              void 0);
        /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */ let r =
            n(94632),
          i = n(40219),
          a = n(40219),
          o = n(81525),
          { bytesToNumberBE: s, hexToBytes: u } = i;
        t.DER = {
          Err: class extends Error {
            constructor(e = "") {
              super(e);
            }
          },
          _parseInt(e) {
            let { Err: n } = t.DER;
            if (e.length < 2 || 2 !== e[0])
              throw new n("Invalid signature integer tag");
            let r = e[1],
              i = e.subarray(2, r + 2);
            if (!r || i.length !== r)
              throw new n("Invalid signature integer: wrong length");
            if (128 & i[0]) throw new n("Invalid signature integer: negative");
            if (0 === i[0] && !(128 & i[1]))
              throw new n(
                "Invalid signature integer: unnecessary leading zero"
              );
            return { d: s(i), l: e.subarray(r + 2) };
          },
          toSig(e) {
            let { Err: n } = t.DER,
              r = "string" == typeof e ? u(e) : e;
            if (!(r instanceof Uint8Array)) throw Error("ui8a expected");
            let i = r.length;
            if (i < 2 || 48 != r[0]) throw new n("Invalid signature tag");
            if (r[1] !== i - 2)
              throw new n("Invalid signature: incorrect length");
            let { d: a, l: o } = t.DER._parseInt(r.subarray(2)),
              { d: s, l: l } = t.DER._parseInt(o);
            if (l.length)
              throw new n("Invalid signature: left bytes after parsing");
            return { r: a, s };
          },
          hexFromSig(e) {
            let t = (e) => (8 & Number.parseInt(e[0], 16) ? "00" + e : e),
              n = (e) => {
                let t = e.toString(16);
                return 1 & t.length ? `0${t}` : t;
              },
              r = t(n(e.s)),
              i = t(n(e.r)),
              a = r.length / 2,
              o = i.length / 2,
              s = n(a),
              u = n(o);
            return `30${n(o + a + 4)}02${u}${i}02${s}${r}`;
          },
        };
        let l = BigInt(0),
          c = BigInt(1),
          d = BigInt(2),
          f = BigInt(3),
          p = BigInt(4);
        function h(e) {
          let t = (function (e) {
              let t = (0, o.validateBasic)(e);
              i.validateObject(
                t,
                { a: "field", b: "field" },
                {
                  allowedPrivateKeyLengths: "array",
                  wrapPrivateKey: "boolean",
                  isTorsionFree: "function",
                  clearCofactor: "function",
                  allowInfinityPoint: "boolean",
                  fromBytes: "function",
                  toBytes: "function",
                }
              );
              let { endo: n, Fp: r, a } = t;
              if (n) {
                if (!r.eql(a, r.ZERO))
                  throw Error(
                    "Endomorphism can only be defined for Koblitz curves that have a=0"
                  );
                if (
                  "object" != typeof n ||
                  "bigint" != typeof n.beta ||
                  "function" != typeof n.splitScalar
                )
                  throw Error(
                    "Expected endomorphism with beta: bigint and splitScalar: function"
                  );
              }
              return Object.freeze({ ...t });
            })(e),
            { Fp: n } = t,
            s =
              t.toBytes ||
              ((e, t, r) => {
                let a = t.toAffine();
                return i.concatBytes(
                  Uint8Array.from([4]),
                  n.toBytes(a.x),
                  n.toBytes(a.y)
                );
              }),
            u =
              t.fromBytes ||
              ((e) => {
                let t = e.subarray(1),
                  r = n.fromBytes(t.subarray(0, n.BYTES)),
                  i = n.fromBytes(t.subarray(n.BYTES, 2 * n.BYTES));
                return { x: r, y: i };
              });
          function d(e) {
            let { a: r, b: i } = t,
              a = n.sqr(e),
              o = n.mul(a, e);
            return n.add(n.add(o, n.mul(e, r)), i);
          }
          if (!n.eql(n.sqr(t.Gy), d(t.Gx)))
            throw Error("bad generator point: equation left != right");
          function p(e) {
            return "bigint" == typeof e && l < e && e < t.n;
          }
          function h(e) {
            if (!p(e))
              throw Error("Expected valid bigint: 0 < bigint < curve.n");
          }
          function m(e) {
            let n;
            let {
              allowedPrivateKeyLengths: o,
              nByteLength: s,
              wrapPrivateKey: u,
              n: l,
            } = t;
            if (o && "bigint" != typeof e) {
              if (
                (e instanceof Uint8Array && (e = i.bytesToHex(e)),
                "string" != typeof e || !o.includes(e.length))
              )
                throw Error("Invalid key");
              e = e.padStart(2 * s, "0");
            }
            try {
              n =
                "bigint" == typeof e
                  ? e
                  : i.bytesToNumberBE((0, a.ensureBytes)("private key", e, s));
            } catch (t) {
              throw Error(
                `private key must be ${s} bytes, hex or bigint, not ${typeof e}`
              );
            }
            return u && (n = r.mod(n, l)), h(n), n;
          }
          let y = new Map();
          function g(e) {
            if (!(e instanceof b)) throw Error("ProjectivePoint expected");
          }
          class b {
            constructor(e, t, r) {
              if (
                ((this.px = e),
                (this.py = t),
                (this.pz = r),
                null == e || !n.isValid(e))
              )
                throw Error("x required");
              if (null == t || !n.isValid(t)) throw Error("y required");
              if (null == r || !n.isValid(r)) throw Error("z required");
            }
            static fromAffine(e) {
              let { x: t, y: r } = e || {};
              if (!e || !n.isValid(t) || !n.isValid(r))
                throw Error("invalid affine point");
              if (e instanceof b) throw Error("projective point not allowed");
              let i = (e) => n.eql(e, n.ZERO);
              return i(t) && i(r) ? b.ZERO : new b(t, r, n.ONE);
            }
            get x() {
              return this.toAffine().x;
            }
            get y() {
              return this.toAffine().y;
            }
            static normalizeZ(e) {
              let t = n.invertBatch(e.map((e) => e.pz));
              return e.map((e, n) => e.toAffine(t[n])).map(b.fromAffine);
            }
            static fromHex(e) {
              let t = b.fromAffine(u((0, a.ensureBytes)("pointHex", e)));
              return t.assertValidity(), t;
            }
            static fromPrivateKey(e) {
              return b.BASE.multiply(m(e));
            }
            _setWindowSize(e) {
              (this._WINDOW_SIZE = e), y.delete(this);
            }
            assertValidity() {
              if (this.is0()) {
                if (t.allowInfinityPoint && !n.is0(this.py)) return;
                throw Error("bad point: ZERO");
              }
              let { x: e, y: r } = this.toAffine();
              if (!n.isValid(e) || !n.isValid(r))
                throw Error("bad point: x or y not FE");
              let i = n.sqr(r),
                a = d(e);
              if (!n.eql(i, a))
                throw Error("bad point: equation left != right");
              if (!this.isTorsionFree())
                throw Error("bad point: not in prime-order subgroup");
            }
            hasEvenY() {
              let { y: e } = this.toAffine();
              if (n.isOdd) return !n.isOdd(e);
              throw Error("Field doesn't support isOdd");
            }
            equals(e) {
              g(e);
              let { px: t, py: r, pz: i } = this,
                { px: a, py: o, pz: s } = e,
                u = n.eql(n.mul(t, s), n.mul(a, i)),
                l = n.eql(n.mul(r, s), n.mul(o, i));
              return u && l;
            }
            negate() {
              return new b(this.px, n.neg(this.py), this.pz);
            }
            double() {
              let { a: e, b: r } = t,
                i = n.mul(r, f),
                { px: a, py: o, pz: s } = this,
                u = n.ZERO,
                l = n.ZERO,
                c = n.ZERO,
                d = n.mul(a, a),
                p = n.mul(o, o),
                h = n.mul(s, s),
                m = n.mul(a, o);
              return (
                (m = n.add(m, m)),
                (c = n.mul(a, s)),
                (c = n.add(c, c)),
                (u = n.mul(e, c)),
                (l = n.mul(i, h)),
                (l = n.add(u, l)),
                (u = n.sub(p, l)),
                (l = n.add(p, l)),
                (l = n.mul(u, l)),
                (u = n.mul(m, u)),
                (c = n.mul(i, c)),
                (h = n.mul(e, h)),
                (m = n.sub(d, h)),
                (m = n.mul(e, m)),
                (m = n.add(m, c)),
                (c = n.add(d, d)),
                (d = n.add(c, d)),
                (d = n.add(d, h)),
                (d = n.mul(d, m)),
                (l = n.add(l, d)),
                (h = n.mul(o, s)),
                (h = n.add(h, h)),
                (d = n.mul(h, m)),
                (u = n.sub(u, d)),
                (c = n.mul(h, p)),
                (c = n.add(c, c)),
                (c = n.add(c, c)),
                new b(u, l, c)
              );
            }
            add(e) {
              g(e);
              let { px: r, py: i, pz: a } = this,
                { px: o, py: s, pz: u } = e,
                l = n.ZERO,
                c = n.ZERO,
                d = n.ZERO,
                p = t.a,
                h = n.mul(t.b, f),
                m = n.mul(r, o),
                y = n.mul(i, s),
                v = n.mul(a, u),
                w = n.add(r, i),
                E = n.add(o, s);
              (w = n.mul(w, E)),
                (E = n.add(m, y)),
                (w = n.sub(w, E)),
                (E = n.add(r, a));
              let x = n.add(o, u);
              return (
                (E = n.mul(E, x)),
                (x = n.add(m, v)),
                (E = n.sub(E, x)),
                (x = n.add(i, a)),
                (l = n.add(s, u)),
                (x = n.mul(x, l)),
                (l = n.add(y, v)),
                (x = n.sub(x, l)),
                (d = n.mul(p, E)),
                (l = n.mul(h, v)),
                (d = n.add(l, d)),
                (l = n.sub(y, d)),
                (d = n.add(y, d)),
                (c = n.mul(l, d)),
                (y = n.add(m, m)),
                (y = n.add(y, m)),
                (v = n.mul(p, v)),
                (E = n.mul(h, E)),
                (y = n.add(y, v)),
                (v = n.sub(m, v)),
                (v = n.mul(p, v)),
                (E = n.add(E, v)),
                (m = n.mul(y, E)),
                (c = n.add(c, m)),
                (m = n.mul(x, E)),
                (l = n.mul(w, l)),
                (l = n.sub(l, m)),
                (m = n.mul(w, y)),
                (d = n.mul(x, d)),
                (d = n.add(d, m)),
                new b(l, c, d)
              );
            }
            subtract(e) {
              return this.add(e.negate());
            }
            is0() {
              return this.equals(b.ZERO);
            }
            wNAF(e) {
              return w.wNAFCached(this, y, e, (e) => {
                let t = n.invertBatch(e.map((e) => e.pz));
                return e.map((e, n) => e.toAffine(t[n])).map(b.fromAffine);
              });
            }
            multiplyUnsafe(e) {
              let r = b.ZERO;
              if (e === l) return r;
              if ((h(e), e === c)) return this;
              let { endo: i } = t;
              if (!i) return w.unsafeLadder(this, e);
              let { k1neg: a, k1: o, k2neg: s, k2: u } = i.splitScalar(e),
                d = r,
                f = r,
                p = this;
              for (; o > l || u > l; )
                o & c && (d = d.add(p)),
                  u & c && (f = f.add(p)),
                  (p = p.double()),
                  (o >>= c),
                  (u >>= c);
              return (
                a && (d = d.negate()),
                s && (f = f.negate()),
                (f = new b(n.mul(f.px, i.beta), f.py, f.pz)),
                d.add(f)
              );
            }
            multiply(e) {
              let r, i;
              h(e);
              let { endo: a } = t;
              if (a) {
                let { k1neg: t, k1: o, k2neg: s, k2: u } = a.splitScalar(e),
                  { p: l, f: c } = this.wNAF(o),
                  { p: d, f: f } = this.wNAF(u);
                (l = w.constTimeNegate(t, l)),
                  (d = w.constTimeNegate(s, d)),
                  (d = new b(n.mul(d.px, a.beta), d.py, d.pz)),
                  (r = l.add(d)),
                  (i = c.add(f));
              } else {
                let { p: t, f: n } = this.wNAF(e);
                (r = t), (i = n);
              }
              return b.normalizeZ([r, i])[0];
            }
            multiplyAndAddUnsafe(e, t, n) {
              let r = b.BASE,
                i = (e, t) =>
                  t !== l && t !== c && e.equals(r)
                    ? e.multiply(t)
                    : e.multiplyUnsafe(t),
                a = i(this, t).add(i(e, n));
              return a.is0() ? void 0 : a;
            }
            toAffine(e) {
              let { px: t, py: r, pz: i } = this,
                a = this.is0();
              null == e && (e = a ? n.ONE : n.inv(i));
              let o = n.mul(t, e),
                s = n.mul(r, e),
                u = n.mul(i, e);
              if (a) return { x: n.ZERO, y: n.ZERO };
              if (!n.eql(u, n.ONE)) throw Error("invZ was invalid");
              return { x: o, y: s };
            }
            isTorsionFree() {
              let { h: e, isTorsionFree: n } = t;
              if (e === c) return !0;
              if (n) return n(b, this);
              throw Error(
                "isTorsionFree() has not been declared for the elliptic curve"
              );
            }
            clearCofactor() {
              let { h: e, clearCofactor: n } = t;
              return e === c ? this : n ? n(b, this) : this.multiplyUnsafe(t.h);
            }
            toRawBytes(e = !0) {
              return this.assertValidity(), s(b, this, e);
            }
            toHex(e = !0) {
              return i.bytesToHex(this.toRawBytes(e));
            }
          }
          (b.BASE = new b(t.Gx, t.Gy, n.ONE)),
            (b.ZERO = new b(n.ZERO, n.ONE, n.ZERO));
          let v = t.nBitLength,
            w = (0, o.wNAF)(b, t.endo ? Math.ceil(v / 2) : v);
          return {
            CURVE: t,
            ProjectivePoint: b,
            normPrivateKeyToScalar: m,
            weierstrassEquation: d,
            isWithinCurveOrder: p,
          };
        }
        function m(e, t) {
          let n = e.ORDER,
            r = l;
          for (let e = n - c; e % d === l; e /= d) r += c;
          let i = r,
            a = d << (i - c - c),
            o = a * d,
            s = (n - c) / o,
            u = (s - c) / d,
            h = o - c,
            m = e.pow(t, s),
            y = e.pow(t, (s + c) / d),
            g = (t, n) => {
              let r = m,
                o = e.pow(n, h),
                s = e.sqr(o);
              s = e.mul(s, n);
              let l = e.mul(t, s);
              (l = e.pow(l, u)),
                (l = e.mul(l, o)),
                (o = e.mul(l, n)),
                (s = e.mul(l, t));
              let f = e.mul(s, o);
              l = e.pow(f, a);
              let p = e.eql(l, e.ONE);
              (o = e.mul(s, y)),
                (l = e.mul(f, r)),
                (s = e.cmov(o, s, p)),
                (f = e.cmov(l, f, p));
              for (let t = i; t > c; t--) {
                let n = t - d;
                n = d << (n - c);
                let i = e.pow(f, n),
                  a = e.eql(i, e.ONE);
                (o = e.mul(s, r)),
                  (r = e.mul(r, r)),
                  (i = e.mul(f, r)),
                  (s = e.cmov(o, s, a)),
                  (f = e.cmov(i, f, a));
              }
              return { isValid: p, value: s };
            };
          if (e.ORDER % p === f) {
            let n = (e.ORDER - f) / p,
              r = e.sqrt(e.neg(t));
            g = (t, i) => {
              let a = e.sqr(i),
                o = e.mul(t, i);
              a = e.mul(a, o);
              let s = e.pow(a, n);
              s = e.mul(s, o);
              let u = e.mul(s, r),
                l = e.mul(e.sqr(s), i),
                c = e.eql(l, t),
                d = e.cmov(u, s, c);
              return { isValid: c, value: d };
            };
          }
          return g;
        }
        (t.weierstrassPoints = h),
          (t.weierstrass = function (e) {
            let n = (function (e) {
                let t = (0, o.validateBasic)(e);
                return (
                  i.validateObject(
                    t,
                    { hash: "hash", hmac: "function", randomBytes: "function" },
                    {
                      bits2int: "function",
                      bits2int_modN: "function",
                      lowS: "boolean",
                    }
                  ),
                  Object.freeze({ lowS: !0, ...t })
                );
              })(e),
              { Fp: s, n: u } = n,
              d = s.BYTES + 1,
              f = 2 * s.BYTES + 1;
            function p(e) {
              return r.mod(e, u);
            }
            function m(e) {
              return r.invert(e, u);
            }
            let {
                ProjectivePoint: y,
                normPrivateKeyToScalar: g,
                weierstrassEquation: b,
                isWithinCurveOrder: v,
              } = h({
                ...n,
                toBytes(e, t, n) {
                  let r = t.toAffine(),
                    a = s.toBytes(r.x),
                    o = i.concatBytes;
                  return n
                    ? o(Uint8Array.from([t.hasEvenY() ? 2 : 3]), a)
                    : o(Uint8Array.from([4]), a, s.toBytes(r.y));
                },
                fromBytes(e) {
                  let t = e.length,
                    n = e[0],
                    r = e.subarray(1);
                  if (t === d && (2 === n || 3 === n)) {
                    let e = i.bytesToNumberBE(r);
                    if (!(l < e && e < s.ORDER))
                      throw Error("Point is not on curve");
                    let t = b(e),
                      a = s.sqrt(t),
                      o = (a & c) === c;
                    return (
                      ((1 & n) == 1) !== o && (a = s.neg(a)), { x: e, y: a }
                    );
                  }
                  if (t === f && 4 === n) {
                    let e = s.fromBytes(r.subarray(0, s.BYTES)),
                      t = s.fromBytes(r.subarray(s.BYTES, 2 * s.BYTES));
                    return { x: e, y: t };
                  }
                  throw Error(
                    `Point of length ${t} was invalid. Expected ${d} compressed bytes or ${f} uncompressed bytes`
                  );
                },
              }),
              w = (e) => i.bytesToHex(i.numberToBytesBE(e, n.nByteLength));
            function E(e) {
              let t = u >> c;
              return e > t;
            }
            let x = (e, t, n) => i.bytesToNumberBE(e.slice(t, n));
            class C {
              constructor(e, t, n) {
                (this.r = e),
                  (this.s = t),
                  (this.recovery = n),
                  this.assertValidity();
              }
              static fromCompact(e) {
                let t = n.nByteLength;
                return (
                  (e = (0, a.ensureBytes)("compactSignature", e, 2 * t)),
                  new C(x(e, 0, t), x(e, t, 2 * t))
                );
              }
              static fromDER(e) {
                let { r: n, s: r } = t.DER.toSig((0, a.ensureBytes)("DER", e));
                return new C(n, r);
              }
              assertValidity() {
                if (!v(this.r)) throw Error("r must be 0 < r < CURVE.n");
                if (!v(this.s)) throw Error("s must be 0 < s < CURVE.n");
              }
              addRecoveryBit(e) {
                return new C(this.r, this.s, e);
              }
              recoverPublicKey(e) {
                let { r: t, s: r, recovery: i } = this,
                  o = S((0, a.ensureBytes)("msgHash", e));
                if (null == i || ![0, 1, 2, 3].includes(i))
                  throw Error("recovery id invalid");
                let u = 2 === i || 3 === i ? t + n.n : t;
                if (u >= s.ORDER) throw Error("recovery id 2 or 3 invalid");
                let l = (1 & i) == 0 ? "02" : "03",
                  c = y.fromHex(l + w(u)),
                  d = m(u),
                  f = p(-o * d),
                  h = p(r * d),
                  g = y.BASE.multiplyAndAddUnsafe(c, f, h);
                if (!g) throw Error("point at infinify");
                return g.assertValidity(), g;
              }
              hasHighS() {
                return E(this.s);
              }
              normalizeS() {
                return this.hasHighS()
                  ? new C(this.r, p(-this.s), this.recovery)
                  : this;
              }
              toDERRawBytes() {
                return i.hexToBytes(this.toDERHex());
              }
              toDERHex() {
                return t.DER.hexFromSig({ r: this.r, s: this.s });
              }
              toCompactRawBytes() {
                return i.hexToBytes(this.toCompactHex());
              }
              toCompactHex() {
                return w(this.r) + w(this.s);
              }
            }
            function _(e) {
              let t = e instanceof Uint8Array,
                n = "string" == typeof e,
                r = (t || n) && e.length;
              return t
                ? r === d || r === f
                : n
                ? r === 2 * d || r === 2 * f
                : e instanceof y;
            }
            let T =
                n.bits2int ||
                function (e) {
                  let t = i.bytesToNumberBE(e),
                    r = 8 * e.length - n.nBitLength;
                  return r > 0 ? t >> BigInt(r) : t;
                },
              S =
                n.bits2int_modN ||
                function (e) {
                  return p(T(e));
                },
              P = i.bitMask(n.nBitLength);
            function O(e) {
              if ("bigint" != typeof e) throw Error("bigint expected");
              if (!(l <= e && e < P))
                throw Error(`bigint expected < 2^${n.nBitLength}`);
              return i.numberToBytesBE(e, n.nByteLength);
            }
            let I = { lowS: n.lowS, prehash: !1 },
              A = { lowS: n.lowS, prehash: !1 };
            return (
              y.BASE._setWindowSize(8),
              {
                CURVE: n,
                getPublicKey: function (e, t = !0) {
                  return y.fromPrivateKey(e).toRawBytes(t);
                },
                getSharedSecret: function (e, t, n = !0) {
                  if (_(e)) throw Error("first arg must be private key");
                  if (!_(t)) throw Error("second arg must be public key");
                  let r = y.fromHex(t);
                  return r.multiply(g(e)).toRawBytes(n);
                },
                sign: function (e, t, r = I) {
                  let { seed: o, k2sig: u } = (function (e, t, r = I) {
                      if (["recovered", "canonical"].some((e) => e in r))
                        throw Error("sign() legacy options not supported");
                      let { hash: o, randomBytes: u } = n,
                        { lowS: d, prehash: f, extraEntropy: h } = r;
                      null == d && (d = !0),
                        (e = (0, a.ensureBytes)("msgHash", e)),
                        f &&
                          (e = (0, a.ensureBytes)("prehashed msgHash", o(e)));
                      let b = S(e),
                        w = g(t),
                        x = [O(w), O(b)];
                      if (null != h) {
                        let e = !0 === h ? u(s.BYTES) : h;
                        x.push((0, a.ensureBytes)("extraEntropy", e));
                      }
                      let _ = i.concatBytes(...x);
                      return {
                        seed: _,
                        k2sig: function (e) {
                          let t = T(e);
                          if (!v(t)) return;
                          let n = m(t),
                            r = y.BASE.multiply(t).toAffine(),
                            i = p(r.x);
                          if (i === l) return;
                          let a = p(n * p(b + i * w));
                          if (a === l) return;
                          let o = (r.x === i ? 0 : 2) | Number(r.y & c),
                            s = a;
                          return (
                            d && E(a) && ((s = E(a) ? p(-a) : a), (o ^= 1)),
                            new C(i, s, o)
                          );
                        },
                      };
                    })(e, t, r),
                    d = i.createHmacDrbg(
                      n.hash.outputLen,
                      n.nByteLength,
                      n.hmac
                    );
                  return d(o, u);
                },
                verify: function (e, r, i, o = A) {
                  let s, u;
                  if (
                    ((r = (0, a.ensureBytes)("msgHash", r)),
                    (i = (0, a.ensureBytes)("publicKey", i)),
                    "strict" in o)
                  )
                    throw Error("options.strict was renamed to lowS");
                  let { lowS: l, prehash: c } = o;
                  try {
                    if ("string" == typeof e || e instanceof Uint8Array)
                      try {
                        u = C.fromDER(e);
                      } catch (n) {
                        if (!(n instanceof t.DER.Err)) throw n;
                        u = C.fromCompact(e);
                      }
                    else if (
                      "object" == typeof e &&
                      "bigint" == typeof e.r &&
                      "bigint" == typeof e.s
                    ) {
                      let { r: t, s: n } = e;
                      u = new C(t, n);
                    } else throw Error("PARSE");
                    s = y.fromHex(i);
                  } catch (e) {
                    if ("PARSE" === e.message)
                      throw Error(
                        "signature must be Signature instance, Uint8Array or hex string"
                      );
                    return !1;
                  }
                  if (l && u.hasHighS()) return !1;
                  c && (r = n.hash(r));
                  let { r: d, s: f } = u,
                    h = S(r),
                    g = m(f),
                    b = p(h * g),
                    v = p(d * g),
                    w = y.BASE.multiplyAndAddUnsafe(s, b, v)?.toAffine();
                  if (!w) return !1;
                  let E = p(w.x);
                  return E === d;
                },
                ProjectivePoint: y,
                Signature: C,
                utils: {
                  isValidPrivateKey(e) {
                    try {
                      return g(e), !0;
                    } catch (e) {
                      return !1;
                    }
                  },
                  normPrivateKeyToScalar: g,
                  randomPrivateKey: () => {
                    let e = r.getMinHashLength(n.n);
                    return r.mapHashToField(n.randomBytes(e), n.n);
                  },
                  precompute: (e = 8, t = y.BASE) => (
                    t._setWindowSize(e), t.multiply(BigInt(3)), t
                  ),
                },
              }
            );
          }),
          (t.SWUFpSqrtRatio = m),
          (t.mapToCurveSimpleSWU = function (e, t) {
            if (
              (r.validateField(e),
              !e.isValid(t.A) || !e.isValid(t.B) || !e.isValid(t.Z))
            )
              throw Error("mapToCurveSimpleSWU: invalid opts");
            let n = m(e, t.Z);
            if (!e.isOdd) throw Error("Fp.isOdd is not implemented!");
            return (r) => {
              let i, a, o, s, u, l, c, d;
              (i = e.sqr(r)),
                (i = e.mul(i, t.Z)),
                (a = e.sqr(i)),
                (a = e.add(a, i)),
                (o = e.add(a, e.ONE)),
                (o = e.mul(o, t.B)),
                (s = e.cmov(t.Z, e.neg(a), !e.eql(a, e.ZERO))),
                (s = e.mul(s, t.A)),
                (a = e.sqr(o)),
                (l = e.sqr(s)),
                (u = e.mul(l, t.A)),
                (a = e.add(a, u)),
                (a = e.mul(a, o)),
                (l = e.mul(l, s)),
                (u = e.mul(l, t.B)),
                (a = e.add(a, u)),
                (c = e.mul(i, o));
              let { isValid: f, value: p } = n(a, l);
              (d = e.mul(i, r)),
                (d = e.mul(d, p)),
                (c = e.cmov(c, o, f)),
                (d = e.cmov(d, p, f));
              let h = e.isOdd(r) === e.isOdd(d);
              return (
                (d = e.cmov(e.neg(d), d, h)), { x: (c = e.div(c, s)), y: d }
              );
            };
          });
      },
      59892: function (e, t) {
        "use strict";
        function n(e) {
          if (!Number.isSafeInteger(e) || e < 0)
            throw Error(`Wrong positive integer: ${e}`);
        }
        function r(e) {
          if ("boolean" != typeof e) throw Error(`Expected boolean, not ${e}`);
        }
        function i(e, ...t) {
          if (!(e instanceof Uint8Array)) throw Error("Expected Uint8Array");
          if (t.length > 0 && !t.includes(e.length))
            throw Error(
              `Expected Uint8Array of length ${t}, not of length=${e.length}`
            );
        }
        function a(e) {
          if ("function" != typeof e || "function" != typeof e.create)
            throw Error("Hash should be wrapped by utils.wrapConstructor");
          n(e.outputLen), n(e.blockLen);
        }
        function o(e, t = !0) {
          if (e.destroyed) throw Error("Hash instance has been destroyed");
          if (t && e.finished)
            throw Error("Hash#digest() has already been called");
        }
        function s(e, t) {
          i(e);
          let n = t.outputLen;
          if (e.length < n)
            throw Error(
              `digestInto() expects output buffer of length at least ${n}`
            );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.output = t.exists = t.hash = t.bytes = t.bool = t.number = void 0),
          (t.number = n),
          (t.bool = r),
          (t.bytes = i),
          (t.hash = a),
          (t.exists = o),
          (t.output = s),
          (t.default = {
            number: n,
            bool: r,
            bytes: i,
            hash: a,
            exists: o,
            output: s,
          });
      },
      18783: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.SHA2 = void 0);
        let r = n(59892),
          i = n(31717);
        class a extends i.Hash {
          constructor(e, t, n, r) {
            super(),
              (this.blockLen = e),
              (this.outputLen = t),
              (this.padOffset = n),
              (this.isLE = r),
              (this.finished = !1),
              (this.length = 0),
              (this.pos = 0),
              (this.destroyed = !1),
              (this.buffer = new Uint8Array(e)),
              (this.view = (0, i.createView)(this.buffer));
          }
          update(e) {
            (0, r.exists)(this);
            let { view: t, buffer: n, blockLen: a } = this;
            e = (0, i.toBytes)(e);
            let o = e.length;
            for (let r = 0; r < o; ) {
              let s = Math.min(a - this.pos, o - r);
              if (s === a) {
                let t = (0, i.createView)(e);
                for (; a <= o - r; r += a) this.process(t, r);
                continue;
              }
              n.set(e.subarray(r, r + s), this.pos),
                (this.pos += s),
                (r += s),
                this.pos === a && (this.process(t, 0), (this.pos = 0));
            }
            return (this.length += e.length), this.roundClean(), this;
          }
          digestInto(e) {
            (0, r.exists)(this), (0, r.output)(e, this), (this.finished = !0);
            let { buffer: t, view: n, blockLen: a, isLE: o } = this,
              { pos: s } = this;
            (t[s++] = 128),
              this.buffer.subarray(s).fill(0),
              this.padOffset > a - s && (this.process(n, 0), (s = 0));
            for (let e = s; e < a; e++) t[e] = 0;
            (function (e, t, n, r) {
              if ("function" == typeof e.setBigUint64)
                return e.setBigUint64(t, n, r);
              let i = BigInt(32),
                a = BigInt(4294967295),
                o = Number((n >> i) & a),
                s = Number(n & a),
                u = r ? 4 : 0,
                l = r ? 0 : 4;
              e.setUint32(t + u, o, r), e.setUint32(t + l, s, r);
            })(n, a - 8, BigInt(8 * this.length), o),
              this.process(n, 0);
            let u = (0, i.createView)(e),
              l = this.outputLen;
            if (l % 4)
              throw Error("_sha2: outputLen should be aligned to 32bit");
            let c = l / 4,
              d = this.get();
            if (c > d.length) throw Error("_sha2: outputLen bigger than state");
            for (let e = 0; e < c; e++) u.setUint32(4 * e, d[e], o);
          }
          digest() {
            let { buffer: e, outputLen: t } = this;
            this.digestInto(e);
            let n = e.slice(0, t);
            return this.destroy(), n;
          }
          _cloneInto(e) {
            e || (e = new this.constructor()), e.set(...this.get());
            let {
              blockLen: t,
              buffer: n,
              length: r,
              finished: i,
              destroyed: a,
              pos: o,
            } = this;
            return (
              (e.length = r),
              (e.pos = o),
              (e.finished = i),
              (e.destroyed = a),
              r % t && e.buffer.set(n),
              e
            );
          }
        }
        t.SHA2 = a;
      },
      17564: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.crypto = void 0),
          (t.crypto =
            "object" == typeof globalThis && "crypto" in globalThis
              ? globalThis.crypto
              : void 0);
      },
      41128: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.hmac = t.HMAC = void 0);
        let r = n(59892),
          i = n(31717);
        class a extends i.Hash {
          constructor(e, t) {
            super(),
              (this.finished = !1),
              (this.destroyed = !1),
              (0, r.hash)(e);
            let n = (0, i.toBytes)(t);
            if (
              ((this.iHash = e.create()),
              "function" != typeof this.iHash.update)
            )
              throw Error(
                "Expected instance of class which extends utils.Hash"
              );
            (this.blockLen = this.iHash.blockLen),
              (this.outputLen = this.iHash.outputLen);
            let a = this.blockLen,
              o = new Uint8Array(a);
            o.set(n.length > a ? e.create().update(n).digest() : n);
            for (let e = 0; e < o.length; e++) o[e] ^= 54;
            this.iHash.update(o), (this.oHash = e.create());
            for (let e = 0; e < o.length; e++) o[e] ^= 106;
            this.oHash.update(o), o.fill(0);
          }
          update(e) {
            return (0, r.exists)(this), this.iHash.update(e), this;
          }
          digestInto(e) {
            (0, r.exists)(this),
              (0, r.bytes)(e, this.outputLen),
              (this.finished = !0),
              this.iHash.digestInto(e),
              this.oHash.update(e),
              this.oHash.digestInto(e),
              this.destroy();
          }
          digest() {
            let e = new Uint8Array(this.oHash.outputLen);
            return this.digestInto(e), e;
          }
          _cloneInto(e) {
            e || (e = Object.create(Object.getPrototypeOf(this), {}));
            let {
              oHash: t,
              iHash: n,
              finished: r,
              destroyed: i,
              blockLen: a,
              outputLen: o,
            } = this;
            return (
              (e.finished = r),
              (e.destroyed = i),
              (e.blockLen = a),
              (e.outputLen = o),
              (e.oHash = t._cloneInto(e.oHash)),
              (e.iHash = n._cloneInto(e.iHash)),
              e
            );
          }
          destroy() {
            (this.destroyed = !0), this.oHash.destroy(), this.iHash.destroy();
          }
        }
        (t.HMAC = a),
          (t.hmac = (e, t, n) => new a(e, t).update(n).digest()),
          (t.hmac.create = (e, t) => new a(e, t));
      },
      97968: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.sha224 = t.sha256 = void 0);
        let r = n(18783),
          i = n(31717),
          a = (e, t, n) => (e & t) ^ (~e & n),
          o = (e, t, n) => (e & t) ^ (e & n) ^ (t & n),
          s = new Uint32Array([
            1116352408, 1899447441, 3049323471, 3921009573, 961987163,
            1508970993, 2453635748, 2870763221, 3624381080, 310598401,
            607225278, 1426881987, 1925078388, 2162078206, 2614888103,
            3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983,
            1249150122, 1555081692, 1996064986, 2554220882, 2821834349,
            2952996808, 3210313671, 3336571891, 3584528711, 113926993,
            338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700,
            1986661051, 2177026350, 2456956037, 2730485921, 2820302411,
            3259730800, 3345764771, 3516065817, 3600352804, 4094571909,
            275423344, 430227734, 506948616, 659060556, 883997877, 958139571,
            1322822218, 1537002063, 1747873779, 1955562222, 2024104815,
            2227730452, 2361852424, 2428436474, 2756734187, 3204031479,
            3329325298,
          ]),
          u = new Uint32Array([
            1779033703, 3144134277, 1013904242, 2773480762, 1359893119,
            2600822924, 528734635, 1541459225,
          ]),
          l = new Uint32Array(64);
        class c extends r.SHA2 {
          constructor() {
            super(64, 32, 8, !1),
              (this.A = 0 | u[0]),
              (this.B = 0 | u[1]),
              (this.C = 0 | u[2]),
              (this.D = 0 | u[3]),
              (this.E = 0 | u[4]),
              (this.F = 0 | u[5]),
              (this.G = 0 | u[6]),
              (this.H = 0 | u[7]);
          }
          get() {
            let { A: e, B: t, C: n, D: r, E: i, F: a, G: o, H: s } = this;
            return [e, t, n, r, i, a, o, s];
          }
          set(e, t, n, r, i, a, o, s) {
            (this.A = 0 | e),
              (this.B = 0 | t),
              (this.C = 0 | n),
              (this.D = 0 | r),
              (this.E = 0 | i),
              (this.F = 0 | a),
              (this.G = 0 | o),
              (this.H = 0 | s);
          }
          process(e, t) {
            for (let n = 0; n < 16; n++, t += 4) l[n] = e.getUint32(t, !1);
            for (let e = 16; e < 64; e++) {
              let t = l[e - 15],
                n = l[e - 2],
                r = (0, i.rotr)(t, 7) ^ (0, i.rotr)(t, 18) ^ (t >>> 3),
                a = (0, i.rotr)(n, 17) ^ (0, i.rotr)(n, 19) ^ (n >>> 10);
              l[e] = (a + l[e - 7] + r + l[e - 16]) | 0;
            }
            let { A: n, B: r, C: u, D: c, E: d, F: f, G: p, H: h } = this;
            for (let e = 0; e < 64; e++) {
              let t =
                  (0, i.rotr)(d, 6) ^ (0, i.rotr)(d, 11) ^ (0, i.rotr)(d, 25),
                m = (h + t + a(d, f, p) + s[e] + l[e]) | 0,
                y = (0, i.rotr)(n, 2) ^ (0, i.rotr)(n, 13) ^ (0, i.rotr)(n, 22),
                g = (y + o(n, r, u)) | 0;
              (h = p),
                (p = f),
                (f = d),
                (d = (c + m) | 0),
                (c = u),
                (u = r),
                (r = n),
                (n = (m + g) | 0);
            }
            (n = (n + this.A) | 0),
              (r = (r + this.B) | 0),
              (u = (u + this.C) | 0),
              (c = (c + this.D) | 0),
              (d = (d + this.E) | 0),
              (f = (f + this.F) | 0),
              (p = (p + this.G) | 0),
              (h = (h + this.H) | 0),
              this.set(n, r, u, c, d, f, p, h);
          }
          roundClean() {
            l.fill(0);
          }
          destroy() {
            this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
          }
        }
        class d extends c {
          constructor() {
            super(),
              (this.A = -1056596264),
              (this.B = 914150663),
              (this.C = 812702999),
              (this.D = -150054599),
              (this.E = -4191439),
              (this.F = 1750603025),
              (this.G = 1694076839),
              (this.H = -1090891868),
              (this.outputLen = 28);
          }
        }
        (t.sha256 = (0, i.wrapConstructor)(() => new c())),
          (t.sha224 = (0, i.wrapConstructor)(() => new d()));
      },
      31717: function (e, t, n) {
        "use strict";
        /*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */ Object.defineProperty(
          t,
          "__esModule",
          { value: !0 }
        ),
          (t.randomBytes =
            t.wrapXOFConstructorWithOpts =
            t.wrapConstructorWithOpts =
            t.wrapConstructor =
            t.checkOpts =
            t.Hash =
            t.concatBytes =
            t.toBytes =
            t.utf8ToBytes =
            t.asyncLoop =
            t.nextTick =
            t.hexToBytes =
            t.bytesToHex =
            t.isLE =
            t.rotr =
            t.createView =
            t.u32 =
            t.u8 =
              void 0);
        let r = n(17564),
          i = (e) => e instanceof Uint8Array;
        if (
          ((t.u8 = (e) => new Uint8Array(e.buffer, e.byteOffset, e.byteLength)),
          (t.u32 = (e) =>
            new Uint32Array(
              e.buffer,
              e.byteOffset,
              Math.floor(e.byteLength / 4)
            )),
          (t.createView = (e) =>
            new DataView(e.buffer, e.byteOffset, e.byteLength)),
          (t.rotr = (e, t) => (e << (32 - t)) | (e >>> t)),
          (t.isLE =
            68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0]),
          !t.isLE)
        )
          throw Error("Non little-endian hardware is not supported");
        let a = Array.from({ length: 256 }, (e, t) =>
          t.toString(16).padStart(2, "0")
        );
        (t.bytesToHex = function (e) {
          if (!i(e)) throw Error("Uint8Array expected");
          let t = "";
          for (let n = 0; n < e.length; n++) t += a[e[n]];
          return t;
        }),
          (t.hexToBytes = function (e) {
            if ("string" != typeof e)
              throw Error("hex string expected, got " + typeof e);
            let t = e.length;
            if (t % 2)
              throw Error(
                "padded hex string expected, got unpadded hex of length " + t
              );
            let n = new Uint8Array(t / 2);
            for (let t = 0; t < n.length; t++) {
              let r = 2 * t,
                i = e.slice(r, r + 2),
                a = Number.parseInt(i, 16);
              if (Number.isNaN(a) || a < 0)
                throw Error("Invalid byte sequence");
              n[t] = a;
            }
            return n;
          });
        let o = async () => {};
        async function s(e, n, r) {
          let i = Date.now();
          for (let a = 0; a < e; a++) {
            r(a);
            let e = Date.now() - i;
            (e >= 0 && e < n) || (await (0, t.nextTick)(), (i += e));
          }
        }
        function u(e) {
          if ("string" != typeof e)
            throw Error(`utf8ToBytes expected string, got ${typeof e}`);
          return new Uint8Array(new TextEncoder().encode(e));
        }
        function l(e) {
          if (("string" == typeof e && (e = u(e)), !i(e)))
            throw Error(`expected Uint8Array, got ${typeof e}`);
          return e;
        }
        (t.nextTick = o),
          (t.asyncLoop = s),
          (t.utf8ToBytes = u),
          (t.toBytes = l),
          (t.concatBytes = function (...e) {
            let t = new Uint8Array(e.reduce((e, t) => e + t.length, 0)),
              n = 0;
            return (
              e.forEach((e) => {
                if (!i(e)) throw Error("Uint8Array expected");
                t.set(e, n), (n += e.length);
              }),
              t
            );
          }),
          (t.Hash = class {
            clone() {
              return this._cloneInto();
            }
          });
        let c = {}.toString;
        (t.checkOpts = function (e, t) {
          if (void 0 !== t && "[object Object]" !== c.call(t))
            throw Error("Options should be object or undefined");
          let n = Object.assign(e, t);
          return n;
        }),
          (t.wrapConstructor = function (e) {
            let t = (t) => e().update(l(t)).digest(),
              n = e();
            return (
              (t.outputLen = n.outputLen),
              (t.blockLen = n.blockLen),
              (t.create = () => e()),
              t
            );
          }),
          (t.wrapConstructorWithOpts = function (e) {
            let t = (t, n) => e(n).update(l(t)).digest(),
              n = e({});
            return (
              (t.outputLen = n.outputLen),
              (t.blockLen = n.blockLen),
              (t.create = (t) => e(t)),
              t
            );
          }),
          (t.wrapXOFConstructorWithOpts = function (e) {
            let t = (t, n) => e(n).update(l(t)).digest(),
              n = e({});
            return (
              (t.outputLen = n.outputLen),
              (t.blockLen = n.blockLen),
              (t.create = (t) => e(t)),
              t
            );
          }),
          (t.randomBytes = function (e = 32) {
            if (r.crypto && "function" == typeof r.crypto.getRandomValues)
              return r.crypto.getRandomValues(new Uint8Array(e));
            throw Error("crypto.getRandomValues must be defined");
          });
      },
      33497: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.encodeToCurve = t.hashToCurve = t.schnorr = t.secp256k1 = void 0);
        /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */ let r =
            n(97968),
          i = n(31717),
          a = n(94632),
          o = n(96551),
          s = n(40219),
          u = n(15134),
          l = n(79082),
          c = BigInt(
            "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"
          ),
          d = BigInt(
            "0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"
          ),
          f = BigInt(1),
          p = BigInt(2),
          h = (e, t) => (e + t / p) / t;
        function m(e) {
          let t = BigInt(3),
            n = BigInt(6),
            r = BigInt(11),
            i = BigInt(22),
            o = BigInt(23),
            s = BigInt(44),
            u = BigInt(88),
            l = (e * e * e) % c,
            d = (l * l * e) % c,
            f = ((0, a.pow2)(d, t, c) * d) % c,
            h = ((0, a.pow2)(f, t, c) * d) % c,
            m = ((0, a.pow2)(h, p, c) * l) % c,
            g = ((0, a.pow2)(m, r, c) * m) % c,
            b = ((0, a.pow2)(g, i, c) * g) % c,
            v = ((0, a.pow2)(b, s, c) * b) % c,
            w = ((0, a.pow2)(v, u, c) * v) % c,
            E = ((0, a.pow2)(w, s, c) * b) % c,
            x = ((0, a.pow2)(E, t, c) * d) % c,
            C = ((0, a.pow2)(x, o, c) * g) % c,
            _ = ((0, a.pow2)(C, n, c) * l) % c,
            T = (0, a.pow2)(_, p, c);
          if (!y.eql(y.sqr(T), e)) throw Error("Cannot find square root");
          return T;
        }
        let y = (0, a.Field)(c, void 0, void 0, { sqrt: m });
        t.secp256k1 = (0, l.createCurve)(
          {
            a: BigInt(0),
            b: BigInt(7),
            Fp: y,
            n: d,
            Gx: BigInt(
              "55066263022277343669578718895168534326250603453777594175500187360389116729240"
            ),
            Gy: BigInt(
              "32670510020758816978083085130507043184471273380659243275938904335757337482424"
            ),
            h: BigInt(1),
            lowS: !0,
            endo: {
              beta: BigInt(
                "0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"
              ),
              splitScalar: (e) => {
                let t = BigInt("0x3086d221a7d46bcde86c90e49284eb15"),
                  n = -f * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),
                  r = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),
                  i = BigInt("0x100000000000000000000000000000000"),
                  o = h(t * e, d),
                  s = h(-n * e, d),
                  u = (0, a.mod)(e - o * t - s * r, d),
                  l = (0, a.mod)(-o * n - s * t, d),
                  c = u > i,
                  p = l > i;
                if ((c && (u = d - u), p && (l = d - l), u > i || l > i))
                  throw Error("splitScalar: Endomorphism failed, k=" + e);
                return { k1neg: c, k1: u, k2neg: p, k2: l };
              },
            },
          },
          r.sha256
        );
        let g = BigInt(0),
          b = (e) => "bigint" == typeof e && g < e && e < c,
          v = (e) => "bigint" == typeof e && g < e && e < d,
          w = {};
        function E(e, ...t) {
          let n = w[e];
          if (void 0 === n) {
            let t = (0, r.sha256)(Uint8Array.from(e, (e) => e.charCodeAt(0)));
            (n = (0, s.concatBytes)(t, t)), (w[e] = n);
          }
          return (0, r.sha256)((0, s.concatBytes)(n, ...t));
        }
        let x = (e) => e.toRawBytes(!0).slice(1),
          C = (e) => (0, s.numberToBytesBE)(e, 32),
          _ = (e) => (0, a.mod)(e, c),
          T = (e) => (0, a.mod)(e, d),
          S = t.secp256k1.ProjectivePoint,
          P = (e, t, n) => S.BASE.multiplyAndAddUnsafe(e, t, n);
        function O(e) {
          let n = t.secp256k1.utils.normPrivateKeyToScalar(e),
            r = S.fromPrivateKey(n),
            i = r.hasEvenY() ? n : T(-n);
          return { scalar: i, bytes: x(r) };
        }
        function I(e) {
          if (!b(e)) throw Error("bad x: need 0 < x < p");
          let t = _(e * e),
            n = _(t * e + BigInt(7)),
            r = m(n);
          r % p !== g && (r = _(-r));
          let i = new S(e, r, f);
          return i.assertValidity(), i;
        }
        function A(...e) {
          return T((0, s.bytesToNumberBE)(E("BIP0340/challenge", ...e)));
        }
        function k(e, t, n) {
          let r = (0, s.ensureBytes)("signature", e, 64),
            i = (0, s.ensureBytes)("message", t),
            a = (0, s.ensureBytes)("publicKey", n, 32);
          try {
            let e = I((0, s.bytesToNumberBE)(a)),
              t = (0, s.bytesToNumberBE)(r.subarray(0, 32));
            if (!b(t)) return !1;
            let n = (0, s.bytesToNumberBE)(r.subarray(32, 64));
            if (!v(n)) return !1;
            let o = A(C(t), x(e), i),
              u = P(e, n, T(-o));
            if (!u || !u.hasEvenY() || u.toAffine().x !== t) return !1;
            return !0;
          } catch (e) {
            return !1;
          }
        }
        t.schnorr = {
          getPublicKey: function (e) {
            return O(e).bytes;
          },
          sign: function (e, t, n = (0, i.randomBytes)(32)) {
            let r = (0, s.ensureBytes)("message", e),
              { bytes: a, scalar: o } = O(t),
              u = (0, s.ensureBytes)("auxRand", n, 32),
              l = C(o ^ (0, s.bytesToNumberBE)(E("BIP0340/aux", u))),
              c = E("BIP0340/nonce", l, a, r),
              d = T((0, s.bytesToNumberBE)(c));
            if (d === g) throw Error("sign failed: k is zero");
            let { bytes: f, scalar: p } = O(d),
              h = A(f, a, r),
              m = new Uint8Array(64);
            if ((m.set(f, 0), m.set(C(T(p + h * o)), 32), !k(m, r, a)))
              throw Error("sign: Invalid signature produced");
            return m;
          },
          verify: k,
          utils: {
            randomPrivateKey: t.secp256k1.utils.randomPrivateKey,
            lift_x: I,
            pointToBytes: x,
            numberToBytesBE: s.numberToBytesBE,
            bytesToNumberBE: s.bytesToNumberBE,
            taggedHash: E,
            mod: a.mod,
          },
        };
        let j = (0, u.isogenyMap)(
            y,
            [
              [
                "0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7",
                "0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581",
                "0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262",
                "0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c",
              ],
              [
                "0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b",
                "0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14",
                "0x0000000000000000000000000000000000000000000000000000000000000001",
              ],
              [
                "0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c",
                "0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3",
                "0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931",
                "0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84",
              ],
              [
                "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b",
                "0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573",
                "0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f",
                "0x0000000000000000000000000000000000000000000000000000000000000001",
              ],
            ].map((e) => e.map((e) => BigInt(e)))
          ),
          B = (0, o.mapToCurveSimpleSWU)(y, {
            A: BigInt(
              "0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533"
            ),
            B: BigInt("1771"),
            Z: y.create(BigInt("-11")),
          }),
          M = (0, u.createHasher)(
            t.secp256k1.ProjectivePoint,
            (e) => {
              let { x: t, y: n } = B(y.create(e[0]));
              return j(t, n);
            },
            {
              DST: "secp256k1_XMD:SHA-256_SSWU_RO_",
              encodeDST: "secp256k1_XMD:SHA-256_SSWU_NU_",
              p: y.ORDER,
              m: 1,
              k: 128,
              expand: "xmd",
              hash: r.sha256,
            }
          );
        (t.hashToCurve = M.hashToCurve), (t.encodeToCurve = M.encodeToCurve);
      },
      77777: function (e, t, n) {
        "use strict";
        t.N = void 0;
        var r = n(7352);
        Object.defineProperty(t, "N", {
          enumerable: !0,
          get: function () {
            return r.SafeAppProvider;
          },
        });
      },
      7352: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.SafeAppProvider = void 0);
        let r = n(17187),
          i = n(93080);
        class a extends r.EventEmitter {
          constructor(e, t) {
            super(),
              (this.submittedTxs = new Map()),
              (this.safe = e),
              (this.sdk = t);
          }
          async connect() {
            this.emit("connect", { chainId: this.chainId });
          }
          async disconnect() {}
          get chainId() {
            return this.safe.chainId;
          }
          async request(e) {
            let { method: t, params: n = [] } = e;
            switch (t) {
              case "eth_accounts":
                return [this.safe.safeAddress];
              case "net_version":
              case "eth_chainId":
                return `0x${this.chainId.toString(16)}`;
              case "personal_sign": {
                let [e, t] = n;
                if (this.safe.safeAddress.toLowerCase() !== t.toLowerCase())
                  throw Error("The address or message hash is invalid");
                let r = await this.sdk.txs.signMessage(e),
                  i = "signature" in r ? r.signature : void 0;
                return i || "0x";
              }
              case "eth_sign": {
                let [e, t] = n;
                if (
                  this.safe.safeAddress.toLowerCase() !== e.toLowerCase() ||
                  !t.startsWith("0x")
                )
                  throw Error("The address or message hash is invalid");
                let r = await this.sdk.txs.signMessage(t),
                  i = "signature" in r ? r.signature : void 0;
                return i || "0x";
              }
              case "eth_signTypedData":
              case "eth_signTypedData_v4": {
                let [e, t] = n,
                  r = "string" == typeof t ? JSON.parse(t) : t;
                if (this.safe.safeAddress.toLowerCase() !== e.toLowerCase())
                  throw Error("The address is invalid");
                let i = await this.sdk.txs.signTypedMessage(r),
                  a = "signature" in i ? i.signature : void 0;
                return a || "0x";
              }
              case "eth_sendTransaction":
                let r = Object.assign(Object.assign({}, n[0]), {
                  value: n[0].value || "0",
                  data: n[0].data || "0x",
                });
                "string" == typeof r.gas &&
                  r.gas.startsWith("0x") &&
                  (r.gas = parseInt(r.gas, 16));
                let a = await this.sdk.txs.send({
                  txs: [r],
                  params: { safeTxGas: r.gas },
                });
                return (
                  this.submittedTxs.set(a.safeTxHash, {
                    from: this.safe.safeAddress,
                    hash: a.safeTxHash,
                    gas: 0,
                    gasPrice: "0x00",
                    nonce: 0,
                    input: r.data,
                    value: r.value,
                    to: r.to,
                    blockHash: null,
                    blockNumber: null,
                    transactionIndex: null,
                  }),
                  a.safeTxHash
                );
              case "eth_blockNumber":
                let o = await this.sdk.eth.getBlockByNumber(["latest"]);
                return o.number;
              case "eth_getBalance":
                return this.sdk.eth.getBalance([
                  (0, i.getLowerCase)(n[0]),
                  n[1],
                ]);
              case "eth_getCode":
                return this.sdk.eth.getCode([(0, i.getLowerCase)(n[0]), n[1]]);
              case "eth_getTransactionCount":
                return this.sdk.eth.getTransactionCount([
                  (0, i.getLowerCase)(n[0]),
                  n[1],
                ]);
              case "eth_getStorageAt":
                return this.sdk.eth.getStorageAt([
                  (0, i.getLowerCase)(n[0]),
                  n[1],
                  n[2],
                ]);
              case "eth_getBlockByNumber":
                return this.sdk.eth.getBlockByNumber([n[0], n[1]]);
              case "eth_getBlockByHash":
                return this.sdk.eth.getBlockByHash([n[0], n[1]]);
              case "eth_getTransactionByHash":
                let s = n[0];
                try {
                  let e = await this.sdk.txs.getBySafeTxHash(s);
                  s = e.txHash || s;
                } catch (e) {}
                if (this.submittedTxs.has(s)) return this.submittedTxs.get(s);
                return this.sdk.eth
                  .getTransactionByHash([s])
                  .then((e) => (e && (e.hash = n[0]), e));
              case "eth_getTransactionReceipt": {
                let e = n[0];
                try {
                  let t = await this.sdk.txs.getBySafeTxHash(e);
                  e = t.txHash || e;
                } catch (e) {}
                return this.sdk.eth
                  .getTransactionReceipt([e])
                  .then((e) => (e && (e.transactionHash = n[0]), e));
              }
              case "eth_estimateGas":
                return this.sdk.eth.getEstimateGas(n[0]);
              case "eth_call":
                return this.sdk.eth.call([n[0], n[1]]);
              case "eth_getLogs":
                return this.sdk.eth.getPastLogs([n[0]]);
              case "eth_gasPrice":
                return this.sdk.eth.getGasPrice();
              case "wallet_getPermissions":
                return this.sdk.wallet.getPermissions();
              case "wallet_requestPermissions":
                return this.sdk.wallet.requestPermissions(n[0]);
              case "safe_setSettings":
                return this.sdk.eth.setSafeSettings([n[0]]);
              default:
                throw Error(`"${e.method}" not implemented`);
            }
          }
          send(e, t) {
            e || t("Undefined request"),
              this.request(e)
                .then((n) => t(null, { jsonrpc: "2.0", id: e.id, result: n }))
                .catch((e) => t(e, null));
          }
        }
        t.SafeAppProvider = a;
      },
      93080: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getLowerCase = void 0),
          (t.getLowerCase = function (e) {
            return e ? e.toLowerCase() : e;
          });
      },
      95068: function (e, t, n) {
        "use strict";
        var r =
            (this && this.__createBinding) ||
            (Object.create
              ? function (e, t, n, r) {
                  void 0 === r && (r = n);
                  var i = Object.getOwnPropertyDescriptor(t, n);
                  (!i ||
                    ("get" in i
                      ? !t.__esModule
                      : i.writable || i.configurable)) &&
                    (i = {
                      enumerable: !0,
                      get: function () {
                        return t[n];
                      },
                    }),
                    Object.defineProperty(e, r, i);
                }
              : function (e, t, n, r) {
                  void 0 === r && (r = n), (e[r] = t[n]);
                }),
          i =
            (this && this.__exportStar) ||
            function (e, t) {
              for (var n in e)
                "default" === n ||
                  Object.prototype.hasOwnProperty.call(t, n) ||
                  r(t, e, n);
            };
        Object.defineProperty(t, "__esModule", { value: !0 });
        let a = n(65938);
        (t.default = class {
          constructor(e = null, t = !1) {
            (this.allowedOrigins = null),
              (this.callbacks = new Map()),
              (this.debugMode = !1),
              (this.isServer = "undefined" == typeof window),
              (this.isValidMessage = ({ origin: e, data: t, source: n }) => {
                let r = !this.isServer && n === window.parent,
                  i = void 0 !== t.version && parseInt(t.version.split(".")[0]),
                  a = !0;
                return (
                  Array.isArray(this.allowedOrigins) &&
                    (a = void 0 !== this.allowedOrigins.find((t) => t.test(e))),
                  !!t && r && i >= 1 && a
                );
              }),
              (this.logIncomingMessage = (e) => {
                console.info(
                  `Safe Apps SDK v1: A message was received from origin ${e.origin}. `,
                  e.data
                );
              }),
              (this.onParentMessage = (e) => {
                this.isValidMessage(e) &&
                  (this.debugMode && this.logIncomingMessage(e),
                  this.handleIncomingMessage(e.data));
              }),
              (this.handleIncomingMessage = (e) => {
                let { id: t } = e,
                  n = this.callbacks.get(t);
                n && (n(e), this.callbacks.delete(t));
              }),
              (this.send = (e, t) => {
                let n = a.MessageFormatter.makeRequest(e, t);
                if (this.isServer) throw Error("Window doesn't exist");
                return (
                  window.parent.postMessage(n, "*"),
                  new Promise((e, t) => {
                    this.callbacks.set(n.id, (n) => {
                      if (!n.success) {
                        t(Error(n.error));
                        return;
                      }
                      e(n);
                    });
                  })
                );
              }),
              (this.allowedOrigins = e),
              (this.debugMode = t),
              this.isServer ||
                window.addEventListener("message", this.onParentMessage);
          }
        }),
          i(n(27473), t);
      },
      65938: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.MessageFormatter = void 0);
        let r = n(55445),
          i = n(9331);
        class a {}
        (t.MessageFormatter = a),
          (a.makeRequest = (e, t) => {
            let n = (0, i.generateRequestId)();
            return {
              id: n,
              method: e,
              params: t,
              env: { sdkVersion: (0, r.getSDKVersion)() },
            };
          }),
          (a.makeResponse = (e, t, n) => ({
            id: e,
            success: !0,
            version: n,
            data: t,
          })),
          (a.makeErrorResponse = (e, t, n) => ({
            id: e,
            success: !1,
            error: t,
            version: n,
          }));
      },
      27473: function (e, t) {
        "use strict";
        var n;
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.RestrictedMethods = t.Methods = void 0),
          ((n = t.Methods || (t.Methods = {})).sendTransactions =
            "sendTransactions"),
          (n.rpcCall = "rpcCall"),
          (n.getChainInfo = "getChainInfo"),
          (n.getSafeInfo = "getSafeInfo"),
          (n.getTxBySafeTxHash = "getTxBySafeTxHash"),
          (n.getSafeBalances = "getSafeBalances"),
          (n.signMessage = "signMessage"),
          (n.signTypedMessage = "signTypedMessage"),
          (n.getEnvironmentInfo = "getEnvironmentInfo"),
          (n.getOffChainSignature = "getOffChainSignature"),
          (n.requestAddressBook = "requestAddressBook"),
          (n.wallet_getPermissions = "wallet_getPermissions"),
          (n.wallet_requestPermissions = "wallet_requestPermissions"),
          ((
            t.RestrictedMethods || (t.RestrictedMethods = {})
          ).requestAddressBook = "requestAddressBook");
      },
      9331: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.generateRequestId = void 0);
        let n = (e) => e.toString(16).padStart(2, "0"),
          r = (e) => {
            let t = new Uint8Array((e || 40) / 2);
            return window.crypto.getRandomValues(t), Array.from(t, n).join("");
          };
        t.generateRequestId = () =>
          "undefined" != typeof window
            ? r(10)
            : new Date().getTime().toString(36);
      },
      23417: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        let r = n(11285),
          i = n(51741),
          a = (e, t) => t.some((t) => t.parentCapability === e);
        t.default = () => (e, t, n) => {
          let o = n.value;
          return (
            (n.value = async function () {
              let e = new r.Wallet(this.communicator),
                n = await e.getPermissions();
              if (
                (a(t, n) || (n = await e.requestPermissions([{ [t]: {} }])),
                !a(t, n))
              )
                throw new i.PermissionsError(
                  "Permissions rejected",
                  i.PERMISSIONS_REQUEST_REJECTED
                );
              return o.apply(this);
            }),
            n
          );
        };
      },
      46794: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.RPC_CALLS = void 0),
          (t.RPC_CALLS = {
            eth_call: "eth_call",
            eth_gasPrice: "eth_gasPrice",
            eth_getLogs: "eth_getLogs",
            eth_getBalance: "eth_getBalance",
            eth_getCode: "eth_getCode",
            eth_getBlockByHash: "eth_getBlockByHash",
            eth_getBlockByNumber: "eth_getBlockByNumber",
            eth_getStorageAt: "eth_getStorageAt",
            eth_getTransactionByHash: "eth_getTransactionByHash",
            eth_getTransactionReceipt: "eth_getTransactionReceipt",
            eth_getTransactionCount: "eth_getTransactionCount",
            eth_estimateGas: "eth_estimateGas",
            safe_setSettings: "safe_setSettings",
          });
      },
      99750: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }), (t.Eth = void 0);
        let r = n(46794),
          i = n(27473),
          a = {
            defaultBlockParam: (e = "latest") => e,
            returnFullTxObjectParam: (e = !1) => e,
            blockNumberToHex: (e) =>
              Number.isInteger(e) ? `0x${e.toString(16)}` : e,
          };
        t.Eth = class {
          constructor(e) {
            (this.communicator = e),
              (this.call = this.buildRequest({
                call: r.RPC_CALLS.eth_call,
                formatters: [null, a.defaultBlockParam],
              })),
              (this.getBalance = this.buildRequest({
                call: r.RPC_CALLS.eth_getBalance,
                formatters: [null, a.defaultBlockParam],
              })),
              (this.getCode = this.buildRequest({
                call: r.RPC_CALLS.eth_getCode,
                formatters: [null, a.defaultBlockParam],
              })),
              (this.getStorageAt = this.buildRequest({
                call: r.RPC_CALLS.eth_getStorageAt,
                formatters: [null, a.blockNumberToHex, a.defaultBlockParam],
              })),
              (this.getPastLogs = this.buildRequest({
                call: r.RPC_CALLS.eth_getLogs,
              })),
              (this.getBlockByHash = this.buildRequest({
                call: r.RPC_CALLS.eth_getBlockByHash,
                formatters: [null, a.returnFullTxObjectParam],
              })),
              (this.getBlockByNumber = this.buildRequest({
                call: r.RPC_CALLS.eth_getBlockByNumber,
                formatters: [a.blockNumberToHex, a.returnFullTxObjectParam],
              })),
              (this.getTransactionByHash = this.buildRequest({
                call: r.RPC_CALLS.eth_getTransactionByHash,
              })),
              (this.getTransactionReceipt = this.buildRequest({
                call: r.RPC_CALLS.eth_getTransactionReceipt,
              })),
              (this.getTransactionCount = this.buildRequest({
                call: r.RPC_CALLS.eth_getTransactionCount,
                formatters: [null, a.defaultBlockParam],
              })),
              (this.getGasPrice = this.buildRequest({
                call: r.RPC_CALLS.eth_gasPrice,
              })),
              (this.getEstimateGas = (e) =>
                this.buildRequest({ call: r.RPC_CALLS.eth_estimateGas })([e])),
              (this.setSafeSettings = this.buildRequest({
                call: r.RPC_CALLS.safe_setSettings,
              }));
          }
          buildRequest(e) {
            let { call: t, formatters: n } = e;
            return async (e) => {
              n &&
                Array.isArray(e) &&
                n.forEach((t, n) => {
                  t && (e[n] = t(e[n]));
                });
              let r = await this.communicator.send(i.Methods.rpcCall, {
                call: t,
                params: e || [],
              });
              return r.data;
            };
          }
        };
      },
      40936: function (e, t, n) {
        "use strict";
        var r =
            (this && this.__createBinding) ||
            (Object.create
              ? function (e, t, n, r) {
                  void 0 === r && (r = n);
                  var i = Object.getOwnPropertyDescriptor(t, n);
                  (!i ||
                    ("get" in i
                      ? !t.__esModule
                      : i.writable || i.configurable)) &&
                    (i = {
                      enumerable: !0,
                      get: function () {
                        return t[n];
                      },
                    }),
                    Object.defineProperty(e, r, i);
                }
              : function (e, t, n, r) {
                  void 0 === r && (r = n), (e[r] = t[n]);
                }),
          i =
            (this && this.__exportStar) ||
            function (e, t) {
              for (var n in e)
                "default" === n ||
                  Object.prototype.hasOwnProperty.call(t, n) ||
                  r(t, e, n);
            },
          a =
            (this && this.__importDefault) ||
            function (e) {
              return e && e.__esModule ? e : { default: e };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getSDKVersion = void 0);
        let o = a(n(66638));
        (t.default = o.default),
          i(n(66638), t),
          i(n(8550), t),
          i(n(27473), t),
          i(n(65938), t);
        var s = n(55445);
        Object.defineProperty(t, "getSDKVersion", {
          enumerable: !0,
          get: function () {
            return s.getSDKVersion;
          },
        });
      },
      89385: function (e, t, n) {
        "use strict";
        var r =
            (this && this.__decorate) ||
            function (e, t, n, r) {
              var i,
                a = arguments.length,
                o =
                  a < 3
                    ? t
                    : null === r
                    ? (r = Object.getOwnPropertyDescriptor(t, n))
                    : r;
              if (
                "object" == typeof Reflect &&
                "function" == typeof Reflect.decorate
              )
                o = Reflect.decorate(e, t, n, r);
              else
                for (var s = e.length - 1; s >= 0; s--)
                  (i = e[s]) &&
                    (o = (a < 3 ? i(o) : a > 3 ? i(t, n, o) : i(t, n)) || o);
              return a > 3 && o && Object.defineProperty(t, n, o), o;
            },
          i =
            (this && this.__importDefault) ||
            function (e) {
              return e && e.__esModule ? e : { default: e };
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Safe = void 0);
        let a = n(15875),
          o = n(61181),
          s = n(27473),
          u = n(46794),
          l = n(8550),
          c = i(n(23417));
        class d {
          constructor(e) {
            this.communicator = e;
          }
          async getChainInfo() {
            let e = await this.communicator.send(
              s.Methods.getChainInfo,
              void 0
            );
            return e.data;
          }
          async getInfo() {
            let e = await this.communicator.send(s.Methods.getSafeInfo, void 0);
            return e.data;
          }
          async experimental_getBalances({ currency: e = "usd" } = {}) {
            let t = await this.communicator.send(s.Methods.getSafeBalances, {
              currency: e,
            });
            return t.data;
          }
          async check1271Signature(e, t = "0x") {
            let n = await this.getInfo(),
              r = (0, a.encodeFunctionData)({
                abi: [
                  {
                    constant: !1,
                    inputs: [
                      { name: "_dataHash", type: "bytes32" },
                      { name: "_signature", type: "bytes" },
                    ],
                    name: "isValidSignature",
                    outputs: [{ name: "", type: "bytes4" }],
                    payable: !1,
                    stateMutability: "nonpayable",
                    type: "function",
                  },
                ],
                functionName: "isValidSignature",
                args: [e, t],
              }),
              i = {
                call: u.RPC_CALLS.eth_call,
                params: [{ to: n.safeAddress, data: r }, "latest"],
              };
            try {
              let e = await this.communicator.send(s.Methods.rpcCall, i);
              return e.data.slice(0, 10).toLowerCase() === o.MAGIC_VALUE;
            } catch (e) {
              return !1;
            }
          }
          async check1271SignatureBytes(e, t = "0x") {
            let n = await this.getInfo(),
              r = (0, a.encodeFunctionData)({
                abi: [
                  {
                    constant: !1,
                    inputs: [
                      { name: "_data", type: "bytes" },
                      { name: "_signature", type: "bytes" },
                    ],
                    name: "isValidSignature",
                    outputs: [{ name: "", type: "bytes4" }],
                    payable: !1,
                    stateMutability: "nonpayable",
                    type: "function",
                  },
                ],
                functionName: "isValidSignature",
                args: [e, t],
              }),
              i = {
                call: u.RPC_CALLS.eth_call,
                params: [{ to: n.safeAddress, data: r }, "latest"],
              };
            try {
              let e = await this.communicator.send(s.Methods.rpcCall, i);
              return e.data.slice(0, 10).toLowerCase() === o.MAGIC_VALUE_BYTES;
            } catch (e) {
              return !1;
            }
          }
          calculateMessageHash(e) {
            return (0, a.hashMessage)(e);
          }
          calculateTypedMessageHash(e) {
            let t =
                "object" == typeof e.domain.chainId
                  ? e.domain.chainId.toNumber()
                  : Number(e.domain.chainId),
              n = e.primaryType;
            if (!n) {
              let t = Object.values(e.types),
                r = Object.keys(e.types).filter((e) =>
                  t.every((t) =>
                    t.every(
                      ({ type: t }) => t.replace("[", "").replace("]", "") !== e
                    )
                  )
                );
              if (0 === r.length || r.length > 1)
                throw Error("Please specify primaryType");
              n = r[0];
            }
            return (0, a.hashTypedData)({
              message: e.message,
              domain: Object.assign(Object.assign({}, e.domain), {
                chainId: t,
                verifyingContract: e.domain.verifyingContract,
                salt: e.domain.salt,
              }),
              types: e.types,
              primaryType: n,
            });
          }
          async getOffChainSignature(e) {
            let t = await this.communicator.send(
              s.Methods.getOffChainSignature,
              e
            );
            return t.data;
          }
          async isMessageSigned(e, t = "0x") {
            let n;
            if (
              ("string" == typeof e &&
                (n = async () => {
                  let n = this.calculateMessageHash(e),
                    r = await this.isMessageHashSigned(n, t);
                  return r;
                }),
              (0, l.isObjectEIP712TypedData)(e) &&
                (n = async () => {
                  let n = this.calculateTypedMessageHash(e),
                    r = await this.isMessageHashSigned(n, t);
                  return r;
                }),
              n)
            ) {
              let e = await n();
              return e;
            }
            throw Error("Invalid message type");
          }
          async isMessageHashSigned(e, t = "0x") {
            let n = [
              this.check1271Signature.bind(this),
              this.check1271SignatureBytes.bind(this),
            ];
            for (let r of n) {
              let n = await r(e, t);
              if (n) return !0;
            }
            return !1;
          }
          async getEnvironmentInfo() {
            let e = await this.communicator.send(
              s.Methods.getEnvironmentInfo,
              void 0
            );
            return e.data;
          }
          async requestAddressBook() {
            let e = await this.communicator.send(
              s.Methods.requestAddressBook,
              void 0
            );
            return e.data;
          }
        }
        r([(0, c.default)()], d.prototype, "requestAddressBook", null),
          (t.Safe = d);
      },
      61181: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.MAGIC_VALUE_BYTES = t.MAGIC_VALUE = void 0),
          (t.MAGIC_VALUE = "0x1626ba7e"),
          (t.MAGIC_VALUE_BYTES = "0x20c13b0b");
      },
      66638: function (e, t, n) {
        "use strict";
        var r =
          (this && this.__importDefault) ||
          function (e) {
            return e && e.__esModule ? e : { default: e };
          };
        Object.defineProperty(t, "__esModule", { value: !0 });
        let i = r(n(95068)),
          a = n(44070),
          o = n(99750),
          s = n(89385),
          u = n(11285);
        t.default = class {
          constructor(e = {}) {
            let { allowedDomains: t = null, debug: n = !1 } = e;
            (this.communicator = new i.default(t, n)),
              (this.eth = new o.Eth(this.communicator)),
              (this.txs = new a.TXs(this.communicator)),
              (this.safe = new s.Safe(this.communicator)),
              (this.wallet = new u.Wallet(this.communicator));
          }
        };
      },
      44070: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }), (t.TXs = void 0);
        let r = n(27473),
          i = n(8550);
        t.TXs = class {
          constructor(e) {
            this.communicator = e;
          }
          async getBySafeTxHash(e) {
            if (!e) throw Error("Invalid safeTxHash");
            let t = await this.communicator.send(r.Methods.getTxBySafeTxHash, {
              safeTxHash: e,
            });
            return t.data;
          }
          async signMessage(e) {
            let t = await this.communicator.send(r.Methods.signMessage, {
              message: e,
            });
            return t.data;
          }
          async signTypedMessage(e) {
            if (!(0, i.isObjectEIP712TypedData)(e))
              throw Error("Invalid typed data");
            let t = await this.communicator.send(r.Methods.signTypedMessage, {
              typedData: e,
            });
            return t.data;
          }
          async send({ txs: e, params: t }) {
            if (!e || !e.length) throw Error("No transactions were passed");
            let n = await this.communicator.send(r.Methods.sendTransactions, {
              txs: e,
              params: t,
            });
            return n.data;
          }
        };
      },
      25946: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.TransferDirection =
            t.TransactionStatus =
            t.TokenType =
            t.Operation =
              void 0);
        var r = n(18831);
        Object.defineProperty(t, "Operation", {
          enumerable: !0,
          get: function () {
            return r.Operation;
          },
        }),
          Object.defineProperty(t, "TokenType", {
            enumerable: !0,
            get: function () {
              return r.TokenType;
            },
          }),
          Object.defineProperty(t, "TransactionStatus", {
            enumerable: !0,
            get: function () {
              return r.TransactionStatus;
            },
          }),
          Object.defineProperty(t, "TransferDirection", {
            enumerable: !0,
            get: function () {
              return r.TransferDirection;
            },
          });
      },
      8550: function (e, t, n) {
        "use strict";
        var r =
            (this && this.__createBinding) ||
            (Object.create
              ? function (e, t, n, r) {
                  void 0 === r && (r = n);
                  var i = Object.getOwnPropertyDescriptor(t, n);
                  (!i ||
                    ("get" in i
                      ? !t.__esModule
                      : i.writable || i.configurable)) &&
                    (i = {
                      enumerable: !0,
                      get: function () {
                        return t[n];
                      },
                    }),
                    Object.defineProperty(e, r, i);
                }
              : function (e, t, n, r) {
                  void 0 === r && (r = n), (e[r] = t[n]);
                }),
          i =
            (this && this.__exportStar) ||
            function (e, t) {
              for (var n in e)
                "default" === n ||
                  Object.prototype.hasOwnProperty.call(t, n) ||
                  r(t, e, n);
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          i(n(71734), t),
          i(n(13788), t),
          i(n(25946), t),
          i(n(13754), t);
      },
      13754: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }), n(27473);
      },
      51741: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.PermissionsError = t.PERMISSIONS_REQUEST_REJECTED = void 0),
          (t.PERMISSIONS_REQUEST_REJECTED = 4001);
        class n extends Error {
          constructor(e, t, r) {
            super(e),
              (this.code = t),
              (this.data = r),
              Object.setPrototypeOf(this, n.prototype);
          }
        }
        t.PermissionsError = n;
      },
      13788: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
      },
      71734: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.isObjectEIP712TypedData = void 0),
          (t.isObjectEIP712TypedData = (e) =>
            "object" == typeof e &&
            null != e &&
            "domain" in e &&
            "types" in e &&
            "message" in e);
      },
      55445: function (e, t, n) {
        "use strict";
        var r =
          (this && this.__importDefault) ||
          function (e) {
            return e && e.__esModule ? e : { default: e };
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getSDKVersion = void 0);
        let i = r(n(29242));
        t.getSDKVersion = () => i.default.version.split("-")[0];
      },
      11285: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Wallet = void 0);
        let r = n(27473),
          i = n(51741);
        t.Wallet = class {
          constructor(e) {
            this.communicator = e;
          }
          async getPermissions() {
            let e = await this.communicator.send(
              r.Methods.wallet_getPermissions,
              void 0
            );
            return e.data;
          }
          async requestPermissions(e) {
            if (!this.isPermissionRequestValid(e))
              throw new i.PermissionsError(
                "Permissions request is invalid",
                i.PERMISSIONS_REQUEST_REJECTED
              );
            try {
              let t = await this.communicator.send(
                r.Methods.wallet_requestPermissions,
                e
              );
              return t.data;
            } catch (e) {
              throw new i.PermissionsError(
                "Permissions rejected",
                i.PERMISSIONS_REQUEST_REJECTED
              );
            }
          }
          isPermissionRequestValid(e) {
            return e.every(
              (e) =>
                "object" == typeof e &&
                Object.keys(e).every(
                  (e) => !!Object.values(r.RestrictedMethods).includes(e)
                )
            );
          }
        };
      },
      1074: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.DEFAULT_BASE_URL = void 0),
          (t.DEFAULT_BASE_URL = "https://safe-client.safe.global");
      },
      76287: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.deleteEndpoint = t.getEndpoint = t.postEndpoint = void 0);
        let r = n(59136);
        function i(e, t, n, i) {
          let a = (0, r.insertParams)(t, n),
            o = (0, r.stringifyQuery)(i);
          return `${e}${a}${o}`;
        }
        (t.postEndpoint = function (e, t, n) {
          let a = i(
            e,
            t,
            null == n ? void 0 : n.path,
            null == n ? void 0 : n.query
          );
          return (0, r.fetchData)(a, null == n ? void 0 : n.body);
        }),
          (t.getEndpoint = function (e, t, n, a) {
            if (a) return (0, r.fetchData)(a);
            let o = i(
              e,
              t,
              null == n ? void 0 : n.path,
              null == n ? void 0 : n.query
            );
            return (0, r.fetchData)(o);
          }),
          (t.deleteEndpoint = function (e, t, n) {
            let a = i(e, t, null == n ? void 0 : n.path);
            return (0, r.deleteData)(a);
          });
      },
      18831: function (e, t, n) {
        "use strict";
        var r =
            (this && this.__createBinding) ||
            (Object.create
              ? function (e, t, n, r) {
                  void 0 === r && (r = n);
                  var i = Object.getOwnPropertyDescriptor(t, n);
                  (!i ||
                    ("get" in i
                      ? !t.__esModule
                      : i.writable || i.configurable)) &&
                    (i = {
                      enumerable: !0,
                      get: function () {
                        return t[n];
                      },
                    }),
                    Object.defineProperty(e, r, i);
                }
              : function (e, t, n, r) {
                  void 0 === r && (r = n), (e[r] = t[n]);
                }),
          i =
            (this && this.__exportStar) ||
            function (e, t) {
              for (var n in e)
                "default" === n ||
                  Object.prototype.hasOwnProperty.call(t, n) ||
                  r(t, e, n);
            };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.unregisterDevice =
            t.unregisterSafe =
            t.registerDevice =
            t.getDelegates =
            t.confirmSafeMessage =
            t.proposeSafeMessage =
            t.getSafeMessage =
            t.getSafeMessages =
            t.getDecodedData =
            t.getMasterCopies =
            t.getSafeApps =
            t.getChainConfig =
            t.getChainsConfig =
            t.proposeTransaction =
            t.getNonces =
            t.postSafeGasEstimation =
            t.getTransactionDetails =
            t.getTransactionQueue =
            t.getTransactionHistory =
            t.getCollectiblesPage =
            t.getCollectibles =
            t.getOwnedSafes =
            t.getFiatCurrencies =
            t.getBalances =
            t.getMultisigTransactions =
            t.getModuleTransactions =
            t.getIncomingTransfers =
            t.getSafeInfo =
            t.setBaseUrl =
              void 0);
        let a = n(76287),
          o = n(1074);
        i(n(32733), t),
          i(n(22394), t),
          i(n(17584), t),
          i(n(28996), t),
          i(n(23075), t),
          i(n(80247), t),
          i(n(83571), t),
          i(n(43150), t),
          i(n(50379), t);
        let s = o.DEFAULT_BASE_URL;
        (t.setBaseUrl = (e) => {
          s = e;
        }),
          (t.getSafeInfo = function (e, t) {
            return (0, a.getEndpoint)(
              s,
              "/v1/chains/{chainId}/safes/{address}",
              { path: { chainId: e, address: t } }
            );
          }),
          (t.getIncomingTransfers = function (e, t, n, r) {
            return (0, a.getEndpoint)(
              s,
              "/v1/chains/{chainId}/safes/{address}/incoming-transfers/",
              { path: { chainId: e, address: t }, query: n },
              r
            );
          }),
          (t.getModuleTransactions = function (e, t, n, r) {
            return (0, a.getEndpoint)(
              s,
              "/v1/chains/{chainId}/safes/{address}/module-transactions/",
              { path: { chainId: e, address: t }, query: n },
              r
            );
          }),
          (t.getMultisigTransactions = function (e, t, n, r) {
            return (0, a.getEndpoint)(
              s,
              "/v1/chains/{chainId}/safes/{address}/multisig-transactions/",
              { path: { chainId: e, address: t }, query: n },
              r
            );
          }),
          (t.getBalances = function (e, t, n = "usd", r = {}) {
            return (0, a.getEndpoint)(
              s,
              "/v1/chains/{chainId}/safes/{address}/balances/{currency}",
              { path: { chainId: e, address: t, currency: n }, query: r }
            );
          }),
          (t.getFiatCurrencies = function () {
            return (0, a.getEndpoint)(s, "/v1/balances/supported-fiat-codes");
          }),
          (t.getOwnedSafes = function (e, t) {
            return (0, a.getEndpoint)(
              s,
              "/v1/chains/{chainId}/owners/{address}/safes",
              { path: { chainId: e, address: t } }
            );
          }),
          (t.getCollectibles = function (e, t, n = {}) {
            return (0, a.getEndpoint)(
              s,
              "/v1/chains/{chainId}/safes/{address}/collectibles",
              { path: { chainId: e, address: t }, query: n }
            );
          }),
          (t.getCollectiblesPage = function (e, t, n = {}, r) {
            return (0, a.getEndpoint)(
              s,
              "/v2/chains/{chainId}/safes/{address}/collectibles",
              { path: { chainId: e, address: t }, query: n },
              r
            );
          }),
          (t.getTransactionHistory = function (e, t, n, r) {
            return (0, a.getEndpoint)(
              s,
              "/v1/chains/{chainId}/safes/{safe_address}/transactions/history",
              { path: { chainId: e, safe_address: t }, query: { trusted: r } },
              n
            );
          }),
          (t.getTransactionQueue = function (e, t, n, r) {
            return (0, a.getEndpoint)(
              s,
              "/v1/chains/{chainId}/safes/{safe_address}/transactions/queued",
              { path: { chainId: e, safe_address: t }, query: { trusted: r } },
              n
            );
          }),
          (t.getTransactionDetails = function (e, t) {
            return (0, a.getEndpoint)(
              s,
              "/v1/chains/{chainId}/transactions/{transactionId}",
              { path: { chainId: e, transactionId: t } }
            );
          }),
          (t.postSafeGasEstimation = function (e, t, n) {
            return (0, a.postEndpoint)(
              s,
              "/v2/chains/{chainId}/safes/{safe_address}/multisig-transactions/estimations",
              { path: { chainId: e, safe_address: t }, body: n }
            );
          }),
          (t.getNonces = function (e, t) {
            return (0, a.getEndpoint)(
              s,
              "/v1/chains/{chainId}/safes/{safe_address}/nonces",
              { path: { chainId: e, safe_address: t } }
            );
          }),
          (t.proposeTransaction = function (e, t, n) {
            return (0, a.postEndpoint)(
              s,
              "/v1/chains/{chainId}/transactions/{safe_address}/propose",
              { path: { chainId: e, safe_address: t }, body: n }
            );
          }),
          (t.getChainsConfig = function (e) {
            return (0, a.getEndpoint)(s, "/v1/chains", { query: e });
          }),
          (t.getChainConfig = function (e) {
            return (0, a.getEndpoint)(s, "/v1/chains/{chainId}", {
              path: { chainId: e },
            });
          }),
          (t.getSafeApps = function (e, t = {}) {
            return (0, a.getEndpoint)(s, "/v1/chains/{chainId}/safe-apps", {
              path: { chainId: e },
              query: t,
            });
          }),
          (t.getMasterCopies = function (e) {
            return (0, a.getEndpoint)(
              s,
              "/v1/chains/{chainId}/about/master-copies",
              { path: { chainId: e } }
            );
          }),
          (t.getDecodedData = function (e, t, n) {
            return (0, a.postEndpoint)(s, "/v1/chains/{chainId}/data-decoder", {
              path: { chainId: e },
              body: { data: t, to: n },
            });
          }),
          (t.getSafeMessages = function (e, t, n) {
            return (0, a.getEndpoint)(
              s,
              "/v1/chains/{chainId}/safes/{safe_address}/messages",
              { path: { chainId: e, safe_address: t }, query: {} },
              n
            );
          }),
          (t.getSafeMessage = function (e, t) {
            return (0, a.getEndpoint)(
              s,
              "/v1/chains/{chainId}/messages/{message_hash}",
              { path: { chainId: e, message_hash: t } }
            );
          }),
          (t.proposeSafeMessage = function (e, t, n) {
            return (0, a.postEndpoint)(
              s,
              "/v1/chains/{chainId}/safes/{safe_address}/messages",
              { path: { chainId: e, safe_address: t }, body: n }
            );
          }),
          (t.confirmSafeMessage = function (e, t, n) {
            return (0, a.postEndpoint)(
              s,
              "/v1/chains/{chainId}/messages/{message_hash}/signatures",
              { path: { chainId: e, message_hash: t }, body: n }
            );
          }),
          (t.getDelegates = function (e, t = {}) {
            return (0, a.getEndpoint)(s, "/v1/chains/{chainId}/delegates", {
              path: { chainId: e },
              query: t,
            });
          }),
          (t.registerDevice = function (e) {
            return (0, a.postEndpoint)(s, "/v1/register/notifications", {
              body: e,
            });
          }),
          (t.unregisterSafe = function (e, t, n) {
            return (0, a.deleteEndpoint)(
              s,
              "/v1/chains/{chainId}/notifications/devices/{uuid}/safes/{safe_address}",
              { path: { chainId: e, safe_address: t, uuid: n } }
            );
          }),
          (t.unregisterDevice = function (e, t) {
            return (0, a.deleteEndpoint)(
              s,
              "/v1/chains/{chainId}/notifications/devices/{uuid}",
              { path: { chainId: e, uuid: t } }
            );
          });
      },
      28996: function (e, t) {
        "use strict";
        var n, r, i;
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.FEATURES = t.GAS_PRICE_TYPE = t.RPC_AUTHENTICATION = void 0),
          ((n =
            t.RPC_AUTHENTICATION || (t.RPC_AUTHENTICATION = {})).API_KEY_PATH =
            "API_KEY_PATH"),
          (n.NO_AUTHENTICATION = "NO_AUTHENTICATION"),
          (n.UNKNOWN = "UNKNOWN"),
          ((r = t.GAS_PRICE_TYPE || (t.GAS_PRICE_TYPE = {})).ORACLE = "ORACLE"),
          (r.FIXED = "FIXED"),
          (r.FIXED_1559 = "FIXED1559"),
          (r.UNKNOWN = "UNKNOWN"),
          ((i = t.FEATURES || (t.FEATURES = {})).ERC721 = "ERC721"),
          (i.SAFE_APPS = "SAFE_APPS"),
          (i.CONTRACT_INTERACTION = "CONTRACT_INTERACTION"),
          (i.DOMAIN_LOOKUP = "DOMAIN_LOOKUP"),
          (i.SPENDING_LIMIT = "SPENDING_LIMIT"),
          (i.EIP1559 = "EIP1559"),
          (i.SAFE_TX_GAS_OPTIONAL = "SAFE_TX_GAS_OPTIONAL"),
          (i.TX_SIMULATION = "TX_SIMULATION"),
          (i.EIP1271 = "EIP1271");
      },
      23075: function (e, t) {
        "use strict";
        var n;
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.TokenType = void 0),
          ((n = t.TokenType || (t.TokenType = {})).ERC20 = "ERC20"),
          (n.ERC721 = "ERC721"),
          (n.NATIVE_TOKEN = "NATIVE_TOKEN");
      },
      83571: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
      },
      80247: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
      },
      50379: function (e, t) {
        "use strict";
        var n;
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.DeviceType = void 0),
          ((n = t.DeviceType || (t.DeviceType = {})).ANDROID = "ANDROID"),
          (n.IOS = "IOS"),
          (n.WEB = "WEB");
      },
      22394: function (e, t) {
        "use strict";
        var n, r;
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.SafeAppSocialPlatforms =
            t.SafeAppFeatures =
            t.SafeAppAccessPolicyTypes =
              void 0),
          ((n =
            t.SafeAppAccessPolicyTypes ||
            (t.SafeAppAccessPolicyTypes = {})).NoRestrictions =
            "NO_RESTRICTIONS"),
          (n.DomainAllowlist = "DOMAIN_ALLOWLIST"),
          ((
            t.SafeAppFeatures || (t.SafeAppFeatures = {})
          ).BATCHED_TRANSACTIONS = "BATCHED_TRANSACTIONS"),
          ((r =
            t.SafeAppSocialPlatforms ||
            (t.SafeAppSocialPlatforms = {})).TWITTER = "TWITTER"),
          (r.GITHUB = "GITHUB"),
          (r.DISCORD = "DISCORD");
      },
      32733: function (e, t) {
        "use strict";
        var n;
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ImplementationVersionState = void 0),
          ((n =
            t.ImplementationVersionState ||
            (t.ImplementationVersionState = {})).UP_TO_DATE = "UP_TO_DATE"),
          (n.OUTDATED = "OUTDATED"),
          (n.UNKNOWN = "UNKNOWN");
      },
      43150: function (e, t) {
        "use strict";
        var n, r;
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.SafeMessageStatus = t.SafeMessageListItemType = void 0),
          ((n =
            t.SafeMessageListItemType ||
            (t.SafeMessageListItemType = {})).DATE_LABEL = "DATE_LABEL"),
          (n.MESSAGE = "MESSAGE"),
          ((r =
            t.SafeMessageStatus ||
            (t.SafeMessageStatus = {})).NEEDS_CONFIRMATION =
            "NEEDS_CONFIRMATION"),
          (r.CONFIRMED = "CONFIRMED");
      },
      17584: function (e, t) {
        "use strict";
        var n, r, i, a, o, s, u, l, c, d;
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.LabelValue =
            t.DetailedExecutionInfoType =
            t.TransactionListItemType =
            t.ConflictType =
            t.TransactionInfoType =
            t.SettingsInfoType =
            t.TransactionTokenType =
            t.TransferDirection =
            t.TransactionStatus =
            t.Operation =
              void 0),
          ((n = t.Operation || (t.Operation = {}))[(n.CALL = 0)] = "CALL"),
          (n[(n.DELEGATE = 1)] = "DELEGATE"),
          ((r =
            t.TransactionStatus ||
            (t.TransactionStatus = {})).AWAITING_CONFIRMATIONS =
            "AWAITING_CONFIRMATIONS"),
          (r.AWAITING_EXECUTION = "AWAITING_EXECUTION"),
          (r.CANCELLED = "CANCELLED"),
          (r.FAILED = "FAILED"),
          (r.SUCCESS = "SUCCESS"),
          ((i = t.TransferDirection || (t.TransferDirection = {})).INCOMING =
            "INCOMING"),
          (i.OUTGOING = "OUTGOING"),
          (i.UNKNOWN = "UNKNOWN"),
          ((a = t.TransactionTokenType || (t.TransactionTokenType = {})).ERC20 =
            "ERC20"),
          (a.ERC721 = "ERC721"),
          (a.NATIVE_COIN = "NATIVE_COIN"),
          ((o =
            t.SettingsInfoType ||
            (t.SettingsInfoType = {})).SET_FALLBACK_HANDLER =
            "SET_FALLBACK_HANDLER"),
          (o.ADD_OWNER = "ADD_OWNER"),
          (o.REMOVE_OWNER = "REMOVE_OWNER"),
          (o.SWAP_OWNER = "SWAP_OWNER"),
          (o.CHANGE_THRESHOLD = "CHANGE_THRESHOLD"),
          (o.CHANGE_IMPLEMENTATION = "CHANGE_IMPLEMENTATION"),
          (o.ENABLE_MODULE = "ENABLE_MODULE"),
          (o.DISABLE_MODULE = "DISABLE_MODULE"),
          (o.SET_GUARD = "SET_GUARD"),
          (o.DELETE_GUARD = "DELETE_GUARD"),
          ((s =
            t.TransactionInfoType || (t.TransactionInfoType = {})).TRANSFER =
            "Transfer"),
          (s.SETTINGS_CHANGE = "SettingsChange"),
          (s.CUSTOM = "Custom"),
          (s.CREATION = "Creation"),
          ((u = t.ConflictType || (t.ConflictType = {})).NONE = "None"),
          (u.HAS_NEXT = "HasNext"),
          (u.END = "End"),
          ((l =
            t.TransactionListItemType ||
            (t.TransactionListItemType = {})).TRANSACTION = "TRANSACTION"),
          (l.LABEL = "LABEL"),
          (l.CONFLICT_HEADER = "CONFLICT_HEADER"),
          (l.DATE_LABEL = "DATE_LABEL"),
          ((c =
            t.DetailedExecutionInfoType ||
            (t.DetailedExecutionInfoType = {})).MULTISIG = "MULTISIG"),
          (c.MODULE = "MODULE"),
          ((d = t.LabelValue || (t.LabelValue = {})).Queued = "Queued"),
          (d.Next = "Next");
      },
      59136: function (e, t) {
        "use strict";
        var n =
          (this && this.__awaiter) ||
          function (e, t, n, r) {
            return new (n || (n = Promise))(function (i, a) {
              function o(e) {
                try {
                  u(r.next(e));
                } catch (e) {
                  a(e);
                }
              }
              function s(e) {
                try {
                  u(r.throw(e));
                } catch (e) {
                  a(e);
                }
              }
              function u(e) {
                var t;
                e.done
                  ? i(e.value)
                  : ((t = e.value) instanceof n
                      ? t
                      : new n(function (e) {
                          e(t);
                        })
                    ).then(o, s);
              }
              u((r = r.apply(e, t || [])).next());
            });
          };
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.deleteData =
            t.fetchData =
            t.stringifyQuery =
            t.insertParams =
              void 0);
        let r = (e) =>
          "object" == typeof e && null !== e && "code" in e && "message" in e;
        function i(e) {
          return n(this, void 0, void 0, function* () {
            let t;
            try {
              t = yield e.json();
            } catch (t) {
              if (e.headers && "0" !== e.headers.get("content-length"))
                throw Error(`Invalid response content: ${e.statusText}`);
            }
            if (!e.ok) {
              let n = r(t) ? `${t.code}: ${t.message}` : e.statusText;
              throw Error(n);
            }
            return t;
          });
        }
        (t.insertParams = function (e, t) {
          return t
            ? Object.keys(t).reduce((e, n) => {
                var r;
                return (
                  (r = String(t[n])), e.replace(RegExp(`\\{${n}\\}`, "g"), r)
                );
              }, e)
            : e;
        }),
          (t.stringifyQuery = function (e) {
            if (!e) return "";
            let t = new URLSearchParams();
            Object.keys(e).forEach((n) => {
              null != e[n] && t.append(n, String(e[n]));
            });
            let n = t.toString();
            return n ? `?${n}` : "";
          }),
          (t.fetchData = function (e, t) {
            return n(this, void 0, void 0, function* () {
              let n;
              null != t &&
                (n = {
                  method: "POST",
                  body: "string" == typeof t ? t : JSON.stringify(t),
                  headers: { "Content-Type": "application/json" },
                });
              let r = yield fetch(e, n);
              return i(r);
            });
          }),
          (t.deleteData = function (e) {
            return n(this, void 0, void 0, function* () {
              let t = yield fetch(e, { method: "DELETE" });
              return i(t);
            });
          });
      },
      98099: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r = n(97117);
        function i(e, t, n) {
          return (
            void 0 === t && (t = new Uint8Array(2)),
            void 0 === n && (n = 0),
            (t[n + 0] = e >>> 8),
            (t[n + 1] = e >>> 0),
            t
          );
        }
        function a(e, t, n) {
          return (
            void 0 === t && (t = new Uint8Array(2)),
            void 0 === n && (n = 0),
            (t[n + 0] = e >>> 0),
            (t[n + 1] = e >>> 8),
            t
          );
        }
        function o(e, t) {
          return (
            void 0 === t && (t = 0),
            (e[t] << 24) | (e[t + 1] << 16) | (e[t + 2] << 8) | e[t + 3]
          );
        }
        function s(e, t) {
          return (
            void 0 === t && (t = 0),
            ((e[t] << 24) | (e[t + 1] << 16) | (e[t + 2] << 8) | e[t + 3]) >>> 0
          );
        }
        function u(e, t) {
          return (
            void 0 === t && (t = 0),
            (e[t + 3] << 24) | (e[t + 2] << 16) | (e[t + 1] << 8) | e[t]
          );
        }
        function l(e, t) {
          return (
            void 0 === t && (t = 0),
            ((e[t + 3] << 24) | (e[t + 2] << 16) | (e[t + 1] << 8) | e[t]) >>> 0
          );
        }
        function c(e, t, n) {
          return (
            void 0 === t && (t = new Uint8Array(4)),
            void 0 === n && (n = 0),
            (t[n + 0] = e >>> 24),
            (t[n + 1] = e >>> 16),
            (t[n + 2] = e >>> 8),
            (t[n + 3] = e >>> 0),
            t
          );
        }
        function d(e, t, n) {
          return (
            void 0 === t && (t = new Uint8Array(4)),
            void 0 === n && (n = 0),
            (t[n + 0] = e >>> 0),
            (t[n + 1] = e >>> 8),
            (t[n + 2] = e >>> 16),
            (t[n + 3] = e >>> 24),
            t
          );
        }
        function f(e, t, n) {
          return (
            void 0 === t && (t = new Uint8Array(8)),
            void 0 === n && (n = 0),
            c((e / 4294967296) >>> 0, t, n),
            c(e >>> 0, t, n + 4),
            t
          );
        }
        function p(e, t, n) {
          return (
            void 0 === t && (t = new Uint8Array(8)),
            void 0 === n && (n = 0),
            d(e >>> 0, t, n),
            d((e / 4294967296) >>> 0, t, n + 4),
            t
          );
        }
        (t.readInt16BE = function (e, t) {
          return (
            void 0 === t && (t = 0), (((e[t + 0] << 8) | e[t + 1]) << 16) >> 16
          );
        }),
          (t.readUint16BE = function (e, t) {
            return void 0 === t && (t = 0), ((e[t + 0] << 8) | e[t + 1]) >>> 0;
          }),
          (t.readInt16LE = function (e, t) {
            return (
              void 0 === t && (t = 0), (((e[t + 1] << 8) | e[t]) << 16) >> 16
            );
          }),
          (t.readUint16LE = function (e, t) {
            return void 0 === t && (t = 0), ((e[t + 1] << 8) | e[t]) >>> 0;
          }),
          (t.writeUint16BE = i),
          (t.writeInt16BE = i),
          (t.writeUint16LE = a),
          (t.writeInt16LE = a),
          (t.readInt32BE = o),
          (t.readUint32BE = s),
          (t.readInt32LE = u),
          (t.readUint32LE = l),
          (t.writeUint32BE = c),
          (t.writeInt32BE = c),
          (t.writeUint32LE = d),
          (t.writeInt32LE = d),
          (t.readInt64BE = function (e, t) {
            void 0 === t && (t = 0);
            var n = o(e, t),
              r = o(e, t + 4);
            return 4294967296 * n + r - (r >> 31) * 4294967296;
          }),
          (t.readUint64BE = function (e, t) {
            return void 0 === t && (t = 0), 4294967296 * s(e, t) + s(e, t + 4);
          }),
          (t.readInt64LE = function (e, t) {
            void 0 === t && (t = 0);
            var n = u(e, t);
            return 4294967296 * u(e, t + 4) + n - (n >> 31) * 4294967296;
          }),
          (t.readUint64LE = function (e, t) {
            void 0 === t && (t = 0);
            var n = l(e, t);
            return 4294967296 * l(e, t + 4) + n;
          }),
          (t.writeUint64BE = f),
          (t.writeInt64BE = f),
          (t.writeUint64LE = p),
          (t.writeInt64LE = p),
          (t.readUintBE = function (e, t, n) {
            if ((void 0 === n && (n = 0), e % 8 != 0))
              throw Error("readUintBE supports only bitLengths divisible by 8");
            if (e / 8 > t.length - n)
              throw Error(
                "readUintBE: array is too short for the given bitLength"
              );
            for (var r = 0, i = 1, a = e / 8 + n - 1; a >= n; a--)
              (r += t[a] * i), (i *= 256);
            return r;
          }),
          (t.readUintLE = function (e, t, n) {
            if ((void 0 === n && (n = 0), e % 8 != 0))
              throw Error("readUintLE supports only bitLengths divisible by 8");
            if (e / 8 > t.length - n)
              throw Error(
                "readUintLE: array is too short for the given bitLength"
              );
            for (var r = 0, i = 1, a = n; a < n + e / 8; a++)
              (r += t[a] * i), (i *= 256);
            return r;
          }),
          (t.writeUintBE = function (e, t, n, i) {
            if (
              (void 0 === n && (n = new Uint8Array(e / 8)),
              void 0 === i && (i = 0),
              e % 8 != 0)
            )
              throw Error(
                "writeUintBE supports only bitLengths divisible by 8"
              );
            if (!r.isSafeInteger(t))
              throw Error("writeUintBE value must be an integer");
            for (var a = 1, o = e / 8 + i - 1; o >= i; o--)
              (n[o] = (t / a) & 255), (a *= 256);
            return n;
          }),
          (t.writeUintLE = function (e, t, n, i) {
            if (
              (void 0 === n && (n = new Uint8Array(e / 8)),
              void 0 === i && (i = 0),
              e % 8 != 0)
            )
              throw Error(
                "writeUintLE supports only bitLengths divisible by 8"
              );
            if (!r.isSafeInteger(t))
              throw Error("writeUintLE value must be an integer");
            for (var a = 1, o = i; o < i + e / 8; o++)
              (n[o] = (t / a) & 255), (a *= 256);
            return n;
          }),
          (t.readFloat32BE = function (e, t) {
            return (
              void 0 === t && (t = 0),
              new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat32(t)
            );
          }),
          (t.readFloat32LE = function (e, t) {
            return (
              void 0 === t && (t = 0),
              new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat32(
                t,
                !0
              )
            );
          }),
          (t.readFloat64BE = function (e, t) {
            return (
              void 0 === t && (t = 0),
              new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat64(t)
            );
          }),
          (t.readFloat64LE = function (e, t) {
            return (
              void 0 === t && (t = 0),
              new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat64(
                t,
                !0
              )
            );
          }),
          (t.writeFloat32BE = function (e, t, n) {
            return (
              void 0 === t && (t = new Uint8Array(4)),
              void 0 === n && (n = 0),
              new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat32(
                n,
                e
              ),
              t
            );
          }),
          (t.writeFloat32LE = function (e, t, n) {
            return (
              void 0 === t && (t = new Uint8Array(4)),
              void 0 === n && (n = 0),
              new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat32(
                n,
                e,
                !0
              ),
              t
            );
          }),
          (t.writeFloat64BE = function (e, t, n) {
            return (
              void 0 === t && (t = new Uint8Array(8)),
              void 0 === n && (n = 0),
              new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat64(
                n,
                e
              ),
              t
            );
          }),
          (t.writeFloat64LE = function (e, t, n) {
            return (
              void 0 === t && (t = new Uint8Array(8)),
              void 0 === n && (n = 0),
              new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat64(
                n,
                e,
                !0
              ),
              t
            );
          });
      },
      25439: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r = n(98099),
          i = n(17309);
        function a(e, t, n, a, o) {
          if ((void 0 === o && (o = 0), 32 !== e.length))
            throw Error("ChaCha: key size must be 32 bytes");
          if (a.length < n.length)
            throw Error("ChaCha: destination is shorter than source");
          if (0 === o) {
            if (8 !== t.length && 12 !== t.length)
              throw Error("ChaCha nonce must be 8 or 12 bytes");
            (u = (s = new Uint8Array(16)).length - t.length), s.set(t, u);
          } else {
            if (16 !== t.length)
              throw Error("ChaCha nonce with counter must be 16 bytes");
            (s = t), (u = o);
          }
          for (var s, u, l = new Uint8Array(64), c = 0; c < n.length; c += 64) {
            !(function (e, t, n) {
              for (
                var i = (n[3] << 24) | (n[2] << 16) | (n[1] << 8) | n[0],
                  a = (n[7] << 24) | (n[6] << 16) | (n[5] << 8) | n[4],
                  o = (n[11] << 24) | (n[10] << 16) | (n[9] << 8) | n[8],
                  s = (n[15] << 24) | (n[14] << 16) | (n[13] << 8) | n[12],
                  u = (n[19] << 24) | (n[18] << 16) | (n[17] << 8) | n[16],
                  l = (n[23] << 24) | (n[22] << 16) | (n[21] << 8) | n[20],
                  c = (n[27] << 24) | (n[26] << 16) | (n[25] << 8) | n[24],
                  d = (n[31] << 24) | (n[30] << 16) | (n[29] << 8) | n[28],
                  f = (t[3] << 24) | (t[2] << 16) | (t[1] << 8) | t[0],
                  p = (t[7] << 24) | (t[6] << 16) | (t[5] << 8) | t[4],
                  h = (t[11] << 24) | (t[10] << 16) | (t[9] << 8) | t[8],
                  m = (t[15] << 24) | (t[14] << 16) | (t[13] << 8) | t[12],
                  y = 1634760805,
                  g = 857760878,
                  b = 2036477234,
                  v = 1797285236,
                  w = i,
                  E = a,
                  x = o,
                  C = s,
                  _ = u,
                  T = l,
                  S = c,
                  P = d,
                  O = f,
                  I = p,
                  A = h,
                  k = m,
                  j = 0;
                j < 20;
                j += 2
              )
                (O ^= y = (y + w) | 0),
                  (w ^= _ = (_ + (O = (O >>> 16) | (O << 16))) | 0),
                  (w = (w >>> 20) | (w << 12)),
                  (I ^= g = (g + E) | 0),
                  (E ^= T = (T + (I = (I >>> 16) | (I << 16))) | 0),
                  (E = (E >>> 20) | (E << 12)),
                  (A ^= b = (b + x) | 0),
                  (x ^= S = (S + (A = (A >>> 16) | (A << 16))) | 0),
                  (x = (x >>> 20) | (x << 12)),
                  (k ^= v = (v + C) | 0),
                  (C ^= P = (P + (k = (k >>> 16) | (k << 16))) | 0),
                  (C = (C >>> 20) | (C << 12)),
                  (A ^= b = (b + x) | 0),
                  (x ^= S = (S + (A = (A >>> 24) | (A << 8))) | 0),
                  (x = (x >>> 25) | (x << 7)),
                  (k ^= v = (v + C) | 0),
                  (C ^= P = (P + (k = (k >>> 24) | (k << 8))) | 0),
                  (C = (C >>> 25) | (C << 7)),
                  (I ^= g = (g + E) | 0),
                  (E ^= T = (T + (I = (I >>> 24) | (I << 8))) | 0),
                  (E = (E >>> 25) | (E << 7)),
                  (O ^= y = (y + w) | 0),
                  (w ^= _ = (_ + (O = (O >>> 24) | (O << 8))) | 0),
                  (w = (w >>> 25) | (w << 7)),
                  (k ^= y = (y + E) | 0),
                  (E ^= S = (S + (k = (k >>> 16) | (k << 16))) | 0),
                  (E = (E >>> 20) | (E << 12)),
                  (O ^= g = (g + x) | 0),
                  (x ^= P = (P + (O = (O >>> 16) | (O << 16))) | 0),
                  (x = (x >>> 20) | (x << 12)),
                  (I ^= b = (b + C) | 0),
                  (C ^= _ = (_ + (I = (I >>> 16) | (I << 16))) | 0),
                  (C = (C >>> 20) | (C << 12)),
                  (A ^= v = (v + w) | 0),
                  (w ^= T = (T + (A = (A >>> 16) | (A << 16))) | 0),
                  (w = (w >>> 20) | (w << 12)),
                  (I ^= b = (b + C) | 0),
                  (C ^= _ = (_ + (I = (I >>> 24) | (I << 8))) | 0),
                  (C = (C >>> 25) | (C << 7)),
                  (A ^= v = (v + w) | 0),
                  (w ^= T = (T + (A = (A >>> 24) | (A << 8))) | 0),
                  (w = (w >>> 25) | (w << 7)),
                  (O ^= g = (g + x) | 0),
                  (x ^= P = (P + (O = (O >>> 24) | (O << 8))) | 0),
                  (x = (x >>> 25) | (x << 7)),
                  (k ^= y = (y + E) | 0),
                  (E ^= S = (S + (k = (k >>> 24) | (k << 8))) | 0),
                  (E = (E >>> 25) | (E << 7));
              r.writeUint32LE((y + 1634760805) | 0, e, 0),
                r.writeUint32LE((g + 857760878) | 0, e, 4),
                r.writeUint32LE((b + 2036477234) | 0, e, 8),
                r.writeUint32LE((v + 1797285236) | 0, e, 12),
                r.writeUint32LE((w + i) | 0, e, 16),
                r.writeUint32LE((E + a) | 0, e, 20),
                r.writeUint32LE((x + o) | 0, e, 24),
                r.writeUint32LE((C + s) | 0, e, 28),
                r.writeUint32LE((_ + u) | 0, e, 32),
                r.writeUint32LE((T + l) | 0, e, 36),
                r.writeUint32LE((S + c) | 0, e, 40),
                r.writeUint32LE((P + d) | 0, e, 44),
                r.writeUint32LE((O + f) | 0, e, 48),
                r.writeUint32LE((I + p) | 0, e, 52),
                r.writeUint32LE((A + h) | 0, e, 56),
                r.writeUint32LE((k + m) | 0, e, 60);
            })(l, s, e);
            for (var d = c; d < c + 64 && d < n.length; d++)
              a[d] = n[d] ^ l[d - c];
            (function (e, t, n) {
              for (var r = 1; n--; )
                (r = (r + (255 & e[t])) | 0), (e[t] = 255 & r), (r >>>= 8), t++;
              if (r > 0) throw Error("ChaCha: counter overflow");
            })(s, 0, u);
          }
          return i.wipe(l), 0 === o && i.wipe(s), a;
        }
        (t.streamXOR = a),
          (t.stream = function (e, t, n, r) {
            return void 0 === r && (r = 0), i.wipe(n), a(e, t, n, n, r);
          });
      },
      15501: function (e, t, n) {
        "use strict";
        var r = n(25439),
          i = n(63027),
          a = n(17309),
          o = n(98099),
          s = n(4153);
        (t.Cv = 32), (t.WH = 12), (t.pg = 16);
        var u = new Uint8Array(16),
          l = (function () {
            function e(e) {
              if (
                ((this.nonceLength = t.WH),
                (this.tagLength = t.pg),
                e.length !== t.Cv)
              )
                throw Error("ChaCha20Poly1305 needs 32-byte key");
              this._key = new Uint8Array(e);
            }
            return (
              (e.prototype.seal = function (e, t, n, i) {
                if (e.length > 16)
                  throw Error("ChaCha20Poly1305: incorrect nonce length");
                var o,
                  s = new Uint8Array(16);
                s.set(e, s.length - e.length);
                var u = new Uint8Array(32);
                r.stream(this._key, s, u, 4);
                var l = t.length + this.tagLength;
                if (i) {
                  if (i.length !== l)
                    throw Error(
                      "ChaCha20Poly1305: incorrect destination length"
                    );
                  o = i;
                } else o = new Uint8Array(l);
                return (
                  r.streamXOR(this._key, s, t, o, 4),
                  this._authenticate(
                    o.subarray(o.length - this.tagLength, o.length),
                    u,
                    o.subarray(0, o.length - this.tagLength),
                    n
                  ),
                  a.wipe(s),
                  o
                );
              }),
              (e.prototype.open = function (e, t, n, i) {
                if (e.length > 16)
                  throw Error("ChaCha20Poly1305: incorrect nonce length");
                if (t.length < this.tagLength) return null;
                var o,
                  u = new Uint8Array(16);
                u.set(e, u.length - e.length);
                var l = new Uint8Array(32);
                r.stream(this._key, u, l, 4);
                var c = new Uint8Array(this.tagLength);
                if (
                  (this._authenticate(
                    c,
                    l,
                    t.subarray(0, t.length - this.tagLength),
                    n
                  ),
                  !s.equal(c, t.subarray(t.length - this.tagLength, t.length)))
                )
                  return null;
                var d = t.length - this.tagLength;
                if (i) {
                  if (i.length !== d)
                    throw Error(
                      "ChaCha20Poly1305: incorrect destination length"
                    );
                  o = i;
                } else o = new Uint8Array(d);
                return (
                  r.streamXOR(
                    this._key,
                    u,
                    t.subarray(0, t.length - this.tagLength),
                    o,
                    4
                  ),
                  a.wipe(u),
                  o
                );
              }),
              (e.prototype.clean = function () {
                return a.wipe(this._key), this;
              }),
              (e.prototype._authenticate = function (e, t, n, r) {
                var s = new i.Poly1305(t);
                r &&
                  (s.update(r),
                  r.length % 16 > 0 && s.update(u.subarray(r.length % 16))),
                  s.update(n),
                  n.length % 16 > 0 && s.update(u.subarray(n.length % 16));
                var l = new Uint8Array(8);
                r && o.writeUint64LE(r.length, l),
                  s.update(l),
                  o.writeUint64LE(n.length, l),
                  s.update(l);
                for (var c = s.digest(), d = 0; d < c.length; d++) e[d] = c[d];
                s.clean(), a.wipe(c), a.wipe(l);
              }),
              e
            );
          })();
        t.OK = l;
      },
      4153: function (e, t) {
        "use strict";
        function n(e, t) {
          if (e.length !== t.length) return 0;
          for (var n = 0, r = 0; r < e.length; r++) n |= e[r] ^ t[r];
          return 1 & ((n - 1) >>> 8);
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.select = function (e, t, n) {
            return (~(e - 1) & t) | ((e - 1) & n);
          }),
          (t.lessOrEqual = function (e, t) {
            return (((0 | e) - (0 | t) - 1) >>> 31) & 1;
          }),
          (t.compare = n),
          (t.equal = function (e, t) {
            return 0 !== e.length && 0 !== t.length && 0 !== n(e, t);
          });
      },
      79984: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.isSerializableHash = function (e) {
            return (
              void 0 !== e.saveState &&
              void 0 !== e.restoreState &&
              void 0 !== e.cleanSavedState
            );
          });
      },
      512: function (e, t, n) {
        "use strict";
        var r = n(25629),
          i = n(17309),
          a = (function () {
            function e(e, t, n, i) {
              void 0 === n && (n = new Uint8Array(0)),
                (this._counter = new Uint8Array(1)),
                (this._hash = e),
                (this._info = i);
              var a = r.hmac(this._hash, n, t);
              (this._hmac = new r.HMAC(e, a)),
                (this._buffer = new Uint8Array(this._hmac.digestLength)),
                (this._bufpos = this._buffer.length);
            }
            return (
              (e.prototype._fillBuffer = function () {
                this._counter[0]++;
                var e = this._counter[0];
                if (0 === e) throw Error("hkdf: cannot expand more");
                this._hmac.reset(),
                  e > 1 && this._hmac.update(this._buffer),
                  this._info && this._hmac.update(this._info),
                  this._hmac.update(this._counter),
                  this._hmac.finish(this._buffer),
                  (this._bufpos = 0);
              }),
              (e.prototype.expand = function (e) {
                for (var t = new Uint8Array(e), n = 0; n < t.length; n++)
                  this._bufpos === this._buffer.length && this._fillBuffer(),
                    (t[n] = this._buffer[this._bufpos++]);
                return t;
              }),
              (e.prototype.clean = function () {
                this._hmac.clean(),
                  i.wipe(this._buffer),
                  i.wipe(this._counter),
                  (this._bufpos = 0);
              }),
              e
            );
          })();
        t.t = a;
      },
      25629: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r = n(79984),
          i = n(4153),
          a = n(17309),
          o = (function () {
            function e(e, t) {
              (this._finished = !1),
                (this._inner = new e()),
                (this._outer = new e()),
                (this.blockSize = this._outer.blockSize),
                (this.digestLength = this._outer.digestLength);
              var n = new Uint8Array(this.blockSize);
              t.length > this.blockSize
                ? this._inner.update(t).finish(n).clean()
                : n.set(t);
              for (var i = 0; i < n.length; i++) n[i] ^= 54;
              this._inner.update(n);
              for (var i = 0; i < n.length; i++) n[i] ^= 106;
              this._outer.update(n),
                r.isSerializableHash(this._inner) &&
                  r.isSerializableHash(this._outer) &&
                  ((this._innerKeyedState = this._inner.saveState()),
                  (this._outerKeyedState = this._outer.saveState())),
                a.wipe(n);
            }
            return (
              (e.prototype.reset = function () {
                if (
                  !r.isSerializableHash(this._inner) ||
                  !r.isSerializableHash(this._outer)
                )
                  throw Error(
                    "hmac: can't reset() because hash doesn't implement restoreState()"
                  );
                return (
                  this._inner.restoreState(this._innerKeyedState),
                  this._outer.restoreState(this._outerKeyedState),
                  (this._finished = !1),
                  this
                );
              }),
              (e.prototype.clean = function () {
                r.isSerializableHash(this._inner) &&
                  this._inner.cleanSavedState(this._innerKeyedState),
                  r.isSerializableHash(this._outer) &&
                    this._outer.cleanSavedState(this._outerKeyedState),
                  this._inner.clean(),
                  this._outer.clean();
              }),
              (e.prototype.update = function (e) {
                return this._inner.update(e), this;
              }),
              (e.prototype.finish = function (e) {
                return (
                  this._finished
                    ? this._outer.finish(e)
                    : (this._inner.finish(e),
                      this._outer
                        .update(e.subarray(0, this.digestLength))
                        .finish(e),
                      (this._finished = !0)),
                  this
                );
              }),
              (e.prototype.digest = function () {
                var e = new Uint8Array(this.digestLength);
                return this.finish(e), e;
              }),
              (e.prototype.saveState = function () {
                if (!r.isSerializableHash(this._inner))
                  throw Error(
                    "hmac: can't saveState() because hash doesn't implement it"
                  );
                return this._inner.saveState();
              }),
              (e.prototype.restoreState = function (e) {
                if (
                  !r.isSerializableHash(this._inner) ||
                  !r.isSerializableHash(this._outer)
                )
                  throw Error(
                    "hmac: can't restoreState() because hash doesn't implement it"
                  );
                return (
                  this._inner.restoreState(e),
                  this._outer.restoreState(this._outerKeyedState),
                  (this._finished = !1),
                  this
                );
              }),
              (e.prototype.cleanSavedState = function (e) {
                if (!r.isSerializableHash(this._inner))
                  throw Error(
                    "hmac: can't cleanSavedState() because hash doesn't implement it"
                  );
                this._inner.cleanSavedState(e);
              }),
              e
            );
          })();
        (t.HMAC = o),
          (t.hmac = function (e, t, n) {
            var r = new o(e, t);
            r.update(n);
            var i = r.digest();
            return r.clean(), i;
          }),
          (t.equal = i.equal);
      },
      97117: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.mul =
            Math.imul ||
            function (e, t) {
              var n = 65535 & e,
                r = 65535 & t;
              return (
                (n * r +
                  (((((e >>> 16) & 65535) * r + n * ((t >>> 16) & 65535)) <<
                    16) >>>
                    0)) |
                0
              );
            }),
          (t.add = function (e, t) {
            return (e + t) | 0;
          }),
          (t.sub = function (e, t) {
            return (e - t) | 0;
          }),
          (t.rotl = function (e, t) {
            return (e << t) | (e >>> (32 - t));
          }),
          (t.rotr = function (e, t) {
            return (e << (32 - t)) | (e >>> t);
          }),
          (t.isInteger =
            Number.isInteger ||
            function (e) {
              return "number" == typeof e && isFinite(e) && Math.floor(e) === e;
            }),
          (t.MAX_SAFE_INTEGER = 9007199254740991),
          (t.isSafeInteger = function (e) {
            return (
              t.isInteger(e) &&
              e >= -t.MAX_SAFE_INTEGER &&
              e <= t.MAX_SAFE_INTEGER
            );
          });
      },
      63027: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var r = n(4153),
          i = n(17309);
        t.DIGEST_LENGTH = 16;
        var a = (function () {
          function e(e) {
            (this.digestLength = t.DIGEST_LENGTH),
              (this._buffer = new Uint8Array(16)),
              (this._r = new Uint16Array(10)),
              (this._h = new Uint16Array(10)),
              (this._pad = new Uint16Array(8)),
              (this._leftover = 0),
              (this._fin = 0),
              (this._finished = !1);
            var n = e[0] | (e[1] << 8);
            this._r[0] = 8191 & n;
            var r = e[2] | (e[3] << 8);
            this._r[1] = ((n >>> 13) | (r << 3)) & 8191;
            var i = e[4] | (e[5] << 8);
            this._r[2] = ((r >>> 10) | (i << 6)) & 7939;
            var a = e[6] | (e[7] << 8);
            this._r[3] = ((i >>> 7) | (a << 9)) & 8191;
            var o = e[8] | (e[9] << 8);
            (this._r[4] = ((a >>> 4) | (o << 12)) & 255),
              (this._r[5] = (o >>> 1) & 8190);
            var s = e[10] | (e[11] << 8);
            this._r[6] = ((o >>> 14) | (s << 2)) & 8191;
            var u = e[12] | (e[13] << 8);
            this._r[7] = ((s >>> 11) | (u << 5)) & 8065;
            var l = e[14] | (e[15] << 8);
            (this._r[8] = ((u >>> 8) | (l << 8)) & 8191),
              (this._r[9] = (l >>> 5) & 127),
              (this._pad[0] = e[16] | (e[17] << 8)),
              (this._pad[1] = e[18] | (e[19] << 8)),
              (this._pad[2] = e[20] | (e[21] << 8)),
              (this._pad[3] = e[22] | (e[23] << 8)),
              (this._pad[4] = e[24] | (e[25] << 8)),
              (this._pad[5] = e[26] | (e[27] << 8)),
              (this._pad[6] = e[28] | (e[29] << 8)),
              (this._pad[7] = e[30] | (e[31] << 8));
          }
          return (
            (e.prototype._blocks = function (e, t, n) {
              for (
                var r = this._fin ? 0 : 2048,
                  i = this._h[0],
                  a = this._h[1],
                  o = this._h[2],
                  s = this._h[3],
                  u = this._h[4],
                  l = this._h[5],
                  c = this._h[6],
                  d = this._h[7],
                  f = this._h[8],
                  p = this._h[9],
                  h = this._r[0],
                  m = this._r[1],
                  y = this._r[2],
                  g = this._r[3],
                  b = this._r[4],
                  v = this._r[5],
                  w = this._r[6],
                  E = this._r[7],
                  x = this._r[8],
                  C = this._r[9];
                n >= 16;

              ) {
                var _,
                  T = e[t + 0] | (e[t + 1] << 8);
                i += 8191 & T;
                var S = e[t + 2] | (e[t + 3] << 8);
                a += ((T >>> 13) | (S << 3)) & 8191;
                var P = e[t + 4] | (e[t + 5] << 8);
                o += ((S >>> 10) | (P << 6)) & 8191;
                var O = e[t + 6] | (e[t + 7] << 8);
                s += ((P >>> 7) | (O << 9)) & 8191;
                var I = e[t + 8] | (e[t + 9] << 8);
                (u += ((O >>> 4) | (I << 12)) & 8191), (l += (I >>> 1) & 8191);
                var A = e[t + 10] | (e[t + 11] << 8);
                c += ((I >>> 14) | (A << 2)) & 8191;
                var k = e[t + 12] | (e[t + 13] << 8);
                d += ((A >>> 11) | (k << 5)) & 8191;
                var j = e[t + 14] | (e[t + 15] << 8);
                (f += ((k >>> 8) | (j << 8)) & 8191), (p += (j >>> 5) | r);
                var B = 0;
                (B =
                  (_ =
                    0 +
                    i * h +
                    a * (5 * C) +
                    o * (5 * x) +
                    s * (5 * E) +
                    u * (5 * w)) >>> 13),
                  (_ &= 8191),
                  (_ +=
                    l * (5 * v) +
                    c * (5 * b) +
                    d * (5 * g) +
                    f * (5 * y) +
                    p * (5 * m)),
                  (B += _ >>> 13),
                  (_ &= 8191);
                var M = B;
                (M += i * m + a * h + o * (5 * C) + s * (5 * x) + u * (5 * E)),
                  (B = M >>> 13),
                  (M &= 8191),
                  (M +=
                    l * (5 * w) +
                    c * (5 * v) +
                    d * (5 * b) +
                    f * (5 * g) +
                    p * (5 * y)),
                  (B += M >>> 13),
                  (M &= 8191);
                var N = B;
                (N += i * y + a * m + o * h + s * (5 * C) + u * (5 * x)),
                  (B = N >>> 13),
                  (N &= 8191),
                  (N +=
                    l * (5 * E) +
                    c * (5 * w) +
                    d * (5 * v) +
                    f * (5 * b) +
                    p * (5 * g)),
                  (B += N >>> 13),
                  (N &= 8191);
                var D = B;
                (D += i * g + a * y + o * m + s * h + u * (5 * C)),
                  (B = D >>> 13),
                  (D &= 8191),
                  (D +=
                    l * (5 * x) +
                    c * (5 * E) +
                    d * (5 * w) +
                    f * (5 * v) +
                    p * (5 * b)),
                  (B += D >>> 13),
                  (D &= 8191);
                var R = B;
                (R += i * b + a * g + o * y + s * m + u * h),
                  (B = R >>> 13),
                  (R &= 8191),
                  (R +=
                    l * (5 * C) +
                    c * (5 * x) +
                    d * (5 * E) +
                    f * (5 * w) +
                    p * (5 * v)),
                  (B += R >>> 13),
                  (R &= 8191);
                var F = B;
                (F += i * v + a * b + o * g + s * y + u * m),
                  (B = F >>> 13),
                  (F &= 8191),
                  (F +=
                    l * h +
                    c * (5 * C) +
                    d * (5 * x) +
                    f * (5 * E) +
                    p * (5 * w)),
                  (B += F >>> 13),
                  (F &= 8191);
                var L = B;
                (L += i * w + a * v + o * b + s * g + u * y),
                  (B = L >>> 13),
                  (L &= 8191),
                  (L +=
                    l * m + c * h + d * (5 * C) + f * (5 * x) + p * (5 * E)),
                  (B += L >>> 13),
                  (L &= 8191);
                var U = B;
                (U += i * E + a * w + o * v + s * b + u * g),
                  (B = U >>> 13),
                  (U &= 8191),
                  (U += l * y + c * m + d * h + f * (5 * C) + p * (5 * x)),
                  (B += U >>> 13),
                  (U &= 8191);
                var $ = B;
                ($ += i * x + a * E + o * w + s * v + u * b),
                  (B = $ >>> 13),
                  ($ &= 8191),
                  ($ += l * g + c * y + d * m + f * h + p * (5 * C)),
                  (B += $ >>> 13),
                  ($ &= 8191);
                var q = B;
                (q += i * C + a * x + o * E + s * w + u * v),
                  (B = q >>> 13),
                  (q &= 8191),
                  (q += l * b + c * g + d * y + f * m + p * h),
                  (B += q >>> 13),
                  (q &= 8191),
                  (_ = 8191 & (B = ((B = ((B << 2) + B) | 0) + _) | 0)),
                  (B >>>= 13),
                  (M += B),
                  (i = _),
                  (a = M),
                  (o = N),
                  (s = D),
                  (u = R),
                  (l = F),
                  (c = L),
                  (d = U),
                  (f = $),
                  (p = q),
                  (t += 16),
                  (n -= 16);
              }
              (this._h[0] = i),
                (this._h[1] = a),
                (this._h[2] = o),
                (this._h[3] = s),
                (this._h[4] = u),
                (this._h[5] = l),
                (this._h[6] = c),
                (this._h[7] = d),
                (this._h[8] = f),
                (this._h[9] = p);
            }),
            (e.prototype.finish = function (e, t) {
              void 0 === t && (t = 0);
              var n,
                r,
                i,
                a,
                o = new Uint16Array(10);
              if (this._leftover) {
                for (a = this._leftover, this._buffer[a++] = 1; a < 16; a++)
                  this._buffer[a] = 0;
                (this._fin = 1), this._blocks(this._buffer, 0, 16);
              }
              for (
                n = this._h[1] >>> 13, this._h[1] &= 8191, a = 2;
                a < 10;
                a++
              )
                (this._h[a] += n),
                  (n = this._h[a] >>> 13),
                  (this._h[a] &= 8191);
              for (
                this._h[0] += 5 * n,
                  n = this._h[0] >>> 13,
                  this._h[0] &= 8191,
                  this._h[1] += n,
                  n = this._h[1] >>> 13,
                  this._h[1] &= 8191,
                  this._h[2] += n,
                  o[0] = this._h[0] + 5,
                  n = o[0] >>> 13,
                  o[0] &= 8191,
                  a = 1;
                a < 10;
                a++
              )
                (o[a] = this._h[a] + n), (n = o[a] >>> 13), (o[a] &= 8191);
              for (o[9] -= 8192, r = (1 ^ n) - 1, a = 0; a < 10; a++) o[a] &= r;
              for (a = 0, r = ~r; a < 10; a++)
                this._h[a] = (this._h[a] & r) | o[a];
              for (
                a = 1,
                  this._h[0] = (this._h[0] | (this._h[1] << 13)) & 65535,
                  this._h[1] =
                    ((this._h[1] >>> 3) | (this._h[2] << 10)) & 65535,
                  this._h[2] = ((this._h[2] >>> 6) | (this._h[3] << 7)) & 65535,
                  this._h[3] = ((this._h[3] >>> 9) | (this._h[4] << 4)) & 65535,
                  this._h[4] =
                    ((this._h[4] >>> 12) |
                      (this._h[5] << 1) |
                      (this._h[6] << 14)) &
                    65535,
                  this._h[5] =
                    ((this._h[6] >>> 2) | (this._h[7] << 11)) & 65535,
                  this._h[6] = ((this._h[7] >>> 5) | (this._h[8] << 8)) & 65535,
                  this._h[7] = ((this._h[8] >>> 8) | (this._h[9] << 5)) & 65535,
                  i = this._h[0] + this._pad[0],
                  this._h[0] = 65535 & i;
                a < 8;
                a++
              )
                (i = (((this._h[a] + this._pad[a]) | 0) + (i >>> 16)) | 0),
                  (this._h[a] = 65535 & i);
              return (
                (e[t + 0] = this._h[0] >>> 0),
                (e[t + 1] = this._h[0] >>> 8),
                (e[t + 2] = this._h[1] >>> 0),
                (e[t + 3] = this._h[1] >>> 8),
                (e[t + 4] = this._h[2] >>> 0),
                (e[t + 5] = this._h[2] >>> 8),
                (e[t + 6] = this._h[3] >>> 0),
                (e[t + 7] = this._h[3] >>> 8),
                (e[t + 8] = this._h[4] >>> 0),
                (e[t + 9] = this._h[4] >>> 8),
                (e[t + 10] = this._h[5] >>> 0),
                (e[t + 11] = this._h[5] >>> 8),
                (e[t + 12] = this._h[6] >>> 0),
                (e[t + 13] = this._h[6] >>> 8),
                (e[t + 14] = this._h[7] >>> 0),
                (e[t + 15] = this._h[7] >>> 8),
                (this._finished = !0),
                this
              );
            }),
            (e.prototype.update = function (e) {
              var t,
                n = 0,
                r = e.length;
              if (this._leftover) {
                (t = 16 - this._leftover) > r && (t = r);
                for (var i = 0; i < t; i++)
                  this._buffer[this._leftover + i] = e[n + i];
                if (
                  ((r -= t),
                  (n += t),
                  (this._leftover += t),
                  this._leftover < 16)
                )
                  return this;
                this._blocks(this._buffer, 0, 16), (this._leftover = 0);
              }
              if (
                (r >= 16 &&
                  ((t = r - (r % 16)),
                  this._blocks(e, n, t),
                  (n += t),
                  (r -= t)),
                r)
              ) {
                for (var i = 0; i < r; i++)
                  this._buffer[this._leftover + i] = e[n + i];
                this._leftover += r;
              }
              return this;
            }),
            (e.prototype.digest = function () {
              if (this._finished) throw Error("Poly1305 was finished");
              var e = new Uint8Array(16);
              return this.finish(e), e;
            }),
            (e.prototype.clean = function () {
              return (
                i.wipe(this._buffer),
                i.wipe(this._r),
                i.wipe(this._h),
                i.wipe(this._pad),
                (this._leftover = 0),
                (this._fin = 0),
                (this._finished = !0),
                this
              );
            }),
            e
          );
        })();
        (t.Poly1305 = a),
          (t.oneTimeAuth = function (e, t) {
            var n = new a(e);
            n.update(t);
            var r = n.digest();
            return n.clean(), r;
          }),
          (t.equal = function (e, n) {
            return (
              e.length === t.DIGEST_LENGTH &&
              n.length === t.DIGEST_LENGTH &&
              r.equal(e, n)
            );
          });
      },
      31416: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.randomStringForEntropy =
            t.randomString =
            t.randomUint32 =
            t.randomBytes =
            t.defaultRandomSource =
              void 0);
        let r = n(46008),
          i = n(98099),
          a = n(17309);
        function o(e, n = t.defaultRandomSource) {
          return n.randomBytes(e);
        }
        (t.defaultRandomSource = new r.SystemRandomSource()),
          (t.randomBytes = o),
          (t.randomUint32 = function (e = t.defaultRandomSource) {
            let n = o(4, e),
              r = (0, i.readUint32LE)(n);
            return (0, a.wipe)(n), r;
          });
        let s =
          "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
        function u(e, n = s, r = t.defaultRandomSource) {
          if (n.length < 2) throw Error("randomString charset is too short");
          if (n.length > 256) throw Error("randomString charset is too long");
          let i = "",
            u = n.length,
            l = 256 - (256 % u);
          for (; e > 0; ) {
            let t = o(Math.ceil((256 * e) / l), r);
            for (let r = 0; r < t.length && e > 0; r++) {
              let a = t[r];
              a < l && ((i += n.charAt(a % u)), e--);
            }
            (0, a.wipe)(t);
          }
          return i;
        }
        (t.randomString = u),
          (t.randomStringForEntropy = function (
            e,
            n = s,
            r = t.defaultRandomSource
          ) {
            let i = Math.ceil(e / (Math.log(n.length) / Math.LN2));
            return u(i, n, r);
          });
      },
      75455: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.BrowserRandomSource = void 0),
          (t.BrowserRandomSource = class {
            constructor() {
              (this.isAvailable = !1), (this.isInstantiated = !1);
              let e =
                "undefined" != typeof self
                  ? self.crypto || self.msCrypto
                  : null;
              e &&
                void 0 !== e.getRandomValues &&
                ((this._crypto = e),
                (this.isAvailable = !0),
                (this.isInstantiated = !0));
            }
            randomBytes(e) {
              if (!this.isAvailable || !this._crypto)
                throw Error("Browser random byte generator is not available.");
              let t = new Uint8Array(e);
              for (let e = 0; e < t.length; e += 65536)
                this._crypto.getRandomValues(
                  t.subarray(e, e + Math.min(t.length - e, 65536))
                );
              return t;
            }
          });
      },
      58871: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.NodeRandomSource = void 0);
        let r = n(17309);
        t.NodeRandomSource = class {
          constructor() {
            (this.isAvailable = !1), (this.isInstantiated = !1);
            {
              let e = n(35883);
              e &&
                e.randomBytes &&
                ((this._crypto = e),
                (this.isAvailable = !0),
                (this.isInstantiated = !0));
            }
          }
          randomBytes(e) {
            if (!this.isAvailable || !this._crypto)
              throw Error("Node.js random byte generator is not available.");
            let t = this._crypto.randomBytes(e);
            if (t.length !== e)
              throw Error("NodeRandomSource: got fewer bytes than requested");
            let n = new Uint8Array(e);
            for (let e = 0; e < n.length; e++) n[e] = t[e];
            return (0, r.wipe)(t), n;
          }
        };
      },
      46008: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.SystemRandomSource = void 0);
        let r = n(75455),
          i = n(58871);
        t.SystemRandomSource = class {
          constructor() {
            if (
              ((this.isAvailable = !1),
              (this.name = ""),
              (this._source = new r.BrowserRandomSource()),
              this._source.isAvailable)
            ) {
              (this.isAvailable = !0), (this.name = "Browser");
              return;
            }
            if (
              ((this._source = new i.NodeRandomSource()),
              this._source.isAvailable)
            ) {
              (this.isAvailable = !0), (this.name = "Node");
              return;
            }
          }
          randomBytes(e) {
            if (!this.isAvailable)
              throw Error("System random byte generator is not available.");
            return this._source.randomBytes(e);
          }
        };
      },
      73294: function (e, t, n) {
        "use strict";
        var r = n(98099),
          i = n(17309);
        (t.k = 32), (t.cn = 64);
        var a = (function () {
          function e() {
            (this.digestLength = t.k),
              (this.blockSize = t.cn),
              (this._state = new Int32Array(8)),
              (this._temp = new Int32Array(64)),
              (this._buffer = new Uint8Array(128)),
              (this._bufferLength = 0),
              (this._bytesHashed = 0),
              (this._finished = !1),
              this.reset();
          }
          return (
            (e.prototype._initState = function () {
              (this._state[0] = 1779033703),
                (this._state[1] = 3144134277),
                (this._state[2] = 1013904242),
                (this._state[3] = 2773480762),
                (this._state[4] = 1359893119),
                (this._state[5] = 2600822924),
                (this._state[6] = 528734635),
                (this._state[7] = 1541459225);
            }),
            (e.prototype.reset = function () {
              return (
                this._initState(),
                (this._bufferLength = 0),
                (this._bytesHashed = 0),
                (this._finished = !1),
                this
              );
            }),
            (e.prototype.clean = function () {
              i.wipe(this._buffer), i.wipe(this._temp), this.reset();
            }),
            (e.prototype.update = function (e, t) {
              if ((void 0 === t && (t = e.length), this._finished))
                throw Error("SHA256: can't update because hash was finished.");
              var n = 0;
              if (((this._bytesHashed += t), this._bufferLength > 0)) {
                for (; this._bufferLength < this.blockSize && t > 0; )
                  (this._buffer[this._bufferLength++] = e[n++]), t--;
                this._bufferLength === this.blockSize &&
                  (s(this._temp, this._state, this._buffer, 0, this.blockSize),
                  (this._bufferLength = 0));
              }
              for (
                t >= this.blockSize &&
                ((n = s(this._temp, this._state, e, n, t)),
                (t %= this.blockSize));
                t > 0;

              )
                (this._buffer[this._bufferLength++] = e[n++]), t--;
              return this;
            }),
            (e.prototype.finish = function (e) {
              if (!this._finished) {
                var t = this._bytesHashed,
                  n = this._bufferLength,
                  i = t % 64 < 56 ? 64 : 128;
                this._buffer[n] = 128;
                for (var a = n + 1; a < i - 8; a++) this._buffer[a] = 0;
                r.writeUint32BE((t / 536870912) | 0, this._buffer, i - 8),
                  r.writeUint32BE(t << 3, this._buffer, i - 4),
                  s(this._temp, this._state, this._buffer, 0, i),
                  (this._finished = !0);
              }
              for (var a = 0; a < this.digestLength / 4; a++)
                r.writeUint32BE(this._state[a], e, 4 * a);
              return this;
            }),
            (e.prototype.digest = function () {
              var e = new Uint8Array(this.digestLength);
              return this.finish(e), e;
            }),
            (e.prototype.saveState = function () {
              if (this._finished)
                throw Error("SHA256: cannot save finished state");
              return {
                state: new Int32Array(this._state),
                buffer:
                  this._bufferLength > 0
                    ? new Uint8Array(this._buffer)
                    : void 0,
                bufferLength: this._bufferLength,
                bytesHashed: this._bytesHashed,
              };
            }),
            (e.prototype.restoreState = function (e) {
              return (
                this._state.set(e.state),
                (this._bufferLength = e.bufferLength),
                e.buffer && this._buffer.set(e.buffer),
                (this._bytesHashed = e.bytesHashed),
                (this._finished = !1),
                this
              );
            }),
            (e.prototype.cleanSavedState = function (e) {
              i.wipe(e.state),
                e.buffer && i.wipe(e.buffer),
                (e.bufferLength = 0),
                (e.bytesHashed = 0);
            }),
            e
          );
        })();
        t.mE = a;
        var o = new Int32Array([
          1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993,
          2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987,
          1925078388, 2162078206, 2614888103, 3248222580, 3835390401,
          4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692,
          1996064986, 2554220882, 2821834349, 2952996808, 3210313671,
          3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912,
          1294757372, 1396182291, 1695183700, 1986661051, 2177026350,
          2456956037, 2730485921, 2820302411, 3259730800, 3345764771,
          3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616,
          659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779,
          1955562222, 2024104815, 2227730452, 2361852424, 2428436474,
          2756734187, 3204031479, 3329325298,
        ]);
        function s(e, t, n, i, a) {
          for (; a >= 64; ) {
            for (
              var s = t[0],
                u = t[1],
                l = t[2],
                c = t[3],
                d = t[4],
                f = t[5],
                p = t[6],
                h = t[7],
                m = 0;
              m < 16;
              m++
            ) {
              var y = i + 4 * m;
              e[m] = r.readUint32BE(n, y);
            }
            for (var m = 16; m < 64; m++) {
              var g = e[m - 2],
                b =
                  ((g >>> 17) | (g << 15)) ^
                  ((g >>> 19) | (g << 13)) ^
                  (g >>> 10),
                v =
                  (((g = e[m - 15]) >>> 7) | (g << 25)) ^
                  ((g >>> 18) | (g << 14)) ^
                  (g >>> 3);
              e[m] = ((b + e[m - 7]) | 0) + ((v + e[m - 16]) | 0);
            }
            for (var m = 0; m < 64; m++) {
              var b =
                  ((((((d >>> 6) | (d << 26)) ^
                    ((d >>> 11) | (d << 21)) ^
                    ((d >>> 25) | (d << 7))) +
                    ((d & f) ^ (~d & p))) |
                    0) +
                    ((h + ((o[m] + e[m]) | 0)) | 0)) |
                  0,
                v =
                  ((((s >>> 2) | (s << 30)) ^
                    ((s >>> 13) | (s << 19)) ^
                    ((s >>> 22) | (s << 10))) +
                    ((s & u) ^ (s & l) ^ (u & l))) |
                  0;
              (h = p),
                (p = f),
                (f = d),
                (d = (c + b) | 0),
                (c = l),
                (l = u),
                (u = s),
                (s = (b + v) | 0);
            }
            (t[0] += s),
              (t[1] += u),
              (t[2] += l),
              (t[3] += c),
              (t[4] += d),
              (t[5] += f),
              (t[6] += p),
              (t[7] += h),
              (i += 64),
              (a -= 64);
          }
          return i;
        }
        t.vp = function (e) {
          var t = new a();
          t.update(e);
          var n = t.digest();
          return t.clean(), n;
        };
      },
      17309: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.wipe = function (e) {
            for (var t = 0; t < e.length; t++) e[t] = 0;
            return e;
          });
      },
      57664: function (e, t, n) {
        "use strict";
        t.gi = t.Au = t.KS = t.kz = void 0;
        let r = n(31416),
          i = n(17309);
        function a(e) {
          let t = new Float64Array(16);
          if (e) for (let n = 0; n < e.length; n++) t[n] = e[n];
          return t;
        }
        (t.kz = 32), (t.KS = 32);
        let o = new Uint8Array(32);
        o[0] = 9;
        let s = a([56129, 1]);
        function u(e) {
          let t = 1;
          for (let n = 0; n < 16; n++) {
            let r = e[n] + t + 65535;
            (t = Math.floor(r / 65536)), (e[n] = r - 65536 * t);
          }
          e[0] += t - 1 + 37 * (t - 1);
        }
        function l(e, t, n) {
          let r = ~(n - 1);
          for (let n = 0; n < 16; n++) {
            let i = r & (e[n] ^ t[n]);
            (e[n] ^= i), (t[n] ^= i);
          }
        }
        function c(e, t, n) {
          for (let r = 0; r < 16; r++) e[r] = t[r] + n[r];
        }
        function d(e, t, n) {
          for (let r = 0; r < 16; r++) e[r] = t[r] - n[r];
        }
        function f(e, t, n) {
          let r,
            i,
            a = 0,
            o = 0,
            s = 0,
            u = 0,
            l = 0,
            c = 0,
            d = 0,
            f = 0,
            p = 0,
            h = 0,
            m = 0,
            y = 0,
            g = 0,
            b = 0,
            v = 0,
            w = 0,
            E = 0,
            x = 0,
            C = 0,
            _ = 0,
            T = 0,
            S = 0,
            P = 0,
            O = 0,
            I = 0,
            A = 0,
            k = 0,
            j = 0,
            B = 0,
            M = 0,
            N = 0,
            D = n[0],
            R = n[1],
            F = n[2],
            L = n[3],
            U = n[4],
            $ = n[5],
            q = n[6],
            H = n[7],
            z = n[8],
            G = n[9],
            W = n[10],
            V = n[11],
            K = n[12],
            Z = n[13],
            J = n[14],
            Y = n[15];
          (a += (r = t[0]) * D),
            (o += r * R),
            (s += r * F),
            (u += r * L),
            (l += r * U),
            (c += r * $),
            (d += r * q),
            (f += r * H),
            (p += r * z),
            (h += r * G),
            (m += r * W),
            (y += r * V),
            (g += r * K),
            (b += r * Z),
            (v += r * J),
            (w += r * Y),
            (o += (r = t[1]) * D),
            (s += r * R),
            (u += r * F),
            (l += r * L),
            (c += r * U),
            (d += r * $),
            (f += r * q),
            (p += r * H),
            (h += r * z),
            (m += r * G),
            (y += r * W),
            (g += r * V),
            (b += r * K),
            (v += r * Z),
            (w += r * J),
            (E += r * Y),
            (s += (r = t[2]) * D),
            (u += r * R),
            (l += r * F),
            (c += r * L),
            (d += r * U),
            (f += r * $),
            (p += r * q),
            (h += r * H),
            (m += r * z),
            (y += r * G),
            (g += r * W),
            (b += r * V),
            (v += r * K),
            (w += r * Z),
            (E += r * J),
            (x += r * Y),
            (u += (r = t[3]) * D),
            (l += r * R),
            (c += r * F),
            (d += r * L),
            (f += r * U),
            (p += r * $),
            (h += r * q),
            (m += r * H),
            (y += r * z),
            (g += r * G),
            (b += r * W),
            (v += r * V),
            (w += r * K),
            (E += r * Z),
            (x += r * J),
            (C += r * Y),
            (l += (r = t[4]) * D),
            (c += r * R),
            (d += r * F),
            (f += r * L),
            (p += r * U),
            (h += r * $),
            (m += r * q),
            (y += r * H),
            (g += r * z),
            (b += r * G),
            (v += r * W),
            (w += r * V),
            (E += r * K),
            (x += r * Z),
            (C += r * J),
            (_ += r * Y),
            (c += (r = t[5]) * D),
            (d += r * R),
            (f += r * F),
            (p += r * L),
            (h += r * U),
            (m += r * $),
            (y += r * q),
            (g += r * H),
            (b += r * z),
            (v += r * G),
            (w += r * W),
            (E += r * V),
            (x += r * K),
            (C += r * Z),
            (_ += r * J),
            (T += r * Y),
            (d += (r = t[6]) * D),
            (f += r * R),
            (p += r * F),
            (h += r * L),
            (m += r * U),
            (y += r * $),
            (g += r * q),
            (b += r * H),
            (v += r * z),
            (w += r * G),
            (E += r * W),
            (x += r * V),
            (C += r * K),
            (_ += r * Z),
            (T += r * J),
            (S += r * Y),
            (f += (r = t[7]) * D),
            (p += r * R),
            (h += r * F),
            (m += r * L),
            (y += r * U),
            (g += r * $),
            (b += r * q),
            (v += r * H),
            (w += r * z),
            (E += r * G),
            (x += r * W),
            (C += r * V),
            (_ += r * K),
            (T += r * Z),
            (S += r * J),
            (P += r * Y),
            (p += (r = t[8]) * D),
            (h += r * R),
            (m += r * F),
            (y += r * L),
            (g += r * U),
            (b += r * $),
            (v += r * q),
            (w += r * H),
            (E += r * z),
            (x += r * G),
            (C += r * W),
            (_ += r * V),
            (T += r * K),
            (S += r * Z),
            (P += r * J),
            (O += r * Y),
            (h += (r = t[9]) * D),
            (m += r * R),
            (y += r * F),
            (g += r * L),
            (b += r * U),
            (v += r * $),
            (w += r * q),
            (E += r * H),
            (x += r * z),
            (C += r * G),
            (_ += r * W),
            (T += r * V),
            (S += r * K),
            (P += r * Z),
            (O += r * J),
            (I += r * Y),
            (m += (r = t[10]) * D),
            (y += r * R),
            (g += r * F),
            (b += r * L),
            (v += r * U),
            (w += r * $),
            (E += r * q),
            (x += r * H),
            (C += r * z),
            (_ += r * G),
            (T += r * W),
            (S += r * V),
            (P += r * K),
            (O += r * Z),
            (I += r * J),
            (A += r * Y),
            (y += (r = t[11]) * D),
            (g += r * R),
            (b += r * F),
            (v += r * L),
            (w += r * U),
            (E += r * $),
            (x += r * q),
            (C += r * H),
            (_ += r * z),
            (T += r * G),
            (S += r * W),
            (P += r * V),
            (O += r * K),
            (I += r * Z),
            (A += r * J),
            (k += r * Y),
            (g += (r = t[12]) * D),
            (b += r * R),
            (v += r * F),
            (w += r * L),
            (E += r * U),
            (x += r * $),
            (C += r * q),
            (_ += r * H),
            (T += r * z),
            (S += r * G),
            (P += r * W),
            (O += r * V),
            (I += r * K),
            (A += r * Z),
            (k += r * J),
            (j += r * Y),
            (b += (r = t[13]) * D),
            (v += r * R),
            (w += r * F),
            (E += r * L),
            (x += r * U),
            (C += r * $),
            (_ += r * q),
            (T += r * H),
            (S += r * z),
            (P += r * G),
            (O += r * W),
            (I += r * V),
            (A += r * K),
            (k += r * Z),
            (j += r * J),
            (B += r * Y),
            (v += (r = t[14]) * D),
            (w += r * R),
            (E += r * F),
            (x += r * L),
            (C += r * U),
            (_ += r * $),
            (T += r * q),
            (S += r * H),
            (P += r * z),
            (O += r * G),
            (I += r * W),
            (A += r * V),
            (k += r * K),
            (j += r * Z),
            (B += r * J),
            (M += r * Y),
            (w += (r = t[15]) * D),
            (E += r * R),
            (x += r * F),
            (C += r * L),
            (_ += r * U),
            (T += r * $),
            (S += r * q),
            (P += r * H),
            (O += r * z),
            (I += r * G),
            (A += r * W),
            (k += r * V),
            (j += r * K),
            (B += r * Z),
            (M += r * J),
            (N += r * Y),
            (a += 38 * E),
            (o += 38 * x),
            (s += 38 * C),
            (u += 38 * _),
            (l += 38 * T),
            (c += 38 * S),
            (d += 38 * P),
            (f += 38 * O),
            (p += 38 * I),
            (h += 38 * A),
            (m += 38 * k),
            (y += 38 * j),
            (g += 38 * B),
            (b += 38 * M),
            (v += 38 * N),
            (i = Math.floor((r = a + (i = 1) + 65535) / 65536)),
            (a = r - 65536 * i),
            (i = Math.floor((r = o + i + 65535) / 65536)),
            (o = r - 65536 * i),
            (i = Math.floor((r = s + i + 65535) / 65536)),
            (s = r - 65536 * i),
            (i = Math.floor((r = u + i + 65535) / 65536)),
            (u = r - 65536 * i),
            (i = Math.floor((r = l + i + 65535) / 65536)),
            (l = r - 65536 * i),
            (i = Math.floor((r = c + i + 65535) / 65536)),
            (c = r - 65536 * i),
            (i = Math.floor((r = d + i + 65535) / 65536)),
            (d = r - 65536 * i),
            (i = Math.floor((r = f + i + 65535) / 65536)),
            (f = r - 65536 * i),
            (i = Math.floor((r = p + i + 65535) / 65536)),
            (p = r - 65536 * i),
            (i = Math.floor((r = h + i + 65535) / 65536)),
            (h = r - 65536 * i),
            (i = Math.floor((r = m + i + 65535) / 65536)),
            (m = r - 65536 * i),
            (i = Math.floor((r = y + i + 65535) / 65536)),
            (y = r - 65536 * i),
            (i = Math.floor((r = g + i + 65535) / 65536)),
            (g = r - 65536 * i),
            (i = Math.floor((r = b + i + 65535) / 65536)),
            (b = r - 65536 * i),
            (i = Math.floor((r = v + i + 65535) / 65536)),
            (v = r - 65536 * i),
            (i = Math.floor((r = w + i + 65535) / 65536)),
            (w = r - 65536 * i),
            (a += i - 1 + 37 * (i - 1)),
            (i = Math.floor((r = a + (i = 1) + 65535) / 65536)),
            (a = r - 65536 * i),
            (i = Math.floor((r = o + i + 65535) / 65536)),
            (o = r - 65536 * i),
            (i = Math.floor((r = s + i + 65535) / 65536)),
            (s = r - 65536 * i),
            (i = Math.floor((r = u + i + 65535) / 65536)),
            (u = r - 65536 * i),
            (i = Math.floor((r = l + i + 65535) / 65536)),
            (l = r - 65536 * i),
            (i = Math.floor((r = c + i + 65535) / 65536)),
            (c = r - 65536 * i),
            (i = Math.floor((r = d + i + 65535) / 65536)),
            (d = r - 65536 * i),
            (i = Math.floor((r = f + i + 65535) / 65536)),
            (f = r - 65536 * i),
            (i = Math.floor((r = p + i + 65535) / 65536)),
            (p = r - 65536 * i),
            (i = Math.floor((r = h + i + 65535) / 65536)),
            (h = r - 65536 * i),
            (i = Math.floor((r = m + i + 65535) / 65536)),
            (m = r - 65536 * i),
            (i = Math.floor((r = y + i + 65535) / 65536)),
            (y = r - 65536 * i),
            (i = Math.floor((r = g + i + 65535) / 65536)),
            (g = r - 65536 * i),
            (i = Math.floor((r = b + i + 65535) / 65536)),
            (b = r - 65536 * i),
            (i = Math.floor((r = v + i + 65535) / 65536)),
            (v = r - 65536 * i),
            (i = Math.floor((r = w + i + 65535) / 65536)),
            (w = r - 65536 * i),
            (a += i - 1 + 37 * (i - 1)),
            (e[0] = a),
            (e[1] = o),
            (e[2] = s),
            (e[3] = u),
            (e[4] = l),
            (e[5] = c),
            (e[6] = d),
            (e[7] = f),
            (e[8] = p),
            (e[9] = h),
            (e[10] = m),
            (e[11] = y),
            (e[12] = g),
            (e[13] = b),
            (e[14] = v),
            (e[15] = w);
        }
        function p(e, t) {
          let n = new Uint8Array(32),
            r = new Float64Array(80),
            i = a(),
            o = a(),
            p = a(),
            h = a(),
            m = a(),
            y = a();
          for (let t = 0; t < 31; t++) n[t] = e[t];
          (n[31] = (127 & e[31]) | 64),
            (n[0] &= 248),
            (function (e, t) {
              for (let n = 0; n < 16; n++)
                e[n] = t[2 * n] + (t[2 * n + 1] << 8);
              e[15] &= 32767;
            })(r, t);
          for (let e = 0; e < 16; e++) o[e] = r[e];
          i[0] = h[0] = 1;
          for (let e = 254; e >= 0; --e) {
            let t = (n[e >>> 3] >>> (7 & e)) & 1;
            l(i, o, t),
              l(p, h, t),
              c(m, i, p),
              d(i, i, p),
              c(p, o, h),
              d(o, o, h),
              f(h, m, m),
              f(y, i, i),
              f(i, p, i),
              f(p, o, m),
              c(m, i, p),
              d(i, i, p),
              f(o, i, i),
              d(p, h, y),
              f(i, p, s),
              c(i, i, h),
              f(p, p, i),
              f(i, h, y),
              f(h, o, r),
              f(o, m, m),
              l(i, o, t),
              l(p, h, t);
          }
          for (let e = 0; e < 16; e++)
            (r[e + 16] = i[e]),
              (r[e + 32] = p[e]),
              (r[e + 48] = o[e]),
              (r[e + 64] = h[e]);
          let g = r.subarray(32),
            b = r.subarray(16);
          (function (e, t) {
            let n = a();
            for (let e = 0; e < 16; e++) n[e] = t[e];
            for (let e = 253; e >= 0; e--)
              f(n, n, n), 2 !== e && 4 !== e && f(n, n, t);
            for (let t = 0; t < 16; t++) e[t] = n[t];
          })(g, g),
            f(b, b, g);
          let v = new Uint8Array(32);
          return (
            (function (e, t) {
              let n = a(),
                r = a();
              for (let e = 0; e < 16; e++) r[e] = t[e];
              u(r), u(r), u(r);
              for (let e = 0; e < 2; e++) {
                n[0] = r[0] - 65517;
                for (let e = 1; e < 15; e++)
                  (n[e] = r[e] - 65535 - ((n[e - 1] >> 16) & 1)),
                    (n[e - 1] &= 65535);
                n[15] = r[15] - 32767 - ((n[14] >> 16) & 1);
                let e = (n[15] >> 16) & 1;
                (n[14] &= 65535), l(r, n, 1 - e);
              }
              for (let t = 0; t < 16; t++)
                (e[2 * t] = 255 & r[t]), (e[2 * t + 1] = r[t] >> 8);
            })(v, b),
            v
          );
        }
        (t.Au = function (e) {
          let n = (0, r.randomBytes)(32, e),
            a = (function (e) {
              if (e.length !== t.KS)
                throw Error(`x25519: seed must be ${t.KS} bytes`);
              let n = new Uint8Array(e),
                r = p(n, o);
              return { publicKey: r, secretKey: n };
            })(n);
          return (0, i.wipe)(n), a;
        }),
          (t.gi = function (e, n, r = !1) {
            if (e.length !== t.kz)
              throw Error("X25519: incorrect secret key length");
            if (n.length !== t.kz)
              throw Error("X25519: incorrect public key length");
            let i = p(e, n);
            if (r) {
              let e = 0;
              for (let t = 0; t < i.length; t++) e |= i[t];
              if (0 === e) throw Error("X25519: invalid shared key");
            }
            return i;
          });
      },
      60075: function (e, t, n) {
        "use strict";
        n.d(t, {
          RELAY_JSONRPC: function () {
            return r;
          },
        }),
          n(61882);
        let r = {
          waku: {
            publish: "waku_publish",
            batchPublish: "waku_batchPublish",
            subscribe: "waku_subscribe",
            batchSubscribe: "waku_batchSubscribe",
            subscription: "waku_subscription",
            unsubscribe: "waku_unsubscribe",
            batchUnsubscribe: "waku_batchUnsubscribe",
          },
          irn: {
            publish: "irn_publish",
            batchPublish: "irn_batchPublish",
            subscribe: "irn_subscribe",
            batchSubscribe: "irn_batchSubscribe",
            subscription: "irn_subscription",
            unsubscribe: "irn_unsubscribe",
            batchUnsubscribe: "irn_batchUnsubscribe",
          },
          iridium: {
            publish: "iridium_publish",
            batchPublish: "iridium_batchPublish",
            subscribe: "iridium_subscribe",
            batchSubscribe: "iridium_batchSubscribe",
            subscription: "iridium_subscription",
            unsubscribe: "iridium_unsubscribe",
            batchUnsubscribe: "iridium_batchUnsubscribe",
          },
        };
      },
      61882: function () {},
      36900: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        let r = n(30004);
        r.__exportStar(n(46869), t), r.__exportStar(n(88033), t);
      },
      46869: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ONE_THOUSAND = t.ONE_HUNDRED = void 0),
          (t.ONE_HUNDRED = 100),
          (t.ONE_THOUSAND = 1e3);
      },
      88033: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ONE_YEAR =
            t.FOUR_WEEKS =
            t.THREE_WEEKS =
            t.TWO_WEEKS =
            t.ONE_WEEK =
            t.THIRTY_DAYS =
            t.SEVEN_DAYS =
            t.FIVE_DAYS =
            t.THREE_DAYS =
            t.ONE_DAY =
            t.TWENTY_FOUR_HOURS =
            t.TWELVE_HOURS =
            t.SIX_HOURS =
            t.THREE_HOURS =
            t.ONE_HOUR =
            t.SIXTY_MINUTES =
            t.THIRTY_MINUTES =
            t.TEN_MINUTES =
            t.FIVE_MINUTES =
            t.ONE_MINUTE =
            t.SIXTY_SECONDS =
            t.THIRTY_SECONDS =
            t.TEN_SECONDS =
            t.FIVE_SECONDS =
            t.ONE_SECOND =
              void 0),
          (t.ONE_SECOND = 1),
          (t.FIVE_SECONDS = 5),
          (t.TEN_SECONDS = 10),
          (t.THIRTY_SECONDS = 30),
          (t.SIXTY_SECONDS = 60),
          (t.ONE_MINUTE = t.SIXTY_SECONDS),
          (t.FIVE_MINUTES = 5 * t.ONE_MINUTE),
          (t.TEN_MINUTES = 10 * t.ONE_MINUTE),
          (t.THIRTY_MINUTES = 30 * t.ONE_MINUTE),
          (t.SIXTY_MINUTES = 60 * t.ONE_MINUTE),
          (t.ONE_HOUR = t.SIXTY_MINUTES),
          (t.THREE_HOURS = 3 * t.ONE_HOUR),
          (t.SIX_HOURS = 6 * t.ONE_HOUR),
          (t.TWELVE_HOURS = 12 * t.ONE_HOUR),
          (t.TWENTY_FOUR_HOURS = 24 * t.ONE_HOUR),
          (t.ONE_DAY = t.TWENTY_FOUR_HOURS),
          (t.THREE_DAYS = 3 * t.ONE_DAY),
          (t.FIVE_DAYS = 5 * t.ONE_DAY),
          (t.SEVEN_DAYS = 7 * t.ONE_DAY),
          (t.THIRTY_DAYS = 30 * t.ONE_DAY),
          (t.ONE_WEEK = t.SEVEN_DAYS),
          (t.TWO_WEEKS = 2 * t.ONE_WEEK),
          (t.THREE_WEEKS = 3 * t.ONE_WEEK),
          (t.FOUR_WEEKS = 4 * t.ONE_WEEK),
          (t.ONE_YEAR = 365 * t.ONE_DAY);
      },
      66736: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        let r = n(30004);
        r.__exportStar(n(44273), t),
          r.__exportStar(n(47001), t),
          r.__exportStar(n(52939), t),
          r.__exportStar(n(36900), t);
      },
      52939: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        let r = n(30004);
        r.__exportStar(n(88766), t);
      },
      88766: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.IWatch = void 0),
          (t.IWatch = class {});
      },
      83207: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.fromMiliseconds = t.toMiliseconds = void 0);
        let r = n(36900);
        (t.toMiliseconds = function (e) {
          return e * r.ONE_THOUSAND;
        }),
          (t.fromMiliseconds = function (e) {
            return Math.floor(e / r.ONE_THOUSAND);
          });
      },
      83873: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.delay = void 0),
          (t.delay = function (e) {
            return new Promise((t) => {
              setTimeout(() => {
                t(!0);
              }, e);
            });
          });
      },
      44273: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        let r = n(30004);
        r.__exportStar(n(83873), t), r.__exportStar(n(83207), t);
      },
      47001: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Watch = void 0);
        class n {
          constructor() {
            this.timestamps = new Map();
          }
          start(e) {
            if (this.timestamps.has(e))
              throw Error(`Watch already started for label: ${e}`);
            this.timestamps.set(e, { started: Date.now() });
          }
          stop(e) {
            let t = this.get(e);
            if (void 0 !== t.elapsed)
              throw Error(`Watch already stopped for label: ${e}`);
            let n = Date.now() - t.started;
            this.timestamps.set(e, { started: t.started, elapsed: n });
          }
          get(e) {
            let t = this.timestamps.get(e);
            if (void 0 === t) throw Error(`No timestamp found for label: ${e}`);
            return t;
          }
          elapsed(e) {
            let t = this.get(e),
              n = t.elapsed || Date.now() - t.started;
            return n;
          }
        }
        (t.Watch = n), (t.default = n);
      },
      30004: function (e, t, n) {
        "use strict";
        n.r(t),
          n.d(t, {
            __assign: function () {
              return a;
            },
            __asyncDelegator: function () {
              return w;
            },
            __asyncGenerator: function () {
              return v;
            },
            __asyncValues: function () {
              return E;
            },
            __await: function () {
              return b;
            },
            __awaiter: function () {
              return c;
            },
            __classPrivateFieldGet: function () {
              return T;
            },
            __classPrivateFieldSet: function () {
              return S;
            },
            __createBinding: function () {
              return f;
            },
            __decorate: function () {
              return s;
            },
            __exportStar: function () {
              return p;
            },
            __extends: function () {
              return i;
            },
            __generator: function () {
              return d;
            },
            __importDefault: function () {
              return _;
            },
            __importStar: function () {
              return C;
            },
            __makeTemplateObject: function () {
              return x;
            },
            __metadata: function () {
              return l;
            },
            __param: function () {
              return u;
            },
            __read: function () {
              return m;
            },
            __rest: function () {
              return o;
            },
            __spread: function () {
              return y;
            },
            __spreadArrays: function () {
              return g;
            },
            __values: function () {
              return h;
            },
          });
        /*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ var r =
          function (e, t) {
            return (r =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (e, t) {
                  e.__proto__ = t;
                }) ||
              function (e, t) {
                for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
              })(e, t);
          };
        function i(e, t) {
          function n() {
            this.constructor = e;
          }
          r(e, t),
            (e.prototype =
              null === t
                ? Object.create(t)
                : ((n.prototype = t.prototype), new n()));
        }
        var a = function () {
          return (a =
            Object.assign ||
            function (e) {
              for (var t, n = 1, r = arguments.length; n < r; n++)
                for (var i in (t = arguments[n]))
                  Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
              return e;
            }).apply(this, arguments);
        };
        function o(e, t) {
          var n = {};
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) &&
              0 > t.indexOf(r) &&
              (n[r] = e[r]);
          if (null != e && "function" == typeof Object.getOwnPropertySymbols)
            for (
              var i = 0, r = Object.getOwnPropertySymbols(e);
              i < r.length;
              i++
            )
              0 > t.indexOf(r[i]) &&
                Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                (n[r[i]] = e[r[i]]);
          return n;
        }
        function s(e, t, n, r) {
          var i,
            a = arguments.length,
            o =
              a < 3
                ? t
                : null === r
                ? (r = Object.getOwnPropertyDescriptor(t, n))
                : r;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            o = Reflect.decorate(e, t, n, r);
          else
            for (var s = e.length - 1; s >= 0; s--)
              (i = e[s]) &&
                (o = (a < 3 ? i(o) : a > 3 ? i(t, n, o) : i(t, n)) || o);
          return a > 3 && o && Object.defineProperty(t, n, o), o;
        }
        function u(e, t) {
          return function (n, r) {
            t(n, r, e);
          };
        }
        function l(e, t) {
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.metadata
          )
            return Reflect.metadata(e, t);
        }
        function c(e, t, n, r) {
          return new (n || (n = Promise))(function (i, a) {
            function o(e) {
              try {
                u(r.next(e));
              } catch (e) {
                a(e);
              }
            }
            function s(e) {
              try {
                u(r.throw(e));
              } catch (e) {
                a(e);
              }
            }
            function u(e) {
              var t;
              e.done
                ? i(e.value)
                : ((t = e.value) instanceof n
                    ? t
                    : new n(function (e) {
                        e(t);
                      })
                  ).then(o, s);
            }
            u((r = r.apply(e, t || [])).next());
          });
        }
        function d(e, t) {
          var n,
            r,
            i,
            a,
            o = {
              label: 0,
              sent: function () {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: [],
            };
          return (
            (a = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (a[Symbol.iterator] = function () {
                return this;
              }),
            a
          );
          function s(a) {
            return function (s) {
              return (function (a) {
                if (n) throw TypeError("Generator is already executing.");
                for (; o; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & a[0]
                            ? r.return
                            : a[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, a[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (a = [2 & a[0], i.value]), a[0])) {
                      case 0:
                      case 1:
                        i = a;
                        break;
                      case 4:
                        return o.label++, { value: a[1], done: !1 };
                      case 5:
                        o.label++, (r = a[1]), (a = [0]);
                        continue;
                      case 7:
                        (a = o.ops.pop()), o.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = o.trys).length > 0 && i[i.length - 1]) &&
                          (6 === a[0] || 2 === a[0])
                        ) {
                          o = 0;
                          continue;
                        }
                        if (
                          3 === a[0] &&
                          (!i || (a[1] > i[0] && a[1] < i[3]))
                        ) {
                          o.label = a[1];
                          break;
                        }
                        if (6 === a[0] && o.label < i[1]) {
                          (o.label = i[1]), (i = a);
                          break;
                        }
                        if (i && o.label < i[2]) {
                          (o.label = i[2]), o.ops.push(a);
                          break;
                        }
                        i[2] && o.ops.pop(), o.trys.pop();
                        continue;
                    }
                    a = t.call(e, o);
                  } catch (e) {
                    (a = [6, e]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & a[0]) throw a[1];
                return { value: a[0] ? a[1] : void 0, done: !0 };
              })([a, s]);
            };
          }
        }
        function f(e, t, n, r) {
          void 0 === r && (r = n), (e[r] = t[n]);
        }
        function p(e, t) {
          for (var n in e)
            "default" === n || t.hasOwnProperty(n) || (t[n] = e[n]);
        }
        function h(e) {
          var t = "function" == typeof Symbol && Symbol.iterator,
            n = t && e[t],
            r = 0;
          if (n) return n.call(e);
          if (e && "number" == typeof e.length)
            return {
              next: function () {
                return (
                  e && r >= e.length && (e = void 0),
                  { value: e && e[r++], done: !e }
                );
              },
            };
          throw TypeError(
            t ? "Object is not iterable." : "Symbol.iterator is not defined."
          );
        }
        function m(e, t) {
          var n = "function" == typeof Symbol && e[Symbol.iterator];
          if (!n) return e;
          var r,
            i,
            a = n.call(e),
            o = [];
          try {
            for (; (void 0 === t || t-- > 0) && !(r = a.next()).done; )
              o.push(r.value);
          } catch (e) {
            i = { error: e };
          } finally {
            try {
              r && !r.done && (n = a.return) && n.call(a);
            } finally {
              if (i) throw i.error;
            }
          }
          return o;
        }
        function y() {
          for (var e = [], t = 0; t < arguments.length; t++)
            e = e.concat(m(arguments[t]));
          return e;
        }
        function g() {
          for (var e = 0, t = 0, n = arguments.length; t < n; t++)
            e += arguments[t].length;
          for (var r = Array(e), i = 0, t = 0; t < n; t++)
            for (var a = arguments[t], o = 0, s = a.length; o < s; o++, i++)
              r[i] = a[o];
          return r;
        }
        function b(e) {
          return this instanceof b ? ((this.v = e), this) : new b(e);
        }
        function v(e, t, n) {
          if (!Symbol.asyncIterator)
            throw TypeError("Symbol.asyncIterator is not defined.");
          var r,
            i = n.apply(e, t || []),
            a = [];
          return (
            (r = {}),
            o("next"),
            o("throw"),
            o("return"),
            (r[Symbol.asyncIterator] = function () {
              return this;
            }),
            r
          );
          function o(e) {
            i[e] &&
              (r[e] = function (t) {
                return new Promise(function (n, r) {
                  a.push([e, t, n, r]) > 1 || s(e, t);
                });
              });
          }
          function s(e, t) {
            try {
              var n;
              (n = i[e](t)).value instanceof b
                ? Promise.resolve(n.value.v).then(u, l)
                : c(a[0][2], n);
            } catch (e) {
              c(a[0][3], e);
            }
          }
          function u(e) {
            s("next", e);
          }
          function l(e) {
            s("throw", e);
          }
          function c(e, t) {
            e(t), a.shift(), a.length && s(a[0][0], a[0][1]);
          }
        }
        function w(e) {
          var t, n;
          return (
            (t = {}),
            r("next"),
            r("throw", function (e) {
              throw e;
            }),
            r("return"),
            (t[Symbol.iterator] = function () {
              return this;
            }),
            t
          );
          function r(r, i) {
            t[r] = e[r]
              ? function (t) {
                  return (n = !n)
                    ? { value: b(e[r](t)), done: "return" === r }
                    : i
                    ? i(t)
                    : t;
                }
              : i;
          }
        }
        function E(e) {
          if (!Symbol.asyncIterator)
            throw TypeError("Symbol.asyncIterator is not defined.");
          var t,
            n = e[Symbol.asyncIterator];
          return n
            ? n.call(e)
            : ((e = h(e)),
              (t = {}),
              r("next"),
              r("throw"),
              r("return"),
              (t[Symbol.asyncIterator] = function () {
                return this;
              }),
              t);
          function r(n) {
            t[n] =
              e[n] &&
              function (t) {
                return new Promise(function (r, i) {
                  (function (e, t, n, r) {
                    Promise.resolve(r).then(function (t) {
                      e({ value: t, done: n });
                    }, t);
                  })(r, i, (t = e[n](t)).done, t.value);
                });
              };
          }
        }
        function x(e, t) {
          return (
            Object.defineProperty
              ? Object.defineProperty(e, "raw", { value: t })
              : (e.raw = t),
            e
          );
        }
        function C(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e) Object.hasOwnProperty.call(e, n) && (t[n] = e[n]);
          return (t.default = e), t;
        }
        function _(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function T(e, t) {
          if (!t.has(e))
            throw TypeError("attempted to get private field on non-instance");
          return t.get(e);
        }
        function S(e, t, n) {
          if (!t.has(e))
            throw TypeError("attempted to set private field on non-instance");
          return t.set(e, n), n;
        }
      },
      66151: function (e, t, n) {
        "use strict";
        let r = n(70610),
          i = n(44020),
          a = n(80500),
          o = n(92806),
          s = (e) => null == e,
          u = Symbol("encodeFragmentIdentifier");
        function l(e) {
          if ("string" != typeof e || 1 !== e.length)
            throw TypeError(
              "arrayFormatSeparator must be single character string"
            );
        }
        function c(e, t) {
          return t.encode ? (t.strict ? r(e) : encodeURIComponent(e)) : e;
        }
        function d(e, t) {
          return t.decode ? i(e) : e;
        }
        function f(e) {
          let t = e.indexOf("#");
          return -1 !== t && (e = e.slice(0, t)), e;
        }
        function p(e) {
          e = f(e);
          let t = e.indexOf("?");
          return -1 === t ? "" : e.slice(t + 1);
        }
        function h(e, t) {
          return (
            t.parseNumbers &&
            !Number.isNaN(Number(e)) &&
            "string" == typeof e &&
            "" !== e.trim()
              ? (e = Number(e))
              : t.parseBooleans &&
                null !== e &&
                ("true" === e.toLowerCase() || "false" === e.toLowerCase()) &&
                (e = "true" === e.toLowerCase()),
            e
          );
        }
        function m(e, t) {
          l(
            (t = Object.assign(
              {
                decode: !0,
                sort: !0,
                arrayFormat: "none",
                arrayFormatSeparator: ",",
                parseNumbers: !1,
                parseBooleans: !1,
              },
              t
            )).arrayFormatSeparator
          );
          let n = (function (e) {
              let t;
              switch (e.arrayFormat) {
                case "index":
                  return (e, n, r) => {
                    if (
                      ((t = /\[(\d*)\]$/.exec(e)),
                      (e = e.replace(/\[\d*\]$/, "")),
                      !t)
                    ) {
                      r[e] = n;
                      return;
                    }
                    void 0 === r[e] && (r[e] = {}), (r[e][t[1]] = n);
                  };
                case "bracket":
                  return (e, n, r) => {
                    if (
                      ((t = /(\[\])$/.exec(e)),
                      (e = e.replace(/\[\]$/, "")),
                      !t)
                    ) {
                      r[e] = n;
                      return;
                    }
                    if (void 0 === r[e]) {
                      r[e] = [n];
                      return;
                    }
                    r[e] = [].concat(r[e], n);
                  };
                case "colon-list-separator":
                  return (e, n, r) => {
                    if (
                      ((t = /(:list)$/.exec(e)),
                      (e = e.replace(/:list$/, "")),
                      !t)
                    ) {
                      r[e] = n;
                      return;
                    }
                    if (void 0 === r[e]) {
                      r[e] = [n];
                      return;
                    }
                    r[e] = [].concat(r[e], n);
                  };
                case "comma":
                case "separator":
                  return (t, n, r) => {
                    let i =
                        "string" == typeof n &&
                        n.includes(e.arrayFormatSeparator),
                      a =
                        "string" == typeof n &&
                        !i &&
                        d(n, e).includes(e.arrayFormatSeparator);
                    n = a ? d(n, e) : n;
                    let o =
                      i || a
                        ? n.split(e.arrayFormatSeparator).map((t) => d(t, e))
                        : null === n
                        ? n
                        : d(n, e);
                    r[t] = o;
                  };
                case "bracket-separator":
                  return (t, n, r) => {
                    let i = /(\[\])$/.test(t);
                    if (((t = t.replace(/\[\]$/, "")), !i)) {
                      r[t] = n ? d(n, e) : n;
                      return;
                    }
                    let a =
                      null === n
                        ? []
                        : n.split(e.arrayFormatSeparator).map((t) => d(t, e));
                    if (void 0 === r[t]) {
                      r[t] = a;
                      return;
                    }
                    r[t] = [].concat(r[t], a);
                  };
                default:
                  return (e, t, n) => {
                    if (void 0 === n[e]) {
                      n[e] = t;
                      return;
                    }
                    n[e] = [].concat(n[e], t);
                  };
              }
            })(t),
            r = Object.create(null);
          if ("string" != typeof e || !(e = e.trim().replace(/^[?#&]/, "")))
            return r;
          for (let i of e.split("&")) {
            if ("" === i) continue;
            let [e, o] = a(t.decode ? i.replace(/\+/g, " ") : i, "=");
            (o =
              void 0 === o
                ? null
                : ["comma", "separator", "bracket-separator"].includes(
                    t.arrayFormat
                  )
                ? o
                : d(o, t)),
              n(d(e, t), o, r);
          }
          for (let e of Object.keys(r)) {
            let n = r[e];
            if ("object" == typeof n && null !== n)
              for (let e of Object.keys(n)) n[e] = h(n[e], t);
            else r[e] = h(n, t);
          }
          return !1 === t.sort
            ? r
            : (!0 === t.sort
                ? Object.keys(r).sort()
                : Object.keys(r).sort(t.sort)
              ).reduce((e, t) => {
                let n = r[t];
                return (
                  n && "object" == typeof n && !Array.isArray(n)
                    ? (e[t] = (function e(t) {
                        return Array.isArray(t)
                          ? t.sort()
                          : "object" == typeof t
                          ? e(Object.keys(t))
                              .sort((e, t) => Number(e) - Number(t))
                              .map((e) => t[e])
                          : t;
                      })(n))
                    : (e[t] = n),
                  e
                );
              }, Object.create(null));
        }
        (t.extract = p),
          (t.parse = m),
          (t.stringify = (e, t) => {
            if (!e) return "";
            l(
              (t = Object.assign(
                {
                  encode: !0,
                  strict: !0,
                  arrayFormat: "none",
                  arrayFormatSeparator: ",",
                },
                t
              )).arrayFormatSeparator
            );
            let n = (n) =>
                (t.skipNull && s(e[n])) || (t.skipEmptyString && "" === e[n]),
              r = (function (e) {
                switch (e.arrayFormat) {
                  case "index":
                    return (t) => (n, r) => {
                      let i = n.length;
                      return void 0 === r ||
                        (e.skipNull && null === r) ||
                        (e.skipEmptyString && "" === r)
                        ? n
                        : null === r
                        ? [...n, [c(t, e), "[", i, "]"].join("")]
                        : [
                            ...n,
                            [c(t, e), "[", c(i, e), "]=", c(r, e)].join(""),
                          ];
                    };
                  case "bracket":
                    return (t) => (n, r) =>
                      void 0 === r ||
                      (e.skipNull && null === r) ||
                      (e.skipEmptyString && "" === r)
                        ? n
                        : null === r
                        ? [...n, [c(t, e), "[]"].join("")]
                        : [...n, [c(t, e), "[]=", c(r, e)].join("")];
                  case "colon-list-separator":
                    return (t) => (n, r) =>
                      void 0 === r ||
                      (e.skipNull && null === r) ||
                      (e.skipEmptyString && "" === r)
                        ? n
                        : null === r
                        ? [...n, [c(t, e), ":list="].join("")]
                        : [...n, [c(t, e), ":list=", c(r, e)].join("")];
                  case "comma":
                  case "separator":
                  case "bracket-separator": {
                    let t = "bracket-separator" === e.arrayFormat ? "[]=" : "=";
                    return (n) => (r, i) =>
                      void 0 === i ||
                      (e.skipNull && null === i) ||
                      (e.skipEmptyString && "" === i)
                        ? r
                        : ((i = null === i ? "" : i), 0 === r.length)
                        ? [[c(n, e), t, c(i, e)].join("")]
                        : [[r, c(i, e)].join(e.arrayFormatSeparator)];
                  }
                  default:
                    return (t) => (n, r) =>
                      void 0 === r ||
                      (e.skipNull && null === r) ||
                      (e.skipEmptyString && "" === r)
                        ? n
                        : null === r
                        ? [...n, c(t, e)]
                        : [...n, [c(t, e), "=", c(r, e)].join("")];
                }
              })(t),
              i = {};
            for (let t of Object.keys(e)) n(t) || (i[t] = e[t]);
            let a = Object.keys(i);
            return (
              !1 !== t.sort && a.sort(t.sort),
              a
                .map((n) => {
                  let i = e[n];
                  return void 0 === i
                    ? ""
                    : null === i
                    ? c(n, t)
                    : Array.isArray(i)
                    ? 0 === i.length && "bracket-separator" === t.arrayFormat
                      ? c(n, t) + "[]"
                      : i.reduce(r(n), []).join("&")
                    : c(n, t) + "=" + c(i, t);
                })
                .filter((e) => e.length > 0)
                .join("&")
            );
          }),
          (t.parseUrl = (e, t) => {
            t = Object.assign({ decode: !0 }, t);
            let [n, r] = a(e, "#");
            return Object.assign(
              { url: n.split("?")[0] || "", query: m(p(e), t) },
              t && t.parseFragmentIdentifier && r
                ? { fragmentIdentifier: d(r, t) }
                : {}
            );
          }),
          (t.stringifyUrl = (e, n) => {
            n = Object.assign({ encode: !0, strict: !0, [u]: !0 }, n);
            let r = f(e.url).split("?")[0] || "",
              i = t.extract(e.url),
              a = t.parse(i, { sort: !1 }),
              o = Object.assign(a, e.query),
              s = t.stringify(o, n);
            s && (s = `?${s}`);
            let l = (function (e) {
              let t = "",
                n = e.indexOf("#");
              return -1 !== n && (t = e.slice(n)), t;
            })(e.url);
            return (
              e.fragmentIdentifier &&
                (l = `#${
                  n[u] ? c(e.fragmentIdentifier, n) : e.fragmentIdentifier
                }`),
              `${r}${s}${l}`
            );
          }),
          (t.pick = (e, n, r) => {
            r = Object.assign({ parseFragmentIdentifier: !0, [u]: !1 }, r);
            let { url: i, query: a, fragmentIdentifier: s } = t.parseUrl(e, r);
            return t.stringifyUrl(
              { url: i, query: o(a, n), fragmentIdentifier: s },
              r
            );
          }),
          (t.exclude = (e, n, r) => {
            let i = Array.isArray(n)
              ? (e) => !n.includes(e)
              : (e, t) => !n(e, t);
            return t.pick(e, i, r);
          });
      },
      62873: function (e, t) {
        "use strict";
        function n(e) {
          let t;
          return (
            "undefined" != typeof window &&
              void 0 !== window[e] &&
              (t = window[e]),
            t
          );
        }
        function r(e) {
          let t = n(e);
          if (!t) throw Error(`${e} is not defined in Window`);
          return t;
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getLocalStorage =
            t.getLocalStorageOrThrow =
            t.getCrypto =
            t.getCryptoOrThrow =
            t.getLocation =
            t.getLocationOrThrow =
            t.getNavigator =
            t.getNavigatorOrThrow =
            t.getDocument =
            t.getDocumentOrThrow =
            t.getFromWindowOrThrow =
            t.getFromWindow =
              void 0),
          (t.getFromWindow = n),
          (t.getFromWindowOrThrow = r),
          (t.getDocumentOrThrow = function () {
            return r("document");
          }),
          (t.getDocument = function () {
            return n("document");
          }),
          (t.getNavigatorOrThrow = function () {
            return r("navigator");
          }),
          (t.getNavigator = function () {
            return n("navigator");
          }),
          (t.getLocationOrThrow = function () {
            return r("location");
          }),
          (t.getLocation = function () {
            return n("location");
          }),
          (t.getCryptoOrThrow = function () {
            return r("crypto");
          }),
          (t.getCrypto = function () {
            return n("crypto");
          }),
          (t.getLocalStorageOrThrow = function () {
            return r("localStorage");
          }),
          (t.getLocalStorage = function () {
            return n("localStorage");
          });
      },
      65755: function (e, t, n) {
        "use strict";
        t.D = void 0;
        let r = n(62873);
        t.D = function () {
          let e, t, n;
          try {
            (e = r.getDocumentOrThrow()), (t = r.getLocationOrThrow());
          } catch (e) {
            return null;
          }
          function i(...t) {
            let n = e.getElementsByTagName("meta");
            for (let e = 0; e < n.length; e++) {
              let r = n[e],
                i = ["itemprop", "property", "name"]
                  .map((e) => r.getAttribute(e))
                  .filter((e) => !!e && t.includes(e));
              if (i.length && i) {
                let e = r.getAttribute("content");
                if (e) return e;
              }
            }
            return "";
          }
          let a =
              ((n = i("name", "og:site_name", "og:title", "twitter:title")) ||
                (n = e.title),
              n),
            o = (function () {
              let e = i(
                "description",
                "og:description",
                "twitter:description",
                "keywords"
              );
              return e;
            })(),
            s = t.origin,
            u = (function () {
              let n = e.getElementsByTagName("link"),
                r = [];
              for (let e = 0; e < n.length; e++) {
                let i = n[e],
                  a = i.getAttribute("rel");
                if (a && a.toLowerCase().indexOf("icon") > -1) {
                  let e = i.getAttribute("href");
                  if (e) {
                    if (
                      -1 === e.toLowerCase().indexOf("https:") &&
                      -1 === e.toLowerCase().indexOf("http:") &&
                      0 !== e.indexOf("//")
                    ) {
                      let n = t.protocol + "//" + t.host;
                      if (0 === e.indexOf("/")) n += e;
                      else {
                        let r = t.pathname.split("/");
                        r.pop();
                        let i = r.join("/");
                        n += i + "/" + e;
                      }
                      r.push(n);
                    } else if (0 === e.indexOf("//")) {
                      let n = t.protocol + e;
                      r.push(n);
                    } else r.push(e);
                  }
                }
              }
              return r;
            })();
          return { description: o, url: s, icons: u, name: a };
        };
      },
      79742: function (e, t) {
        "use strict";
        (t.byteLength = function (e) {
          var t = u(e),
            n = t[0],
            r = t[1];
          return ((n + r) * 3) / 4 - r;
        }),
          (t.toByteArray = function (e) {
            var t,
              n,
              a = u(e),
              o = a[0],
              s = a[1],
              l = new i(((o + s) * 3) / 4 - s),
              c = 0,
              d = s > 0 ? o - 4 : o;
            for (n = 0; n < d; n += 4)
              (t =
                (r[e.charCodeAt(n)] << 18) |
                (r[e.charCodeAt(n + 1)] << 12) |
                (r[e.charCodeAt(n + 2)] << 6) |
                r[e.charCodeAt(n + 3)]),
                (l[c++] = (t >> 16) & 255),
                (l[c++] = (t >> 8) & 255),
                (l[c++] = 255 & t);
            return (
              2 === s &&
                ((t =
                  (r[e.charCodeAt(n)] << 2) | (r[e.charCodeAt(n + 1)] >> 4)),
                (l[c++] = 255 & t)),
              1 === s &&
                ((t =
                  (r[e.charCodeAt(n)] << 10) |
                  (r[e.charCodeAt(n + 1)] << 4) |
                  (r[e.charCodeAt(n + 2)] >> 2)),
                (l[c++] = (t >> 8) & 255),
                (l[c++] = 255 & t)),
              l
            );
          }),
          (t.fromByteArray = function (e) {
            for (
              var t, r = e.length, i = r % 3, a = [], o = 0, s = r - i;
              o < s;
              o += 16383
            )
              a.push(
                (function (e, t, r) {
                  for (var i, a = [], o = t; o < r; o += 3)
                    a.push(
                      n[
                        ((i =
                          ((e[o] << 16) & 16711680) +
                          ((e[o + 1] << 8) & 65280) +
                          (255 & e[o + 2])) >>
                          18) &
                          63
                      ] +
                        n[(i >> 12) & 63] +
                        n[(i >> 6) & 63] +
                        n[63 & i]
                    );
                  return a.join("");
                })(e, o, o + 16383 > s ? s : o + 16383)
              );
            return (
              1 === i
                ? a.push(n[(t = e[r - 1]) >> 2] + n[(t << 4) & 63] + "==")
                : 2 === i &&
                  a.push(
                    n[(t = (e[r - 2] << 8) + e[r - 1]) >> 10] +
                      n[(t >> 4) & 63] +
                      n[(t << 2) & 63] +
                      "="
                  ),
              a.join("")
            );
          });
        for (
          var n = [],
            r = [],
            i = "undefined" != typeof Uint8Array ? Uint8Array : Array,
            a =
              "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
            o = 0,
            s = a.length;
          o < s;
          ++o
        )
          (n[o] = a[o]), (r[a.charCodeAt(o)] = o);
        function u(e) {
          var t = e.length;
          if (t % 4 > 0)
            throw Error("Invalid string. Length must be a multiple of 4");
          var n = e.indexOf("=");
          -1 === n && (n = t);
          var r = n === t ? 0 : 4 - (n % 4);
          return [n, r];
        }
        (r["-".charCodeAt(0)] = 62), (r["_".charCodeAt(0)] = 63);
      },
      48764: function (e, t, n) {
        "use strict";
        /*!
         * The buffer module from node.js, for the browser.
         *
         * @author   Feross Aboukhadijeh <https://feross.org>
         * @license  MIT
         */ let r = n(79742),
          i = n(80645),
          a =
            "function" == typeof Symbol && "function" == typeof Symbol.for
              ? Symbol.for("nodejs.util.inspect.custom")
              : null;
        function o(e) {
          if (e > 2147483647)
            throw RangeError(
              'The value "' + e + '" is invalid for option "size"'
            );
          let t = new Uint8Array(e);
          return Object.setPrototypeOf(t, s.prototype), t;
        }
        function s(e, t, n) {
          if ("number" == typeof e) {
            if ("string" == typeof t)
              throw TypeError(
                'The "string" argument must be of type string. Received type number'
              );
            return c(e);
          }
          return u(e, t, n);
        }
        function u(e, t, n) {
          if ("string" == typeof e)
            return (function (e, t) {
              if (
                (("string" != typeof t || "" === t) && (t = "utf8"),
                !s.isEncoding(t))
              )
                throw TypeError("Unknown encoding: " + t);
              let n = 0 | h(e, t),
                r = o(n),
                i = r.write(e, t);
              return i !== n && (r = r.slice(0, i)), r;
            })(e, t);
          if (ArrayBuffer.isView(e))
            return (function (e) {
              if (R(e, Uint8Array)) {
                let t = new Uint8Array(e);
                return f(t.buffer, t.byteOffset, t.byteLength);
              }
              return d(e);
            })(e);
          if (null == e)
            throw TypeError(
              "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
                typeof e
            );
          if (
            R(e, ArrayBuffer) ||
            (e && R(e.buffer, ArrayBuffer)) ||
            ("undefined" != typeof SharedArrayBuffer &&
              (R(e, SharedArrayBuffer) ||
                (e && R(e.buffer, SharedArrayBuffer))))
          )
            return f(e, t, n);
          if ("number" == typeof e)
            throw TypeError(
              'The "value" argument must not be of type number. Received type number'
            );
          let r = e.valueOf && e.valueOf();
          if (null != r && r !== e) return s.from(r, t, n);
          let i = (function (e) {
            var t;
            if (s.isBuffer(e)) {
              let t = 0 | p(e.length),
                n = o(t);
              return 0 === n.length || e.copy(n, 0, 0, t), n;
            }
            return void 0 !== e.length
              ? "number" != typeof e.length || (t = e.length) != t
                ? o(0)
                : d(e)
              : "Buffer" === e.type && Array.isArray(e.data)
              ? d(e.data)
              : void 0;
          })(e);
          if (i) return i;
          if (
            "undefined" != typeof Symbol &&
            null != Symbol.toPrimitive &&
            "function" == typeof e[Symbol.toPrimitive]
          )
            return s.from(e[Symbol.toPrimitive]("string"), t, n);
          throw TypeError(
            "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
              typeof e
          );
        }
        function l(e) {
          if ("number" != typeof e)
            throw TypeError('"size" argument must be of type number');
          if (e < 0)
            throw RangeError(
              'The value "' + e + '" is invalid for option "size"'
            );
        }
        function c(e) {
          return l(e), o(e < 0 ? 0 : 0 | p(e));
        }
        function d(e) {
          let t = e.length < 0 ? 0 : 0 | p(e.length),
            n = o(t);
          for (let r = 0; r < t; r += 1) n[r] = 255 & e[r];
          return n;
        }
        function f(e, t, n) {
          let r;
          if (t < 0 || e.byteLength < t)
            throw RangeError('"offset" is outside of buffer bounds');
          if (e.byteLength < t + (n || 0))
            throw RangeError('"length" is outside of buffer bounds');
          return (
            Object.setPrototypeOf(
              (r =
                void 0 === t && void 0 === n
                  ? new Uint8Array(e)
                  : void 0 === n
                  ? new Uint8Array(e, t)
                  : new Uint8Array(e, t, n)),
              s.prototype
            ),
            r
          );
        }
        function p(e) {
          if (e >= 2147483647)
            throw RangeError(
              "Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes"
            );
          return 0 | e;
        }
        function h(e, t) {
          if (s.isBuffer(e)) return e.length;
          if (ArrayBuffer.isView(e) || R(e, ArrayBuffer)) return e.byteLength;
          if ("string" != typeof e)
            throw TypeError(
              'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' +
                typeof e
            );
          let n = e.length,
            r = arguments.length > 2 && !0 === arguments[2];
          if (!r && 0 === n) return 0;
          let i = !1;
          for (;;)
            switch (t) {
              case "ascii":
              case "latin1":
              case "binary":
                return n;
              case "utf8":
              case "utf-8":
                return M(e).length;
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return 2 * n;
              case "hex":
                return n >>> 1;
              case "base64":
                return N(e).length;
              default:
                if (i) return r ? -1 : M(e).length;
                (t = ("" + t).toLowerCase()), (i = !0);
            }
        }
        function m(e, t, n) {
          let i = !1;
          if (
            ((void 0 === t || t < 0) && (t = 0),
            t > this.length ||
              ((void 0 === n || n > this.length) && (n = this.length),
              n <= 0 || (n >>>= 0) <= (t >>>= 0)))
          )
            return "";
          for (e || (e = "utf8"); ; )
            switch (e) {
              case "hex":
                return (function (e, t, n) {
                  let r = e.length;
                  (!t || t < 0) && (t = 0), (!n || n < 0 || n > r) && (n = r);
                  let i = "";
                  for (let r = t; r < n; ++r) i += F[e[r]];
                  return i;
                })(this, t, n);
              case "utf8":
              case "utf-8":
                return v(this, t, n);
              case "ascii":
                return (function (e, t, n) {
                  let r = "";
                  n = Math.min(e.length, n);
                  for (let i = t; i < n; ++i)
                    r += String.fromCharCode(127 & e[i]);
                  return r;
                })(this, t, n);
              case "latin1":
              case "binary":
                return (function (e, t, n) {
                  let r = "";
                  n = Math.min(e.length, n);
                  for (let i = t; i < n; ++i) r += String.fromCharCode(e[i]);
                  return r;
                })(this, t, n);
              case "base64":
                var a, o;
                return (
                  (a = t),
                  (o = n),
                  0 === a && o === this.length
                    ? r.fromByteArray(this)
                    : r.fromByteArray(this.slice(a, o))
                );
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return (function (e, t, n) {
                  let r = e.slice(t, n),
                    i = "";
                  for (let e = 0; e < r.length - 1; e += 2)
                    i += String.fromCharCode(r[e] + 256 * r[e + 1]);
                  return i;
                })(this, t, n);
              default:
                if (i) throw TypeError("Unknown encoding: " + e);
                (e = (e + "").toLowerCase()), (i = !0);
            }
        }
        function y(e, t, n) {
          let r = e[t];
          (e[t] = e[n]), (e[n] = r);
        }
        function g(e, t, n, r, i) {
          var a;
          if (0 === e.length) return -1;
          if (
            ("string" == typeof n
              ? ((r = n), (n = 0))
              : n > 2147483647
              ? (n = 2147483647)
              : n < -2147483648 && (n = -2147483648),
            (a = n = +n) != a && (n = i ? 0 : e.length - 1),
            n < 0 && (n = e.length + n),
            n >= e.length)
          ) {
            if (i) return -1;
            n = e.length - 1;
          } else if (n < 0) {
            if (!i) return -1;
            n = 0;
          }
          if (("string" == typeof t && (t = s.from(t, r)), s.isBuffer(t)))
            return 0 === t.length ? -1 : b(e, t, n, r, i);
          if ("number" == typeof t)
            return ((t &= 255),
            "function" == typeof Uint8Array.prototype.indexOf)
              ? i
                ? Uint8Array.prototype.indexOf.call(e, t, n)
                : Uint8Array.prototype.lastIndexOf.call(e, t, n)
              : b(e, [t], n, r, i);
          throw TypeError("val must be string, number or Buffer");
        }
        function b(e, t, n, r, i) {
          let a,
            o = 1,
            s = e.length,
            u = t.length;
          if (
            void 0 !== r &&
            ("ucs2" === (r = String(r).toLowerCase()) ||
              "ucs-2" === r ||
              "utf16le" === r ||
              "utf-16le" === r)
          ) {
            if (e.length < 2 || t.length < 2) return -1;
            (o = 2), (s /= 2), (u /= 2), (n /= 2);
          }
          function l(e, t) {
            return 1 === o ? e[t] : e.readUInt16BE(t * o);
          }
          if (i) {
            let r = -1;
            for (a = n; a < s; a++)
              if (l(e, a) === l(t, -1 === r ? 0 : a - r)) {
                if ((-1 === r && (r = a), a - r + 1 === u)) return r * o;
              } else -1 !== r && (a -= a - r), (r = -1);
          } else
            for (n + u > s && (n = s - u), a = n; a >= 0; a--) {
              let n = !0;
              for (let r = 0; r < u; r++)
                if (l(e, a + r) !== l(t, r)) {
                  n = !1;
                  break;
                }
              if (n) return a;
            }
          return -1;
        }
        function v(e, t, n) {
          n = Math.min(e.length, n);
          let r = [],
            i = t;
          for (; i < n; ) {
            let t = e[i],
              a = null,
              o = t > 239 ? 4 : t > 223 ? 3 : t > 191 ? 2 : 1;
            if (i + o <= n) {
              let n, r, s, u;
              switch (o) {
                case 1:
                  t < 128 && (a = t);
                  break;
                case 2:
                  (192 & (n = e[i + 1])) == 128 &&
                    (u = ((31 & t) << 6) | (63 & n)) > 127 &&
                    (a = u);
                  break;
                case 3:
                  (n = e[i + 1]),
                    (r = e[i + 2]),
                    (192 & n) == 128 &&
                      (192 & r) == 128 &&
                      (u = ((15 & t) << 12) | ((63 & n) << 6) | (63 & r)) >
                        2047 &&
                      (u < 55296 || u > 57343) &&
                      (a = u);
                  break;
                case 4:
                  (n = e[i + 1]),
                    (r = e[i + 2]),
                    (s = e[i + 3]),
                    (192 & n) == 128 &&
                      (192 & r) == 128 &&
                      (192 & s) == 128 &&
                      (u =
                        ((15 & t) << 18) |
                        ((63 & n) << 12) |
                        ((63 & r) << 6) |
                        (63 & s)) > 65535 &&
                      u < 1114112 &&
                      (a = u);
              }
            }
            null === a
              ? ((a = 65533), (o = 1))
              : a > 65535 &&
                ((a -= 65536),
                r.push(((a >>> 10) & 1023) | 55296),
                (a = 56320 | (1023 & a))),
              r.push(a),
              (i += o);
          }
          return (function (e) {
            let t = e.length;
            if (t <= 4096) return String.fromCharCode.apply(String, e);
            let n = "",
              r = 0;
            for (; r < t; )
              n += String.fromCharCode.apply(String, e.slice(r, (r += 4096)));
            return n;
          })(r);
        }
        function w(e, t, n) {
          if (e % 1 != 0 || e < 0) throw RangeError("offset is not uint");
          if (e + t > n)
            throw RangeError("Trying to access beyond buffer length");
        }
        function E(e, t, n, r, i, a) {
          if (!s.isBuffer(e))
            throw TypeError('"buffer" argument must be a Buffer instance');
          if (t > i || t < a)
            throw RangeError('"value" argument is out of bounds');
          if (n + r > e.length) throw RangeError("Index out of range");
        }
        function x(e, t, n, r, i) {
          A(t, r, i, e, n, 7);
          let a = Number(t & BigInt(4294967295));
          (e[n++] = a),
            (a >>= 8),
            (e[n++] = a),
            (a >>= 8),
            (e[n++] = a),
            (a >>= 8),
            (e[n++] = a);
          let o = Number((t >> BigInt(32)) & BigInt(4294967295));
          return (
            (e[n++] = o),
            (o >>= 8),
            (e[n++] = o),
            (o >>= 8),
            (e[n++] = o),
            (o >>= 8),
            (e[n++] = o),
            n
          );
        }
        function C(e, t, n, r, i) {
          A(t, r, i, e, n, 7);
          let a = Number(t & BigInt(4294967295));
          (e[n + 7] = a),
            (a >>= 8),
            (e[n + 6] = a),
            (a >>= 8),
            (e[n + 5] = a),
            (a >>= 8),
            (e[n + 4] = a);
          let o = Number((t >> BigInt(32)) & BigInt(4294967295));
          return (
            (e[n + 3] = o),
            (o >>= 8),
            (e[n + 2] = o),
            (o >>= 8),
            (e[n + 1] = o),
            (o >>= 8),
            (e[n] = o),
            n + 8
          );
        }
        function _(e, t, n, r, i, a) {
          if (n + r > e.length || n < 0) throw RangeError("Index out of range");
        }
        function T(e, t, n, r, a) {
          return (
            (t = +t),
            (n >>>= 0),
            a || _(e, t, n, 4, 34028234663852886e22, -34028234663852886e22),
            i.write(e, t, n, r, 23, 4),
            n + 4
          );
        }
        function S(e, t, n, r, a) {
          return (
            (t = +t),
            (n >>>= 0),
            a || _(e, t, n, 8, 17976931348623157e292, -17976931348623157e292),
            i.write(e, t, n, r, 52, 8),
            n + 8
          );
        }
        (t.Buffer = s),
          (t.SlowBuffer = function (e) {
            return +e != e && (e = 0), s.alloc(+e);
          }),
          (t.INSPECT_MAX_BYTES = 50),
          (t.kMaxLength = 2147483647),
          (s.TYPED_ARRAY_SUPPORT = (function () {
            try {
              let e = new Uint8Array(1),
                t = {
                  foo: function () {
                    return 42;
                  },
                };
              return (
                Object.setPrototypeOf(t, Uint8Array.prototype),
                Object.setPrototypeOf(e, t),
                42 === e.foo()
              );
            } catch (e) {
              return !1;
            }
          })()),
          s.TYPED_ARRAY_SUPPORT ||
            "undefined" == typeof console ||
            "function" != typeof console.error ||
            console.error(
              "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
            ),
          Object.defineProperty(s.prototype, "parent", {
            enumerable: !0,
            get: function () {
              if (s.isBuffer(this)) return this.buffer;
            },
          }),
          Object.defineProperty(s.prototype, "offset", {
            enumerable: !0,
            get: function () {
              if (s.isBuffer(this)) return this.byteOffset;
            },
          }),
          (s.poolSize = 8192),
          (s.from = function (e, t, n) {
            return u(e, t, n);
          }),
          Object.setPrototypeOf(s.prototype, Uint8Array.prototype),
          Object.setPrototypeOf(s, Uint8Array),
          (s.alloc = function (e, t, n) {
            return (l(e), e <= 0)
              ? o(e)
              : void 0 !== t
              ? "string" == typeof n
                ? o(e).fill(t, n)
                : o(e).fill(t)
              : o(e);
          }),
          (s.allocUnsafe = function (e) {
            return c(e);
          }),
          (s.allocUnsafeSlow = function (e) {
            return c(e);
          }),
          (s.isBuffer = function (e) {
            return null != e && !0 === e._isBuffer && e !== s.prototype;
          }),
          (s.compare = function (e, t) {
            if (
              (R(e, Uint8Array) && (e = s.from(e, e.offset, e.byteLength)),
              R(t, Uint8Array) && (t = s.from(t, t.offset, t.byteLength)),
              !s.isBuffer(e) || !s.isBuffer(t))
            )
              throw TypeError(
                'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
              );
            if (e === t) return 0;
            let n = e.length,
              r = t.length;
            for (let i = 0, a = Math.min(n, r); i < a; ++i)
              if (e[i] !== t[i]) {
                (n = e[i]), (r = t[i]);
                break;
              }
            return n < r ? -1 : r < n ? 1 : 0;
          }),
          (s.isEncoding = function (e) {
            switch (String(e).toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "latin1":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return !0;
              default:
                return !1;
            }
          }),
          (s.concat = function (e, t) {
            let n;
            if (!Array.isArray(e))
              throw TypeError('"list" argument must be an Array of Buffers');
            if (0 === e.length) return s.alloc(0);
            if (void 0 === t)
              for (n = 0, t = 0; n < e.length; ++n) t += e[n].length;
            let r = s.allocUnsafe(t),
              i = 0;
            for (n = 0; n < e.length; ++n) {
              let t = e[n];
              if (R(t, Uint8Array))
                i + t.length > r.length
                  ? (s.isBuffer(t) || (t = s.from(t)), t.copy(r, i))
                  : Uint8Array.prototype.set.call(r, t, i);
              else if (s.isBuffer(t)) t.copy(r, i);
              else
                throw TypeError('"list" argument must be an Array of Buffers');
              i += t.length;
            }
            return r;
          }),
          (s.byteLength = h),
          (s.prototype._isBuffer = !0),
          (s.prototype.swap16 = function () {
            let e = this.length;
            if (e % 2 != 0)
              throw RangeError("Buffer size must be a multiple of 16-bits");
            for (let t = 0; t < e; t += 2) y(this, t, t + 1);
            return this;
          }),
          (s.prototype.swap32 = function () {
            let e = this.length;
            if (e % 4 != 0)
              throw RangeError("Buffer size must be a multiple of 32-bits");
            for (let t = 0; t < e; t += 4)
              y(this, t, t + 3), y(this, t + 1, t + 2);
            return this;
          }),
          (s.prototype.swap64 = function () {
            let e = this.length;
            if (e % 8 != 0)
              throw RangeError("Buffer size must be a multiple of 64-bits");
            for (let t = 0; t < e; t += 8)
              y(this, t, t + 7),
                y(this, t + 1, t + 6),
                y(this, t + 2, t + 5),
                y(this, t + 3, t + 4);
            return this;
          }),
          (s.prototype.toString = function () {
            let e = this.length;
            return 0 === e
              ? ""
              : 0 == arguments.length
              ? v(this, 0, e)
              : m.apply(this, arguments);
          }),
          (s.prototype.toLocaleString = s.prototype.toString),
          (s.prototype.equals = function (e) {
            if (!s.isBuffer(e)) throw TypeError("Argument must be a Buffer");
            return this === e || 0 === s.compare(this, e);
          }),
          (s.prototype.inspect = function () {
            let e = "",
              n = t.INSPECT_MAX_BYTES;
            return (
              (e = this.toString("hex", 0, n)
                .replace(/(.{2})/g, "$1 ")
                .trim()),
              this.length > n && (e += " ... "),
              "<Buffer " + e + ">"
            );
          }),
          a && (s.prototype[a] = s.prototype.inspect),
          (s.prototype.compare = function (e, t, n, r, i) {
            if (
              (R(e, Uint8Array) && (e = s.from(e, e.offset, e.byteLength)),
              !s.isBuffer(e))
            )
              throw TypeError(
                'The "target" argument must be one of type Buffer or Uint8Array. Received type ' +
                  typeof e
              );
            if (
              (void 0 === t && (t = 0),
              void 0 === n && (n = e ? e.length : 0),
              void 0 === r && (r = 0),
              void 0 === i && (i = this.length),
              t < 0 || n > e.length || r < 0 || i > this.length)
            )
              throw RangeError("out of range index");
            if (r >= i && t >= n) return 0;
            if (r >= i) return -1;
            if (t >= n) return 1;
            if (((t >>>= 0), (n >>>= 0), (r >>>= 0), (i >>>= 0), this === e))
              return 0;
            let a = i - r,
              o = n - t,
              u = Math.min(a, o),
              l = this.slice(r, i),
              c = e.slice(t, n);
            for (let e = 0; e < u; ++e)
              if (l[e] !== c[e]) {
                (a = l[e]), (o = c[e]);
                break;
              }
            return a < o ? -1 : o < a ? 1 : 0;
          }),
          (s.prototype.includes = function (e, t, n) {
            return -1 !== this.indexOf(e, t, n);
          }),
          (s.prototype.indexOf = function (e, t, n) {
            return g(this, e, t, n, !0);
          }),
          (s.prototype.lastIndexOf = function (e, t, n) {
            return g(this, e, t, n, !1);
          }),
          (s.prototype.write = function (e, t, n, r) {
            var i, a, o, s, u, l, c, d;
            if (void 0 === t) (r = "utf8"), (n = this.length), (t = 0);
            else if (void 0 === n && "string" == typeof t)
              (r = t), (n = this.length), (t = 0);
            else if (isFinite(t))
              (t >>>= 0),
                isFinite(n)
                  ? ((n >>>= 0), void 0 === r && (r = "utf8"))
                  : ((r = n), (n = void 0));
            else
              throw Error(
                "Buffer.write(string, encoding, offset[, length]) is no longer supported"
              );
            let f = this.length - t;
            if (
              ((void 0 === n || n > f) && (n = f),
              (e.length > 0 && (n < 0 || t < 0)) || t > this.length)
            )
              throw RangeError("Attempt to write outside buffer bounds");
            r || (r = "utf8");
            let p = !1;
            for (;;)
              switch (r) {
                case "hex":
                  return (function (e, t, n, r) {
                    let i;
                    n = Number(n) || 0;
                    let a = e.length - n;
                    r ? (r = Number(r)) > a && (r = a) : (r = a);
                    let o = t.length;
                    for (r > o / 2 && (r = o / 2), i = 0; i < r; ++i) {
                      let r = parseInt(t.substr(2 * i, 2), 16);
                      if (r != r) break;
                      e[n + i] = r;
                    }
                    return i;
                  })(this, e, t, n);
                case "utf8":
                case "utf-8":
                  return (i = t), (a = n), D(M(e, this.length - i), this, i, a);
                case "ascii":
                case "latin1":
                case "binary":
                  return (
                    (o = t),
                    (s = n),
                    D(
                      (function (e) {
                        let t = [];
                        for (let n = 0; n < e.length; ++n)
                          t.push(255 & e.charCodeAt(n));
                        return t;
                      })(e),
                      this,
                      o,
                      s
                    )
                  );
                case "base64":
                  return (u = t), (l = n), D(N(e), this, u, l);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return (
                    (c = t),
                    (d = n),
                    D(
                      (function (e, t) {
                        let n, r;
                        let i = [];
                        for (let a = 0; a < e.length && !((t -= 2) < 0); ++a)
                          (r = (n = e.charCodeAt(a)) >> 8),
                            i.push(n % 256),
                            i.push(r);
                        return i;
                      })(e, this.length - c),
                      this,
                      c,
                      d
                    )
                  );
                default:
                  if (p) throw TypeError("Unknown encoding: " + r);
                  (r = ("" + r).toLowerCase()), (p = !0);
              }
          }),
          (s.prototype.toJSON = function () {
            return {
              type: "Buffer",
              data: Array.prototype.slice.call(this._arr || this, 0),
            };
          }),
          (s.prototype.slice = function (e, t) {
            let n = this.length;
            (e = ~~e),
              (t = void 0 === t ? n : ~~t),
              e < 0 ? (e += n) < 0 && (e = 0) : e > n && (e = n),
              t < 0 ? (t += n) < 0 && (t = 0) : t > n && (t = n),
              t < e && (t = e);
            let r = this.subarray(e, t);
            return Object.setPrototypeOf(r, s.prototype), r;
          }),
          (s.prototype.readUintLE = s.prototype.readUIntLE =
            function (e, t, n) {
              (e >>>= 0), (t >>>= 0), n || w(e, t, this.length);
              let r = this[e],
                i = 1,
                a = 0;
              for (; ++a < t && (i *= 256); ) r += this[e + a] * i;
              return r;
            }),
          (s.prototype.readUintBE = s.prototype.readUIntBE =
            function (e, t, n) {
              (e >>>= 0), (t >>>= 0), n || w(e, t, this.length);
              let r = this[e + --t],
                i = 1;
              for (; t > 0 && (i *= 256); ) r += this[e + --t] * i;
              return r;
            }),
          (s.prototype.readUint8 = s.prototype.readUInt8 =
            function (e, t) {
              return (e >>>= 0), t || w(e, 1, this.length), this[e];
            }),
          (s.prototype.readUint16LE = s.prototype.readUInt16LE =
            function (e, t) {
              return (
                (e >>>= 0),
                t || w(e, 2, this.length),
                this[e] | (this[e + 1] << 8)
              );
            }),
          (s.prototype.readUint16BE = s.prototype.readUInt16BE =
            function (e, t) {
              return (
                (e >>>= 0),
                t || w(e, 2, this.length),
                (this[e] << 8) | this[e + 1]
              );
            }),
          (s.prototype.readUint32LE = s.prototype.readUInt32LE =
            function (e, t) {
              return (
                (e >>>= 0),
                t || w(e, 4, this.length),
                (this[e] | (this[e + 1] << 8) | (this[e + 2] << 16)) +
                  16777216 * this[e + 3]
              );
            }),
          (s.prototype.readUint32BE = s.prototype.readUInt32BE =
            function (e, t) {
              return (
                (e >>>= 0),
                t || w(e, 4, this.length),
                16777216 * this[e] +
                  ((this[e + 1] << 16) | (this[e + 2] << 8) | this[e + 3])
              );
            }),
          (s.prototype.readBigUInt64LE = L(function (e) {
            k((e >>>= 0), "offset");
            let t = this[e],
              n = this[e + 7];
            (void 0 === t || void 0 === n) && j(e, this.length - 8);
            let r =
                t + 256 * this[++e] + 65536 * this[++e] + 16777216 * this[++e],
              i =
                this[++e] + 256 * this[++e] + 65536 * this[++e] + 16777216 * n;
            return BigInt(r) + (BigInt(i) << BigInt(32));
          })),
          (s.prototype.readBigUInt64BE = L(function (e) {
            k((e >>>= 0), "offset");
            let t = this[e],
              n = this[e + 7];
            (void 0 === t || void 0 === n) && j(e, this.length - 8);
            let r =
                16777216 * t + 65536 * this[++e] + 256 * this[++e] + this[++e],
              i =
                16777216 * this[++e] + 65536 * this[++e] + 256 * this[++e] + n;
            return (BigInt(r) << BigInt(32)) + BigInt(i);
          })),
          (s.prototype.readIntLE = function (e, t, n) {
            (e >>>= 0), (t >>>= 0), n || w(e, t, this.length);
            let r = this[e],
              i = 1,
              a = 0;
            for (; ++a < t && (i *= 256); ) r += this[e + a] * i;
            return r >= (i *= 128) && (r -= Math.pow(2, 8 * t)), r;
          }),
          (s.prototype.readIntBE = function (e, t, n) {
            (e >>>= 0), (t >>>= 0), n || w(e, t, this.length);
            let r = t,
              i = 1,
              a = this[e + --r];
            for (; r > 0 && (i *= 256); ) a += this[e + --r] * i;
            return a >= (i *= 128) && (a -= Math.pow(2, 8 * t)), a;
          }),
          (s.prototype.readInt8 = function (e, t) {
            return ((e >>>= 0), t || w(e, 1, this.length), 128 & this[e])
              ? -((255 - this[e] + 1) * 1)
              : this[e];
          }),
          (s.prototype.readInt16LE = function (e, t) {
            (e >>>= 0), t || w(e, 2, this.length);
            let n = this[e] | (this[e + 1] << 8);
            return 32768 & n ? 4294901760 | n : n;
          }),
          (s.prototype.readInt16BE = function (e, t) {
            (e >>>= 0), t || w(e, 2, this.length);
            let n = this[e + 1] | (this[e] << 8);
            return 32768 & n ? 4294901760 | n : n;
          }),
          (s.prototype.readInt32LE = function (e, t) {
            return (
              (e >>>= 0),
              t || w(e, 4, this.length),
              this[e] |
                (this[e + 1] << 8) |
                (this[e + 2] << 16) |
                (this[e + 3] << 24)
            );
          }),
          (s.prototype.readInt32BE = function (e, t) {
            return (
              (e >>>= 0),
              t || w(e, 4, this.length),
              (this[e] << 24) |
                (this[e + 1] << 16) |
                (this[e + 2] << 8) |
                this[e + 3]
            );
          }),
          (s.prototype.readBigInt64LE = L(function (e) {
            k((e >>>= 0), "offset");
            let t = this[e],
              n = this[e + 7];
            (void 0 === t || void 0 === n) && j(e, this.length - 8);
            let r =
              this[e + 4] + 256 * this[e + 5] + 65536 * this[e + 6] + (n << 24);
            return (
              (BigInt(r) << BigInt(32)) +
              BigInt(
                t + 256 * this[++e] + 65536 * this[++e] + 16777216 * this[++e]
              )
            );
          })),
          (s.prototype.readBigInt64BE = L(function (e) {
            k((e >>>= 0), "offset");
            let t = this[e],
              n = this[e + 7];
            (void 0 === t || void 0 === n) && j(e, this.length - 8);
            let r = (t << 24) + 65536 * this[++e] + 256 * this[++e] + this[++e];
            return (
              (BigInt(r) << BigInt(32)) +
              BigInt(
                16777216 * this[++e] + 65536 * this[++e] + 256 * this[++e] + n
              )
            );
          })),
          (s.prototype.readFloatLE = function (e, t) {
            return (
              (e >>>= 0), t || w(e, 4, this.length), i.read(this, e, !0, 23, 4)
            );
          }),
          (s.prototype.readFloatBE = function (e, t) {
            return (
              (e >>>= 0), t || w(e, 4, this.length), i.read(this, e, !1, 23, 4)
            );
          }),
          (s.prototype.readDoubleLE = function (e, t) {
            return (
              (e >>>= 0), t || w(e, 8, this.length), i.read(this, e, !0, 52, 8)
            );
          }),
          (s.prototype.readDoubleBE = function (e, t) {
            return (
              (e >>>= 0), t || w(e, 8, this.length), i.read(this, e, !1, 52, 8)
            );
          }),
          (s.prototype.writeUintLE = s.prototype.writeUIntLE =
            function (e, t, n, r) {
              if (((e = +e), (t >>>= 0), (n >>>= 0), !r)) {
                let r = Math.pow(2, 8 * n) - 1;
                E(this, e, t, n, r, 0);
              }
              let i = 1,
                a = 0;
              for (this[t] = 255 & e; ++a < n && (i *= 256); )
                this[t + a] = (e / i) & 255;
              return t + n;
            }),
          (s.prototype.writeUintBE = s.prototype.writeUIntBE =
            function (e, t, n, r) {
              if (((e = +e), (t >>>= 0), (n >>>= 0), !r)) {
                let r = Math.pow(2, 8 * n) - 1;
                E(this, e, t, n, r, 0);
              }
              let i = n - 1,
                a = 1;
              for (this[t + i] = 255 & e; --i >= 0 && (a *= 256); )
                this[t + i] = (e / a) & 255;
              return t + n;
            }),
          (s.prototype.writeUint8 = s.prototype.writeUInt8 =
            function (e, t, n) {
              return (
                (e = +e),
                (t >>>= 0),
                n || E(this, e, t, 1, 255, 0),
                (this[t] = 255 & e),
                t + 1
              );
            }),
          (s.prototype.writeUint16LE = s.prototype.writeUInt16LE =
            function (e, t, n) {
              return (
                (e = +e),
                (t >>>= 0),
                n || E(this, e, t, 2, 65535, 0),
                (this[t] = 255 & e),
                (this[t + 1] = e >>> 8),
                t + 2
              );
            }),
          (s.prototype.writeUint16BE = s.prototype.writeUInt16BE =
            function (e, t, n) {
              return (
                (e = +e),
                (t >>>= 0),
                n || E(this, e, t, 2, 65535, 0),
                (this[t] = e >>> 8),
                (this[t + 1] = 255 & e),
                t + 2
              );
            }),
          (s.prototype.writeUint32LE = s.prototype.writeUInt32LE =
            function (e, t, n) {
              return (
                (e = +e),
                (t >>>= 0),
                n || E(this, e, t, 4, 4294967295, 0),
                (this[t + 3] = e >>> 24),
                (this[t + 2] = e >>> 16),
                (this[t + 1] = e >>> 8),
                (this[t] = 255 & e),
                t + 4
              );
            }),
          (s.prototype.writeUint32BE = s.prototype.writeUInt32BE =
            function (e, t, n) {
              return (
                (e = +e),
                (t >>>= 0),
                n || E(this, e, t, 4, 4294967295, 0),
                (this[t] = e >>> 24),
                (this[t + 1] = e >>> 16),
                (this[t + 2] = e >>> 8),
                (this[t + 3] = 255 & e),
                t + 4
              );
            }),
          (s.prototype.writeBigUInt64LE = L(function (e, t = 0) {
            return x(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"));
          })),
          (s.prototype.writeBigUInt64BE = L(function (e, t = 0) {
            return C(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"));
          })),
          (s.prototype.writeIntLE = function (e, t, n, r) {
            if (((e = +e), (t >>>= 0), !r)) {
              let r = Math.pow(2, 8 * n - 1);
              E(this, e, t, n, r - 1, -r);
            }
            let i = 0,
              a = 1,
              o = 0;
            for (this[t] = 255 & e; ++i < n && (a *= 256); )
              e < 0 && 0 === o && 0 !== this[t + i - 1] && (o = 1),
                (this[t + i] = (((e / a) >> 0) - o) & 255);
            return t + n;
          }),
          (s.prototype.writeIntBE = function (e, t, n, r) {
            if (((e = +e), (t >>>= 0), !r)) {
              let r = Math.pow(2, 8 * n - 1);
              E(this, e, t, n, r - 1, -r);
            }
            let i = n - 1,
              a = 1,
              o = 0;
            for (this[t + i] = 255 & e; --i >= 0 && (a *= 256); )
              e < 0 && 0 === o && 0 !== this[t + i + 1] && (o = 1),
                (this[t + i] = (((e / a) >> 0) - o) & 255);
            return t + n;
          }),
          (s.prototype.writeInt8 = function (e, t, n) {
            return (
              (e = +e),
              (t >>>= 0),
              n || E(this, e, t, 1, 127, -128),
              e < 0 && (e = 255 + e + 1),
              (this[t] = 255 & e),
              t + 1
            );
          }),
          (s.prototype.writeInt16LE = function (e, t, n) {
            return (
              (e = +e),
              (t >>>= 0),
              n || E(this, e, t, 2, 32767, -32768),
              (this[t] = 255 & e),
              (this[t + 1] = e >>> 8),
              t + 2
            );
          }),
          (s.prototype.writeInt16BE = function (e, t, n) {
            return (
              (e = +e),
              (t >>>= 0),
              n || E(this, e, t, 2, 32767, -32768),
              (this[t] = e >>> 8),
              (this[t + 1] = 255 & e),
              t + 2
            );
          }),
          (s.prototype.writeInt32LE = function (e, t, n) {
            return (
              (e = +e),
              (t >>>= 0),
              n || E(this, e, t, 4, 2147483647, -2147483648),
              (this[t] = 255 & e),
              (this[t + 1] = e >>> 8),
              (this[t + 2] = e >>> 16),
              (this[t + 3] = e >>> 24),
              t + 4
            );
          }),
          (s.prototype.writeInt32BE = function (e, t, n) {
            return (
              (e = +e),
              (t >>>= 0),
              n || E(this, e, t, 4, 2147483647, -2147483648),
              e < 0 && (e = 4294967295 + e + 1),
              (this[t] = e >>> 24),
              (this[t + 1] = e >>> 16),
              (this[t + 2] = e >>> 8),
              (this[t + 3] = 255 & e),
              t + 4
            );
          }),
          (s.prototype.writeBigInt64LE = L(function (e, t = 0) {
            return x(
              this,
              e,
              t,
              -BigInt("0x8000000000000000"),
              BigInt("0x7fffffffffffffff")
            );
          })),
          (s.prototype.writeBigInt64BE = L(function (e, t = 0) {
            return C(
              this,
              e,
              t,
              -BigInt("0x8000000000000000"),
              BigInt("0x7fffffffffffffff")
            );
          })),
          (s.prototype.writeFloatLE = function (e, t, n) {
            return T(this, e, t, !0, n);
          }),
          (s.prototype.writeFloatBE = function (e, t, n) {
            return T(this, e, t, !1, n);
          }),
          (s.prototype.writeDoubleLE = function (e, t, n) {
            return S(this, e, t, !0, n);
          }),
          (s.prototype.writeDoubleBE = function (e, t, n) {
            return S(this, e, t, !1, n);
          }),
          (s.prototype.copy = function (e, t, n, r) {
            if (!s.isBuffer(e)) throw TypeError("argument should be a Buffer");
            if (
              (n || (n = 0),
              r || 0 === r || (r = this.length),
              t >= e.length && (t = e.length),
              t || (t = 0),
              r > 0 && r < n && (r = n),
              r === n || 0 === e.length || 0 === this.length)
            )
              return 0;
            if (t < 0) throw RangeError("targetStart out of bounds");
            if (n < 0 || n >= this.length)
              throw RangeError("Index out of range");
            if (r < 0) throw RangeError("sourceEnd out of bounds");
            r > this.length && (r = this.length),
              e.length - t < r - n && (r = e.length - t + n);
            let i = r - n;
            return (
              this === e && "function" == typeof Uint8Array.prototype.copyWithin
                ? this.copyWithin(t, n, r)
                : Uint8Array.prototype.set.call(e, this.subarray(n, r), t),
              i
            );
          }),
          (s.prototype.fill = function (e, t, n, r) {
            let i;
            if ("string" == typeof e) {
              if (
                ("string" == typeof t
                  ? ((r = t), (t = 0), (n = this.length))
                  : "string" == typeof n && ((r = n), (n = this.length)),
                void 0 !== r && "string" != typeof r)
              )
                throw TypeError("encoding must be a string");
              if ("string" == typeof r && !s.isEncoding(r))
                throw TypeError("Unknown encoding: " + r);
              if (1 === e.length) {
                let t = e.charCodeAt(0);
                (("utf8" === r && t < 128) || "latin1" === r) && (e = t);
              }
            } else
              "number" == typeof e
                ? (e &= 255)
                : "boolean" == typeof e && (e = Number(e));
            if (t < 0 || this.length < t || this.length < n)
              throw RangeError("Out of range index");
            if (n <= t) return this;
            if (
              ((t >>>= 0),
              (n = void 0 === n ? this.length : n >>> 0),
              e || (e = 0),
              "number" == typeof e)
            )
              for (i = t; i < n; ++i) this[i] = e;
            else {
              let a = s.isBuffer(e) ? e : s.from(e, r),
                o = a.length;
              if (0 === o)
                throw TypeError(
                  'The value "' + e + '" is invalid for argument "value"'
                );
              for (i = 0; i < n - t; ++i) this[i + t] = a[i % o];
            }
            return this;
          });
        let P = {};
        function O(e, t, n) {
          P[e] = class extends n {
            constructor() {
              super(),
                Object.defineProperty(this, "message", {
                  value: t.apply(this, arguments),
                  writable: !0,
                  configurable: !0,
                }),
                (this.name = `${this.name} [${e}]`),
                this.stack,
                delete this.name;
            }
            get code() {
              return e;
            }
            set code(e) {
              Object.defineProperty(this, "code", {
                configurable: !0,
                enumerable: !0,
                value: e,
                writable: !0,
              });
            }
            toString() {
              return `${this.name} [${e}]: ${this.message}`;
            }
          };
        }
        function I(e) {
          let t = "",
            n = e.length,
            r = "-" === e[0] ? 1 : 0;
          for (; n >= r + 4; n -= 3) t = `_${e.slice(n - 3, n)}${t}`;
          return `${e.slice(0, n)}${t}`;
        }
        function A(e, t, n, r, i, a) {
          if (e > n || e < t) {
            let r;
            let i = "bigint" == typeof t ? "n" : "";
            throw (
              ((r =
                a > 3
                  ? 0 === t || t === BigInt(0)
                    ? `>= 0${i} and < 2${i} ** ${(a + 1) * 8}${i}`
                    : `>= -(2${i} ** ${(a + 1) * 8 - 1}${i}) and < 2 ** ${
                        (a + 1) * 8 - 1
                      }${i}`
                  : `>= ${t}${i} and <= ${n}${i}`),
              new P.ERR_OUT_OF_RANGE("value", r, e))
            );
          }
          k(i, "offset"),
            (void 0 === r[i] || void 0 === r[i + a]) &&
              j(i, r.length - (a + 1));
        }
        function k(e, t) {
          if ("number" != typeof e)
            throw new P.ERR_INVALID_ARG_TYPE(t, "number", e);
        }
        function j(e, t, n) {
          if (Math.floor(e) !== e)
            throw (
              (k(e, n), new P.ERR_OUT_OF_RANGE(n || "offset", "an integer", e))
            );
          if (t < 0) throw new P.ERR_BUFFER_OUT_OF_BOUNDS();
          throw new P.ERR_OUT_OF_RANGE(
            n || "offset",
            `>= ${n ? 1 : 0} and <= ${t}`,
            e
          );
        }
        O(
          "ERR_BUFFER_OUT_OF_BOUNDS",
          function (e) {
            return e
              ? `${e} is outside of buffer bounds`
              : "Attempt to access memory outside buffer bounds";
          },
          RangeError
        ),
          O(
            "ERR_INVALID_ARG_TYPE",
            function (e, t) {
              return `The "${e}" argument must be of type number. Received type ${typeof t}`;
            },
            TypeError
          ),
          O(
            "ERR_OUT_OF_RANGE",
            function (e, t, n) {
              let r = `The value of "${e}" is out of range.`,
                i = n;
              return (
                Number.isInteger(n) && Math.abs(n) > 4294967296
                  ? (i = I(String(n)))
                  : "bigint" == typeof n &&
                    ((i = String(n)),
                    (n > BigInt(2) ** BigInt(32) ||
                      n < -(BigInt(2) ** BigInt(32))) &&
                      (i = I(i)),
                    (i += "n")),
                (r += ` It must be ${t}. Received ${i}`)
              );
            },
            RangeError
          );
        let B = /[^+/0-9A-Za-z-_]/g;
        function M(e, t) {
          let n;
          t = t || 1 / 0;
          let r = e.length,
            i = null,
            a = [];
          for (let o = 0; o < r; ++o) {
            if ((n = e.charCodeAt(o)) > 55295 && n < 57344) {
              if (!i) {
                if (n > 56319 || o + 1 === r) {
                  (t -= 3) > -1 && a.push(239, 191, 189);
                  continue;
                }
                i = n;
                continue;
              }
              if (n < 56320) {
                (t -= 3) > -1 && a.push(239, 191, 189), (i = n);
                continue;
              }
              n = (((i - 55296) << 10) | (n - 56320)) + 65536;
            } else i && (t -= 3) > -1 && a.push(239, 191, 189);
            if (((i = null), n < 128)) {
              if ((t -= 1) < 0) break;
              a.push(n);
            } else if (n < 2048) {
              if ((t -= 2) < 0) break;
              a.push((n >> 6) | 192, (63 & n) | 128);
            } else if (n < 65536) {
              if ((t -= 3) < 0) break;
              a.push((n >> 12) | 224, ((n >> 6) & 63) | 128, (63 & n) | 128);
            } else if (n < 1114112) {
              if ((t -= 4) < 0) break;
              a.push(
                (n >> 18) | 240,
                ((n >> 12) & 63) | 128,
                ((n >> 6) & 63) | 128,
                (63 & n) | 128
              );
            } else throw Error("Invalid code point");
          }
          return a;
        }
        function N(e) {
          return r.toByteArray(
            (function (e) {
              if ((e = (e = e.split("=")[0]).trim().replace(B, "")).length < 2)
                return "";
              for (; e.length % 4 != 0; ) e += "=";
              return e;
            })(e)
          );
        }
        function D(e, t, n, r) {
          let i;
          for (i = 0; i < r && !(i + n >= t.length) && !(i >= e.length); ++i)
            t[i + n] = e[i];
          return i;
        }
        function R(e, t) {
          return (
            e instanceof t ||
            (null != e &&
              null != e.constructor &&
              null != e.constructor.name &&
              e.constructor.name === t.name)
          );
        }
        let F = (function () {
          let e = "0123456789abcdef",
            t = Array(256);
          for (let n = 0; n < 16; ++n) {
            let r = 16 * n;
            for (let i = 0; i < 16; ++i) t[r + i] = e[n] + e[i];
          }
          return t;
        })();
        function L(e) {
          return "undefined" == typeof BigInt ? U : e;
        }
        function U() {
          throw Error("BigInt not supported");
        }
      },
      86010: function (e, t, n) {
        "use strict";
        function r() {
          for (var e, t, n = 0, r = ""; n < arguments.length; )
            (e = arguments[n++]) &&
              (t = (function e(t) {
                var n,
                  r,
                  i = "";
                if ("string" == typeof t || "number" == typeof t) i += t;
                else if ("object" == typeof t) {
                  if (Array.isArray(t))
                    for (n = 0; n < t.length; n++)
                      t[n] && (r = e(t[n])) && (i && (i += " "), (i += r));
                  else for (n in t) t[n] && (i && (i += " "), (i += n));
                }
                return i;
              })(e)) &&
              (r && (r += " "), (r += t));
          return r;
        }
        n.r(t),
          n.d(t, {
            default: function () {
              return r;
            },
          });
      },
      44020: function (e) {
        "use strict";
        var t = "%[a-f0-9]{2}",
          n = RegExp("(" + t + ")|([^%]+?)", "gi"),
          r = RegExp("(" + t + ")+", "gi");
        e.exports = function (e) {
          if ("string" != typeof e)
            throw TypeError(
              "Expected `encodedURI` to be of type `string`, got `" +
                typeof e +
                "`"
            );
          try {
            return (e = e.replace(/\+/g, " ")), decodeURIComponent(e);
          } catch (t) {
            return (function (e) {
              for (
                var t = { "%FE%FF": "��", "%FF%FE": "��" }, i = r.exec(e);
                i;

              ) {
                try {
                  t[i[0]] = decodeURIComponent(i[0]);
                } catch (e) {
                  var a = (function (e) {
                    try {
                      return decodeURIComponent(e);
                    } catch (i) {
                      for (var t = e.match(n) || [], r = 1; r < t.length; r++)
                        t =
                          (e = (function e(t, n) {
                            try {
                              return [decodeURIComponent(t.join(""))];
                            } catch (e) {}
                            if (1 === t.length) return t;
                            n = n || 1;
                            var r = t.slice(0, n),
                              i = t.slice(n);
                            return Array.prototype.concat.call([], e(r), e(i));
                          })(t, r).join("")).match(n) || [];
                      return e;
                    }
                  })(i[0]);
                  a !== i[0] && (t[i[0]] = a);
                }
                i = r.exec(e);
              }
              t["%C2"] = "�";
              for (var o = Object.keys(t), s = 0; s < o.length; s++) {
                var u = o[s];
                e = e.replace(RegExp(u, "g"), t[u]);
              }
              return e;
            })(e);
          }
        };
      },
      65987: function (e) {
        "use strict";
        var t = {
          single_source_shortest_paths: function (e, n, r) {
            var i,
              a,
              o,
              s,
              u,
              l,
              c,
              d = {},
              f = {};
            f[n] = 0;
            var p = t.PriorityQueue.make();
            for (p.push(n, 0); !p.empty(); )
              for (o in ((a = (i = p.pop()).value),
              (s = i.cost),
              (u = e[a] || {})))
                u.hasOwnProperty(o) &&
                  ((l = s + u[o]),
                  (c = f[o]),
                  (void 0 === f[o] || c > l) &&
                    ((f[o] = l), p.push(o, l), (d[o] = a)));
            if (void 0 !== r && void 0 === f[r])
              throw Error(
                ["Could not find a path from ", n, " to ", r, "."].join("")
              );
            return d;
          },
          extract_shortest_path_from_predecessor_list: function (e, t) {
            for (var n = [], r = t; r; ) n.push(r), e[r], (r = e[r]);
            return n.reverse(), n;
          },
          find_path: function (e, n, r) {
            var i = t.single_source_shortest_paths(e, n, r);
            return t.extract_shortest_path_from_predecessor_list(i, r);
          },
          PriorityQueue: {
            make: function (e) {
              var n,
                r = t.PriorityQueue,
                i = {};
              for (n in ((e = e || {}), r))
                r.hasOwnProperty(n) && (i[n] = r[n]);
              return (
                (i.queue = []), (i.sorter = e.sorter || r.default_sorter), i
              );
            },
            default_sorter: function (e, t) {
              return e.cost - t.cost;
            },
            push: function (e, t) {
              this.queue.push({ value: e, cost: t }),
                this.queue.sort(this.sorter);
            },
            pop: function () {
              return this.queue.shift();
            },
            empty: function () {
              return 0 === this.queue.length;
            },
          },
        };
        e.exports = t;
      },
      62378: function (e) {
        "use strict";
        e.exports = function (e) {
          for (var t = [], n = e.length, r = 0; r < n; r++) {
            var i = e.charCodeAt(r);
            if (i >= 55296 && i <= 56319 && n > r + 1) {
              var a = e.charCodeAt(r + 1);
              a >= 56320 &&
                a <= 57343 &&
                ((i = (i - 55296) * 1024 + a - 56320 + 65536), (r += 1));
            }
            if (i < 128) {
              t.push(i);
              continue;
            }
            if (i < 2048) {
              t.push((i >> 6) | 192), t.push((63 & i) | 128);
              continue;
            }
            if (i < 55296 || (i >= 57344 && i < 65536)) {
              t.push((i >> 12) | 224),
                t.push(((i >> 6) & 63) | 128),
                t.push((63 & i) | 128);
              continue;
            }
            if (i >= 65536 && i <= 1114111) {
              t.push((i >> 18) | 240),
                t.push(((i >> 12) & 63) | 128),
                t.push(((i >> 6) & 63) | 128),
                t.push((63 & i) | 128);
              continue;
            }
            t.push(239, 191, 189);
          }
          return new Uint8Array(t).buffer;
        };
      },
      26729: function (e) {
        "use strict";
        var t = Object.prototype.hasOwnProperty,
          n = "~";
        function r() {}
        function i(e, t, n) {
          (this.fn = e), (this.context = t), (this.once = n || !1);
        }
        function a(e, t, r, a, o) {
          if ("function" != typeof r)
            throw TypeError("The listener must be a function");
          var s = new i(r, a || e, o),
            u = n ? n + t : t;
          return (
            e._events[u]
              ? e._events[u].fn
                ? (e._events[u] = [e._events[u], s])
                : e._events[u].push(s)
              : ((e._events[u] = s), e._eventsCount++),
            e
          );
        }
        function o(e, t) {
          0 == --e._eventsCount ? (e._events = new r()) : delete e._events[t];
        }
        function s() {
          (this._events = new r()), (this._eventsCount = 0);
        }
        Object.create &&
          ((r.prototype = Object.create(null)), new r().__proto__ || (n = !1)),
          (s.prototype.eventNames = function () {
            var e,
              r,
              i = [];
            if (0 === this._eventsCount) return i;
            for (r in (e = this._events))
              t.call(e, r) && i.push(n ? r.slice(1) : r);
            return Object.getOwnPropertySymbols
              ? i.concat(Object.getOwnPropertySymbols(e))
              : i;
          }),
          (s.prototype.listeners = function (e) {
            var t = n ? n + e : e,
              r = this._events[t];
            if (!r) return [];
            if (r.fn) return [r.fn];
            for (var i = 0, a = r.length, o = Array(a); i < a; i++)
              o[i] = r[i].fn;
            return o;
          }),
          (s.prototype.listenerCount = function (e) {
            var t = n ? n + e : e,
              r = this._events[t];
            return r ? (r.fn ? 1 : r.length) : 0;
          }),
          (s.prototype.emit = function (e, t, r, i, a, o) {
            var s = n ? n + e : e;
            if (!this._events[s]) return !1;
            var u,
              l,
              c = this._events[s],
              d = arguments.length;
            if (c.fn) {
              switch ((c.once && this.removeListener(e, c.fn, void 0, !0), d)) {
                case 1:
                  return c.fn.call(c.context), !0;
                case 2:
                  return c.fn.call(c.context, t), !0;
                case 3:
                  return c.fn.call(c.context, t, r), !0;
                case 4:
                  return c.fn.call(c.context, t, r, i), !0;
                case 5:
                  return c.fn.call(c.context, t, r, i, a), !0;
                case 6:
                  return c.fn.call(c.context, t, r, i, a, o), !0;
              }
              for (l = 1, u = Array(d - 1); l < d; l++) u[l - 1] = arguments[l];
              c.fn.apply(c.context, u);
            } else {
              var f,
                p = c.length;
              for (l = 0; l < p; l++)
                switch (
                  (c[l].once && this.removeListener(e, c[l].fn, void 0, !0), d)
                ) {
                  case 1:
                    c[l].fn.call(c[l].context);
                    break;
                  case 2:
                    c[l].fn.call(c[l].context, t);
                    break;
                  case 3:
                    c[l].fn.call(c[l].context, t, r);
                    break;
                  case 4:
                    c[l].fn.call(c[l].context, t, r, i);
                    break;
                  default:
                    if (!u)
                      for (f = 1, u = Array(d - 1); f < d; f++)
                        u[f - 1] = arguments[f];
                    c[l].fn.apply(c[l].context, u);
                }
            }
            return !0;
          }),
          (s.prototype.on = function (e, t, n) {
            return a(this, e, t, n, !1);
          }),
          (s.prototype.once = function (e, t, n) {
            return a(this, e, t, n, !0);
          }),
          (s.prototype.removeListener = function (e, t, r, i) {
            var a = n ? n + e : e;
            if (!this._events[a]) return this;
            if (!t) return o(this, a), this;
            var s = this._events[a];
            if (s.fn)
              s.fn !== t ||
                (i && !s.once) ||
                (r && s.context !== r) ||
                o(this, a);
            else {
              for (var u = 0, l = [], c = s.length; u < c; u++)
                (s[u].fn !== t ||
                  (i && !s[u].once) ||
                  (r && s[u].context !== r)) &&
                  l.push(s[u]);
              l.length
                ? (this._events[a] = 1 === l.length ? l[0] : l)
                : o(this, a);
            }
            return this;
          }),
          (s.prototype.removeAllListeners = function (e) {
            var t;
            return (
              e
                ? ((t = n ? n + e : e), this._events[t] && o(this, t))
                : ((this._events = new r()), (this._eventsCount = 0)),
              this
            );
          }),
          (s.prototype.off = s.prototype.removeListener),
          (s.prototype.addListener = s.prototype.on),
          (s.prefixed = n),
          (s.EventEmitter = s),
          (e.exports = s);
      },
      17187: function (e) {
        "use strict";
        var t,
          n = "object" == typeof Reflect ? Reflect : null,
          r =
            n && "function" == typeof n.apply
              ? n.apply
              : function (e, t, n) {
                  return Function.prototype.apply.call(e, t, n);
                };
        t =
          n && "function" == typeof n.ownKeys
            ? n.ownKeys
            : Object.getOwnPropertySymbols
            ? function (e) {
                return Object.getOwnPropertyNames(e).concat(
                  Object.getOwnPropertySymbols(e)
                );
              }
            : function (e) {
                return Object.getOwnPropertyNames(e);
              };
        var i =
          Number.isNaN ||
          function (e) {
            return e != e;
          };
        function a() {
          a.init.call(this);
        }
        (e.exports = a),
          (e.exports.once = function (e, t) {
            return new Promise(function (n, r) {
              function i(n) {
                e.removeListener(t, a), r(n);
              }
              function a() {
                "function" == typeof e.removeListener &&
                  e.removeListener("error", i),
                  n([].slice.call(arguments));
              }
              m(e, t, a, { once: !0 }),
                "error" !== t &&
                  "function" == typeof e.on &&
                  m(e, "error", i, { once: !0 });
            });
          }),
          (a.EventEmitter = a),
          (a.prototype._events = void 0),
          (a.prototype._eventsCount = 0),
          (a.prototype._maxListeners = void 0);
        var o = 10;
        function s(e) {
          if ("function" != typeof e)
            throw TypeError(
              'The "listener" argument must be of type Function. Received type ' +
                typeof e
            );
        }
        function u(e) {
          return void 0 === e._maxListeners
            ? a.defaultMaxListeners
            : e._maxListeners;
        }
        function l(e, t, n, r) {
          if (
            (s(n),
            void 0 === (a = e._events)
              ? ((a = e._events = Object.create(null)), (e._eventsCount = 0))
              : (void 0 !== a.newListener &&
                  (e.emit("newListener", t, n.listener ? n.listener : n),
                  (a = e._events)),
                (o = a[t])),
            void 0 === o)
          )
            (o = a[t] = n), ++e._eventsCount;
          else if (
            ("function" == typeof o
              ? (o = a[t] = r ? [n, o] : [o, n])
              : r
              ? o.unshift(n)
              : o.push(n),
            (i = u(e)) > 0 && o.length > i && !o.warned)
          ) {
            o.warned = !0;
            var i,
              a,
              o,
              l = Error(
                "Possible EventEmitter memory leak detected. " +
                  o.length +
                  " " +
                  String(t) +
                  " listeners added. Use emitter.setMaxListeners() to increase limit"
              );
            (l.name = "MaxListenersExceededWarning"),
              (l.emitter = e),
              (l.type = t),
              (l.count = o.length),
              console && console.warn && console.warn(l);
          }
          return e;
        }
        function c() {
          if (!this.fired)
            return (this.target.removeListener(this.type, this.wrapFn),
            (this.fired = !0),
            0 == arguments.length)
              ? this.listener.call(this.target)
              : this.listener.apply(this.target, arguments);
        }
        function d(e, t, n) {
          var r = {
              fired: !1,
              wrapFn: void 0,
              target: e,
              type: t,
              listener: n,
            },
            i = c.bind(r);
          return (i.listener = n), (r.wrapFn = i), i;
        }
        function f(e, t, n) {
          var r = e._events;
          if (void 0 === r) return [];
          var i = r[t];
          return void 0 === i
            ? []
            : "function" == typeof i
            ? n
              ? [i.listener || i]
              : [i]
            : n
            ? (function (e) {
                for (var t = Array(e.length), n = 0; n < t.length; ++n)
                  t[n] = e[n].listener || e[n];
                return t;
              })(i)
            : h(i, i.length);
        }
        function p(e) {
          var t = this._events;
          if (void 0 !== t) {
            var n = t[e];
            if ("function" == typeof n) return 1;
            if (void 0 !== n) return n.length;
          }
          return 0;
        }
        function h(e, t) {
          for (var n = Array(t), r = 0; r < t; ++r) n[r] = e[r];
          return n;
        }
        function m(e, t, n, r) {
          if ("function" == typeof e.on) r.once ? e.once(t, n) : e.on(t, n);
          else if ("function" == typeof e.addEventListener)
            e.addEventListener(t, function i(a) {
              r.once && e.removeEventListener(t, i), n(a);
            });
          else
            throw TypeError(
              'The "emitter" argument must be of type EventEmitter. Received type ' +
                typeof e
            );
        }
        Object.defineProperty(a, "defaultMaxListeners", {
          enumerable: !0,
          get: function () {
            return o;
          },
          set: function (e) {
            if ("number" != typeof e || e < 0 || i(e))
              throw RangeError(
                'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' +
                  e +
                  "."
              );
            o = e;
          },
        }),
          (a.init = function () {
            (void 0 === this._events ||
              this._events === Object.getPrototypeOf(this)._events) &&
              ((this._events = Object.create(null)), (this._eventsCount = 0)),
              (this._maxListeners = this._maxListeners || void 0);
          }),
          (a.prototype.setMaxListeners = function (e) {
            if ("number" != typeof e || e < 0 || i(e))
              throw RangeError(
                'The value of "n" is out of range. It must be a non-negative number. Received ' +
                  e +
                  "."
              );
            return (this._maxListeners = e), this;
          }),
          (a.prototype.getMaxListeners = function () {
            return u(this);
          }),
          (a.prototype.emit = function (e) {
            for (var t = [], n = 1; n < arguments.length; n++)
              t.push(arguments[n]);
            var i = "error" === e,
              a = this._events;
            if (void 0 !== a) i = i && void 0 === a.error;
            else if (!i) return !1;
            if (i) {
              if ((t.length > 0 && (o = t[0]), o instanceof Error)) throw o;
              var o,
                s = Error(
                  "Unhandled error." + (o ? " (" + o.message + ")" : "")
                );
              throw ((s.context = o), s);
            }
            var u = a[e];
            if (void 0 === u) return !1;
            if ("function" == typeof u) r(u, this, t);
            else
              for (var l = u.length, c = h(u, l), n = 0; n < l; ++n)
                r(c[n], this, t);
            return !0;
          }),
          (a.prototype.addListener = function (e, t) {
            return l(this, e, t, !1);
          }),
          (a.prototype.on = a.prototype.addListener),
          (a.prototype.prependListener = function (e, t) {
            return l(this, e, t, !0);
          }),
          (a.prototype.once = function (e, t) {
            return s(t), this.on(e, d(this, e, t)), this;
          }),
          (a.prototype.prependOnceListener = function (e, t) {
            return s(t), this.prependListener(e, d(this, e, t)), this;
          }),
          (a.prototype.removeListener = function (e, t) {
            var n, r, i, a, o;
            if ((s(t), void 0 === (r = this._events) || void 0 === (n = r[e])))
              return this;
            if (n === t || n.listener === t)
              0 == --this._eventsCount
                ? (this._events = Object.create(null))
                : (delete r[e],
                  r.removeListener &&
                    this.emit("removeListener", e, n.listener || t));
            else if ("function" != typeof n) {
              for (i = -1, a = n.length - 1; a >= 0; a--)
                if (n[a] === t || n[a].listener === t) {
                  (o = n[a].listener), (i = a);
                  break;
                }
              if (i < 0) return this;
              0 === i
                ? n.shift()
                : (function (e, t) {
                    for (; t + 1 < e.length; t++) e[t] = e[t + 1];
                    e.pop();
                  })(n, i),
                1 === n.length && (r[e] = n[0]),
                void 0 !== r.removeListener &&
                  this.emit("removeListener", e, o || t);
            }
            return this;
          }),
          (a.prototype.off = a.prototype.removeListener),
          (a.prototype.removeAllListeners = function (e) {
            var t, n, r;
            if (void 0 === (n = this._events)) return this;
            if (void 0 === n.removeListener)
              return (
                0 == arguments.length
                  ? ((this._events = Object.create(null)),
                    (this._eventsCount = 0))
                  : void 0 !== n[e] &&
                    (0 == --this._eventsCount
                      ? (this._events = Object.create(null))
                      : delete n[e]),
                this
              );
            if (0 == arguments.length) {
              var i,
                a = Object.keys(n);
              for (r = 0; r < a.length; ++r)
                "removeListener" !== (i = a[r]) && this.removeAllListeners(i);
              return (
                this.removeAllListeners("removeListener"),
                (this._events = Object.create(null)),
                (this._eventsCount = 0),
                this
              );
            }
            if ("function" == typeof (t = n[e])) this.removeListener(e, t);
            else if (void 0 !== t)
              for (r = t.length - 1; r >= 0; r--) this.removeListener(e, t[r]);
            return this;
          }),
          (a.prototype.listeners = function (e) {
            return f(this, e, !0);
          }),
          (a.prototype.rawListeners = function (e) {
            return f(this, e, !1);
          }),
          (a.listenerCount = function (e, t) {
            return "function" == typeof e.listenerCount
              ? e.listenerCount(t)
              : p.call(e, t);
          }),
          (a.prototype.listenerCount = p),
          (a.prototype.eventNames = function () {
            return this._eventsCount > 0 ? t(this._events) : [];
          });
      },
      92806: function (e) {
        "use strict";
        e.exports = function (e, t) {
          for (
            var n = {}, r = Object.keys(e), i = Array.isArray(t), a = 0;
            a < r.length;
            a++
          ) {
            var o = r[a],
              s = e[o];
            (i ? -1 !== t.indexOf(o) : t(o, s, e)) && (n[o] = s);
          }
          return n;
        };
      },
      80645: function (e, t) {
        /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ (t.read =
          function (e, t, n, r, i) {
            var a,
              o,
              s = 8 * i - r - 1,
              u = (1 << s) - 1,
              l = u >> 1,
              c = -7,
              d = n ? i - 1 : 0,
              f = n ? -1 : 1,
              p = e[t + d];
            for (
              d += f, a = p & ((1 << -c) - 1), p >>= -c, c += s;
              c > 0;
              a = 256 * a + e[t + d], d += f, c -= 8
            );
            for (
              o = a & ((1 << -c) - 1), a >>= -c, c += r;
              c > 0;
              o = 256 * o + e[t + d], d += f, c -= 8
            );
            if (0 === a) a = 1 - l;
            else {
              if (a === u) return o ? NaN : (p ? -1 : 1) * (1 / 0);
              (o += Math.pow(2, r)), (a -= l);
            }
            return (p ? -1 : 1) * o * Math.pow(2, a - r);
          }),
          (t.write = function (e, t, n, r, i, a) {
            var o,
              s,
              u,
              l = 8 * a - i - 1,
              c = (1 << l) - 1,
              d = c >> 1,
              f = 23 === i ? 5960464477539062e-23 : 0,
              p = r ? 0 : a - 1,
              h = r ? 1 : -1,
              m = t < 0 || (0 === t && 1 / t < 0) ? 1 : 0;
            for (
              isNaN((t = Math.abs(t))) || t === 1 / 0
                ? ((s = isNaN(t) ? 1 : 0), (o = c))
                : ((o = Math.floor(Math.log(t) / Math.LN2)),
                  t * (u = Math.pow(2, -o)) < 1 && (o--, (u *= 2)),
                  o + d >= 1 ? (t += f / u) : (t += f * Math.pow(2, 1 - d)),
                  t * u >= 2 && (o++, (u /= 2)),
                  o + d >= c
                    ? ((s = 0), (o = c))
                    : o + d >= 1
                    ? ((s = (t * u - 1) * Math.pow(2, i)), (o += d))
                    : ((s = t * Math.pow(2, d - 1) * Math.pow(2, i)), (o = 0)));
              i >= 8;
              e[n + p] = 255 & s, p += h, s /= 256, i -= 8
            );
            for (
              o = (o << i) | s, l += i;
              l > 0;
              e[n + p] = 255 & o, p += h, o /= 256, l -= 8
            );
            e[n + p - h] |= 128 * m;
          });
      },
      6840: function (e, t, n) {
        (window.__NEXT_P = window.__NEXT_P || []).push([
          "/_app",
          function () {
            return n(81349);
          },
        ]);
      },
      56559: function (e, t, n) {
        "use strict";
        n.d(t, {
          z: function () {
            return r;
          },
        });
        let r = [
          { inputs: [], name: "ECDSAInvalidSignature", type: "error" },
          {
            inputs: [
              { internalType: "uint256", name: "length", type: "uint256" },
            ],
            name: "ECDSAInvalidSignatureLength",
            type: "error",
          },
          {
            inputs: [{ internalType: "bytes32", name: "s", type: "bytes32" }],
            name: "ECDSAInvalidSignatureS",
            type: "error",
          },
          {
            inputs: [
              { internalType: "address", name: "spender", type: "address" },
              { internalType: "uint256", name: "allowance", type: "uint256" },
              { internalType: "uint256", name: "needed", type: "uint256" },
            ],
            name: "ERC20InsufficientAllowance",
            type: "error",
          },
          {
            inputs: [
              { internalType: "address", name: "sender", type: "address" },
              { internalType: "uint256", name: "balance", type: "uint256" },
              { internalType: "uint256", name: "needed", type: "uint256" },
            ],
            name: "ERC20InsufficientBalance",
            type: "error",
          },
          {
            inputs: [
              { internalType: "address", name: "approver", type: "address" },
            ],
            name: "ERC20InvalidApprover",
            type: "error",
          },
          {
            inputs: [
              { internalType: "address", name: "receiver", type: "address" },
            ],
            name: "ERC20InvalidReceiver",
            type: "error",
          },
          {
            inputs: [
              { internalType: "address", name: "sender", type: "address" },
            ],
            name: "ERC20InvalidSender",
            type: "error",
          },
          {
            inputs: [
              { internalType: "address", name: "spender", type: "address" },
            ],
            name: "ERC20InvalidSpender",
            type: "error",
          },
          {
            inputs: [
              { internalType: "uint256", name: "deadline", type: "uint256" },
            ],
            name: "ERC2612ExpiredSignature",
            type: "error",
          },
          {
            inputs: [
              { internalType: "address", name: "signer", type: "address" },
              { internalType: "address", name: "owner", type: "address" },
            ],
            name: "ERC2612InvalidSigner",
            type: "error",
          },
          {
            inputs: [
              { internalType: "address", name: "account", type: "address" },
              {
                internalType: "uint256",
                name: "currentNonce",
                type: "uint256",
              },
            ],
            name: "InvalidAccountNonce",
            type: "error",
          },
          { inputs: [], name: "InvalidShortString", type: "error" },
          {
            inputs: [{ internalType: "string", name: "str", type: "string" }],
            name: "StringTooLong",
            type: "error",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                indexed: !0,
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                indexed: !1,
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            name: "Approval",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [],
            name: "EIP712DomainChanged",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                indexed: !0,
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                indexed: !1,
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            name: "Transfer",
            type: "event",
          },
          {
            inputs: [],
            name: "DOMAIN_SEPARATOR",
            outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "owner", type: "address" },
              { internalType: "address", name: "spender", type: "address" },
            ],
            name: "allowance",
            outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "spender", type: "address" },
              { internalType: "uint256", name: "value", type: "uint256" },
            ],
            name: "approve",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "account", type: "address" },
            ],
            name: "balanceOf",
            outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [],
            name: "decimals",
            outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [],
            name: "eip712Domain",
            outputs: [
              { internalType: "bytes1", name: "fields", type: "bytes1" },
              { internalType: "string", name: "name", type: "string" },
              { internalType: "string", name: "version", type: "string" },
              { internalType: "uint256", name: "chainId", type: "uint256" },
              {
                internalType: "address",
                name: "verifyingContract",
                type: "address",
              },
              { internalType: "bytes32", name: "salt", type: "bytes32" },
              {
                internalType: "uint256[]",
                name: "extensions",
                type: "uint256[]",
              },
            ],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [],
            name: "name",
            outputs: [{ internalType: "string", name: "", type: "string" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "owner", type: "address" },
            ],
            name: "nonces",
            outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "owner", type: "address" },
              { internalType: "address", name: "spender", type: "address" },
              { internalType: "uint256", name: "value", type: "uint256" },
              { internalType: "uint256", name: "deadline", type: "uint256" },
              { internalType: "uint8", name: "v", type: "uint8" },
              { internalType: "bytes32", name: "r", type: "bytes32" },
              { internalType: "bytes32", name: "s", type: "bytes32" },
            ],
            name: "permit",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [],
            name: "symbol",
            outputs: [{ internalType: "string", name: "", type: "string" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [],
            name: "totalSupply",
            outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "to", type: "address" },
              { internalType: "uint256", name: "value", type: "uint256" },
            ],
            name: "transfer",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "from", type: "address" },
              { internalType: "address", name: "to", type: "address" },
              { internalType: "uint256", name: "value", type: "uint256" },
            ],
            name: "transferFrom",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "nonpayable",
            type: "function",
          },
        ];
      },
      17461: function (e, t, n) {
        "use strict";
        n.d(t, {
          a: function () {
            return i;
          },
        });
        var r = n(87066);
        async function i(e, t, n) {
          let i = await (0, r.Z)("".concat(e, "/").concat(t), n);
          if (200 === i.status) return i.data;
          throw Error(i.data);
        }
      },
      3714: function (e, t, n) {
        "use strict";
        n.d(t, {
          K: function () {
            return u;
          },
        });
        var r = n(45775),
          i = n(17019),
          a = n(17461);
        class o {
          async currencies() {
            return Object.entries(
              (
                await (0, a.a)(
                  this.baseUrl,
                  "info/tokens/".concat(this.chain.id)
                )
              ).tokenMap
            ).map((e) => {
              let [t, n] = e;
              return {
                address: (0, r.K)(t),
                name: n.name,
                symbol: n.symbol,
                decimals: n.decimals,
              };
            });
          }
          async prices() {
            return Object.entries(
              (
                await (0, a.a)(
                  this.baseUrl,
                  "pricing/token/".concat(this.chain.id)
                )
              ).tokenPrices
            ).reduce((e, t) => {
              let [n, i] = t;
              return (e[(0, r.K)(n)] = i), e;
            }, {});
          }
          async quote(e, t, n, i, o, s) {
            (this.latestState = void 0), console.log("Fetching quote...");
            let u = await (0, a.a)(this.baseUrl, "sor/quote/v2", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                accept: "application/json",
              },
              timeout: this.TIMEOUT,
              data: {
                chainId: this.chain.id,
                inputTokens: [
                  { tokenAddress: (0, r.K)(e.address), amount: t.toString() },
                ],
                outputTokens: [
                  { tokenAddress: (0, r.K)(n.address), proportion: 1 },
                ],
                gasPrice: Number(o) / 1e9,
                userAddr: s,
                slippageLimitPercent: i,
                sourceBlacklist: [],
                pathViz: !0,
                referralCode: "1939997089",
              },
            });
            return (
              (this.latestState = { pathId: u.pathId, amountIn: t }),
              {
                amountOut: BigInt(u.outAmounts[0]),
                gasLimit: BigInt(u.gasEstimate),
                pathViz: u.pathViz,
                aggregator: this,
              }
            );
          }
          async buildCallData(e, t, n, i, o, s) {
            var u, l;
            if (
              !this.latestState ||
              (this.latestState &&
                (null !==
                  (l =
                    null === (u = this.latestState) || void 0 === u
                      ? void 0
                      : u.amountIn) && void 0 !== l
                  ? l
                  : 0n) !== t)
            ) {
              console.log("Path ID is not defined, fetching...");
              let { pathId: u } = await (0, a.a)(this.baseUrl, "sor/quote/v2", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                  accept: "application/json",
                },
                timeout: this.TIMEOUT,
                data: {
                  chainId: this.chain.id,
                  inputTokens: [
                    { tokenAddress: (0, r.K)(e.address), amount: t.toString() },
                  ],
                  outputTokens: [
                    { tokenAddress: (0, r.K)(n.address), proportion: 1 },
                  ],
                  gasPrice: Number(o) / 1e9,
                  userAddr: s,
                  slippageLimitPercent: i,
                  sourceBlacklist: [],
                  pathViz: !0,
                  referralCode: "1939997089",
                },
              });
              this.latestState = { pathId: u, amountIn: t };
            }
            if (!this.latestState) throw Error("Path ID is not defined");
            console.log("Assembling transaction...", this.latestState);
            let c = await (0, a.a)(this.baseUrl, "sor/assemble", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                accept: "application/json",
              },
              data: {
                pathId: this.latestState.pathId,
                simulate: !0,
                userAddr: s,
              },
            });
            return {
              data: c.transaction.data,
              gas: BigInt(c.transaction.gas),
              value: BigInt(c.transaction.value),
              to: c.transaction.to,
              nonce: c.transaction.nonce,
              gasPrice: BigInt(c.transaction.gasPrice),
            };
          }
          constructor(e, t) {
            (this.name = "Odos"),
              (this.baseUrl = "https://api.odos.xyz"),
              (this.TIMEOUT = 5e3),
              (this.latestState = void 0),
              (this.contract = e),
              (this.chain = t);
          }
        }
        var s = n(48164);
        let u = {
          [i.vo.MITOSIS_TESTNET]: [],
          [i.vo.BASE]: [
            new o(
              (0, r.K)("0x19cEeAd7105607Cd444F5ad10dd51356436095a1"),
              (0, s.Mq)(i.vo.BASE.valueOf())
            ),
          ],
          [i.vo.ZKSYNC]: [
            new o(
              (0, r.K)("0x4bBa932E9792A2b917D47830C93a9BC79320E4f7"),
              (0, s.Mq)(i.vo.ZKSYNC.valueOf())
            ),
          ],
        };
      },
      48164: function (e, t, n) {
        "use strict";
        n.d(t, {
          rC: function () {
            return j;
          },
          Mq: function () {
            return N;
          },
          FP: function () {
            return B;
          },
          NH: function () {
            return M;
          },
        });
        var r = n(86164),
          i = n(95946),
          a = n(43310),
          o = n(6073),
          s = n(30866);
        let u = {
            block: (0, a.G)({
              format(e) {
                let t = e.transactions?.map((e) => {
                  if ("string" == typeof e) return e;
                  let t = o.Tr(e);
                  return (
                    "0x7e" === t.typeHex &&
                      ((t.isSystemTx = e.isSystemTx),
                      (t.mint = e.mint ? i.y_(e.mint) : void 0),
                      (t.sourceHash = e.sourceHash),
                      (t.type = "deposit")),
                    t
                  );
                });
                return { transactions: t, stateRoot: e.stateRoot };
              },
            }),
            transaction: (0, o.y_)({
              format(e) {
                let t = {};
                return (
                  "0x7e" === e.type &&
                    ((t.isSystemTx = e.isSystemTx),
                    (t.mint = e.mint ? (0, i.y_)(e.mint) : void 0),
                    (t.sourceHash = e.sourceHash),
                    (t.type = "deposit")),
                  t
                );
              },
            }),
            transactionReceipt: (0, s.d)({
              format: (e) => ({
                l1GasPrice: e.l1GasPrice ? (0, i.y_)(e.l1GasPrice) : null,
                l1GasUsed: e.l1GasUsed ? (0, i.y_)(e.l1GasUsed) : null,
                l1Fee: e.l1Fee ? (0, i.y_)(e.l1Fee) : null,
                l1FeeScalar: e.l1FeeScalar ? Number(e.l1FeeScalar) : null,
              }),
            }),
          },
          l = (0, r.a)(
            {
              id: 1,
              network: "ethereum",
              name: "Ethereum",
              nativeCurrency: { name: "Ether", symbol: "ETH", decimals: 18 },
              rpcUrls: {
                alchemy: {
                  http: ["https://ethereum-rpc.publicnode.com"],
                  webSocket: ["wss://base-mainnet.g.alchemy.com/v2"],
                },
                infura: {
                  http: ["https://ethereum-rpc.publicnode.com"],
                  webSocket: ["wss://base-mainnet.infura.io/ws/v3"],
                },
                default: { http: ["https://ethereum-rpc.publicnode.com"] },
                public: { http: ["https://ethereum-rpc.publicnode.com"] },
              },
              blockExplorers: {
                blockscout: {
                  name: "Etherscout",
                  url: "https://eth.blockscout.com/",
                },
                default: { name: "Etherscan", url: "https://etherscan.io" },
                etherscan: { name: "Etherscan", url: "https://etherscan.io" },
              },
              contracts: {
                multicall3: {
                  address: "0xca11bde05977b3631167028862be2a173976ca11",
                  blockCreated: 5022,
                },
              },
            },
            { formatters: u }
          );
        var c = n(11187),
          d = n(92106),
          f = n(53992),
          p = n(74688);
        let h = {
          block: (0, a.G)({
            format(e) {
              let t = e.transactions?.map((e) => {
                if ("string" == typeof e) return e;
                let t = h.transaction.format(e);
                return (
                  "0x71" === t.typeHex
                    ? (t.type = "eip712")
                    : "0xff" === t.typeHex && (t.type = "priority"),
                  t
                );
              });
              return {
                l1BatchNumber: e.l1BatchNumber
                  ? (0, i.y_)(e.l1BatchNumber)
                  : null,
                l1BatchTimestamp: e.l1BatchTimestamp
                  ? (0, i.y_)(e.l1BatchTimestamp)
                  : null,
                transactions: t,
              };
            },
          }),
          transaction: (0, o.y_)({
            format(e) {
              let t = {};
              return (
                "0x71" === e.type
                  ? (t.type = "eip712")
                  : "0xff" === e.type && (t.type = "priority"),
                {
                  ...t,
                  l1BatchNumber: e.l1BatchNumber
                    ? (0, i.y_)(e.l1BatchNumber)
                    : null,
                  l1BatchTxIndex: e.l1BatchTxIndex
                    ? (0, i.y_)(e.l1BatchTxIndex)
                    : null,
                }
              );
            },
          }),
          transactionReceipt: (0, s.d)({
            format: (e) => ({
              l1BatchNumber: e.l1BatchNumber
                ? (0, i.y_)(e.l1BatchNumber)
                : null,
              l1BatchTxIndex: e.l1BatchTxIndex
                ? (0, i.y_)(e.l1BatchTxIndex)
                : null,
              logs: e.logs.map((e) => ({
                ...(0, f.U)(e),
                l1BatchNumber: e.l1BatchNumber
                  ? (0, i.y_)(e.l1BatchNumber)
                  : null,
                transactionLogIndex: (0, i.ly)(e.transactionLogIndex),
                logType: e.logType,
              })),
              l2ToL1Logs: e.l2ToL1Logs.map((e) => ({
                blockNumber: (0, i.y_)(e.blockHash),
                blockHash: e.blockHash,
                l1BatchNumber: (0, i.y_)(e.l1BatchNumber),
                transactionIndex: (0, i.y_)(e.transactionIndex),
                shardId: (0, i.y_)(e.shardId),
                isService: e.isService,
                sender: e.sender,
                key: e.key,
                value: e.value,
                transactionHash: e.transactionHash,
                logIndex: (0, i.y_)(e.logIndex),
              })),
            }),
          }),
          transactionRequest: (0, p.iy)({
            exclude: [
              "customSignature",
              "factoryDeps",
              "gasPerPubdata",
              "paymaster",
              "paymasterInput",
            ],
            format: (e) =>
              e.gasPerPubdata ||
              (e.paymaster && e.paymasterInput) ||
              e.factoryDeps ||
              e.customSignature
                ? {
                    eip712Meta: {
                      ...(e.gasPerPubdata
                        ? { gasPerPubdata: (0, d.NC)(e.gasPerPubdata) }
                        : {}),
                      ...(e.paymaster && e.paymasterInput
                        ? {
                            paymasterParams: {
                              paymaster: e.paymaster,
                              paymasterInput: Array.from(
                                (0, c.nr)(e.paymasterInput)
                              ),
                            },
                          }
                        : {}),
                      ...(e.factoryDeps ? { factoryDeps: e.factoryDeps } : {}),
                      ...(e.customSignature
                        ? { customSignature: e.customSignature }
                        : {}),
                    },
                    type: "eip712" === e.type ? "0x71" : "0xff",
                  }
                : {},
          }),
        };
        var m = n(26087),
          y = n(62027),
          g = n(80377),
          b = n(49321),
          v = n(57040);
        class w extends y.G {
          constructor({ offset: e }) {
            super(`Offset \`${e}\` cannot be negative.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "NegativeOffsetError",
              });
          }
        }
        class E extends y.G {
          constructor({ length: e, position: t }) {
            super(
              `Position \`${t}\` is out of bounds (\`0 < position < ${e}\`).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "PositionOutOfBoundsError",
              });
          }
        }
        let x = {
          bytes: new Uint8Array(),
          dataView: new DataView(new ArrayBuffer(0)),
          position: 0,
          assertPosition(e) {
            if (e < 0 || e > this.bytes.length - 1)
              throw new E({ length: this.bytes.length, position: e });
          },
          decrementPosition(e) {
            if (e < 0) throw new w({ offset: e });
            let t = this.position - e;
            this.assertPosition(t), (this.position = t);
          },
          incrementPosition(e) {
            if (e < 0) throw new w({ offset: e });
            let t = this.position + e;
            this.assertPosition(t), (this.position = t);
          },
          inspectByte(e) {
            let t = e ?? this.position;
            return this.assertPosition(t), this.bytes[t];
          },
          inspectBytes(e, t) {
            let n = t ?? this.position;
            return (
              this.assertPosition(n + e - 1), this.bytes.subarray(n, n + e)
            );
          },
          inspectUint8(e) {
            let t = e ?? this.position;
            return this.assertPosition(t), this.bytes[t];
          },
          inspectUint16(e) {
            let t = e ?? this.position;
            return this.assertPosition(t + 1), this.dataView.getUint16(t);
          },
          inspectUint24(e) {
            let t = e ?? this.position;
            return (
              this.assertPosition(t + 2),
              (this.dataView.getUint16(t) << 8) + this.dataView.getUint8(t + 2)
            );
          },
          inspectUint32(e) {
            let t = e ?? this.position;
            return this.assertPosition(t + 3), this.dataView.getUint32(t);
          },
          pushByte(e) {
            this.assertPosition(this.position),
              (this.bytes[this.position] = e),
              this.position++;
          },
          pushBytes(e) {
            this.assertPosition(this.position + e.length - 1),
              this.bytes.set(e, this.position),
              (this.position += e.length);
          },
          pushUint8(e) {
            this.assertPosition(this.position),
              (this.bytes[this.position] = e),
              this.position++;
          },
          pushUint16(e) {
            this.assertPosition(this.position + 1),
              this.dataView.setUint16(this.position, e),
              (this.position += 2);
          },
          pushUint24(e) {
            this.assertPosition(this.position + 2),
              this.dataView.setUint16(this.position, e >> 8),
              this.dataView.setUint8(this.position + 2, 255 & e),
              (this.position += 3);
          },
          pushUint32(e) {
            this.assertPosition(this.position + 3),
              this.dataView.setUint32(this.position, e),
              (this.position += 4);
          },
          readByte() {
            let e = this.inspectByte();
            return this.position++, e;
          },
          readBytes(e) {
            let t = this.inspectBytes(e);
            return (this.position += e), t;
          },
          readUint8() {
            let e = this.inspectUint8();
            return (this.position += 1), e;
          },
          readUint16() {
            let e = this.inspectUint16();
            return (this.position += 2), e;
          },
          readUint24() {
            let e = this.inspectUint24();
            return (this.position += 3), e;
          },
          readUint32() {
            let e = this.inspectUint32();
            return (this.position += 4), e;
          },
          setPosition(e) {
            this.assertPosition(e), (this.position = e);
          },
        };
        function C(e, t = "hex") {
          let n = (function e(t) {
              return Array.isArray(t)
                ? (function (e) {
                    let t = e.reduce((e, t) => e + t.length, 0),
                      n = _(t),
                      r = t <= 55 ? 1 + t : 1 + n + t;
                    return {
                      length: r,
                      encode(r) {
                        for (let { encode: i } of (t <= 55
                          ? r.pushByte(192 + t)
                          : (r.pushByte(247 + n),
                            1 === n
                              ? r.pushUint8(t)
                              : 2 === n
                              ? r.pushUint16(t)
                              : 3 === n
                              ? r.pushUint24(t)
                              : r.pushUint32(t)),
                        e))
                          i(r);
                      },
                    };
                  })(t.map((t) => e(t)))
                : (function (e) {
                    let t = "string" == typeof e ? (0, c.nr)(e) : e,
                      n = _(t.length),
                      r =
                        1 === t.length && t[0] < 128
                          ? 1
                          : t.length <= 55
                          ? 1 + t.length
                          : 1 + n + t.length;
                    return {
                      length: r,
                      encode(e) {
                        (1 === t.length && t[0] < 128) ||
                          (t.length <= 55
                            ? e.pushByte(128 + t.length)
                            : (e.pushByte(183 + n),
                              1 === n
                                ? e.pushUint8(t.length)
                                : 2 === n
                                ? e.pushUint16(t.length)
                                : 3 === n
                                ? e.pushUint24(t.length)
                                : e.pushUint32(t.length))),
                          e.pushBytes(t);
                      },
                    };
                  })(t);
            })(e),
            r = (function (e) {
              let t = Object.create(x);
              return (
                (t.bytes = e),
                (t.dataView = new DataView(
                  e.buffer,
                  e.byteOffset,
                  e.byteLength
                )),
                t
              );
            })(new Uint8Array(n.length));
          return (n.encode(r), "hex" === t) ? (0, d.ci)(r.bytes) : r.bytes;
        }
        function _(e) {
          if (e < 256) return 1;
          if (e < 65536) return 2;
          if (e < 16777216) return 3;
          if (e < 4294967296) return 4;
          throw new y.G("Length is too large.");
        }
        var T = n(33639),
          S = n(61836),
          P = n(26445),
          O = n(82994);
        function I(e) {
          if (!e || 0 === e.length) return [];
          let t = [];
          for (let n = 0; n < e.length; n++) {
            let { address: r, storageKeys: i } = e[n];
            for (let e = 0; e < i.length; e++)
              if (i[e].length - 2 != 64) throw new T.JC({ storageKey: i[e] });
            if (!(0, b.U)(r)) throw new m.b({ address: r });
            t.push([r, i]);
          }
          return t;
        }
        let A = (0, r.a)(
          {
            id: 324,
            name: "zkSync Era",
            network: "zksync-era",
            nativeCurrency: { decimals: 18, name: "Ether", symbol: "ETH" },
            rpcUrls: {
              default: {
                http: ["https://mainnet.era.zksync.io"],
                webSocket: ["wss://mainnet.era.zksync.io/ws"],
              },
              public: {
                http: ["https://mainnet.era.zksync.io"],
                webSocket: ["wss://mainnet.era.zksync.io/ws"],
              },
            },
            blockExplorers: {
              default: {
                name: "zkExplorer",
                url: "https://explorer.zksync.io",
              },
            },
            contracts: {
              multicall3: {
                address: "0xF9cda624FBC7e059355ce98a31693d299FACd963",
              },
            },
          },
          {
            serializers: {
              transaction: (e, t) =>
                "customSignature" in e ||
                "paymaster" in e ||
                "paymasterInput" in e ||
                "gasPerPubdata" in e ||
                "factoryDeps" in e
                  ? (function (e) {
                      let {
                        chainId: t,
                        gas: n,
                        nonce: r,
                        to: i,
                        from: a,
                        value: o,
                        maxFeePerGas: s,
                        maxPriorityFeePerGas: u,
                        customSignature: l,
                        factoryDeps: c,
                        paymaster: f,
                        paymasterInput: p,
                        gasPerPubdata: h,
                        data: w,
                      } = e;
                      (function (e) {
                        let {
                          chainId: t,
                          to: n,
                          from: r,
                          paymaster: i,
                          paymasterInput: a,
                        } = e;
                        if (t <= 0) throw new g.hJ({ chainId: t });
                        if (n && !(0, b.U)(n)) throw new m.b({ address: n });
                        if (r && !(0, b.U)(r)) throw new m.b({ address: r });
                        if (i && !(0, b.U)(i)) throw new m.b({ address: i });
                        if (i && !a)
                          throw new y.G(
                            "`paymasterInput` must be provided when `paymaster` is defined"
                          );
                        if (!i && a)
                          throw new y.G(
                            "`paymaster` must be provided when `paymasterInput` is defined"
                          );
                      })(e);
                      let E = [
                        r ? (0, d.NC)(r) : "0x",
                        u ? (0, d.NC)(u) : "0x",
                        s ? (0, d.NC)(s) : "0x",
                        n ? (0, d.NC)(n) : "0x",
                        i ?? "0x",
                        o ? (0, d.NC)(o) : "0x",
                        w ?? "0x",
                        (0, d.NC)(t),
                        (0, d.NC)(""),
                        (0, d.NC)(""),
                        (0, d.NC)(t),
                        a ?? "0x",
                        h ? (0, d.NC)(h) : "0x",
                        c ?? [],
                        l ?? "0x",
                        f && p ? [f, p] : [],
                      ];
                      return (0, v.SM)(["0x71", C(E)]);
                    })(e)
                  : (function (e, t) {
                      let n = (0, O.l)(e);
                      return "eip1559" === n
                        ? (function (e, t) {
                            let {
                              chainId: n,
                              gas: r,
                              nonce: i,
                              to: a,
                              value: o,
                              maxFeePerGas: s,
                              maxPriorityFeePerGas: u,
                              accessList: l,
                              data: c,
                            } = e;
                            !(function (e) {
                              let {
                                chainId: t,
                                maxPriorityFeePerGas: n,
                                gasPrice: r,
                                maxFeePerGas: i,
                                to: a,
                              } = e;
                              if (t <= 0) throw new g.hJ({ chainId: t });
                              if (a && !(0, b.U)(a))
                                throw new m.b({ address: a });
                              if (r)
                                throw new y.G(
                                  "`gasPrice` is not a valid EIP-1559 Transaction attribute."
                                );
                              if (i && i > 2n ** 256n - 1n)
                                throw new P.Hh({ maxFeePerGas: i });
                              if (n && i && n > i)
                                throw new P.cs({
                                  maxFeePerGas: i,
                                  maxPriorityFeePerGas: n,
                                });
                            })(e);
                            let f = I(l),
                              p = [
                                (0, d.NC)(n),
                                i ? (0, d.NC)(i) : "0x",
                                u ? (0, d.NC)(u) : "0x",
                                s ? (0, d.NC)(s) : "0x",
                                r ? (0, d.NC)(r) : "0x",
                                a ?? "0x",
                                o ? (0, d.NC)(o) : "0x",
                                c ?? "0x",
                                f,
                              ];
                            if (t) {
                              let e =
                                0n === t.v
                                  ? "0x"
                                  : 1n === t.v
                                  ? (0, d.NC)(1)
                                  : 27n === t.v
                                  ? "0x"
                                  : (0, d.NC)(1);
                              p.push(e, (0, S.f)(t.r), (0, S.f)(t.s));
                            }
                            return (0, v.SM)(["0x02", C(p)]);
                          })(e, t)
                        : "eip2930" === n
                        ? (function (e, t) {
                            let {
                              chainId: n,
                              gas: r,
                              data: i,
                              nonce: a,
                              to: o,
                              value: s,
                              accessList: u,
                              gasPrice: l,
                            } = e;
                            !(function (e) {
                              let {
                                chainId: t,
                                maxPriorityFeePerGas: n,
                                gasPrice: r,
                                maxFeePerGas: i,
                                to: a,
                              } = e;
                              if (t <= 0) throw new g.hJ({ chainId: t });
                              if (a && !(0, b.U)(a))
                                throw new m.b({ address: a });
                              if (n || i)
                                throw new y.G(
                                  "`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute."
                                );
                              if (r && r > 2n ** 256n - 1n)
                                throw new P.Hh({ maxFeePerGas: r });
                            })(e);
                            let c = I(u),
                              f = [
                                (0, d.NC)(n),
                                a ? (0, d.NC)(a) : "0x",
                                l ? (0, d.NC)(l) : "0x",
                                r ? (0, d.NC)(r) : "0x",
                                o ?? "0x",
                                s ? (0, d.NC)(s) : "0x",
                                i ?? "0x",
                                c,
                              ];
                            if (t) {
                              let e =
                                0n === t.v
                                  ? "0x"
                                  : 1n === t.v
                                  ? (0, d.NC)(1)
                                  : 27n === t.v
                                  ? "0x"
                                  : (0, d.NC)(1);
                              f.push(e, (0, S.f)(t.r), (0, S.f)(t.s));
                            }
                            return (0, v.SM)(["0x01", C(f)]);
                          })(e, t)
                        : (function (e, t) {
                            let {
                              chainId: n = 0,
                              gas: r,
                              data: i,
                              nonce: a,
                              to: o,
                              value: s,
                              gasPrice: u,
                            } = e;
                            !(function (e) {
                              let {
                                chainId: t,
                                maxPriorityFeePerGas: n,
                                gasPrice: r,
                                maxFeePerGas: i,
                                to: a,
                                accessList: o,
                              } = e;
                              if (a && !(0, b.U)(a))
                                throw new m.b({ address: a });
                              if (void 0 !== t && t <= 0)
                                throw new g.hJ({ chainId: t });
                              if (n || i)
                                throw new y.G(
                                  "`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute."
                                );
                              if (r && r > 2n ** 256n - 1n)
                                throw new P.Hh({ maxFeePerGas: r });
                              if (o)
                                throw new y.G(
                                  "`accessList` is not a valid Legacy Transaction attribute."
                                );
                            })(e);
                            let l = [
                              a ? (0, d.NC)(a) : "0x",
                              u ? (0, d.NC)(u) : "0x",
                              r ? (0, d.NC)(r) : "0x",
                              o ?? "0x",
                              s ? (0, d.NC)(s) : "0x",
                              i ?? "0x",
                            ];
                            if (t) {
                              let e = (() => {
                                if (n > 0)
                                  return (
                                    BigInt(2 * n) + BigInt(35n + t.v - 27n)
                                  );
                                if (t.v >= 35n) {
                                  let e = (t.v - 35n) / 2n;
                                  return e > 0
                                    ? t.v
                                    : 27n + (35n === t.v ? 0n : 1n);
                                }
                                let e = 27n + (27n === t.v ? 0n : 1n);
                                if (t.v !== e) throw new T.vl({ v: t.v });
                                return e;
                              })();
                              l = [...l, (0, d.NC)(e), t.r, t.s];
                            } else
                              n > 0 && (l = [...l, (0, d.NC)(n), "0x", "0x"]);
                            return C(l);
                          })(e, t);
                    })(e, t),
            },
            formatters: h,
          }
        );
        var k = n(23618);
        let j = l.id,
          B = [
            l,
            A,
            {
              ...k.F,
              icon: "https://avatars.githubusercontent.com/u/150423703",
            },
          ],
          M = [k.F.id],
          N = (e) => B.find((t) => t.id === e);
      },
      23618: function (e, t, n) {
        "use strict";
        n.d(t, {
          F: function () {
            return i;
          },
        });
        var r = n(86164);
        let i = (0, r.a)({
          id: 124832,
          name: "Mitosis Testnet",
          network: "mitosis",
          nativeCurrency: { decimals: 18, name: "MITO Token", symbol: "MITO" },
          rpcUrls: {
            default: { http: ["https://rpc.testnet.mitosis.org"] },
            public: { http: ["https://rpc.testnet.mitosis.org"] },
          },
          blockExplorers: {
            default: {
              name: "Mitosis Testnet",
              url: "https://testnet.mitosiscan.xyz",
            },
          },
          testnet: !0,
          contracts: {
            multicall3: {
              address: "0xcA11bde05977b3631167028862bE2a173976CA11",
              blockCreated: 84239,
            },
          },
        });
      },
      20459: function (e, t, n) {
        "use strict";
        n.d(t, {
          VN: function () {
            return u;
          },
          g$: function () {
            return l;
          },
          hB: function () {
            return o;
          },
          ah: function () {
            return s;
          },
        });
        var r = n(1958),
          i = n(17019);
        let a = [
            {
              address: "0x40312A325Ac36555beFD4Af5F51994aA13abeAad",
              name: "Lombard BTC",
              symbol: "LBTC",
              decimals: 8,
              icon: "https://cryptologos.cc/logos/bitcoin-btc-logo.png",
            },
            {
              address: "0xD690E4eC10E733B693dd2a1758b177dC441cB22D",
              name: "Ethereum",
              symbol: "ETH",
              decimals: 18,
            },
            {
              address: "0x1f9a9CC05842aa121b9B4b762c6d7006e17DF0a8",
              name: "EtherFi Wrapped eETH",
              symbol: "weETH",
              decimals: 18,
            },
            {
              address: "0x9Ffe56678fE032Cb7b623FbfeDe030e426fE63D5",
              name: "Renzo ETH",
              symbol: "ezETH",
              decimals: 18,
            },
            {
              address: "0x229A9B0b813231C2B4a97245a73DCA76b1c8f611",
              name: "Mantle ETH",
              symbol: "mETH",
              decimals: 18,
            },
            {
              address: "0xCB0CedF61be0Bf4d5F6596b8ab296614b154db91",
              name: "Tether USD",
              symbol: "USDT",
              decimals: 6,
            },
            {
              address: "0xb8f230Ea91516787F2cbB2c63b147Ec79988E3ED",
              name: "Ethena USD",
              symbol: "USDe",
              decimals: 18,
            },
            {
              address: "0xB2F19Cf127A86Cb285f980d79f1594762763695A",
              name: "Arbitrum",
              symbol: "ARB",
              decimals: 18,
            },
            {
              address: "0x4ac5b9807f3B0Eae9B7078De0f05D7D121CBEB0a",
              name: "Optimism",
              symbol: "OP",
              decimals: 18,
            },
            {
              address: "0x12E08f9DE0F2286c92B263F9854A2A78957948fc",
              name: "Mantle",
              symbol: "MNT",
              decimals: 18,
            },
            {
              address: "0xA0e87A81965F7bEbd45d877038A26Afc6670EcB2",
              name: "AAVE",
              symbol: "AAVE",
              decimals: 18,
            },
            {
              address: "0x09Ea3eC040aE3b2414C9a1D118728aBBFE2626Cd",
              name: "Compound",
              symbol: "COMP",
              decimals: 18,
            },
            {
              address: "0x6A85b98758d859539BA585a07F6ae4223C9B83ab",
              name: "Stargate",
              symbol: "STG",
              decimals: 18,
            },
            {
              address: "0xCf010Ed822D51550b79Eeb791a3D7679EaBdb25d",
              name: "Pendle",
              symbol: "PENDLE",
              decimals: 18,
            },
            {
              address: "0x20F8826d7975a1b0b14bdd66D538F2f4ef5f21fd",
              name: "Yearn Finance",
              symbol: "YFI",
              decimals: 18,
            },
            {
              address: r.D,
              name: "Mitosis Token",
              symbol: "MITO",
              decimals: 18,
              icon: "https://avatars.githubusercontent.com/u/150423703",
            },
            {
              name: "Wrapped MITO",
              symbol: "WMITO",
              decimals: 18,
              icon: "https://avatars.githubusercontent.com/u/150423703",
              address: "0x8B71fD76b23721d0D73CA14Ea6464AAD70149B67",
            },
          ],
          o = { address: r.D, name: "Ethereum", symbol: "ETH", decimals: 18 },
          s = {
            [i.vo.CLOBER_TESTNET]: [],
            [i.vo.CLOBER_TESTNET_2]: [],
            [i.vo.BERACHAIN_TESTNET]: [],
            [i.vo.BASE]: [
              {
                address: "0x67f0870BB897F5E1c369976b4A2962d527B9562c",
                name: "Department Of Government Efficiency",
                symbol: "DOGE",
                decimals: 18,
              },
            ],
            [i.vo.ZKSYNC]: [],
            [i.vo.MITOSIS_TESTNET]: a,
          },
          u = {
            [i.vo.CLOBER_TESTNET]: o,
            [i.vo.CLOBER_TESTNET_2]: o,
            [i.vo.BERACHAIN_TESTNET]: o,
            [i.vo.MITOSIS_TESTNET]: {
              address: r.D,
              name: "Mitosis Token",
              symbol: "MITO",
              decimals: 18,
              icon: "https://avatars.githubusercontent.com/u/150423703",
            },
            [i.vo.BASE]: {
              address: "0x4200000000000000000000000000000000000006",
              name: "Wrapped Ether",
              symbol: "WETH",
              decimals: 18,
            },
            [i.vo.ZKSYNC]: o,
          },
          l = {
            [i.vo.CLOBER_TESTNET]: o,
            [i.vo.CLOBER_TESTNET_2]: o,
            [i.vo.BERACHAIN_TESTNET]: o,
            [i.vo.MITOSIS_TESTNET]: {
              address: "0xCB0CedF61be0Bf4d5F6596b8ab296614b154db91",
              name: "USDT",
              symbol: "USDT",
              decimals: 6,
            },
            [i.vo.BASE]: {
              address: "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
              name: "USD Coin",
              symbol: "USDC",
              decimals: 6,
            },
            [i.vo.ZKSYNC]: {
              address: "0x1d17CBcF0D6D143135aE902365D2E5e2A16538D4",
              name: "USD Coin",
              symbol: "USDC",
              decimals: 6,
            },
          };
      },
      3526: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return i;
          },
        });
        var r = n(67294);
        function i() {
          let [e, t] = (0, r.useState)(!1),
            n = (0, r.useRef)(!1),
            i = (0, r.useRef)();
          return (
            (0, r.useEffect)(() => {
              function e(e) {
                n.current || (t(!1), e.stopPropagation());
              }
              return (
                document.addEventListener("click", e),
                () => {
                  document.removeEventListener("click", e);
                }
              );
            }, [e, t]),
            {
              showDropdown: e,
              setShowDropdown: (e) => {
                i.current && clearTimeout(i.current),
                  (n.current = !0),
                  (i.current = setTimeout(() => {
                    n.current = !1;
                  }, 100)),
                  t(e);
              },
            }
          );
        }
      },
      3086: function (e, t, n) {
        "use strict";
        n.d(t, {
          r: function () {
            return s;
          },
        });
        var r = n(85893),
          i = n(67294),
          a = n(51512),
          o = n(48164);
        let s = (e) => {
          var t;
          let { currency: n, ...s } = e,
            [u, l] = i.useState(0),
            c = Number(
              null !== (t = localStorage.getItem(a.lI)) && void 0 !== t
                ? t
                : "0"
            ),
            d = o.FP.find((e) => e.id === c);
          return (0, r.jsx)("img", {
            className: "rounded-full",
            src: n
              ? n.icon
                ? n.icon
                : "https://assets.odos.xyz/tokens/".concat(
                    encodeURIComponent(n.symbol),
                    ".webp"
                  )
              : "",
            onError: (e) => {
              if (u >= 1) {
                e.currentTarget.src = "/unknown.svg";
                return;
              }
              (e.currentTarget.src = d
                ? "https://dd.dexscreener.com/ds-data/tokens/"
                    .concat(d.network, "/")
                    .concat(n.address.toLowerCase(), ".png?size=lg")
                : "/unknown.svg"),
                l((e) => e + 1);
            },
            ...s,
            "data-sentry-component": "CurrencyIcon",
            "data-sentry-source-file": "currency-icon.tsx",
          });
        };
      },
      87023: function (e, t, n) {
        "use strict";
        n.d(t, {
          N: function () {
            return i;
          },
        });
        var r = n(85893);
        n(67294);
        let i = (e) =>
          (0, r.jsx)("svg", {
            width: "12",
            height: "12",
            viewBox: "0 0 24 24",
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg",
            ...e,
            "data-sentry-element": "svg",
            "data-sentry-component": "TriangleDownSvg",
            "data-sentry-source-file": "triangle-down-svg.tsx",
            children: (0, r.jsx)("path", {
              d: "M12 16L6 8H18L12 16Z",
              fill: "white",
              "data-sentry-element": "path",
              "data-sentry-source-file": "triangle-down-svg.tsx",
            }),
          });
      },
      51512: function (e, t, n) {
        "use strict";
        n.d(t, {
          WZ: function () {
            return c;
          },
          lI: function () {
            return u;
          },
          ql: function () {
            return d;
          },
        });
        var r = n(85893),
          i = n(67294),
          a = n(69077),
          o = n(48164);
        let s = i.createContext({
            selectedChain: o.FP.find((e) => e.id === o.rC),
            setSelectedChain: (e) => e,
          }),
          u = "chain",
          l = "chain",
          c = (e) => {
            let { children: t } = e,
              { chain: n } = (0, a.LN)(),
              [c, d] = i.useState(o.FP.find((e) => e.id === o.rC)),
              { switchNetwork: f } = (0, a.g0)({
                onSuccess(e) {
                  let t = (0, o.Mq)(e.id);
                  t && p(t);
                },
              }),
              p = (0, i.useCallback)(
                (e) => {
                  d(e),
                    localStorage.setItem(u, e.id.toString()),
                    f && f(e.id),
                    window.history.replaceState({}, "", "?chain=".concat(e.id));
                },
                [f]
              );
            return (
              (0, i.useEffect)(() => {
                let e = new URLSearchParams(window.location.search),
                  t = e.get(l) ? (0, o.Mq)(parseInt(e.get(l), 10)) : void 0,
                  r = localStorage.getItem(u)
                    ? (0, o.Mq)(parseInt(localStorage.getItem(u), 10))
                    : void 0,
                  i = n ? (0, o.Mq)(n.id) : void 0,
                  a = i || t || r;
                a && (f && f(a.id), p(a));
              }, [n, p, f]),
              (0, r.jsx)(s.Provider, {
                value: { selectedChain: c, setSelectedChain: p },
                "data-sentry-element": "unknown",
                "data-sentry-component": "ChainProvider",
                "data-sentry-source-file": "chain-context.tsx",
                children: t,
              })
            );
          },
          d = () => i.useContext(s);
      },
      3389: function (e, t, n) {
        "use strict";
        n.d(t, {
          T: function () {
            return x;
          },
          V: function () {
            return C;
          },
        });
        var r = n(85893),
          i = n(67294),
          a = n(69077),
          o = n(61228),
          s = n(1958),
          u = n(45775),
          l = n(89401),
          c = n(84898),
          d = n(20459),
          f = n(3714);
        async function p(e) {
          try {
            let t = await Promise.all(f.K[e].map((e) => e.currencies()));
            return d.ah[e]
              .concat(t.flat())
              .map((e) => ({ ...e, isVerified: !0 }));
          } catch (t) {
            return d.ah[e].map((e) => ({ ...e, isVerified: !0 }));
          }
        }
        var h = n(56559);
        async function m(e) {
          let t = await Promise.all(e.map((e) => e.prices()));
          return t.reduce(
            (e, t) => (
              Object.entries(t).forEach((t) => {
                let [n, r] = t;
                e[(0, u.K)(n)] = r;
              }),
              e
            ),
            {}
          );
        }
        var y = n(48164),
          g = n(17019);
        let b = { [g.vo.MITOSIS_TESTNET]: {} };
        var v = n(51512);
        let w = i.createContext({
            whitelistCurrencies: [],
            currencies: [],
            setCurrencies: () => {},
            prices: {},
            balances: {},
            allowances: {},
            isOpenOrderApproved: !1,
          }),
          E = [
            {
              inputs: [
                { internalType: "address", name: "owner", type: "address" },
                { internalType: "address", name: "operator", type: "address" },
              ],
              name: "isApprovedForAll",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "view",
              type: "function",
            },
          ],
          x = (e) => {
            var t, n;
            let { children: d } = e,
              { address: g } = (0, a.mA)(),
              { data: x } = (0, a.KQ)({ address: g, watch: !0 }),
              { selectedChain: C } = (0, v.ql)(),
              { data: _ } = (0, a.aM)(
                ["currencies", C.id],
                async () => p(C.id),
                { initialData: [] }
              ),
              [T, S] = (0, i.useState)([]),
              { data: P } = (0, a.aM)(
                [
                  "balances",
                  C,
                  g,
                  T.map((e) => e.address)
                    .sort()
                    .join(""),
                ],
                async () => {
                  var e;
                  if (!g || 0 === T.length || !x) return {};
                  let t = T.filter(
                      (e, t, n) =>
                        n.findIndex((t) => (0, o.E)(t.address, e.address)) === t
                    ).filter((e) => !(0, o.E)(e.address, s.D)),
                    n = await (0, l.JH)({
                      contracts: t.map((e) => ({
                        address: e.address,
                        abi: h.z,
                        functionName: "balanceOf",
                        args: [g],
                      })),
                    });
                  return n.reduce(
                    (e, n, r) => {
                      let { result: i } = n,
                        a = t[r];
                      return {
                        ...e,
                        [(0, u.K)(a.address)]: null != i ? i : 0n,
                      };
                    },
                    {
                      [s.D]:
                        null !== (e = null == x ? void 0 : x.value) &&
                        void 0 !== e
                          ? e
                          : 0n,
                    }
                  );
                },
                { refetchInterval: 5e3, refetchIntervalInBackground: !0 }
              ),
              { data: O } = (0, a.aM)(
                ["prices", C.id],
                async () => {
                  if (y.NH.includes(C.id)) {
                    var e;
                    return null !== (e = b[C.id]) && void 0 !== e ? e : 0;
                  }
                  return m(f.K[C.id]);
                },
                { refetchInterval: 1e4, refetchIntervalInBackground: !0 }
              );
            (0, a.NL)();
            let { data: I } = (0, a.aM)(
              [
                "allowances",
                C.id,
                g,
                T.map((e) => e.address)
                  .sort()
                  .join(""),
              ],
              async () => {
                var e, t, n;
                let r = [
                  (0, c.oi)({ chainId: C.id }).Controller,
                  (0, c.oi)({ chainId: C.id }).Minter,
                  ...f.K[C.id].map((e) => e.contract),
                ];
                if (!g || 0 === T.length || !C)
                  return { allowances: {}, isOpenOrderApproved: !1 };
                let i = [
                    ...r
                      .map(
                        (e) =>
                          T.map((t) => ({
                            address: t.address,
                            abi: h.z,
                            functionName: "allowance",
                            args: [g, e],
                          })),
                        []
                      )
                      .flat(),
                    {
                      address: (0, c.oi)({ chainId: C.id }).BookManager,
                      abi: E,
                      functionName: "isApprovedForAll",
                      args: [g, (0, c.oi)({ chainId: C.id }).Controller],
                    },
                  ],
                  a = await (0, l.JH)({ contracts: i });
                return {
                  isOpenOrderApproved:
                    null !==
                      (n =
                        null === (t = a.slice(-1)) || void 0 === t
                          ? void 0
                          : null === (e = t[0]) || void 0 === e
                          ? void 0
                          : e.result) &&
                    void 0 !== n &&
                    n,
                  allowances: a.slice(0, -1).reduce(
                    (e, t, n) => {
                      let { result: i } = t,
                        a = T[n % T.length],
                        o = (0, u.K)(r[Math.floor(n / T.length)]);
                      return {
                        ...e,
                        [o]: {
                          ...e[o],
                          [(0, u.K)(a.address)]: null != i ? i : 0n,
                        },
                      };
                    },
                    r.reduce((e, t) => ({ ...e, [t]: {} }), {})
                  ),
                };
              }
            );
            return (0, r.jsx)(w.Provider, {
              value: {
                whitelistCurrencies: _,
                prices: null != O ? O : {},
                balances: null != P ? P : {},
                allowances:
                  null !== (t = null == I ? void 0 : I.allowances) &&
                  void 0 !== t
                    ? t
                    : {},
                isOpenOrderApproved:
                  null !== (n = null == I ? void 0 : I.isOpenOrderApproved) &&
                  void 0 !== n &&
                  n,
                currencies: T,
                setCurrencies: S,
              },
              "data-sentry-element": "unknown",
              "data-sentry-component": "CurrencyProvider",
              "data-sentry-source-file": "currency-context.tsx",
              children: d,
            });
          },
          C = () => i.useContext(w);
      },
      20130: function (e, t, n) {
        "use strict";
        n.d(t, {
          F: function () {
            return h;
          },
          s: function () {
            return m;
          },
        });
        var r = n(85893),
          i = n(67294),
          a = n(61228),
          o = n(45775),
          s = n(84898),
          u = n(51512),
          l = n(95e3),
          c = n(20459),
          d = n(26111),
          f = n(3389);
        let p = i.createContext({
            isBid: !0,
            setIsBid: () => {},
            showInputCurrencySelect: !1,
            setShowInputCurrencySelect: () => {},
            inputCurrency: void 0,
            setInputCurrency: () => {},
            inputCurrencyAmount: "",
            setInputCurrencyAmount: () => {},
            showOutputCurrencySelect: !1,
            setShowOutputCurrencySelect: () => {},
            outputCurrency: void 0,
            setOutputCurrency: () => {},
            outputCurrencyAmount: "",
            setOutputCurrencyAmount: () => {},
            isPostOnly: !1,
            setIsPostOnly: () => {},
            priceInput: "",
            setPriceInput: () => {},
          }),
          h = (e) => {
            var t, n, h, m;
            let { children: y } = e,
              { selectedChain: g } = (0, u.ql)(),
              { whitelistCurrencies: b, setCurrencies: v } = (0, f.V)(),
              [w, E] = (0, i.useState)(!0),
              [x, C] = (0, i.useState)(!1),
              [_, T] = (0, i.useState)(void 0),
              [S, P] = (0, i.useState)(""),
              [O, I] = (0, i.useState)(!1),
              [A, k] = (0, i.useState)(void 0),
              [j, B] = (0, i.useState)(""),
              [M, N] = (0, i.useState)(!1),
              [D, R] = (0, i.useState)(""),
              F = (0, i.useCallback)(
                (e) => {
                  e && localStorage.setItem((0, l.tz)("limit", g), e.address),
                    T(e);
                },
                [g]
              ),
              L = (0, i.useCallback)(
                (e) => {
                  e && localStorage.setItem((0, l.er)("limit", g), e.address),
                    k(e);
                },
                [g]
              ),
              [U, $] = [
                null !==
                  (h =
                    null === (t = (0, d.v)()) || void 0 === t
                      ? void 0
                      : t.inputCurrency) && void 0 !== h
                  ? h
                  : localStorage.getItem((0, l.tz)("limit", g)),
                null !==
                  (m =
                    null === (n = (0, d.v)()) || void 0 === n
                      ? void 0
                      : n.outputCurrency) && void 0 !== m
                  ? m
                  : localStorage.getItem((0, l.er)("limit", g)),
              ];
            return (
              (0, i.useEffect)(() => {
                let e = async () => {
                  var e, t;
                  if (!(0, l.ib)(b, g)) {
                    F(c.VN[g.id]), L(c.g$[g.id]);
                    return;
                  }
                  let n = U
                      ? null !==
                          (e = b.find((e) =>
                            (0, a.E)(e.address, (0, o.K)(U))
                          )) && void 0 !== e
                        ? e
                        : await (0, l.kn)(g.id, (0, o.K)(U))
                      : c.VN[g.id],
                    r = $
                      ? null !==
                          (t = b.find((e) =>
                            (0, a.E)(e.address, (0, o.K)($))
                          )) && void 0 !== t
                        ? t
                        : await (0, l.kn)(g.id, (0, o.K)($))
                      : c.g$[g.id];
                  if (
                    (v((0, l.QP)([...b].concat(n ? [n] : [], r ? [r] : []))),
                    F(n),
                    L(r),
                    console.log({
                      inputCurrency: null == n ? void 0 : n.address,
                      outputCurrency: null == r ? void 0 : r.address,
                    }),
                    n && r)
                  ) {
                    let e = (0, s.qh)({
                      chainId: g.id,
                      token0: n.address,
                      token1: r.address,
                    });
                    (0, a.E)(e, n.address) ? E(!0) : E(!1);
                  } else E(!0);
                };
                window.location.href.includes("/limit") && e();
              }, [g, v, F, L, b, window.location.href, U, $]),
              (0, r.jsx)(p.Provider, {
                value: {
                  isBid: w,
                  setIsBid: E,
                  showInputCurrencySelect: x,
                  setShowInputCurrencySelect: C,
                  inputCurrency: _,
                  setInputCurrency: F,
                  inputCurrencyAmount: S,
                  setInputCurrencyAmount: P,
                  showOutputCurrencySelect: O,
                  setShowOutputCurrencySelect: I,
                  outputCurrency: A,
                  setOutputCurrency: L,
                  outputCurrencyAmount: j,
                  setOutputCurrencyAmount: B,
                  isPostOnly: M,
                  setIsPostOnly: N,
                  priceInput: D,
                  setPriceInput: R,
                },
                "data-sentry-element": "unknown",
                "data-sentry-component": "LimitProvider",
                "data-sentry-source-file": "limit-context.tsx",
                children: y,
              })
            );
          },
          m = () => i.useContext(p);
      },
      59163: function (e, t, n) {
        "use strict";
        n.d(t, {
          S: function () {
            return _;
          },
          v: function () {
            return T;
          },
        });
        var r = n(85893),
          i = n(67294),
          a = n(69077),
          o = n(61228),
          s = n(1958),
          u = n(21803),
          l = n(10341),
          c = n(84898),
          d = n(27841),
          f = n(38464),
          p = n(17019),
          h = n(58218),
          m = n(15833);
        let y = async ({ chainId: e, walletClient: t, options: n }) => {
          if (!t.account) throw Error("Account is not found");
          let r = (0, d.v)({
              chain: p.EO[e],
              transport: n?.rpcUrl ? (0, f.d)(n.rpcUrl) : (0, f.d)(),
            }),
            i = await (0, m.S)(r, e, t.account.address);
          if (!i)
            return t.writeContract({
              account: t.account,
              chain: p.EO[e],
              address: h.x[e].BookManager,
              abi: [
                {
                  inputs: [
                    {
                      internalType: "address",
                      name: "operator",
                      type: "address",
                    },
                    { internalType: "bool", name: "approved", type: "bool" },
                  ],
                  name: "setApprovalForAll",
                  outputs: [],
                  stateMutability: "nonpayable",
                  type: "function",
                },
              ],
              functionName: "setApprovalForAll",
              args: [h.x[e].Controller, !0],
            });
        };
        var g = n(51512),
          b = n(6807),
          v = n(97863),
          w = n(3389),
          E = n(82615),
          x = n(41816);
        let C = i.createContext({
            limit: () => Promise.resolve(),
            cancels: () => Promise.resolve(),
            claims: () => Promise.resolve(),
          }),
          _ = (e) => {
            let { children: t } = e,
              n = (0, a.NL)(),
              { data: d } = (0, a.py)(),
              { setConfirmation: f } = (0, b.H)(),
              { selectedChain: p } = (0, g.ql)(),
              { isOpenOrderApproved: h, allowances: m, prices: _ } = (0, w.V)(),
              T = (0, i.useCallback)(
                async (e, t, r, i, a, h) => {
                  if (d && p)
                    try {
                      var y, g, b;
                      let n = (0, o.E)(h.quote.address, e.address);
                      if (
                        (n && !h.bidBook.isOpened) ||
                        (!n && !h.askBook.isOpened)
                      ) {
                        f({
                          title: "Checking Book Availability",
                          body: "",
                          fields: [],
                        });
                        let n = await (0, l.t2)({
                          chainId: p.id,
                          userAddress: d.account.address,
                          inputToken: e.address,
                          outputToken: t.address,
                        });
                        n &&
                          (f({
                            title: "Open Book",
                            body: "Please confirm in your wallet.",
                            fields: [],
                          }),
                          await (0, v.T)(d, n));
                      }
                      f({
                        title: "Place Order",
                        body: "Please confirm in your wallet.",
                        fields: [],
                      });
                      let w = (0, c.oi)({ chainId: p.id }).Controller;
                      !(0, o.E)(e.address, s.D) &&
                        m[w][e.address] < (0, u.v)(r, e.decimals) &&
                        (f({
                          title: "Approve",
                          body: "Please confirm in your wallet.",
                          fields: [],
                        }),
                        await (0, E.u)(d, e, w));
                      let C = {
                          chainId: p.id,
                          userAddress: d.account.address,
                          inputToken: e.address,
                          outputToken: t.address,
                          amount: r,
                          price: i,
                          options: {
                            postOnly: a,
                            roundingDownTakenBid: !0,
                            roundingDownMakeAsk: !0,
                          },
                        },
                        { transaction: T, result: S } = await (0, l.DW)(C);
                      console.log("limitOrder request: ", C),
                        console.log("limitOrder result: ", S),
                        0 === Number(S.spent.amount)
                          ? f({
                              title: "Place Order",
                              body: "Please confirm in your wallet.",
                              fields: [
                                {
                                  direction: S.make.direction,
                                  currency: S.make.currency,
                                  label: S.make.currency.symbol,
                                  value: (0, x.lv)(
                                    S.make.amount,
                                    null !== (y = _[e.address]) && void 0 !== y
                                      ? y
                                      : 0
                                  ),
                                },
                              ],
                            })
                          : f({
                              title: "Place Order",
                              body: "Please confirm in your wallet.",
                              fields: [
                                {
                                  direction: S.make.direction,
                                  currency: S.make.currency,
                                  label: S.make.currency.symbol,
                                  value: (0, x.lv)(
                                    Number(S.make.amount) +
                                      Number(S.spent.amount),
                                    null !== (g = _[e.address]) && void 0 !== g
                                      ? g
                                      : 0
                                  ),
                                },
                                {
                                  direction: S.taken.direction,
                                  currency: S.taken.currency,
                                  label: S.taken.currency.symbol,
                                  value: (0, x.lv)(
                                    S.taken.amount,
                                    null !== (b = _[t.address]) && void 0 !== b
                                      ? b
                                      : 0
                                  ),
                                },
                              ],
                            }),
                        await (0, v.T)(d, T);
                    } catch (e) {
                      console.error(e);
                    } finally {
                      await Promise.all([
                        n.invalidateQueries(["balances"]),
                        n.invalidateQueries(["open-orders"]),
                        n.invalidateQueries(["market"]),
                        n.invalidateQueries(["allowances"]),
                      ]),
                        f(void 0);
                    }
                },
                [m, _, n, p, f, d]
              ),
              S = (0, i.useCallback)(
                async (e) => {
                  if (d && p)
                    try {
                      var t;
                      if (
                        (f({
                          title: "Cancel Order",
                          body: "Please confirm in your wallet.",
                          fields: [],
                        }),
                        !h)
                      ) {
                        let e = await y({
                          chainId: d.chain.id,
                          walletClient: d,
                        });
                        e && (await (0, v.x)(d.chain.id, e));
                      }
                      let { transaction: n, result: r } = await (0, l._e)({
                        chainId: p.id,
                        userAddress: d.account.address,
                        ids: e.map((e) => String(e.id)),
                      });
                      f({
                        title: "Cancel Order",
                        body: "Please confirm in your wallet.",
                        fields: r.map((e) => {
                          let { currency: n, amount: r, direction: i } = e;
                          return {
                            currency: n,
                            label: n.symbol,
                            value: (0, x.lv)(
                              r,
                              null !== (t = _[n.address]) && void 0 !== t
                                ? t
                                : 0
                            ),
                            direction: i,
                          };
                        }),
                      }),
                        await (0, v.T)(d, n);
                    } catch (e) {
                      console.error(e);
                    } finally {
                      await Promise.all([
                        n.invalidateQueries(["balances"]),
                        n.invalidateQueries(["open-orders"]),
                        n.invalidateQueries(["market"]),
                        n.invalidateQueries(["allowances"]),
                      ]),
                        f(void 0);
                    }
                },
                [h, _, n, p, f, d]
              ),
              P = (0, i.useCallback)(
                async (e) => {
                  if (d && p)
                    try {
                      var t;
                      if (
                        (f({
                          title: "Claim Order",
                          body: "Please confirm in your wallet.",
                          fields: [],
                        }),
                        !h)
                      ) {
                        let e = await y({
                          chainId: d.chain.id,
                          walletClient: d,
                        });
                        e && (await (0, v.x)(d.chain.id, e));
                      }
                      let { transaction: n, result: r } = await (0, l._X)({
                        chainId: p.id,
                        userAddress: d.account.address,
                        ids: e.map((e) => String(e.id)),
                      });
                      f({
                        title: "Claim Order",
                        body: "Please confirm in your wallet.",
                        fields: r.map((e) => {
                          let { currency: n, amount: r, direction: i } = e;
                          return {
                            currency: n,
                            label: n.symbol,
                            value: (0, x.lv)(
                              r,
                              null !== (t = _[n.address]) && void 0 !== t
                                ? t
                                : 0
                            ),
                            direction: i,
                          };
                        }),
                      }),
                        await (0, v.T)(d, n);
                    } catch (e) {
                      console.error(e);
                    } finally {
                      await Promise.all([
                        n.invalidateQueries(["balances"]),
                        n.invalidateQueries(["open-orders"]),
                        n.invalidateQueries(["market"]),
                        n.invalidateQueries(["allowances"]),
                      ]),
                        f(void 0);
                    }
                },
                [h, _, n, p, f, d]
              );
            return (0, r.jsx)(C.Provider, {
              value: { limit: T, cancels: S, claims: P },
              "data-sentry-element": "unknown",
              "data-sentry-component": "LimitContractProvider",
              "data-sentry-source-file": "limit-contract-context.tsx",
              children: t,
            });
          },
          T = () => i.useContext(C);
      },
      92751: function (e, t, n) {
        "use strict";
        n.d(t, {
          e: function () {
            return w;
          },
          c: function () {
            return E;
          },
        });
        var r = n(85893),
          i = n(67294),
          a = n(24361),
          o = n(84898),
          s = n(69077),
          u = n(70794),
          l = n(45775),
          c = n(95e3);
        let d = (e, t) =>
          !!e &&
          !!t &&
          e.chainId === t.chainId &&
          (0, c.D7)(e.quote, t.quote) &&
          (0, c.D7)(e.base, t.base);
        var f = n(41816);
        function p(e, t, n, r) {
          let i = e ? new u.Z(t).div(n) : new u.Z(t).times(n);
          return (0, f.uD)(i.isNaN() || !i.isFinite() ? new u.Z(0) : i, r);
        }
        function h(e, t, n) {
          return Array.from(
            [...(e ? t.bids : t.asks).map((e) => ({ ...e }))]
              .sort((t, n) =>
                e
                  ? Number(n.price) - Number(t.price)
                  : Number(t.price) - Number(n.price)
              )
              .map((e) => ({ price: e.price, size: new u.Z(e.baseAmount) }))
              .reduce((e, t) => {
                var r;
                let i = new u.Z(t.price),
                  a = new u.Z(i).toFixed(n.value, u.Z.ROUND_CEIL);
                return (
                  e.set(
                    a,
                    e.has(a)
                      ? {
                          price: a,
                          size: t.size.plus(
                            (null === (r = e.get(a)) || void 0 === r
                              ? void 0
                              : r.size) || 0
                          ),
                        }
                      : { price: a, size: t.size }
                  ),
                  e
                );
              }, new Map())
              .values()
          ).map((e) => ({
            price: e.price,
            size: (0, f.uD)(e.size, t.base.decimals),
          }));
        }
        let m = (e, t) => {
          if (e.length !== t.length) return !1;
          let n = e.sort((e, t) => Number(e.price) - Number(t.price)),
            r = t.sort((e, t) => Number(e.price) - Number(t.price));
          return n.every(
            (e, t) => e.price === r[t].price && e.baseAmount === r[t].baseAmount
          );
        };
        var y = n(49577),
          g = n(51512),
          b = n(20130);
        let v = i.createContext({
            selectedMarket: {},
            setSelectedMarket: (e) => e,
            selectedDecimalPlaces: void 0,
            setSelectedDecimalPlaces: () => {},
            availableDecimalPlacesGroups: null,
            depthClickedIndex: void 0,
            setDepthClickedIndex: () => {},
            bids: [],
            asks: [],
          }),
          w = (e) => {
            let { children: t } = e,
              { selectedChain: n } = (0, g.ql)(),
              w = (0, s.NL)(),
              {
                isBid: E,
                setPriceInput: x,
                priceInput: C,
                outputCurrencyAmount: _,
                inputCurrencyAmount: T,
                inputCurrency: S,
                outputCurrency: P,
                setInputCurrencyAmount: O,
                setOutputCurrencyAmount: I,
              } = (0, b.s)(),
              [A, k] = (0, i.useState)(void 0),
              [j, B] = i.useState(void 0),
              [M, N] = (0, i.useState)(void 0),
              { inputCurrencyAddress: D, outputCurrencyAddress: R } = (0, c.Co)(
                "limit",
                n
              ),
              F =
                D && R
                  ? (0, a.u)(n.id, [(0, l.K)(D), (0, l.K)(R)]).marketId
                  : "",
              { data: L } = (0, s.aM)(
                ["market", n, F],
                async () => {
                  if (!D || !R) return null;
                  {
                    let e = w
                      .getQueryCache()
                      .getAll()
                      .map((e) => e.queryKey)
                      .filter((e) => "market" === e[0]);
                    for (let t of e) t[2] && t[2] !== F && w.removeQueries(t);
                    return (0, o.YK)({
                      chainId: n.id,
                      token0: (0, l.K)(D),
                      token1: (0, l.K)(R),
                      options: { useSubgraph: !1 },
                    });
                  }
                },
                {
                  initialData: null,
                  refetchInterval: 2e3,
                  refetchIntervalInBackground: !0,
                }
              );
            (0, i.useEffect)(() => {
              var e, t, n, r;
              L
                ? d(j, L)
                  ? j &&
                    L &&
                    d(j, L) &&
                    (!m(
                      null !== (e = null == j ? void 0 : j.asks) && void 0 !== e
                        ? e
                        : [],
                      null !== (t = null == L ? void 0 : L.asks) && void 0 !== t
                        ? t
                        : []
                    ) ||
                      !m(
                        null !== (n = null == j ? void 0 : j.bids) &&
                          void 0 !== n
                          ? n
                          : [],
                        null !== (r = null == L ? void 0 : L.bids) &&
                          void 0 !== r
                          ? r
                          : []
                      )) &&
                    B(L)
                  : B(L)
                : B(void 0);
            }, [L, j]);
            let U = (0, i.useMemo)(
                () =>
                  j && j.bids.length + j.asks.length > 0
                    ? Array.from([, , ,].keys())
                        .map((e) => {
                          var t, n, r, i;
                          let a = Math.min(
                              Number(
                                null !==
                                  (r =
                                    null ===
                                      (t = j.bids.sort(
                                        (e, t) =>
                                          Number(t.price) - Number(e.price)
                                      )[0]) || void 0 === t
                                      ? void 0
                                      : t.price) && void 0 !== r
                                  ? r
                                  : Number.MAX_VALUE
                              ),
                              Number(
                                null !==
                                  (i =
                                    null ===
                                      (n = j.asks.sort(
                                        (e, t) =>
                                          Number(e.price) - Number(t.price)
                                      )[0]) || void 0 === n
                                      ? void 0
                                      : n.price) && void 0 !== i
                                  ? i
                                  : Number.MAX_VALUE
                              )
                            ),
                            o = (0, y.z)(a),
                            s = (10 ** (e - o)).toFixed(Math.max(o - e, 0));
                          if (new u.Z(a).gt(s))
                            return { label: s, value: Math.max(o - e, 0) };
                        })
                        .filter((e) => e)
                    : null,
                [j]
              ),
              [$, q] = (0, i.useMemo)(
                () => (j && A ? [h(!0, j, A), h(!1, j, A)] : [[], []]),
                [A, j]
              );
            (0, i.useEffect)(() => {
              if (!U || 0 === U.length) {
                k(void 0);
                return;
              }
              k(U[0]);
            }, [
              n.id,
              U,
              null == j ? void 0 : j.quote.address,
              null == j ? void 0 : j.base.address,
            ]),
              (0, i.useEffect)(() => {
                if (!U || 0 === U.length) return;
                let e = U[0].value;
                M &&
                  S &&
                  P &&
                  (M.isBid && $[M.index]
                    ? x((0, f.uD)($[M.index].price, e))
                    : !M.isBid &&
                      q[M.index] &&
                      x((0, f.uD)(q[M.index].price, e)));
              }, [U, q, $, M, x, S, P, n.id]);
            let H = (0, i.useRef)({
              priceInput: C,
              outputCurrencyAmount: _,
              inputCurrencyAmount: T,
            });
            return (
              (0, i.useEffect)(() => {
                if (
                  !(new u.Z(T).isNaN() || new u.Z(T).isZero()) &&
                  (null == P ? void 0 : P.decimals) &&
                  (null == S ? void 0 : S.decimals)
                ) {
                  if (H.current.priceInput !== C) {
                    let e = p(E, T, C, P.decimals);
                    I(e),
                      (H.current = {
                        priceInput: C,
                        outputCurrencyAmount: e,
                        inputCurrencyAmount: T,
                      });
                  } else if (H.current.outputCurrencyAmount !== _) {
                    let e = (function (e, t, n, r) {
                      let i = e ? new u.Z(t).times(n) : new u.Z(t).div(n);
                      return (0, f.uD)(
                        i.isNaN() || !i.isFinite() ? new u.Z(0) : i,
                        r
                      );
                    })(E, _, C, S.decimals);
                    O(e),
                      (H.current = {
                        priceInput: C,
                        outputCurrencyAmount: _,
                        inputCurrencyAmount: e,
                      });
                  } else if (H.current.inputCurrencyAmount !== T) {
                    let e = p(E, T, C, P.decimals);
                    I(e),
                      (H.current = {
                        priceInput: C,
                        outputCurrencyAmount: e,
                        inputCurrencyAmount: T,
                      });
                  }
                }
              }, [
                null == S ? void 0 : S.decimals,
                null == P ? void 0 : P.decimals,
                T,
                E,
                _,
                C,
                O,
                I,
              ]),
              (0, r.jsx)(v.Provider, {
                value: {
                  selectedMarket: j,
                  setSelectedMarket: B,
                  selectedDecimalPlaces: A,
                  setSelectedDecimalPlaces: k,
                  availableDecimalPlacesGroups: U,
                  depthClickedIndex: M,
                  setDepthClickedIndex: N,
                  bids: $,
                  asks: q,
                },
                "data-sentry-element": "unknown",
                "data-sentry-component": "MarketProvider",
                "data-sentry-source-file": "market-context.tsx",
                children: t,
              })
            );
          },
          E = () => i.useContext(v);
      },
      84373: function (e, t, n) {
        "use strict";
        n.d(t, {
          U: function () {
            return l;
          },
          W: function () {
            return c;
          },
        });
        var r = n(85893),
          i = n(67294),
          a = n(69077),
          o = n(84898),
          s = n(51512);
        let u = i.createContext({ openOrders: [] }),
          l = (e) => {
            let { children: t } = e,
              { address: n } = (0, a.mA)(),
              { selectedChain: i } = (0, s.ql)(),
              { data: l } = (0, a.aM)(
                ["open-orders", i.id, n],
                () => (n ? (0, o.x0)({ chainId: i.id, userAddress: n }) : []),
                {
                  refetchIntervalInBackground: !0,
                  refetchInterval: 2e3,
                  initialData: [],
                }
              );
            return (0, r.jsx)(u.Provider, {
              value: { openOrders: null != l ? l : [] },
              "data-sentry-element": "unknown",
              "data-sentry-component": "OpenOrderProvider",
              "data-sentry-source-file": "open-order-context.tsx",
              children: t,
            });
          },
          c = () => i.useContext(u);
      },
      19001: function (e, t, n) {
        "use strict";
        n.d(t, {
          n: function () {
            return v;
          },
          x: function () {
            return w;
          },
        });
        var r = n(85893),
          i = n(67294),
          a = n(69077),
          o = n(89401),
          s = n(84898),
          u = n(51512),
          l = n(32040),
          c = n(61228),
          d = n(17019),
          f = n(35816);
        let p = {
            [d.vo.MITOSIS_TESTNET]: [],
            [d.vo.BASE]: [
              {
                token0: "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
                token1: "0x4200000000000000000000000000000000000006",
                salt: f.Z,
                key: "0xc8cbe608c82ee9c4c30f01d7c0eefd977538ac396ed34430aa3993bfe0d363ae",
              },
            ],
            [d.vo.ZKSYNC]: [],
          },
          h = (e, t) => (e ** (31536e3 / t) - 1) * 100;
        async function m(e, t) {
          let n = Math.floor(new Date().getTime() / 1e3),
            r = n - (n % 300),
            i = n - (n % 3600),
            a = await Promise.all(
              p[e].map(async (t) => {
                let { token0: n, token1: a, salt: o } = t,
                  u = await (0, s.Mj)({
                    chainId: e,
                    token0: n,
                    token1: a,
                    salt: o,
                    options: { useSubgraph: !1 },
                  }),
                  c = await (0, s.Zl)({
                    chainId: e,
                    token0: n,
                    token1: a,
                    salt: o,
                    volumeFromTimestamp: r - 86400,
                    volumeToTimestamp: r,
                    snapshotFromTimestamp: i - 7776e3,
                    snapshotToTimestamp: i,
                    snapshotIntervalType: l.ox.oneHour,
                    spreadProfitFromTimestamp: r - 86400,
                    spreadProfitToTimestamp: r,
                    options: { pool: u, useSubgraph: !0 },
                  });
                return { pool: u, poolPerformanceData: c };
              })
            );
          return a.map((n) => {
            var r, i;
            let { pool: a, poolPerformanceData: o } = n,
              u = a.market.base,
              l = a.market.quote,
              d = o.poolSpreadProfits.sort((e, t) => e.timestamp - t.timestamp),
              f = o.poolSnapshots
                .map((e) => {
                  let {
                      price: t,
                      liquidityA: n,
                      liquidityB: r,
                      totalSupply: i,
                      timestamp: a,
                    } = e,
                    o = (0, c.E)(u.address, n.currency.address)
                      ? Number(n.value) * Number(t) + Number(r.value)
                      : Number(r.value) * Number(t) + Number(n.value),
                    s = 0 === Number(i.value) ? 0 : o / Number(i.value);
                  return { lpPrice: s, time: Number(a) };
                })
                .sort((e, t) => e.time - t.time),
              p = f.findIndex((e) => {
                let { lpPrice: t } = e;
                return t > 0;
              }),
              m = -1 === p ? 1 : f[p].lpPrice,
              y = f.map((e) => {
                let { lpPrice: t, time: n } = e;
                return { values: [0 !== t ? t / m : 0, 0], time: n };
              }),
              g =
                (null !== (r = t[a.currencyA.address]) && void 0 !== r
                  ? r
                  : 0) *
                  Number(a.liquidityA.total.value) +
                (null !== (i = t[a.currencyB.address]) && void 0 !== i
                  ? i
                  : 0) *
                  Number(a.liquidityB.total.value),
              b = d.reduce((e, t) => {
                let { accumulatedProfitInUsd: n } = t;
                return e + Number(n);
              }, 0);
            return {
              key: a.key,
              lpCurrency: {
                address: (0, s.oi)({ chainId: e }).Rebalancer,
                name: "Clober LP "
                  .concat(a.currencyA.symbol, "/")
                  .concat(a.currencyB.symbol),
                symbol: ""
                  .concat(a.currencyA.symbol, "/")
                  .concat(a.currencyB.symbol),
                decimals: 18,
              },
              lpUsdValue: g / Number(a.totalSupply.value),
              currency0: a.currencyA,
              currency1: a.currencyB,
              reserve0: Number(a.liquidityA.total.value),
              reserve1: Number(a.liquidityB.total.value),
              tvl: g,
              apy: h(1 + b / g, 86400),
              volume24h: o.poolVolumes.reduce((e, t) => {
                let { currencyAVolume: n, currencyBVolume: r } = t;
                return (
                  e +
                  ((0, c.E)(n.currency.address, l.address)
                    ? Number(n.value)
                    : Number(r.value))
                );
              }, 0),
              historicalPriceIndex: y.slice(p),
            };
          });
        }
        var y = n(3389),
          g = n(95e3);
        let b = i.createContext({
            lpCurrencyAmount: "",
            setLpCurrencyAmount: () => {},
            currency0Amount: "",
            setCurrency0Amount: () => {},
            currency1Amount: "",
            setCurrency1Amount: () => {},
            disableSwap: !1,
            setDisableSwap: () => {},
            slippageInput: "1",
            setSlippageInput: () => {},
            lpBalances: {},
            pools: [],
            poolPositions: [],
          }),
          v = (e) => {
            let { children: t } = e,
              { selectedChain: n } = (0, u.ql)(),
              { address: l } = (0, a.mA)(),
              {
                prices: c,
                setCurrencies: d,
                whitelistCurrencies: f,
              } = (0, y.V)(),
              [h, v] = i.useState(""),
              [w, E] = i.useState(""),
              [x, C] = i.useState(""),
              [_, T] = i.useState(!1),
              [S, P] = i.useState("1"),
              { data: O } = (0, a.aM)(["pools", n.id], async () => m(n.id, c), {
                initialData: [],
                refetchInterval: 5e3,
                refetchIntervalInBackground: !0,
              }),
              { data: I } = (0, a.aM)(
                ["lp-balances", l, n.id],
                async () => {
                  if (!l) return {};
                  let e = await (0, o.JH)({
                    contracts: p[n.id].map((e) => {
                      let { key: t } = e;
                      return {
                        address: (0, s.oi)({ chainId: n.id }).Rebalancer,
                        abi: [
                          {
                            inputs: [
                              {
                                internalType: "address",
                                name: "",
                                type: "address",
                              },
                              {
                                internalType: "uint256",
                                name: "",
                                type: "uint256",
                              },
                            ],
                            name: "balanceOf",
                            outputs: [
                              {
                                internalType: "uint256",
                                name: "",
                                type: "uint256",
                              },
                            ],
                            stateMutability: "view",
                            type: "function",
                          },
                        ],
                        functionName: "balanceOf",
                        args: [l, BigInt(t)],
                      };
                    }),
                  });
                  return e.reduce((e, t, r) => {
                    let { result: i } = t;
                    return { ...e, [p[n.id][r].key]: null != i ? i : 0n };
                  }, {});
                },
                { refetchInterval: 5e3, refetchIntervalInBackground: !0 }
              );
            return (
              (0, i.useEffect)(() => {
                let e = async () => {
                  d((0, g.QP)(f));
                };
                e();
              }, [d, f]),
              (0, r.jsx)(b.Provider, {
                value: {
                  lpCurrencyAmount: h,
                  setLpCurrencyAmount: v,
                  currency0Amount: w,
                  setCurrency0Amount: E,
                  currency1Amount: x,
                  setCurrency1Amount: C,
                  disableSwap: _,
                  setDisableSwap: T,
                  slippageInput: S,
                  setSlippageInput: P,
                  lpBalances: null != I ? I : {},
                  pools: O,
                  poolPositions: [],
                },
                "data-sentry-element": "unknown",
                "data-sentry-component": "PoolProvider",
                "data-sentry-source-file": "pool-context.tsx",
                children: t,
              })
            );
          },
          w = () => i.useContext(b);
      },
      28142: function (e, t, n) {
        "use strict";
        n.d(t, {
          V: function () {
            return w;
          },
          k: function () {
            return E;
          },
        });
        var r = n(85893),
          i = n(67294),
          a = n(69077),
          o = n(84898),
          s = n(10341),
          u = n(61228),
          l = n(1958),
          c = n(21803),
          d = n(35816),
          f = n(70794),
          p = n(51512),
          h = n(3389),
          m = n(6807),
          y = n(41816),
          g = n(82615),
          b = n(97863);
        let v = i.createContext({
            mint: () => Promise.resolve(),
            burn: () => Promise.resolve(),
          }),
          w = (e) => {
            let { children: t } = e,
              n = (0, a.NL)(),
              { data: w } = (0, a.py)(),
              { setConfirmation: E } = (0, m.H)(),
              { selectedChain: x } = (0, p.ql)(),
              { allowances: C, prices: _ } = (0, h.V)(),
              T = (0, i.useCallback)(
                async (e, t, r, i, a, p) => {
                  if (w && x) {
                    console.log("mint", {
                      currency0: e,
                      currency1: t,
                      amount0: r,
                      amount1: i,
                      disableSwap: a,
                      slippage: p,
                    });
                    try {
                      var h, m, v, T;
                      E({
                        title: "Add Liquidity",
                        body: "Please confirm in your wallet.",
                        fields: [],
                      });
                      let n = (0, o.oi)({ chainId: x.id }).Minter;
                      !(0, u.E)(e.address, l.D) &&
                        C[n][e.address] < (0, c.v)(r, e.decimals) &&
                        (E({
                          title: "Approve",
                          body: "Please confirm in your wallet.",
                          fields: [],
                        }),
                        await (0, g.u)(w, e, n)),
                        !(0, u.E)(t.address, l.D) &&
                          C[n][t.address] < (0, c.v)(i, t.decimals) &&
                          (E({
                            title: "Approve",
                            body: "Please confirm in your wallet.",
                            fields: [],
                          }),
                          await (0, g.u)(w, t, n));
                      let S = (0, u.E)(
                          (0, o.qh)({
                            chainId: x.id,
                            token0: e.address,
                            token1: t.address,
                          }),
                          e.address
                        )
                          ? t
                          : e,
                        { transaction: P, result: O } = await (0, s.EB)({
                          chainId: x.id,
                          userAddress: w.account.address,
                          token0: e.address,
                          token1: t.address,
                          salt: d.Z,
                          amount0: r,
                          amount1: i,
                          options: {
                            gasLimit: 800000n,
                            useSubgraph: !1,
                            disableSwap: a,
                            slippage: p,
                            testnetPrice:
                              null !== (h = _[S.address]) && void 0 !== h
                                ? h
                                : 0,
                          },
                        });
                      E({
                        title: "Add Liquidity",
                        body: "Please confirm in your wallet.",
                        fields: [
                          new f.Z(O.currencyA.amount).isZero()
                            ? void 0
                            : {
                                direction: O.currencyA.direction,
                                currency: O.currencyA.currency,
                                label: O.currencyA.currency.symbol,
                                value: (0, y.lv)(
                                  O.currencyA.amount,
                                  null !==
                                    (m = _[O.currencyA.currency.address]) &&
                                    void 0 !== m
                                    ? m
                                    : 0
                                ),
                              },
                          new f.Z(O.currencyB.amount).isZero()
                            ? void 0
                            : {
                                direction: O.currencyB.direction,
                                currency: O.currencyB.currency,
                                label: O.currencyB.currency.symbol,
                                value: (0, y.lv)(
                                  O.currencyB.amount,
                                  null !==
                                    (v = _[O.currencyB.currency.address]) &&
                                    void 0 !== v
                                    ? v
                                    : 0
                                ),
                              },
                          new f.Z(O.lpCurrency.amount).isZero()
                            ? void 0
                            : {
                                direction: O.lpCurrency.direction,
                                currency: O.lpCurrency.currency,
                                label: O.lpCurrency.currency.symbol,
                                value: (0, y.lv)(
                                  O.lpCurrency.amount,
                                  null !== (T = _[S.address]) && void 0 !== T
                                    ? T
                                    : 0
                                ),
                              },
                        ].filter((e) => void 0 !== e),
                      }),
                        P && (await (0, b.T)(w, P));
                    } catch (e) {
                      console.error(e);
                    } finally {
                      await Promise.all([
                        n.invalidateQueries(["balances"]),
                        n.invalidateQueries(["allowances"]),
                        n.invalidateQueries(["pools"]),
                        n.invalidateQueries(["lp-balances"]),
                      ]),
                        E(void 0);
                    }
                  }
                },
                [C, _, n, x, E, w]
              ),
              S = (0, i.useCallback)(
                async (e, t, r, i) => {
                  if (w && x) {
                    console.log("burn", {
                      currency0: e,
                      currency1: t,
                      lpCurrencyAmount: r,
                      slippageInput: i,
                    });
                    try {
                      var a, l, c;
                      E({
                        title: "Remove Liquidity",
                        body: "Please confirm in your wallet.",
                        fields: [],
                      });
                      let n = (0, u.E)(
                          (0, o.qh)({
                            chainId: x.id,
                            token0: e.address,
                            token1: t.address,
                          }),
                          e.address
                        )
                          ? t
                          : e,
                        { result: p, transaction: h } = await (0, s.PM)({
                          chainId: x.id,
                          userAddress: w.account.address,
                          token0: e.address,
                          token1: t.address,
                          salt: d.Z,
                          amount: r,
                          options: {
                            gasLimit: 800000n,
                            useSubgraph: !1,
                            slippage: Number(i),
                          },
                        });
                      E({
                        title: "Remove Liquidity",
                        body: "Please confirm in your wallet.",
                        fields: [
                          new f.Z(p.currencyA.amount).isZero()
                            ? void 0
                            : {
                                direction: p.currencyA.direction,
                                currency: p.currencyA.currency,
                                label: p.currencyA.currency.symbol,
                                value: (0, y.lv)(
                                  p.currencyA.amount,
                                  null !==
                                    (a = _[p.currencyA.currency.address]) &&
                                    void 0 !== a
                                    ? a
                                    : 0
                                ),
                              },
                          new f.Z(p.currencyB.amount).isZero()
                            ? void 0
                            : {
                                direction: p.currencyB.direction,
                                currency: p.currencyB.currency,
                                label: p.currencyB.currency.symbol,
                                value: (0, y.lv)(
                                  p.currencyB.amount,
                                  null !==
                                    (l = _[p.currencyB.currency.address]) &&
                                    void 0 !== l
                                    ? l
                                    : 0
                                ),
                              },
                          new f.Z(p.lpCurrency.amount).isZero()
                            ? void 0
                            : {
                                direction: p.lpCurrency.direction,
                                currency: p.lpCurrency.currency,
                                label: p.lpCurrency.currency.symbol,
                                value: (0, y.lv)(
                                  p.lpCurrency.amount,
                                  null !== (c = _[n.address]) && void 0 !== c
                                    ? c
                                    : 0
                                ),
                              },
                        ].filter((e) => void 0 !== e),
                      }),
                        h && (await (0, b.T)(w, h));
                    } catch (e) {
                      console.error(e);
                    } finally {
                      await Promise.all([
                        n.invalidateQueries(["balances"]),
                        n.invalidateQueries(["pools"]),
                        n.invalidateQueries(["lp-balances"]),
                      ]),
                        E(void 0);
                    }
                  }
                },
                [_, n, x, E, w]
              );
            return (0, r.jsx)(v.Provider, {
              value: { mint: T, burn: S },
              "data-sentry-element": "unknown",
              "data-sentry-component": "PoolContractProvider",
              "data-sentry-source-file": "pool-contract-context.tsx",
              children: t,
            });
          },
          E = () => i.useContext(v);
      },
      59159: function (e, t, n) {
        "use strict";
        n.d(t, {
          s: function () {
            return p;
          },
          x: function () {
            return h;
          },
        });
        var r = n(85893),
          i = n(67294),
          a = n(61228),
          o = n(45775),
          s = n(51512),
          u = n(95e3),
          l = n(26111),
          c = n(20459),
          d = n(3389);
        let f = i.createContext({
            inputCurrency: void 0,
            setInputCurrency: () => {},
            inputCurrencyAmount: "",
            setInputCurrencyAmount: () => {},
            outputCurrency: void 0,
            setOutputCurrency: () => {},
            slippageInput: "1",
            setSlippageInput: () => {},
          }),
          p = (e) => {
            var t, n, p, h;
            let { children: m } = e,
              { selectedChain: y } = (0, s.ql)(),
              { whitelistCurrencies: g, setCurrencies: b } = (0, d.V)(),
              [v, w] = (0, i.useState)(void 0),
              [E, x] = (0, i.useState)(""),
              [C, _] = (0, i.useState)(void 0),
              [T, S] = (0, i.useState)("1"),
              P = (0, i.useCallback)(
                (e) => {
                  e && localStorage.setItem((0, u.tz)("swap", y), e.address),
                    w(e);
                },
                [y]
              ),
              O = (0, i.useCallback)(
                (e) => {
                  e && localStorage.setItem((0, u.er)("swap", y), e.address),
                    _(e);
                },
                [y]
              ),
              [I, A] = [
                null !==
                  (p =
                    null === (t = (0, l.v)()) || void 0 === t
                      ? void 0
                      : t.inputCurrency) && void 0 !== p
                  ? p
                  : localStorage.getItem((0, u.tz)("swap", y)),
                null !==
                  (h =
                    null === (n = (0, l.v)()) || void 0 === n
                      ? void 0
                      : n.outputCurrency) && void 0 !== h
                  ? h
                  : localStorage.getItem((0, u.er)("swap", y)),
              ];
            return (
              (0, i.useEffect)(() => {
                let e = async () => {
                  var e, t;
                  if (!(0, u.ib)(g, y)) {
                    P(c.VN[y.id]), O(c.g$[y.id]);
                    return;
                  }
                  let n = I
                      ? null !==
                          (e = g.find((e) =>
                            (0, a.E)(e.address, (0, o.K)(I))
                          )) && void 0 !== e
                        ? e
                        : await (0, u.kn)(y.id, (0, o.K)(I))
                      : c.VN[y.id],
                    r = A
                      ? null !==
                          (t = g.find((e) =>
                            (0, a.E)(e.address, (0, o.K)(A))
                          )) && void 0 !== t
                        ? t
                        : await (0, u.kn)(y.id, (0, o.K)(A))
                      : c.g$[y.id];
                  b((0, u.QP)([...g].concat(n ? [n] : [], r ? [r] : []))),
                    P(n),
                    O(r);
                };
                window.location.href.includes("/swap") && e();
              }, [y, b, P, O, g, window.location.href, I, A]),
              (0, r.jsx)(f.Provider, {
                value: {
                  inputCurrency: v,
                  setInputCurrency: P,
                  inputCurrencyAmount: E,
                  setInputCurrencyAmount: x,
                  outputCurrency: C,
                  setOutputCurrency: O,
                  slippageInput: T,
                  setSlippageInput: S,
                },
                "data-sentry-element": "unknown",
                "data-sentry-component": "SwapProvider",
                "data-sentry-source-file": "swap-context.tsx",
                children: m,
              })
            );
          },
          h = () => i.useContext(f);
      },
      37515: function (e, t, n) {
        "use strict";
        n.d(t, {
          g: function () {
            return y;
          },
          Y: function () {
            return g;
          },
        });
        var r = n(85893),
          i = n(67294),
          a = n(45775),
          o = n(61228),
          s = n(1958),
          u = n(69077),
          l = n(71015);
        async function c(e, t, n, r, i, a, o) {
          let s = await e.buildCallData(t, n, r, i, a, o);
          return { transaction: s };
        }
        var d = n(6807),
          f = n(97863),
          p = n(3389),
          h = n(82615);
        let m = i.createContext({ swap: () => Promise.resolve() }),
          y = (e) => {
            let { children: t } = e,
              n = (0, u.NL)(),
              { data: y } = (0, u.py)(),
              { setConfirmation: g } = (0, d.H)(),
              { allowances: b, prices: v } = (0, p.V)(),
              w = (0, i.useCallback)(
                async (e, t, r, i, u, d, p, m) => {
                  if (y)
                    try {
                      var w, E;
                      g({
                        title: "Swap",
                        body: "Please confirm in your wallet.",
                        fields: [],
                      });
                      let n = await c(m, e, t, r, u, d, p),
                        x = (0, a.K)(n.transaction.to);
                      !(0, o.E)(e.address, s.D) &&
                        b[x][e.address] < t &&
                        (g({
                          title: "Approve",
                          body: "Please confirm in your wallet.",
                          fields: [],
                        }),
                        await (0, h.u)(y, e, x)),
                        g({
                          title: "Swap",
                          body: "Please confirm in your wallet.",
                          fields: [
                            {
                              currency: e,
                              label: e.symbol,
                              direction: "in",
                              value: (0, l.bM)(
                                t,
                                e.decimals,
                                null !== (w = v[e.address]) && void 0 !== w
                                  ? w
                                  : 0
                              ),
                            },
                            {
                              currency: r,
                              label: r.symbol,
                              direction: "out",
                              value: (0, l.bM)(
                                i,
                                r.decimals,
                                null !== (E = v[r.address]) && void 0 !== E
                                  ? E
                                  : 0
                              ),
                            },
                          ],
                        }),
                        await (0, f.T)(y, n.transaction);
                    } catch (e) {
                      console.error(e);
                    } finally {
                      await Promise.all([
                        n.invalidateQueries(["balances"]),
                        n.invalidateQueries(["allowances"]),
                      ]),
                        g(void 0);
                    }
                },
                [y, g, b, v, n]
              );
            return (0, r.jsx)(m.Provider, {
              value: { swap: w },
              "data-sentry-element": "unknown",
              "data-sentry-component": "SwapContractProvider",
              "data-sentry-source-file": "swap-contract-context.tsx",
              children: t,
            });
          },
          g = () => i.useContext(m);
      },
      6807: function (e, t, n) {
        "use strict";
        n.d(t, {
          k: function () {
            return l;
          },
          H: function () {
            return c;
          },
        });
        var r = n(85893),
          i = n(67294),
          a = n(73935),
          o = n(3086),
          s = (e) => {
            let { confirmation: t } = e;
            return t
              ? (0, a.createPortal)(
                  (0, r.jsx)("div", {
                    className:
                      "flex items-center justify-center fixed inset-0 bg-black bg-opacity-50 z-[1000] backdrop-blur-sm px-4 sm:px-0",
                    children: (0, r.jsxs)("div", {
                      className:
                        "flex flex-col w-full sm:w-fit min-w-[320px] bg-gray-800 text-white rounded-xl sm:rounded-2xl p-4 gap-4",
                      onClick: (e) => e.stopPropagation(),
                      children: [
                        (0, r.jsxs)("div", {
                          className: "flex flex-col gap-1",
                          children: [
                            (0, r.jsxs)("div", {
                              className: "flex items-center justify-between",
                              children: [
                                (0, r.jsx)("div", {
                                  className: "font-bold",
                                  children: t.title,
                                }),
                                (0, r.jsx)("div", {
                                  className:
                                    "h-4 w-4 animate-spin rounded-full border-2 border-solid border-green-500 border-r-transparent motion-reduce:animate-[spin_1.5s_linear_infinite]",
                                  role: "status",
                                }),
                              ],
                            }),
                            (0, r.jsx)("div", {
                              className: "text-xs sm:text-sm text-gray-500",
                              children: t.body,
                            }),
                          ],
                        }),
                        (0, r.jsx)("div", {
                          className: "flex flex-col gap-2",
                          children: t.fields.map((e, t) =>
                            (0, r.jsxs)(
                              "div",
                              {
                                className: "flex flex-row gap-1",
                                children: [
                                  "in" === e.direction
                                    ? (0, r.jsx)("div", {
                                        className:
                                          "flex text-sm sm:text-base w-9 sm:w-12 items-center justify-center bg-red-500 bg-opacity-10 font-bold text-red-500 rounded-lg",
                                        children: (0, r.jsx)("svg", {
                                          xmlns: "http://www.w3.org/2000/svg",
                                          viewBox: "0 0 12 4",
                                          fill: "none",
                                          className:
                                            "stroke-red-500 w-2 sm:w-3 h-1",
                                          children: (0, r.jsx)("path", {
                                            d: "M1.66669 2H20.3334",
                                            strokeWidth: "2",
                                            strokeLinecap: "round",
                                            strokeLinejoin: "round",
                                          }),
                                        }),
                                      })
                                    : (0, r.jsx)(r.Fragment, {}),
                                  "out" === e.direction
                                    ? (0, r.jsx)("div", {
                                        className:
                                          "flex text-sm sm:text-base w-9 sm:w-12 items-center justify-center bg-green-500 bg-opacity-10 font-bold text-green-500 rounded-lg",
                                        children: (0, r.jsx)("svg", {
                                          xmlns: "http://www.w3.org/2000/svg",
                                          viewBox: "0 0 16 16",
                                          fill: "none",
                                          className:
                                            "stroke-green-500 w-3 h-3 sm:w-4 sm:h-4",
                                          children: (0, r.jsx)("path", {
                                            d: "M8.00001 3.33331V12.6666M3.33334 7.99998H12.6667",
                                            strokeWidth: "2",
                                            strokeLinecap: "round",
                                            strokeLinejoin: "round",
                                          }),
                                        }),
                                      })
                                    : (0, r.jsx)(r.Fragment, {}),
                                  (0, r.jsxs)("div", {
                                    className:
                                      "flex w-full items-center justify-between bg-gray-700 px-3 py-2 text-sm sm:text-base rounded-lg",
                                    children: [
                                      (0, r.jsxs)("div", {
                                        className:
                                          "flex items-center gap-2 truncate",
                                        children: [
                                          e.currency
                                            ? (0, r.jsx)(o.r, {
                                                currency: e.currency,
                                                className:
                                                  "w-5 h-5 rounded-full",
                                              })
                                            : (0, r.jsx)(r.Fragment, {}),
                                          (0, r.jsx)("div", {
                                            children: e.label,
                                          }),
                                        ],
                                      }),
                                      (0, r.jsx)("div", { children: e.value }),
                                    ],
                                  }),
                                ],
                              },
                              t
                            )
                          ),
                        }),
                      ],
                    }),
                  }),
                  document.body
                )
              : (0, r.jsx)(r.Fragment, {});
          };
        let u = i.createContext({ setConfirmation: () => {} }),
          l = (e) => {
            let { children: t } = e,
              [n, a] = i.useState();
            return (0, r.jsxs)(u.Provider, {
              value: { confirmation: n, setConfirmation: a },
              "data-sentry-element": "unknown",
              "data-sentry-component": "TransactionProvider",
              "data-sentry-source-file": "transaction-context.tsx",
              children: [
                t,
                (0, r.jsx)(s, {
                  confirmation: n,
                  "data-sentry-element": "ConfirmationModal",
                  "data-sentry-source-file": "transaction-context.tsx",
                }),
              ],
            });
          };
        function c() {
          return (0, i.useContext)(u);
        }
      },
      81349: function (e, t, n) {
        "use strict";
        let r, i;
        n.r(t),
          n.d(t, {
            default: function () {
              return oE;
            },
          });
        var a,
          o,
          s,
          u,
          l,
          c,
          d,
          f,
          p,
          h,
          m,
          y,
          g,
          b,
          v,
          w,
          E,
          x,
          C,
          _,
          T,
          S,
          P,
          O,
          I,
          A,
          k,
          j,
          B,
          M,
          N,
          D,
          R,
          F,
          L,
          U,
          $,
          q,
          H,
          z,
          G,
          W = n(85893),
          V = n(67294),
          K = n.t(V, 2);
        n(82488), n(94169);
        var Z =
            '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
          J = {
            rounded: `SFRounded, ui-rounded, "SF Pro Rounded", ${Z}`,
            system: Z,
          },
          Y = {
            large: {
              actionButton: "9999px",
              connectButton: "12px",
              modal: "24px",
              modalMobile: "28px",
            },
            medium: {
              actionButton: "10px",
              connectButton: "8px",
              modal: "16px",
              modalMobile: "18px",
            },
            none: {
              actionButton: "0px",
              connectButton: "0px",
              modal: "0px",
              modalMobile: "0px",
            },
            small: {
              actionButton: "4px",
              connectButton: "4px",
              modal: "8px",
              modalMobile: "8px",
            },
          },
          X = {
            large: { modalOverlay: "blur(20px)" },
            none: { modalOverlay: "blur(0px)" },
            small: { modalOverlay: "blur(4px)" },
          },
          Q = ({
            borderRadius: e = "large",
            fontStack: t = "rounded",
            overlayBlur: n = "none",
          }) => ({
            blurs: { modalOverlay: X[n].modalOverlay },
            fonts: { body: J[t] },
            radii: {
              actionButton: Y[e].actionButton,
              connectButton: Y[e].connectButton,
              menuButton: Y[e].connectButton,
              modal: Y[e].modal,
              modalMobile: Y[e].modalMobile,
            },
          }),
          ee = {
            blue: { accentColor: "#0E76FD", accentColorForeground: "#FFF" },
            green: { accentColor: "#1DB847", accentColorForeground: "#FFF" },
            orange: { accentColor: "#FF801F", accentColorForeground: "#FFF" },
            pink: { accentColor: "#FF5CA0", accentColorForeground: "#FFF" },
            purple: { accentColor: "#5F5AFA", accentColorForeground: "#FFF" },
            red: { accentColor: "#FA423C", accentColorForeground: "#FFF" },
          },
          et = ee.blue,
          en = ({
            accentColor: e = et.accentColor,
            accentColorForeground: t = et.accentColorForeground,
            ...n
          } = {}) => ({
            ...Q(n),
            colors: {
              accentColor: e,
              accentColorForeground: t,
              actionButtonBorder: "rgba(0, 0, 0, 0.04)",
              actionButtonBorderMobile: "rgba(0, 0, 0, 0.06)",
              actionButtonSecondaryBackground: "rgba(0, 0, 0, 0.06)",
              closeButton: "rgba(60, 66, 66, 0.8)",
              closeButtonBackground: "rgba(0, 0, 0, 0.06)",
              connectButtonBackground: "#FFF",
              connectButtonBackgroundError: "#FF494A",
              connectButtonInnerBackground:
                "linear-gradient(0deg, rgba(0, 0, 0, 0.03), rgba(0, 0, 0, 0.06))",
              connectButtonText: "#25292E",
              connectButtonTextError: "#FFF",
              connectionIndicator: "#30E000",
              downloadBottomCardBackground:
                "linear-gradient(126deg, rgba(255, 255, 255, 0) 9.49%, rgba(171, 171, 171, 0.04) 71.04%), #FFFFFF",
              downloadTopCardBackground:
                "linear-gradient(126deg, rgba(171, 171, 171, 0.2) 9.49%, rgba(255, 255, 255, 0) 71.04%), #FFFFFF",
              error: "#FF494A",
              generalBorder: "rgba(0, 0, 0, 0.06)",
              generalBorderDim: "rgba(0, 0, 0, 0.03)",
              menuItemBackground: "rgba(60, 66, 66, 0.1)",
              modalBackdrop: "rgba(0, 0, 0, 0.3)",
              modalBackground: "#FFF",
              modalBorder: "transparent",
              modalText: "#25292E",
              modalTextDim: "rgba(60, 66, 66, 0.3)",
              modalTextSecondary: "rgba(60, 66, 66, 0.6)",
              profileAction: "#FFF",
              profileActionHover: "rgba(255, 255, 255, 0.5)",
              profileForeground: "rgba(60, 66, 66, 0.06)",
              selectedOptionBorder: "rgba(60, 66, 66, 0.1)",
              standby: "#FFD641",
            },
            shadows: {
              connectButton: "0px 4px 12px rgba(0, 0, 0, 0.1)",
              dialog: "0px 8px 32px rgba(0, 0, 0, 0.32)",
              profileDetailsAction: "0px 2px 6px rgba(37, 41, 46, 0.04)",
              selectedOption: "0px 2px 6px rgba(0, 0, 0, 0.24)",
              selectedWallet: "0px 2px 6px rgba(0, 0, 0, 0.12)",
              walletLogo: "0px 2px 16px rgba(0, 0, 0, 0.16)",
            },
          });
        en.accentColors = ee;
        var er = function (e, t) {
          return (
            Object.defineProperty(e, "__recipe__", { value: t, writable: !1 }),
            e
          );
        };
        function ei(e) {
          var { conditions: t } = e;
          if (!t) throw Error("Styles have no conditions");
          return er(
            function (e) {
              if (
                "string" == typeof e ||
                "number" == typeof e ||
                "boolean" == typeof e
              ) {
                if (!t.defaultCondition) throw Error("No default condition");
                return { [t.defaultCondition]: e };
              }
              if (Array.isArray(e)) {
                if (!("responsiveArray" in t))
                  throw Error("Responsive arrays are not supported");
                var n = {};
                for (var r in t.responsiveArray)
                  null != e[r] && (n[t.responsiveArray[r]] = e[r]);
                return n;
              }
              return e;
            },
            {
              importPath: "@vanilla-extract/sprinkles/createUtils",
              importName: "createNormalizeValueFn",
              args: [{ conditions: e.conditions }],
            }
          );
        }
        function ea(e, t) {
          var n = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t &&
              (r = r.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              n.push.apply(n, r);
          }
          return n;
        }
        function eo(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? ea(Object(n), !0).forEach(function (t) {
                  var r;
                  (r = n[t]),
                    t in e
                      ? Object.defineProperty(e, t, {
                          value: r,
                          enumerable: !0,
                          configurable: !0,
                          writable: !0,
                        })
                      : (e[t] = r);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : ea(Object(n)).forEach(function (t) {
                  Object.defineProperty(
                    e,
                    t,
                    Object.getOwnPropertyDescriptor(n, t)
                  );
                });
          }
          return e;
        }
        var es = (e) =>
            function () {
              for (var t = arguments.length, n = Array(t), r = 0; r < t; r++)
                n[r] = arguments[r];
              var i = Object.assign({}, ...n.map((e) => e.styles)),
                a = Object.keys(i),
                o = a.filter((e) => "mappings" in i[e]);
              return Object.assign(
                (t) => {
                  var n = [],
                    r = {},
                    a = eo({}, t),
                    s = !1;
                  for (var u of o) {
                    var l = t[u];
                    if (null != l)
                      for (var c of ((s = !0), i[u].mappings))
                        (r[c] = l), null == a[c] && delete a[c];
                  }
                  var d = s ? eo(eo({}, r), a) : t;
                  for (var f in d) {
                    var p = d[f],
                      h = i[f];
                    try {
                      if (h.mappings) continue;
                      if ("string" == typeof p || "number" == typeof p)
                        n.push(h.values[p].defaultClass);
                      else if (Array.isArray(p))
                        for (var m = 0; m < p.length; m++) {
                          var y = p[m];
                          if (null != y) {
                            var g = h.responsiveArray[m];
                            n.push(h.values[y].conditions[g]);
                          }
                        }
                      else
                        for (var b in p) {
                          var v = p[b];
                          null != v && n.push(h.values[v].conditions[b]);
                        }
                    } catch (e) {
                      throw e;
                    }
                  }
                  return e(n.join(" "));
                },
                { properties: new Set(a) }
              );
            },
          eu = (e) => e,
          el = n(69077),
          ec = n(86010),
          ed = n(66403),
          ef = n(73935),
          ep = n(97582),
          eh = "right-scroll-bar-position",
          em = "width-before-scroll-bar",
          ey =
            (void 0 === a && (a = {}),
            ((void 0 === o &&
              (o = function (e) {
                return e;
              }),
            (s = []),
            (u = !1),
            (l = {
              read: function () {
                if (u)
                  throw Error(
                    "Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`."
                  );
                return s.length ? s[s.length - 1] : null;
              },
              useMedium: function (e) {
                var t = o(e, u);
                return (
                  s.push(t),
                  function () {
                    s = s.filter(function (e) {
                      return e !== t;
                    });
                  }
                );
              },
              assignSyncMedium: function (e) {
                for (u = !0; s.length; ) {
                  var t = s;
                  (s = []), t.forEach(e);
                }
                s = {
                  push: function (t) {
                    return e(t);
                  },
                  filter: function () {
                    return s;
                  },
                };
              },
              assignMedium: function (e) {
                u = !0;
                var t = [];
                if (s.length) {
                  var n = s;
                  (s = []), n.forEach(e), (t = s);
                }
                var r = function () {
                    var n = t;
                    (t = []), n.forEach(e);
                  },
                  i = function () {
                    return Promise.resolve().then(r);
                  };
                i(),
                  (s = {
                    push: function (e) {
                      t.push(e), i();
                    },
                    filter: function (e) {
                      return (t = t.filter(e)), s;
                    },
                  });
              },
            })).options = (0, ep.__assign)({ async: !0, ssr: !1 }, a)),
            l),
          eg = function () {},
          eb = V.forwardRef(function (e, t) {
            var n,
              r,
              i,
              a = V.useRef(null),
              o = V.useState({
                onScrollCapture: eg,
                onWheelCapture: eg,
                onTouchMoveCapture: eg,
              }),
              s = o[0],
              u = o[1],
              l = e.forwardProps,
              c = e.children,
              d = e.className,
              f = e.removeScrollBar,
              p = e.enabled,
              h = e.shards,
              m = e.sideCar,
              y = e.noIsolation,
              g = e.inert,
              b = e.allowPinchZoom,
              v = e.as,
              w = void 0 === v ? "div" : v,
              E = (0, ep.__rest)(e, [
                "forwardProps",
                "children",
                "className",
                "removeScrollBar",
                "enabled",
                "shards",
                "sideCar",
                "noIsolation",
                "inert",
                "allowPinchZoom",
                "as",
              ]),
              x =
                ((n = [a, t]),
                (r = function (e) {
                  return n.forEach(function (t) {
                    return (
                      "function" == typeof t ? t(e) : t && (t.current = e), t
                    );
                  });
                }),
                ((i = (0, V.useState)(function () {
                  return {
                    value: null,
                    callback: r,
                    facade: {
                      get current() {
                        return i.value;
                      },
                      set current(value) {
                        var e = i.value;
                        e !== value &&
                          ((i.value = value), i.callback(value, e));
                      },
                    },
                  };
                })[0]).callback = r),
                i.facade),
              C = (0, ep.__assign)((0, ep.__assign)({}, E), s);
            return V.createElement(
              V.Fragment,
              null,
              p &&
                V.createElement(m, {
                  sideCar: ey,
                  removeScrollBar: f,
                  shards: h,
                  noIsolation: y,
                  inert: g,
                  setCallbacks: u,
                  allowPinchZoom: !!b,
                  lockRef: a,
                }),
              l
                ? V.cloneElement(
                    V.Children.only(c),
                    (0, ep.__assign)((0, ep.__assign)({}, C), { ref: x })
                  )
                : V.createElement(
                    w,
                    (0, ep.__assign)({}, C, { className: d, ref: x }),
                    c
                  )
            );
          });
        (eb.defaultProps = { enabled: !0, removeScrollBar: !0, inert: !1 }),
          (eb.classNames = { fullWidth: em, zeroRight: eh });
        var ev = function (e) {
          var t = e.sideCar,
            n = (0, ep.__rest)(e, ["sideCar"]);
          if (!t)
            throw Error(
              "Sidecar: please provide `sideCar` property to import the right car"
            );
          var r = t.read();
          if (!r) throw Error("Sidecar medium not found");
          return V.createElement(r, (0, ep.__assign)({}, n));
        };
        ev.isSideCarExport = !0;
        var ew = function () {
            var e = 0,
              t = null;
            return {
              add: function (r) {
                if (
                  0 == e &&
                  (t = (function () {
                    if (!document) return null;
                    var e = document.createElement("style");
                    e.type = "text/css";
                    var t = y || n.nc;
                    return t && e.setAttribute("nonce", t), e;
                  })())
                ) {
                  var i, a;
                  (i = t).styleSheet
                    ? (i.styleSheet.cssText = r)
                    : i.appendChild(document.createTextNode(r)),
                    (a = t),
                    (
                      document.head || document.getElementsByTagName("head")[0]
                    ).appendChild(a);
                }
                e++;
              },
              remove: function () {
                --e ||
                  !t ||
                  (t.parentNode && t.parentNode.removeChild(t), (t = null));
              },
            };
          },
          eE = function () {
            var e = ew();
            return function (t, n) {
              V.useEffect(
                function () {
                  return (
                    e.add(t),
                    function () {
                      e.remove();
                    }
                  );
                },
                [t && n]
              );
            };
          },
          ex = function () {
            var e = eE();
            return function (t) {
              return e(t.styles, t.dynamic), null;
            };
          },
          eC = { left: 0, top: 0, right: 0, gap: 0 },
          e_ = function (e) {
            return parseInt(e || "", 10) || 0;
          },
          eT = function (e) {
            var t = window.getComputedStyle(document.body),
              n = t["padding" === e ? "paddingLeft" : "marginLeft"],
              r = t["padding" === e ? "paddingTop" : "marginTop"],
              i = t["padding" === e ? "paddingRight" : "marginRight"];
            return [e_(n), e_(r), e_(i)];
          },
          eS = function (e) {
            if ((void 0 === e && (e = "margin"), "undefined" == typeof window))
              return eC;
            var t = eT(e),
              n = document.documentElement.clientWidth,
              r = window.innerWidth;
            return {
              left: t[0],
              top: t[1],
              right: t[2],
              gap: Math.max(0, r - n + t[2] - t[0]),
            };
          },
          eP = ex(),
          eO = function (e, t, n, r) {
            var i = e.left,
              a = e.top,
              o = e.right,
              s = e.gap;
            return (
              void 0 === n && (n = "margin"),
              "\n  ."
                .concat("with-scroll-bars-hidden", " {\n   overflow: hidden ")
                .concat(r, ";\n   padding-right: ")
                .concat(s, "px ")
                .concat(r, ";\n  }\n  body {\n    overflow: hidden ")
                .concat(r, ";\n    overscroll-behavior: contain;\n    ")
                .concat(
                  [
                    t && "position: relative ".concat(r, ";"),
                    "margin" === n &&
                      "\n    padding-left: "
                        .concat(i, "px;\n    padding-top: ")
                        .concat(a, "px;\n    padding-right: ")
                        .concat(
                          o,
                          "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: "
                        )
                        .concat(s, "px ")
                        .concat(r, ";\n    "),
                    "padding" === n &&
                      "padding-right: ".concat(s, "px ").concat(r, ";"),
                  ]
                    .filter(Boolean)
                    .join(""),
                  "\n  }\n  \n  ."
                )
                .concat(eh, " {\n    right: ")
                .concat(s, "px ")
                .concat(r, ";\n  }\n  \n  .")
                .concat(em, " {\n    margin-right: ")
                .concat(s, "px ")
                .concat(r, ";\n  }\n  \n  .")
                .concat(eh, " .")
                .concat(eh, " {\n    right: 0 ")
                .concat(r, ";\n  }\n  \n  .")
                .concat(em, " .")
                .concat(em, " {\n    margin-right: 0 ")
                .concat(r, ";\n  }\n  \n  body {\n    ")
                .concat("--removed-body-scroll-bar-size", ": ")
                .concat(s, "px;\n  }\n")
            );
          },
          eI = function (e) {
            var t = e.noRelative,
              n = e.noImportant,
              r = e.gapMode,
              i = void 0 === r ? "margin" : r,
              a = V.useMemo(
                function () {
                  return eS(i);
                },
                [i]
              );
            return V.createElement(eP, {
              styles: eO(a, !t, i, n ? "" : "!important"),
            });
          },
          eA = !1;
        if ("undefined" != typeof window)
          try {
            var ek = Object.defineProperty({}, "passive", {
              get: function () {
                return (eA = !0), !0;
              },
            });
            window.addEventListener("test", ek, ek),
              window.removeEventListener("test", ek, ek);
          } catch (e) {
            eA = !1;
          }
        var ej = !!eA && { passive: !1 },
          eB = function (e) {
            var t = window.getComputedStyle(e);
            return (
              "hidden" !== t.overflowY &&
              !(t.overflowY === t.overflowX && "visible" === t.overflowY)
            );
          },
          eM = function (e) {
            var t = window.getComputedStyle(e);
            return (
              "hidden" !== t.overflowX &&
              !(t.overflowY === t.overflowX && "visible" === t.overflowX)
            );
          },
          eN = function (e, t) {
            var n = t;
            do {
              if (
                ("undefined" != typeof ShadowRoot &&
                  n instanceof ShadowRoot &&
                  (n = n.host),
                eD(e, n))
              ) {
                var r = eR(e, n);
                if (r[1] > r[2]) return !0;
              }
              n = n.parentNode;
            } while (n && n !== document.body);
            return !1;
          },
          eD = function (e, t) {
            return "v" === e ? eB(t) : eM(t);
          },
          eR = function (e, t) {
            return "v" === e
              ? [t.scrollTop, t.scrollHeight, t.clientHeight]
              : [t.scrollLeft, t.scrollWidth, t.clientWidth];
          },
          eF = function (e, t, n, r, i) {
            var a,
              o =
                ((a = window.getComputedStyle(t).direction),
                "h" === e && "rtl" === a ? -1 : 1),
              s = o * r,
              u = n.target,
              l = t.contains(u),
              c = !1,
              d = s > 0,
              f = 0,
              p = 0;
            do {
              var h = eR(e, u),
                m = h[0],
                y = h[1] - h[2] - o * m;
              (m || y) && eD(e, u) && ((f += y), (p += m)), (u = u.parentNode);
            } while (
              (!l && u !== document.body) ||
              (l && (t.contains(u) || t === u))
            );
            return (
              d && ((i && 0 === f) || (!i && s > f))
                ? (c = !0)
                : !d && ((i && 0 === p) || (!i && -s > p)) && (c = !0),
              c
            );
          },
          eL = function (e) {
            return "changedTouches" in e
              ? [e.changedTouches[0].clientX, e.changedTouches[0].clientY]
              : [0, 0];
          },
          eU = function (e) {
            return [e.deltaX, e.deltaY];
          },
          e$ = function (e) {
            return e && "current" in e ? e.current : e;
          },
          eq = 0,
          eH = [],
          ez =
            (ey.useMedium(function (e) {
              var t = V.useRef([]),
                n = V.useRef([0, 0]),
                r = V.useRef(),
                i = V.useState(eq++)[0],
                a = V.useState(function () {
                  return ex();
                })[0],
                o = V.useRef(e);
              V.useEffect(
                function () {
                  o.current = e;
                },
                [e]
              ),
                V.useEffect(
                  function () {
                    if (e.inert) {
                      document.body.classList.add(
                        "block-interactivity-".concat(i)
                      );
                      var t = (0, ep.__spreadArray)(
                        [e.lockRef.current],
                        (e.shards || []).map(e$),
                        !0
                      ).filter(Boolean);
                      return (
                        t.forEach(function (e) {
                          return e.classList.add(
                            "allow-interactivity-".concat(i)
                          );
                        }),
                        function () {
                          document.body.classList.remove(
                            "block-interactivity-".concat(i)
                          ),
                            t.forEach(function (e) {
                              return e.classList.remove(
                                "allow-interactivity-".concat(i)
                              );
                            });
                        }
                      );
                    }
                  },
                  [e.inert, e.lockRef.current, e.shards]
                );
              var s = V.useCallback(function (e, t) {
                  if ("touches" in e && 2 === e.touches.length)
                    return !o.current.allowPinchZoom;
                  var i,
                    a = eL(e),
                    s = n.current,
                    u = "deltaX" in e ? e.deltaX : s[0] - a[0],
                    l = "deltaY" in e ? e.deltaY : s[1] - a[1],
                    c = e.target,
                    d = Math.abs(u) > Math.abs(l) ? "h" : "v";
                  if ("touches" in e && "h" === d && "range" === c.type)
                    return !1;
                  var f = eN(d, c);
                  if (!f) return !0;
                  if (
                    (f
                      ? (i = d)
                      : ((i = "v" === d ? "h" : "v"), (f = eN(d, c))),
                    !f)
                  )
                    return !1;
                  if (
                    (!r.current &&
                      "changedTouches" in e &&
                      (u || l) &&
                      (r.current = i),
                    !i)
                  )
                    return !0;
                  var p = r.current || i;
                  return eF(p, t, e, "h" === p ? u : l, !0);
                }, []),
                u = V.useCallback(function (e) {
                  if (eH.length && eH[eH.length - 1] === a) {
                    var n = "deltaY" in e ? eU(e) : eL(e),
                      r = t.current.filter(function (t) {
                        var r;
                        return (
                          t.name === e.type &&
                          t.target === e.target &&
                          (r = t.delta)[0] === n[0] &&
                          r[1] === n[1]
                        );
                      })[0];
                    if (r && r.should) {
                      e.preventDefault();
                      return;
                    }
                    if (!r) {
                      var i = (o.current.shards || [])
                        .map(e$)
                        .filter(Boolean)
                        .filter(function (t) {
                          return t.contains(e.target);
                        });
                      (i.length > 0 ? s(e, i[0]) : !o.current.noIsolation) &&
                        e.preventDefault();
                    }
                  }
                }, []),
                l = V.useCallback(function (e, n, r, i) {
                  var a = { name: e, delta: n, target: r, should: i };
                  t.current.push(a),
                    setTimeout(function () {
                      t.current = t.current.filter(function (e) {
                        return e !== a;
                      });
                    }, 1);
                }, []),
                c = V.useCallback(function (e) {
                  (n.current = eL(e)), (r.current = void 0);
                }, []),
                d = V.useCallback(function (t) {
                  l(t.type, eU(t), t.target, s(t, e.lockRef.current));
                }, []),
                f = V.useCallback(function (t) {
                  l(t.type, eL(t), t.target, s(t, e.lockRef.current));
                }, []);
              V.useEffect(function () {
                return (
                  eH.push(a),
                  e.setCallbacks({
                    onScrollCapture: d,
                    onWheelCapture: d,
                    onTouchMoveCapture: f,
                  }),
                  document.addEventListener("wheel", u, ej),
                  document.addEventListener("touchmove", u, ej),
                  document.addEventListener("touchstart", c, ej),
                  function () {
                    (eH = eH.filter(function (e) {
                      return e !== a;
                    })),
                      document.removeEventListener("wheel", u, ej),
                      document.removeEventListener("touchmove", u, ej),
                      document.removeEventListener("touchstart", c, ej);
                  }
                );
              }, []);
              var p = e.removeScrollBar,
                h = e.inert;
              return V.createElement(
                V.Fragment,
                null,
                h
                  ? V.createElement(a, {
                      styles: "\n  .block-interactivity-"
                        .concat(
                          i,
                          " {pointer-events: none;}\n  .allow-interactivity-"
                        )
                        .concat(i, " {pointer-events: all;}\n"),
                    })
                  : null,
                p ? V.createElement(eI, { gapMode: "margin" }) : null
              );
            }),
            ev),
          eG = V.forwardRef(function (e, t) {
            return V.createElement(
              eb,
              (0, ep.__assign)({}, e, { ref: t, sideCar: ez })
            );
          });
        function eW(e) {
          var t = e.match(/^var\((.*)\)$/);
          return t ? t[1] : e;
        }
        function eV(e, t) {
          var n = {};
          if ("object" == typeof t)
            !(function e(t, n) {
              var r =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : [],
                i = t.constructor();
              for (var a in t) {
                var o = t[a],
                  s = [...r, a];
                "string" == typeof o || "number" == typeof o || null == o
                  ? (i[a] = n(o, s))
                  : "object" != typeof o || Array.isArray(o)
                  ? console.warn(
                      'Skipping invalid key "'
                        .concat(
                          s.join("."),
                          '". Should be a string, number, null or object. Received: "'
                        )
                        .concat(Array.isArray(o) ? "Array" : typeof o, '"')
                    )
                  : (i[a] = e(o, n, s));
              }
              return i;
            })(t, (t, r) => {
              n[
                eW(
                  (function (e, t) {
                    var n = e;
                    for (var r of t) {
                      if (!(r in n))
                        throw Error(
                          "Path ".concat(
                            t.join(" -> "),
                            " does not exist in object"
                          )
                        );
                      n = n[r];
                    }
                    return n;
                  })(e, r)
                )
              ] = String(t);
            });
          else for (var r in e) n[eW(r)] = e[r];
          return (
            Object.defineProperty(n, "toString", {
              value: function () {
                return Object.keys(this)
                  .map((e) => "".concat(e, ":").concat(this[e]))
                  .join(";");
              },
              writable: !1,
            }),
            n
          );
        }
        eG.classNames = eb.classNames;
        var eK = n(39028),
          eZ = n(92592),
          eJ = (function (e) {
            var { conditions: t } = e;
            if (!t) throw Error("Styles have no conditions");
            var n = ei(e);
            return er(
              function (e, r) {
                if (
                  "string" == typeof e ||
                  "number" == typeof e ||
                  "boolean" == typeof e
                ) {
                  if (!t.defaultCondition) throw Error("No default condition");
                  return r(e, t.defaultCondition);
                }
                var i = Array.isArray(e) ? n(e) : e,
                  a = {};
                for (var o in i) null != i[o] && (a[o] = r(i[o], o));
                return a;
              },
              {
                importPath: "@vanilla-extract/sprinkles/createUtils",
                importName: "createMapValueFn",
                args: [{ conditions: e.conditions }],
              }
            );
          })({
            conditions: {
              defaultCondition: "smallScreen",
              conditionNames: ["smallScreen", "largeScreen"],
              responsiveArray: void 0,
            },
          }),
          eY = ei({
            conditions: {
              defaultCondition: "smallScreen",
              conditionNames: ["smallScreen", "largeScreen"],
              responsiveArray: void 0,
            },
          }),
          eX = (function () {
            return es(eu)(...arguments);
          })(
            {
              conditions: {
                defaultCondition: "base",
                conditionNames: ["base", "hover", "active"],
                responsiveArray: void 0,
              },
              styles: {
                background: {
                  values: {
                    accentColor: {
                      conditions: {
                        base: "ju367v9c",
                        hover: "ju367v9d",
                        active: "ju367v9e",
                      },
                      defaultClass: "ju367v9c",
                    },
                    accentColorForeground: {
                      conditions: {
                        base: "ju367v9f",
                        hover: "ju367v9g",
                        active: "ju367v9h",
                      },
                      defaultClass: "ju367v9f",
                    },
                    actionButtonBorder: {
                      conditions: {
                        base: "ju367v9i",
                        hover: "ju367v9j",
                        active: "ju367v9k",
                      },
                      defaultClass: "ju367v9i",
                    },
                    actionButtonBorderMobile: {
                      conditions: {
                        base: "ju367v9l",
                        hover: "ju367v9m",
                        active: "ju367v9n",
                      },
                      defaultClass: "ju367v9l",
                    },
                    actionButtonSecondaryBackground: {
                      conditions: {
                        base: "ju367v9o",
                        hover: "ju367v9p",
                        active: "ju367v9q",
                      },
                      defaultClass: "ju367v9o",
                    },
                    closeButton: {
                      conditions: {
                        base: "ju367v9r",
                        hover: "ju367v9s",
                        active: "ju367v9t",
                      },
                      defaultClass: "ju367v9r",
                    },
                    closeButtonBackground: {
                      conditions: {
                        base: "ju367v9u",
                        hover: "ju367v9v",
                        active: "ju367v9w",
                      },
                      defaultClass: "ju367v9u",
                    },
                    connectButtonBackground: {
                      conditions: {
                        base: "ju367v9x",
                        hover: "ju367v9y",
                        active: "ju367v9z",
                      },
                      defaultClass: "ju367v9x",
                    },
                    connectButtonBackgroundError: {
                      conditions: {
                        base: "ju367va0",
                        hover: "ju367va1",
                        active: "ju367va2",
                      },
                      defaultClass: "ju367va0",
                    },
                    connectButtonInnerBackground: {
                      conditions: {
                        base: "ju367va3",
                        hover: "ju367va4",
                        active: "ju367va5",
                      },
                      defaultClass: "ju367va3",
                    },
                    connectButtonText: {
                      conditions: {
                        base: "ju367va6",
                        hover: "ju367va7",
                        active: "ju367va8",
                      },
                      defaultClass: "ju367va6",
                    },
                    connectButtonTextError: {
                      conditions: {
                        base: "ju367va9",
                        hover: "ju367vaa",
                        active: "ju367vab",
                      },
                      defaultClass: "ju367va9",
                    },
                    connectionIndicator: {
                      conditions: {
                        base: "ju367vac",
                        hover: "ju367vad",
                        active: "ju367vae",
                      },
                      defaultClass: "ju367vac",
                    },
                    downloadBottomCardBackground: {
                      conditions: {
                        base: "ju367vaf",
                        hover: "ju367vag",
                        active: "ju367vah",
                      },
                      defaultClass: "ju367vaf",
                    },
                    downloadTopCardBackground: {
                      conditions: {
                        base: "ju367vai",
                        hover: "ju367vaj",
                        active: "ju367vak",
                      },
                      defaultClass: "ju367vai",
                    },
                    error: {
                      conditions: {
                        base: "ju367val",
                        hover: "ju367vam",
                        active: "ju367van",
                      },
                      defaultClass: "ju367val",
                    },
                    generalBorder: {
                      conditions: {
                        base: "ju367vao",
                        hover: "ju367vap",
                        active: "ju367vaq",
                      },
                      defaultClass: "ju367vao",
                    },
                    generalBorderDim: {
                      conditions: {
                        base: "ju367var",
                        hover: "ju367vas",
                        active: "ju367vat",
                      },
                      defaultClass: "ju367var",
                    },
                    menuItemBackground: {
                      conditions: {
                        base: "ju367vau",
                        hover: "ju367vav",
                        active: "ju367vaw",
                      },
                      defaultClass: "ju367vau",
                    },
                    modalBackdrop: {
                      conditions: {
                        base: "ju367vax",
                        hover: "ju367vay",
                        active: "ju367vaz",
                      },
                      defaultClass: "ju367vax",
                    },
                    modalBackground: {
                      conditions: {
                        base: "ju367vb0",
                        hover: "ju367vb1",
                        active: "ju367vb2",
                      },
                      defaultClass: "ju367vb0",
                    },
                    modalBorder: {
                      conditions: {
                        base: "ju367vb3",
                        hover: "ju367vb4",
                        active: "ju367vb5",
                      },
                      defaultClass: "ju367vb3",
                    },
                    modalText: {
                      conditions: {
                        base: "ju367vb6",
                        hover: "ju367vb7",
                        active: "ju367vb8",
                      },
                      defaultClass: "ju367vb6",
                    },
                    modalTextDim: {
                      conditions: {
                        base: "ju367vb9",
                        hover: "ju367vba",
                        active: "ju367vbb",
                      },
                      defaultClass: "ju367vb9",
                    },
                    modalTextSecondary: {
                      conditions: {
                        base: "ju367vbc",
                        hover: "ju367vbd",
                        active: "ju367vbe",
                      },
                      defaultClass: "ju367vbc",
                    },
                    profileAction: {
                      conditions: {
                        base: "ju367vbf",
                        hover: "ju367vbg",
                        active: "ju367vbh",
                      },
                      defaultClass: "ju367vbf",
                    },
                    profileActionHover: {
                      conditions: {
                        base: "ju367vbi",
                        hover: "ju367vbj",
                        active: "ju367vbk",
                      },
                      defaultClass: "ju367vbi",
                    },
                    profileForeground: {
                      conditions: {
                        base: "ju367vbl",
                        hover: "ju367vbm",
                        active: "ju367vbn",
                      },
                      defaultClass: "ju367vbl",
                    },
                    selectedOptionBorder: {
                      conditions: {
                        base: "ju367vbo",
                        hover: "ju367vbp",
                        active: "ju367vbq",
                      },
                      defaultClass: "ju367vbo",
                    },
                    standby: {
                      conditions: {
                        base: "ju367vbr",
                        hover: "ju367vbs",
                        active: "ju367vbt",
                      },
                      defaultClass: "ju367vbr",
                    },
                  },
                },
                borderColor: {
                  values: {
                    accentColor: {
                      conditions: {
                        base: "ju367vbu",
                        hover: "ju367vbv",
                        active: "ju367vbw",
                      },
                      defaultClass: "ju367vbu",
                    },
                    accentColorForeground: {
                      conditions: {
                        base: "ju367vbx",
                        hover: "ju367vby",
                        active: "ju367vbz",
                      },
                      defaultClass: "ju367vbx",
                    },
                    actionButtonBorder: {
                      conditions: {
                        base: "ju367vc0",
                        hover: "ju367vc1",
                        active: "ju367vc2",
                      },
                      defaultClass: "ju367vc0",
                    },
                    actionButtonBorderMobile: {
                      conditions: {
                        base: "ju367vc3",
                        hover: "ju367vc4",
                        active: "ju367vc5",
                      },
                      defaultClass: "ju367vc3",
                    },
                    actionButtonSecondaryBackground: {
                      conditions: {
                        base: "ju367vc6",
                        hover: "ju367vc7",
                        active: "ju367vc8",
                      },
                      defaultClass: "ju367vc6",
                    },
                    closeButton: {
                      conditions: {
                        base: "ju367vc9",
                        hover: "ju367vca",
                        active: "ju367vcb",
                      },
                      defaultClass: "ju367vc9",
                    },
                    closeButtonBackground: {
                      conditions: {
                        base: "ju367vcc",
                        hover: "ju367vcd",
                        active: "ju367vce",
                      },
                      defaultClass: "ju367vcc",
                    },
                    connectButtonBackground: {
                      conditions: {
                        base: "ju367vcf",
                        hover: "ju367vcg",
                        active: "ju367vch",
                      },
                      defaultClass: "ju367vcf",
                    },
                    connectButtonBackgroundError: {
                      conditions: {
                        base: "ju367vci",
                        hover: "ju367vcj",
                        active: "ju367vck",
                      },
                      defaultClass: "ju367vci",
                    },
                    connectButtonInnerBackground: {
                      conditions: {
                        base: "ju367vcl",
                        hover: "ju367vcm",
                        active: "ju367vcn",
                      },
                      defaultClass: "ju367vcl",
                    },
                    connectButtonText: {
                      conditions: {
                        base: "ju367vco",
                        hover: "ju367vcp",
                        active: "ju367vcq",
                      },
                      defaultClass: "ju367vco",
                    },
                    connectButtonTextError: {
                      conditions: {
                        base: "ju367vcr",
                        hover: "ju367vcs",
                        active: "ju367vct",
                      },
                      defaultClass: "ju367vcr",
                    },
                    connectionIndicator: {
                      conditions: {
                        base: "ju367vcu",
                        hover: "ju367vcv",
                        active: "ju367vcw",
                      },
                      defaultClass: "ju367vcu",
                    },
                    downloadBottomCardBackground: {
                      conditions: {
                        base: "ju367vcx",
                        hover: "ju367vcy",
                        active: "ju367vcz",
                      },
                      defaultClass: "ju367vcx",
                    },
                    downloadTopCardBackground: {
                      conditions: {
                        base: "ju367vd0",
                        hover: "ju367vd1",
                        active: "ju367vd2",
                      },
                      defaultClass: "ju367vd0",
                    },
                    error: {
                      conditions: {
                        base: "ju367vd3",
                        hover: "ju367vd4",
                        active: "ju367vd5",
                      },
                      defaultClass: "ju367vd3",
                    },
                    generalBorder: {
                      conditions: {
                        base: "ju367vd6",
                        hover: "ju367vd7",
                        active: "ju367vd8",
                      },
                      defaultClass: "ju367vd6",
                    },
                    generalBorderDim: {
                      conditions: {
                        base: "ju367vd9",
                        hover: "ju367vda",
                        active: "ju367vdb",
                      },
                      defaultClass: "ju367vd9",
                    },
                    menuItemBackground: {
                      conditions: {
                        base: "ju367vdc",
                        hover: "ju367vdd",
                        active: "ju367vde",
                      },
                      defaultClass: "ju367vdc",
                    },
                    modalBackdrop: {
                      conditions: {
                        base: "ju367vdf",
                        hover: "ju367vdg",
                        active: "ju367vdh",
                      },
                      defaultClass: "ju367vdf",
                    },
                    modalBackground: {
                      conditions: {
                        base: "ju367vdi",
                        hover: "ju367vdj",
                        active: "ju367vdk",
                      },
                      defaultClass: "ju367vdi",
                    },
                    modalBorder: {
                      conditions: {
                        base: "ju367vdl",
                        hover: "ju367vdm",
                        active: "ju367vdn",
                      },
                      defaultClass: "ju367vdl",
                    },
                    modalText: {
                      conditions: {
                        base: "ju367vdo",
                        hover: "ju367vdp",
                        active: "ju367vdq",
                      },
                      defaultClass: "ju367vdo",
                    },
                    modalTextDim: {
                      conditions: {
                        base: "ju367vdr",
                        hover: "ju367vds",
                        active: "ju367vdt",
                      },
                      defaultClass: "ju367vdr",
                    },
                    modalTextSecondary: {
                      conditions: {
                        base: "ju367vdu",
                        hover: "ju367vdv",
                        active: "ju367vdw",
                      },
                      defaultClass: "ju367vdu",
                    },
                    profileAction: {
                      conditions: {
                        base: "ju367vdx",
                        hover: "ju367vdy",
                        active: "ju367vdz",
                      },
                      defaultClass: "ju367vdx",
                    },
                    profileActionHover: {
                      conditions: {
                        base: "ju367ve0",
                        hover: "ju367ve1",
                        active: "ju367ve2",
                      },
                      defaultClass: "ju367ve0",
                    },
                    profileForeground: {
                      conditions: {
                        base: "ju367ve3",
                        hover: "ju367ve4",
                        active: "ju367ve5",
                      },
                      defaultClass: "ju367ve3",
                    },
                    selectedOptionBorder: {
                      conditions: {
                        base: "ju367ve6",
                        hover: "ju367ve7",
                        active: "ju367ve8",
                      },
                      defaultClass: "ju367ve6",
                    },
                    standby: {
                      conditions: {
                        base: "ju367ve9",
                        hover: "ju367vea",
                        active: "ju367veb",
                      },
                      defaultClass: "ju367ve9",
                    },
                  },
                },
                boxShadow: {
                  values: {
                    connectButton: {
                      conditions: {
                        base: "ju367vec",
                        hover: "ju367ved",
                        active: "ju367vee",
                      },
                      defaultClass: "ju367vec",
                    },
                    dialog: {
                      conditions: {
                        base: "ju367vef",
                        hover: "ju367veg",
                        active: "ju367veh",
                      },
                      defaultClass: "ju367vef",
                    },
                    profileDetailsAction: {
                      conditions: {
                        base: "ju367vei",
                        hover: "ju367vej",
                        active: "ju367vek",
                      },
                      defaultClass: "ju367vei",
                    },
                    selectedOption: {
                      conditions: {
                        base: "ju367vel",
                        hover: "ju367vem",
                        active: "ju367ven",
                      },
                      defaultClass: "ju367vel",
                    },
                    selectedWallet: {
                      conditions: {
                        base: "ju367veo",
                        hover: "ju367vep",
                        active: "ju367veq",
                      },
                      defaultClass: "ju367veo",
                    },
                    walletLogo: {
                      conditions: {
                        base: "ju367ver",
                        hover: "ju367ves",
                        active: "ju367vet",
                      },
                      defaultClass: "ju367ver",
                    },
                  },
                },
                color: {
                  values: {
                    accentColor: {
                      conditions: {
                        base: "ju367veu",
                        hover: "ju367vev",
                        active: "ju367vew",
                      },
                      defaultClass: "ju367veu",
                    },
                    accentColorForeground: {
                      conditions: {
                        base: "ju367vex",
                        hover: "ju367vey",
                        active: "ju367vez",
                      },
                      defaultClass: "ju367vex",
                    },
                    actionButtonBorder: {
                      conditions: {
                        base: "ju367vf0",
                        hover: "ju367vf1",
                        active: "ju367vf2",
                      },
                      defaultClass: "ju367vf0",
                    },
                    actionButtonBorderMobile: {
                      conditions: {
                        base: "ju367vf3",
                        hover: "ju367vf4",
                        active: "ju367vf5",
                      },
                      defaultClass: "ju367vf3",
                    },
                    actionButtonSecondaryBackground: {
                      conditions: {
                        base: "ju367vf6",
                        hover: "ju367vf7",
                        active: "ju367vf8",
                      },
                      defaultClass: "ju367vf6",
                    },
                    closeButton: {
                      conditions: {
                        base: "ju367vf9",
                        hover: "ju367vfa",
                        active: "ju367vfb",
                      },
                      defaultClass: "ju367vf9",
                    },
                    closeButtonBackground: {
                      conditions: {
                        base: "ju367vfc",
                        hover: "ju367vfd",
                        active: "ju367vfe",
                      },
                      defaultClass: "ju367vfc",
                    },
                    connectButtonBackground: {
                      conditions: {
                        base: "ju367vff",
                        hover: "ju367vfg",
                        active: "ju367vfh",
                      },
                      defaultClass: "ju367vff",
                    },
                    connectButtonBackgroundError: {
                      conditions: {
                        base: "ju367vfi",
                        hover: "ju367vfj",
                        active: "ju367vfk",
                      },
                      defaultClass: "ju367vfi",
                    },
                    connectButtonInnerBackground: {
                      conditions: {
                        base: "ju367vfl",
                        hover: "ju367vfm",
                        active: "ju367vfn",
                      },
                      defaultClass: "ju367vfl",
                    },
                    connectButtonText: {
                      conditions: {
                        base: "ju367vfo",
                        hover: "ju367vfp",
                        active: "ju367vfq",
                      },
                      defaultClass: "ju367vfo",
                    },
                    connectButtonTextError: {
                      conditions: {
                        base: "ju367vfr",
                        hover: "ju367vfs",
                        active: "ju367vft",
                      },
                      defaultClass: "ju367vfr",
                    },
                    connectionIndicator: {
                      conditions: {
                        base: "ju367vfu",
                        hover: "ju367vfv",
                        active: "ju367vfw",
                      },
                      defaultClass: "ju367vfu",
                    },
                    downloadBottomCardBackground: {
                      conditions: {
                        base: "ju367vfx",
                        hover: "ju367vfy",
                        active: "ju367vfz",
                      },
                      defaultClass: "ju367vfx",
                    },
                    downloadTopCardBackground: {
                      conditions: {
                        base: "ju367vg0",
                        hover: "ju367vg1",
                        active: "ju367vg2",
                      },
                      defaultClass: "ju367vg0",
                    },
                    error: {
                      conditions: {
                        base: "ju367vg3",
                        hover: "ju367vg4",
                        active: "ju367vg5",
                      },
                      defaultClass: "ju367vg3",
                    },
                    generalBorder: {
                      conditions: {
                        base: "ju367vg6",
                        hover: "ju367vg7",
                        active: "ju367vg8",
                      },
                      defaultClass: "ju367vg6",
                    },
                    generalBorderDim: {
                      conditions: {
                        base: "ju367vg9",
                        hover: "ju367vga",
                        active: "ju367vgb",
                      },
                      defaultClass: "ju367vg9",
                    },
                    menuItemBackground: {
                      conditions: {
                        base: "ju367vgc",
                        hover: "ju367vgd",
                        active: "ju367vge",
                      },
                      defaultClass: "ju367vgc",
                    },
                    modalBackdrop: {
                      conditions: {
                        base: "ju367vgf",
                        hover: "ju367vgg",
                        active: "ju367vgh",
                      },
                      defaultClass: "ju367vgf",
                    },
                    modalBackground: {
                      conditions: {
                        base: "ju367vgi",
                        hover: "ju367vgj",
                        active: "ju367vgk",
                      },
                      defaultClass: "ju367vgi",
                    },
                    modalBorder: {
                      conditions: {
                        base: "ju367vgl",
                        hover: "ju367vgm",
                        active: "ju367vgn",
                      },
                      defaultClass: "ju367vgl",
                    },
                    modalText: {
                      conditions: {
                        base: "ju367vgo",
                        hover: "ju367vgp",
                        active: "ju367vgq",
                      },
                      defaultClass: "ju367vgo",
                    },
                    modalTextDim: {
                      conditions: {
                        base: "ju367vgr",
                        hover: "ju367vgs",
                        active: "ju367vgt",
                      },
                      defaultClass: "ju367vgr",
                    },
                    modalTextSecondary: {
                      conditions: {
                        base: "ju367vgu",
                        hover: "ju367vgv",
                        active: "ju367vgw",
                      },
                      defaultClass: "ju367vgu",
                    },
                    profileAction: {
                      conditions: {
                        base: "ju367vgx",
                        hover: "ju367vgy",
                        active: "ju367vgz",
                      },
                      defaultClass: "ju367vgx",
                    },
                    profileActionHover: {
                      conditions: {
                        base: "ju367vh0",
                        hover: "ju367vh1",
                        active: "ju367vh2",
                      },
                      defaultClass: "ju367vh0",
                    },
                    profileForeground: {
                      conditions: {
                        base: "ju367vh3",
                        hover: "ju367vh4",
                        active: "ju367vh5",
                      },
                      defaultClass: "ju367vh3",
                    },
                    selectedOptionBorder: {
                      conditions: {
                        base: "ju367vh6",
                        hover: "ju367vh7",
                        active: "ju367vh8",
                      },
                      defaultClass: "ju367vh6",
                    },
                    standby: {
                      conditions: {
                        base: "ju367vh9",
                        hover: "ju367vha",
                        active: "ju367vhb",
                      },
                      defaultClass: "ju367vh9",
                    },
                  },
                },
              },
            },
            {
              conditions: {
                defaultCondition: "smallScreen",
                conditionNames: ["smallScreen", "largeScreen"],
                responsiveArray: void 0,
              },
              styles: {
                alignItems: {
                  values: {
                    "flex-start": {
                      conditions: {
                        smallScreen: "ju367v0",
                        largeScreen: "ju367v1",
                      },
                      defaultClass: "ju367v0",
                    },
                    "flex-end": {
                      conditions: {
                        smallScreen: "ju367v2",
                        largeScreen: "ju367v3",
                      },
                      defaultClass: "ju367v2",
                    },
                    center: {
                      conditions: {
                        smallScreen: "ju367v4",
                        largeScreen: "ju367v5",
                      },
                      defaultClass: "ju367v4",
                    },
                  },
                },
                display: {
                  values: {
                    none: {
                      conditions: {
                        smallScreen: "ju367v6",
                        largeScreen: "ju367v7",
                      },
                      defaultClass: "ju367v6",
                    },
                    block: {
                      conditions: {
                        smallScreen: "ju367v8",
                        largeScreen: "ju367v9",
                      },
                      defaultClass: "ju367v8",
                    },
                    flex: {
                      conditions: {
                        smallScreen: "ju367va",
                        largeScreen: "ju367vb",
                      },
                      defaultClass: "ju367va",
                    },
                    inline: {
                      conditions: {
                        smallScreen: "ju367vc",
                        largeScreen: "ju367vd",
                      },
                      defaultClass: "ju367vc",
                    },
                  },
                },
              },
            },
            {
              conditions: void 0,
              styles: {
                margin: {
                  mappings: [
                    "marginTop",
                    "marginBottom",
                    "marginLeft",
                    "marginRight",
                  ],
                },
                marginX: { mappings: ["marginLeft", "marginRight"] },
                marginY: { mappings: ["marginTop", "marginBottom"] },
                padding: {
                  mappings: [
                    "paddingTop",
                    "paddingBottom",
                    "paddingLeft",
                    "paddingRight",
                  ],
                },
                paddingX: { mappings: ["paddingLeft", "paddingRight"] },
                paddingY: { mappings: ["paddingTop", "paddingBottom"] },
                alignSelf: {
                  values: {
                    "flex-start": { defaultClass: "ju367ve" },
                    "flex-end": { defaultClass: "ju367vf" },
                    center: { defaultClass: "ju367vg" },
                  },
                },
                backgroundSize: {
                  values: { cover: { defaultClass: "ju367vh" } },
                },
                borderRadius: {
                  values: {
                    1: { defaultClass: "ju367vi" },
                    6: { defaultClass: "ju367vj" },
                    10: { defaultClass: "ju367vk" },
                    13: { defaultClass: "ju367vl" },
                    actionButton: { defaultClass: "ju367vm" },
                    connectButton: { defaultClass: "ju367vn" },
                    menuButton: { defaultClass: "ju367vo" },
                    modal: { defaultClass: "ju367vp" },
                    modalMobile: { defaultClass: "ju367vq" },
                    "25%": { defaultClass: "ju367vr" },
                    full: { defaultClass: "ju367vs" },
                  },
                },
                borderStyle: { values: { solid: { defaultClass: "ju367vt" } } },
                borderWidth: {
                  values: {
                    0: { defaultClass: "ju367vu" },
                    1: { defaultClass: "ju367vv" },
                    2: { defaultClass: "ju367vw" },
                    4: { defaultClass: "ju367vx" },
                  },
                },
                cursor: { values: { pointer: { defaultClass: "ju367vy" } } },
                flexDirection: {
                  values: {
                    row: { defaultClass: "ju367vz" },
                    column: { defaultClass: "ju367v10" },
                  },
                },
                fontFamily: { values: { body: { defaultClass: "ju367v11" } } },
                fontSize: {
                  values: {
                    12: { defaultClass: "ju367v12" },
                    13: { defaultClass: "ju367v13" },
                    14: { defaultClass: "ju367v14" },
                    16: { defaultClass: "ju367v15" },
                    18: { defaultClass: "ju367v16" },
                    20: { defaultClass: "ju367v17" },
                    23: { defaultClass: "ju367v18" },
                  },
                },
                fontWeight: {
                  values: {
                    regular: { defaultClass: "ju367v19" },
                    medium: { defaultClass: "ju367v1a" },
                    semibold: { defaultClass: "ju367v1b" },
                    bold: { defaultClass: "ju367v1c" },
                    heavy: { defaultClass: "ju367v1d" },
                  },
                },
                gap: {
                  values: {
                    0: { defaultClass: "ju367v1e" },
                    1: { defaultClass: "ju367v1f" },
                    2: { defaultClass: "ju367v1g" },
                    3: { defaultClass: "ju367v1h" },
                    4: { defaultClass: "ju367v1i" },
                    5: { defaultClass: "ju367v1j" },
                    6: { defaultClass: "ju367v1k" },
                    8: { defaultClass: "ju367v1l" },
                    10: { defaultClass: "ju367v1m" },
                    12: { defaultClass: "ju367v1n" },
                    14: { defaultClass: "ju367v1o" },
                    16: { defaultClass: "ju367v1p" },
                    18: { defaultClass: "ju367v1q" },
                    20: { defaultClass: "ju367v1r" },
                    24: { defaultClass: "ju367v1s" },
                    28: { defaultClass: "ju367v1t" },
                    32: { defaultClass: "ju367v1u" },
                    36: { defaultClass: "ju367v1v" },
                    44: { defaultClass: "ju367v1w" },
                    64: { defaultClass: "ju367v1x" },
                    "-1": { defaultClass: "ju367v1y" },
                  },
                },
                height: {
                  values: {
                    1: { defaultClass: "ju367v1z" },
                    2: { defaultClass: "ju367v20" },
                    4: { defaultClass: "ju367v21" },
                    8: { defaultClass: "ju367v22" },
                    12: { defaultClass: "ju367v23" },
                    20: { defaultClass: "ju367v24" },
                    24: { defaultClass: "ju367v25" },
                    28: { defaultClass: "ju367v26" },
                    30: { defaultClass: "ju367v27" },
                    32: { defaultClass: "ju367v28" },
                    34: { defaultClass: "ju367v29" },
                    36: { defaultClass: "ju367v2a" },
                    40: { defaultClass: "ju367v2b" },
                    44: { defaultClass: "ju367v2c" },
                    48: { defaultClass: "ju367v2d" },
                    54: { defaultClass: "ju367v2e" },
                    60: { defaultClass: "ju367v2f" },
                    200: { defaultClass: "ju367v2g" },
                    full: { defaultClass: "ju367v2h" },
                    max: { defaultClass: "ju367v2i" },
                  },
                },
                justifyContent: {
                  values: {
                    "flex-start": { defaultClass: "ju367v2j" },
                    "flex-end": { defaultClass: "ju367v2k" },
                    center: { defaultClass: "ju367v2l" },
                    "space-between": { defaultClass: "ju367v2m" },
                    "space-around": { defaultClass: "ju367v2n" },
                  },
                },
                textAlign: {
                  values: {
                    left: { defaultClass: "ju367v2o" },
                    center: { defaultClass: "ju367v2p" },
                    inherit: { defaultClass: "ju367v2q" },
                  },
                },
                marginBottom: {
                  values: {
                    0: { defaultClass: "ju367v2r" },
                    1: { defaultClass: "ju367v2s" },
                    2: { defaultClass: "ju367v2t" },
                    3: { defaultClass: "ju367v2u" },
                    4: { defaultClass: "ju367v2v" },
                    5: { defaultClass: "ju367v2w" },
                    6: { defaultClass: "ju367v2x" },
                    8: { defaultClass: "ju367v2y" },
                    10: { defaultClass: "ju367v2z" },
                    12: { defaultClass: "ju367v30" },
                    14: { defaultClass: "ju367v31" },
                    16: { defaultClass: "ju367v32" },
                    18: { defaultClass: "ju367v33" },
                    20: { defaultClass: "ju367v34" },
                    24: { defaultClass: "ju367v35" },
                    28: { defaultClass: "ju367v36" },
                    32: { defaultClass: "ju367v37" },
                    36: { defaultClass: "ju367v38" },
                    44: { defaultClass: "ju367v39" },
                    64: { defaultClass: "ju367v3a" },
                    "-1": { defaultClass: "ju367v3b" },
                  },
                },
                marginLeft: {
                  values: {
                    0: { defaultClass: "ju367v3c" },
                    1: { defaultClass: "ju367v3d" },
                    2: { defaultClass: "ju367v3e" },
                    3: { defaultClass: "ju367v3f" },
                    4: { defaultClass: "ju367v3g" },
                    5: { defaultClass: "ju367v3h" },
                    6: { defaultClass: "ju367v3i" },
                    8: { defaultClass: "ju367v3j" },
                    10: { defaultClass: "ju367v3k" },
                    12: { defaultClass: "ju367v3l" },
                    14: { defaultClass: "ju367v3m" },
                    16: { defaultClass: "ju367v3n" },
                    18: { defaultClass: "ju367v3o" },
                    20: { defaultClass: "ju367v3p" },
                    24: { defaultClass: "ju367v3q" },
                    28: { defaultClass: "ju367v3r" },
                    32: { defaultClass: "ju367v3s" },
                    36: { defaultClass: "ju367v3t" },
                    44: { defaultClass: "ju367v3u" },
                    64: { defaultClass: "ju367v3v" },
                    "-1": { defaultClass: "ju367v3w" },
                  },
                },
                marginRight: {
                  values: {
                    0: { defaultClass: "ju367v3x" },
                    1: { defaultClass: "ju367v3y" },
                    2: { defaultClass: "ju367v3z" },
                    3: { defaultClass: "ju367v40" },
                    4: { defaultClass: "ju367v41" },
                    5: { defaultClass: "ju367v42" },
                    6: { defaultClass: "ju367v43" },
                    8: { defaultClass: "ju367v44" },
                    10: { defaultClass: "ju367v45" },
                    12: { defaultClass: "ju367v46" },
                    14: { defaultClass: "ju367v47" },
                    16: { defaultClass: "ju367v48" },
                    18: { defaultClass: "ju367v49" },
                    20: { defaultClass: "ju367v4a" },
                    24: { defaultClass: "ju367v4b" },
                    28: { defaultClass: "ju367v4c" },
                    32: { defaultClass: "ju367v4d" },
                    36: { defaultClass: "ju367v4e" },
                    44: { defaultClass: "ju367v4f" },
                    64: { defaultClass: "ju367v4g" },
                    "-1": { defaultClass: "ju367v4h" },
                  },
                },
                marginTop: {
                  values: {
                    0: { defaultClass: "ju367v4i" },
                    1: { defaultClass: "ju367v4j" },
                    2: { defaultClass: "ju367v4k" },
                    3: { defaultClass: "ju367v4l" },
                    4: { defaultClass: "ju367v4m" },
                    5: { defaultClass: "ju367v4n" },
                    6: { defaultClass: "ju367v4o" },
                    8: { defaultClass: "ju367v4p" },
                    10: { defaultClass: "ju367v4q" },
                    12: { defaultClass: "ju367v4r" },
                    14: { defaultClass: "ju367v4s" },
                    16: { defaultClass: "ju367v4t" },
                    18: { defaultClass: "ju367v4u" },
                    20: { defaultClass: "ju367v4v" },
                    24: { defaultClass: "ju367v4w" },
                    28: { defaultClass: "ju367v4x" },
                    32: { defaultClass: "ju367v4y" },
                    36: { defaultClass: "ju367v4z" },
                    44: { defaultClass: "ju367v50" },
                    64: { defaultClass: "ju367v51" },
                    "-1": { defaultClass: "ju367v52" },
                  },
                },
                maxWidth: {
                  values: {
                    1: { defaultClass: "ju367v53" },
                    2: { defaultClass: "ju367v54" },
                    4: { defaultClass: "ju367v55" },
                    8: { defaultClass: "ju367v56" },
                    12: { defaultClass: "ju367v57" },
                    20: { defaultClass: "ju367v58" },
                    24: { defaultClass: "ju367v59" },
                    28: { defaultClass: "ju367v5a" },
                    30: { defaultClass: "ju367v5b" },
                    32: { defaultClass: "ju367v5c" },
                    34: { defaultClass: "ju367v5d" },
                    36: { defaultClass: "ju367v5e" },
                    40: { defaultClass: "ju367v5f" },
                    44: { defaultClass: "ju367v5g" },
                    48: { defaultClass: "ju367v5h" },
                    54: { defaultClass: "ju367v5i" },
                    60: { defaultClass: "ju367v5j" },
                    200: { defaultClass: "ju367v5k" },
                    full: { defaultClass: "ju367v5l" },
                    max: { defaultClass: "ju367v5m" },
                  },
                },
                minWidth: {
                  values: {
                    1: { defaultClass: "ju367v5n" },
                    2: { defaultClass: "ju367v5o" },
                    4: { defaultClass: "ju367v5p" },
                    8: { defaultClass: "ju367v5q" },
                    12: { defaultClass: "ju367v5r" },
                    20: { defaultClass: "ju367v5s" },
                    24: { defaultClass: "ju367v5t" },
                    28: { defaultClass: "ju367v5u" },
                    30: { defaultClass: "ju367v5v" },
                    32: { defaultClass: "ju367v5w" },
                    34: { defaultClass: "ju367v5x" },
                    36: { defaultClass: "ju367v5y" },
                    40: { defaultClass: "ju367v5z" },
                    44: { defaultClass: "ju367v60" },
                    48: { defaultClass: "ju367v61" },
                    54: { defaultClass: "ju367v62" },
                    60: { defaultClass: "ju367v63" },
                    200: { defaultClass: "ju367v64" },
                    full: { defaultClass: "ju367v65" },
                    max: { defaultClass: "ju367v66" },
                  },
                },
                overflow: { values: { hidden: { defaultClass: "ju367v67" } } },
                paddingBottom: {
                  values: {
                    0: { defaultClass: "ju367v68" },
                    1: { defaultClass: "ju367v69" },
                    2: { defaultClass: "ju367v6a" },
                    3: { defaultClass: "ju367v6b" },
                    4: { defaultClass: "ju367v6c" },
                    5: { defaultClass: "ju367v6d" },
                    6: { defaultClass: "ju367v6e" },
                    8: { defaultClass: "ju367v6f" },
                    10: { defaultClass: "ju367v6g" },
                    12: { defaultClass: "ju367v6h" },
                    14: { defaultClass: "ju367v6i" },
                    16: { defaultClass: "ju367v6j" },
                    18: { defaultClass: "ju367v6k" },
                    20: { defaultClass: "ju367v6l" },
                    24: { defaultClass: "ju367v6m" },
                    28: { defaultClass: "ju367v6n" },
                    32: { defaultClass: "ju367v6o" },
                    36: { defaultClass: "ju367v6p" },
                    44: { defaultClass: "ju367v6q" },
                    64: { defaultClass: "ju367v6r" },
                    "-1": { defaultClass: "ju367v6s" },
                  },
                },
                paddingLeft: {
                  values: {
                    0: { defaultClass: "ju367v6t" },
                    1: { defaultClass: "ju367v6u" },
                    2: { defaultClass: "ju367v6v" },
                    3: { defaultClass: "ju367v6w" },
                    4: { defaultClass: "ju367v6x" },
                    5: { defaultClass: "ju367v6y" },
                    6: { defaultClass: "ju367v6z" },
                    8: { defaultClass: "ju367v70" },
                    10: { defaultClass: "ju367v71" },
                    12: { defaultClass: "ju367v72" },
                    14: { defaultClass: "ju367v73" },
                    16: { defaultClass: "ju367v74" },
                    18: { defaultClass: "ju367v75" },
                    20: { defaultClass: "ju367v76" },
                    24: { defaultClass: "ju367v77" },
                    28: { defaultClass: "ju367v78" },
                    32: { defaultClass: "ju367v79" },
                    36: { defaultClass: "ju367v7a" },
                    44: { defaultClass: "ju367v7b" },
                    64: { defaultClass: "ju367v7c" },
                    "-1": { defaultClass: "ju367v7d" },
                  },
                },
                paddingRight: {
                  values: {
                    0: { defaultClass: "ju367v7e" },
                    1: { defaultClass: "ju367v7f" },
                    2: { defaultClass: "ju367v7g" },
                    3: { defaultClass: "ju367v7h" },
                    4: { defaultClass: "ju367v7i" },
                    5: { defaultClass: "ju367v7j" },
                    6: { defaultClass: "ju367v7k" },
                    8: { defaultClass: "ju367v7l" },
                    10: { defaultClass: "ju367v7m" },
                    12: { defaultClass: "ju367v7n" },
                    14: { defaultClass: "ju367v7o" },
                    16: { defaultClass: "ju367v7p" },
                    18: { defaultClass: "ju367v7q" },
                    20: { defaultClass: "ju367v7r" },
                    24: { defaultClass: "ju367v7s" },
                    28: { defaultClass: "ju367v7t" },
                    32: { defaultClass: "ju367v7u" },
                    36: { defaultClass: "ju367v7v" },
                    44: { defaultClass: "ju367v7w" },
                    64: { defaultClass: "ju367v7x" },
                    "-1": { defaultClass: "ju367v7y" },
                  },
                },
                paddingTop: {
                  values: {
                    0: { defaultClass: "ju367v7z" },
                    1: { defaultClass: "ju367v80" },
                    2: { defaultClass: "ju367v81" },
                    3: { defaultClass: "ju367v82" },
                    4: { defaultClass: "ju367v83" },
                    5: { defaultClass: "ju367v84" },
                    6: { defaultClass: "ju367v85" },
                    8: { defaultClass: "ju367v86" },
                    10: { defaultClass: "ju367v87" },
                    12: { defaultClass: "ju367v88" },
                    14: { defaultClass: "ju367v89" },
                    16: { defaultClass: "ju367v8a" },
                    18: { defaultClass: "ju367v8b" },
                    20: { defaultClass: "ju367v8c" },
                    24: { defaultClass: "ju367v8d" },
                    28: { defaultClass: "ju367v8e" },
                    32: { defaultClass: "ju367v8f" },
                    36: { defaultClass: "ju367v8g" },
                    44: { defaultClass: "ju367v8h" },
                    64: { defaultClass: "ju367v8i" },
                    "-1": { defaultClass: "ju367v8j" },
                  },
                },
                position: {
                  values: {
                    absolute: { defaultClass: "ju367v8k" },
                    fixed: { defaultClass: "ju367v8l" },
                    relative: { defaultClass: "ju367v8m" },
                  },
                },
                right: { values: { 0: { defaultClass: "ju367v8n" } } },
                transition: {
                  values: {
                    default: { defaultClass: "ju367v8o" },
                    transform: { defaultClass: "ju367v8p" },
                  },
                },
                userSelect: { values: { none: { defaultClass: "ju367v8q" } } },
                width: {
                  values: {
                    1: { defaultClass: "ju367v8r" },
                    2: { defaultClass: "ju367v8s" },
                    4: { defaultClass: "ju367v8t" },
                    8: { defaultClass: "ju367v8u" },
                    12: { defaultClass: "ju367v8v" },
                    20: { defaultClass: "ju367v8w" },
                    24: { defaultClass: "ju367v8x" },
                    28: { defaultClass: "ju367v8y" },
                    30: { defaultClass: "ju367v8z" },
                    32: { defaultClass: "ju367v90" },
                    34: { defaultClass: "ju367v91" },
                    36: { defaultClass: "ju367v92" },
                    40: { defaultClass: "ju367v93" },
                    44: { defaultClass: "ju367v94" },
                    48: { defaultClass: "ju367v95" },
                    54: { defaultClass: "ju367v96" },
                    60: { defaultClass: "ju367v97" },
                    200: { defaultClass: "ju367v98" },
                    full: { defaultClass: "ju367v99" },
                    max: { defaultClass: "ju367v9a" },
                  },
                },
                backdropFilter: {
                  values: { modalOverlay: { defaultClass: "ju367v9b" } },
                },
              },
            }
          ),
          eQ = {
            colors: {
              accentColor: "var(--rk-colors-accentColor)",
              accentColorForeground: "var(--rk-colors-accentColorForeground)",
              actionButtonBorder: "var(--rk-colors-actionButtonBorder)",
              actionButtonBorderMobile:
                "var(--rk-colors-actionButtonBorderMobile)",
              actionButtonSecondaryBackground:
                "var(--rk-colors-actionButtonSecondaryBackground)",
              closeButton: "var(--rk-colors-closeButton)",
              closeButtonBackground: "var(--rk-colors-closeButtonBackground)",
              connectButtonBackground:
                "var(--rk-colors-connectButtonBackground)",
              connectButtonBackgroundError:
                "var(--rk-colors-connectButtonBackgroundError)",
              connectButtonInnerBackground:
                "var(--rk-colors-connectButtonInnerBackground)",
              connectButtonText: "var(--rk-colors-connectButtonText)",
              connectButtonTextError: "var(--rk-colors-connectButtonTextError)",
              connectionIndicator: "var(--rk-colors-connectionIndicator)",
              downloadBottomCardBackground:
                "var(--rk-colors-downloadBottomCardBackground)",
              downloadTopCardBackground:
                "var(--rk-colors-downloadTopCardBackground)",
              error: "var(--rk-colors-error)",
              generalBorder: "var(--rk-colors-generalBorder)",
              generalBorderDim: "var(--rk-colors-generalBorderDim)",
              menuItemBackground: "var(--rk-colors-menuItemBackground)",
              modalBackdrop: "var(--rk-colors-modalBackdrop)",
              modalBackground: "var(--rk-colors-modalBackground)",
              modalBorder: "var(--rk-colors-modalBorder)",
              modalText: "var(--rk-colors-modalText)",
              modalTextDim: "var(--rk-colors-modalTextDim)",
              modalTextSecondary: "var(--rk-colors-modalTextSecondary)",
              profileAction: "var(--rk-colors-profileAction)",
              profileActionHover: "var(--rk-colors-profileActionHover)",
              profileForeground: "var(--rk-colors-profileForeground)",
              selectedOptionBorder: "var(--rk-colors-selectedOptionBorder)",
              standby: "var(--rk-colors-standby)",
            },
            fonts: { body: "var(--rk-fonts-body)" },
            radii: {
              actionButton: "var(--rk-radii-actionButton)",
              connectButton: "var(--rk-radii-connectButton)",
              menuButton: "var(--rk-radii-menuButton)",
              modal: "var(--rk-radii-modal)",
              modalMobile: "var(--rk-radii-modalMobile)",
            },
            shadows: {
              connectButton: "var(--rk-shadows-connectButton)",
              dialog: "var(--rk-shadows-dialog)",
              profileDetailsAction: "var(--rk-shadows-profileDetailsAction)",
              selectedOption: "var(--rk-shadows-selectedOption)",
              selectedWallet: "var(--rk-shadows-selectedWallet)",
              walletLogo: "var(--rk-shadows-walletLogo)",
            },
            blurs: { modalOverlay: "var(--rk-blurs-modalOverlay)" },
          },
          e0 = { shrink: "_12cbo8i6", shrinkSm: "_12cbo8i7" },
          e1 = { grow: "_12cbo8i4", growLg: "_12cbo8i5" };
        function e2({ active: e, hover: t }) {
          return ["_12cbo8i3 ju367v8m", t && e1[t], e0[e]];
        }
        var e6 = (0, V.createContext)(null);
        function e3() {
          var e;
          let t = (0, V.useContext)(e6);
          return null != (e = null == t ? void 0 : t.status) ? e : null;
        }
        function e5() {
          let e = e3(),
            { isConnected: t } = (0, el.mA)();
          return t
            ? e && ("loading" === e || "unauthenticated" === e)
              ? e
              : "connected"
            : "disconnected";
        }
        function e4() {
          return (
            "undefined" != typeof navigator &&
            /android/i.test(navigator.userAgent)
          );
        }
        function e8() {
          return (
            ("undefined" != typeof navigator &&
              /iPhone|iPod/.test(navigator.userAgent)) ||
            ("undefined" != typeof navigator &&
              (/iPad/.test(navigator.userAgent) ||
                ("MacIntel" === navigator.platform &&
                  navigator.maxTouchPoints > 1)))
          );
        }
        function e7() {
          return e4() || e8();
        }
        var e9 = {
            a: "iekbcca",
            blockquote: "iekbcc2",
            button: "iekbcc9",
            input: "iekbcc8 iekbcc5 iekbcc4",
            mark: "iekbcc6",
            ol: "iekbcc1",
            q: "iekbcc2",
            select: "iekbcc7 iekbcc5 iekbcc4",
            table: "iekbcc3",
            textarea: "iekbcc5 iekbcc4",
            ul: "iekbcc1",
          },
          te = ({ reset: e, ...t }) => {
            if (!e) return eX(t);
            let n = e9[e],
              r = eX(t);
            return (0, ec.default)("iekbcc0", n, r);
          },
          tt = V.forwardRef(
            ({ as: e = "div", className: t, testId: n, ...r }, i) => {
              let a = {},
                o = {};
              for (let e in r)
                eX.properties.has(e) ? (a[e] = r[e]) : (o[e] = r[e]);
              let s = te({ reset: "string" == typeof e ? e : "div", ...a });
              return V.createElement(e, {
                className: (0, ec.default)(s, t),
                ...o,
                "data-testid": n ? `rk-${n.replace(/^rk-/, "")}` : void 0,
                ref: i,
              });
            }
          );
        tt.displayName = "Box";
        var tn = new Map(),
          tr = new Map();
        async function ti(e) {
          let t = tr.get(e);
          if (t) return t;
          let n = async () => e().then(async (t) => (tn.set(e, t), t)),
            r = n().catch((t) =>
              n().catch((t) => {
                tr.delete(e);
              })
            );
          return tr.set(e, r), r;
        }
        async function ta(...e) {
          return await Promise.all(
            e.map((e) => ("function" == typeof e ? ti(e) : e))
          );
        }
        function to(e) {
          let t = "function" == typeof e ? tn.get(e) : void 0,
            n = (function () {
              let [, e] = (0, V.useReducer)((e) => e + 1, 0);
              return e;
            })();
          return (
            (0, V.useEffect)(() => {
              "function" != typeof e || t || ti(e).then(n);
            }, [e, t, n]),
            "function" == typeof e ? t : e
          );
        }
        function ts({
          alt: e,
          background: t,
          borderColor: n,
          borderRadius: r,
          boxShadow: i,
          height: a,
          src: o,
          width: s,
        }) {
          let u = to(o),
            l = u && /^http/.test(u),
            [c, d] = (0, V.useReducer)(() => !0, !1);
          return V.createElement(
            tt,
            {
              "aria-label": e,
              borderRadius: r,
              boxShadow: i,
              height: "string" == typeof a ? a : void 0,
              overflow: "hidden",
              position: "relative",
              role: "img",
              style: {
                background: t,
                height: "number" == typeof a ? a : void 0,
                width: "number" == typeof s ? s : void 0,
              },
              width: "string" == typeof s ? s : void 0,
            },
            V.createElement(tt, {
              ...(l
                ? { "aria-hidden": !0, as: "img", onLoad: d, src: u }
                : { backgroundSize: "cover" }),
              height: "full",
              position: "absolute",
              style: {
                touchCallout: "none",
                transition: "opacity .15s linear",
                userSelect: "none",
                ...(l
                  ? { opacity: c ? 1 : 0 }
                  : {
                      backgroundImage: u ? `url(${u})` : void 0,
                      backgroundRepeat: "no-repeat",
                      opacity: u ? 1 : 0,
                    }),
              },
              width: "full",
            }),
            n
              ? V.createElement(tt, {
                  ...("object" == typeof n && "custom" in n
                    ? { style: { borderColor: n.custom } }
                    : { borderColor: n }),
                  borderRadius: r,
                  borderStyle: "solid",
                  borderWidth: "1",
                  height: "full",
                  position: "relative",
                  width: "full",
                })
              : null
          );
        }
        var tu = (e) =>
            (0, V.useMemo)(
              () => `${e}_${Math.round(1e9 * Math.random())}`,
              [e]
            ),
          tl = ({ height: e = 21, width: t = 21 }) => {
            let n = tu("spinner");
            return V.createElement(
              "svg",
              {
                className: "_1luule42",
                fill: "none",
                height: e,
                viewBox: "0 0 21 21",
                width: t,
                xmlns: "http://www.w3.org/2000/svg",
              },
              V.createElement(
                "clipPath",
                { id: n },
                V.createElement("path", {
                  d: "M10.5 3C6.35786 3 3 6.35786 3 10.5C3 14.6421 6.35786 18 10.5 18C11.3284 18 12 18.6716 12 19.5C12 20.3284 11.3284 21 10.5 21C4.70101 21 0 16.299 0 10.5C0 4.70101 4.70101 0 10.5 0C16.299 0 21 4.70101 21 10.5C21 11.3284 20.3284 12 19.5 12C18.6716 12 18 11.3284 18 10.5C18 6.35786 14.6421 3 10.5 3Z",
                })
              ),
              V.createElement(
                "foreignObject",
                {
                  clipPath: `url(#${n})`,
                  height: "21",
                  width: "21",
                  x: "0",
                  y: "0",
                },
                V.createElement("div", { className: "_1luule43" })
              )
            );
          },
          tc = [
            { color: "#FC5C54", emoji: "\uD83C\uDF36" },
            { color: "#FFD95A", emoji: "\uD83E\uDD11" },
            { color: "#E95D72", emoji: "\uD83D\uDC19" },
            { color: "#6A87C8", emoji: "\uD83E\uDED0" },
            { color: "#5FD0F3", emoji: "\uD83D\uDC33" },
            { color: "#FC5C54", emoji: "\uD83E\uDD36" },
            { color: "#75C06B", emoji: "\uD83C\uDF32" },
            { color: "#FFDD86", emoji: "\uD83C\uDF1E" },
            { color: "#5FC6D4", emoji: "\uD83D\uDC12" },
            { color: "#FF949A", emoji: "\uD83D\uDC35" },
            { color: "#FF8024", emoji: "\uD83E\uDD8A" },
            { color: "#9BA1A4", emoji: "\uD83D\uDC3C" },
            { color: "#EC66FF", emoji: "\uD83E\uDD84" },
            { color: "#FF8CBC", emoji: "\uD83D\uDC37" },
            { color: "#FF9A23", emoji: "\uD83D\uDC27" },
            { color: "#FF949A", emoji: "\uD83E\uDDA9" },
            { color: "#C5DADB", emoji: "\uD83D\uDC7D" },
            { color: "#FC5C54", emoji: "\uD83C\uDF88" },
            { color: "#FF949A", emoji: "\uD83C\uDF49" },
            { color: "#FFD95A", emoji: "\uD83C\uDF89" },
            { color: "#A8CE63", emoji: "\uD83D\uDC32" },
            { color: "#71ABFF", emoji: "\uD83C\uDF0E" },
            { color: "#FFE279", emoji: "\uD83C\uDF4A" },
            { color: "#B6B1B6", emoji: "\uD83D\uDC2D" },
            { color: "#FF6780", emoji: "\uD83C\uDF63" },
            { color: "#FFD95A", emoji: "\uD83D\uDC25" },
            { color: "#A575FF", emoji: "\uD83D\uDC7E" },
            { color: "#A8CE63", emoji: "\uD83E\uDD66" },
            { color: "#FC5C54", emoji: "\uD83D\uDC79" },
            { color: "#FFE279", emoji: "\uD83D\uDE40" },
            { color: "#5FD0F3", emoji: "⛱" },
            { color: "#4D82FF", emoji: "⛵️" },
            { color: "#FFE279", emoji: "\uD83E\uDD73" },
            { color: "#FF949A", emoji: "\uD83E\uDD2F" },
            { color: "#FFB35A", emoji: "\uD83E\uDD20" },
          ],
          td = ({ address: e, ensImage: t, size: n }) => {
            let [r, i] = (0, V.useState)(!1);
            (0, V.useEffect)(() => {
              if (t) {
                let e = new Image();
                (e.src = t), (e.onload = () => i(!0));
              }
            }, [t]);
            let { color: a, emoji: o } = (0, V.useMemo)(
              () =>
                (function (e) {
                  let t = Math.abs(
                    (function (e) {
                      let t = 0;
                      if (0 === e.length) return t;
                      for (let n = 0; n < e.length; n++) {
                        let r = e.charCodeAt(n);
                        t = ((t << 5) - t + r) | 0;
                      }
                      return t;
                    })(("string" == typeof e ? e : "").toLowerCase()) %
                      tc.length
                  );
                  return tc[null != t ? t : 0];
                })(e),
              [e]
            );
            return t
              ? r
                ? V.createElement(tt, {
                    backgroundSize: "cover",
                    borderRadius: "full",
                    position: "absolute",
                    style: {
                      backgroundImage: `url(${t})`,
                      backgroundPosition: "center",
                      height: n,
                      width: n,
                    },
                  })
                : V.createElement(
                    tt,
                    {
                      alignItems: "center",
                      backgroundSize: "cover",
                      borderRadius: "full",
                      color: "modalText",
                      display: "flex",
                      justifyContent: "center",
                      position: "absolute",
                      style: { height: n, width: n },
                    },
                    V.createElement(tl, null)
                  )
              : V.createElement(
                  tt,
                  {
                    alignItems: "center",
                    display: "flex",
                    justifyContent: "center",
                    overflow: "hidden",
                    style: {
                      ...(!t && { backgroundColor: a }),
                      height: n,
                      width: n,
                    },
                  },
                  o
                );
          },
          tf = (0, V.createContext)(td);
        function tp({ address: e, imageUrl: t, loading: n, size: r }) {
          let i = (0, V.useContext)(tf);
          return V.createElement(
            tt,
            {
              "aria-hidden": !0,
              borderRadius: "full",
              overflow: "hidden",
              position: "relative",
              style: { height: `${r}px`, width: `${r}px` },
              userSelect: "none",
            },
            V.createElement(
              tt,
              {
                alignItems: "center",
                borderRadius: "full",
                display: "flex",
                justifyContent: "center",
                overflow: "hidden",
                position: "absolute",
                style: {
                  fontSize: `${Math.round(0.55 * r)}px`,
                  height: `${r}px`,
                  transform: n ? "scale(0.72)" : void 0,
                  transition: ".25s ease",
                  transitionDelay: n ? void 0 : ".1s",
                  width: `${r}px`,
                  willChange: "transform",
                },
                userSelect: "none",
              },
              V.createElement(i, { address: e, ensImage: t, size: r })
            ),
            "boolean" == typeof n &&
              V.createElement(
                tt,
                {
                  color: "accentColor",
                  display: "flex",
                  height: "full",
                  position: "absolute",
                  style: {
                    opacity: n ? 1 : 0,
                    transition: n ? "0.6s ease" : "0.2s ease",
                    transitionDelay: n ? ".05s" : void 0,
                  },
                  width: "full",
                },
                V.createElement(tl, { height: "100%", width: "100%" })
              )
          );
        }
        var th = () =>
          V.createElement(
            "svg",
            {
              fill: "none",
              height: "7",
              width: "14",
              xmlns: "http://www.w3.org/2000/svg",
            },
            V.createElement("path", {
              d: "M12.75 1.54001L8.51647 5.0038C7.77974 5.60658 6.72026 5.60658 5.98352 5.0038L1.75 1.54001",
              stroke: "currentColor",
              strokeLinecap: "round",
              strokeLinejoin: "round",
              strokeWidth: "2.5",
              xmlns: "http://www.w3.org/2000/svg",
            })
          );
        function tm(e) {
          return null != e;
        }
        var ty = {
            iconBackground: "#96bedc",
            iconUrl: async () =>
              (await n.e(1727).then(n.bind(n, 1727))).default,
          },
          tg = {
            iconBackground: "#e84141",
            iconUrl: async () =>
              (await n.e(6237).then(n.bind(n, 36237))).default,
          },
          tb = {
            iconBackground: "#0052ff",
            iconUrl: async () =>
              (await n.e(1711).then(n.bind(n, 41711))).default,
          },
          tv = {
            iconBackground: "#ebac0e",
            iconUrl: async () =>
              (await n.e(4253).then(n.bind(n, 84253))).default,
          },
          tw = {
            iconBackground: "#002D74",
            iconUrl: async () =>
              (await n.e(5939).then(n.bind(n, 95939))).default,
          },
          tE = {
            iconBackground: "#484c50",
            iconUrl: async () =>
              (await n.e(5488).then(n.bind(n, 85488))).default,
          },
          tx = {
            iconBackground: "#ff5a57",
            iconUrl: async () =>
              (await n.e(704).then(n.bind(n, 60704))).default,
          },
          tC = {
            iconBackground: "#9f71ec",
            iconUrl: async () =>
              (await n.e(8881).then(n.bind(n, 48881))).default,
          },
          t_ = {
            iconBackground: "#000000",
            iconUrl: async () =>
              (await n.e(5119).then(n.bind(n, 65119))).default,
          },
          tT = Object.fromEntries(
            Object.values({
              arbitrum: { chainId: 42161, name: "Arbitrum", ...ty },
              arbitrumGoerli: { chainId: 421613, ...ty },
              avalanche: { chainId: 43114, ...tg },
              avalancheFuji: { chainId: 43113, ...tg },
              etheruem: { chainId: 1, ...tb },
              baseGoerli: { chainId: 84531, ...tb },
              bsc: { chainId: 56, name: "BSC", ...tv },
              bscTestnet: { chainId: 97, ...tv },
              cronos: { chainId: 25, ...tw },
              cronosTestnet: { chainId: 338, ...tw },
              goerli: { chainId: 5, ...tE },
              hardhat: {
                chainId: 31337,
                iconBackground: "#f9f7ec",
                iconUrl: async () =>
                  (await n.e(6253).then(n.bind(n, 26253))).default,
              },
              kovan: { chainId: 42, ...tE },
              localhost: { chainId: 1337, ...tE },
              mainnet: { chainId: 1, ...tE },
              optimism: { chainId: 10, name: "Optimism", ...tx },
              optimismGoerli: { chainId: 420, ...tx },
              optimismKovan: { chainId: 69, ...tx },
              polygon: { chainId: 137, ...tC },
              polygonMumbai: { chainId: 80001, ...tC },
              rinkeby: { chainId: 4, ...tE },
              ropsten: { chainId: 3, ...tE },
              sepolia: { chainId: 11155111, ...tE },
              zora: { chainId: 7777777, ...t_ },
              zoraTestnet: { chainId: 999, ...t_ },
            })
              .filter(tm)
              .map(({ chainId: e, ...t }) => [e, t])
          ),
          tS = (e) =>
            e.map((e) => {
              var t;
              return { ...e, ...(null != (t = tT[e.id]) ? t : {}) };
            }),
          tP = (0, V.createContext)({ chains: [] });
        function tO({ chains: e, children: t, initialChain: n }) {
          return V.createElement(
            tP.Provider,
            {
              value: (0, V.useMemo)(
                () => ({
                  chains: tS(e),
                  initialChainId:
                    "number" == typeof n ? n : null == n ? void 0 : n.id,
                }),
                [e, n]
              ),
            },
            t
          );
        }
        var tI = () => (0, V.useContext)(tP).chains,
          tA = () => (0, V.useContext)(tP).initialChainId,
          tk = () => {
            let e = tI();
            return (0, V.useMemo)(() => {
              let t = {};
              return (
                e.forEach((e) => {
                  t[e.id] = e;
                }),
                t
              );
            }, [e]);
          },
          tj = () => {
            let [e, t] = (0, V.useReducer)(() => !0, !1);
            return (0, V.useEffect)(t, [t]), e;
          };
        function tB() {
          let e = ed.R.id,
            t = (0, el.t_)(),
            n = Array.isArray(t.chains) ? t.chains : [],
            r =
              null == n
                ? void 0
                : n.some((t) => (null == t ? void 0 : t.id) === e);
          return { chainId: e, enabled: r };
        }
        function tM(e) {
          let { chainId: t, enabled: n } = tB(),
            { data: r } = (0, el.c9)({ chainId: t, enabled: n, name: e });
          return r;
        }
        function tN(e) {
          let { chainId: t, enabled: n } = tB(),
            { data: r } = (0, el.F6)({ address: e, chainId: t, enabled: n });
          return r;
        }
        function tD() {
          var e;
          let { chain: t } = (0, el.LN)();
          return null != (e = null == t ? void 0 : t.id) ? e : null;
        }
        var tR = "rk-transactions";
        function tF() {
          return (function (e) {
            try {
              let t = e ? JSON.parse(e) : {};
              return "object" == typeof t ? t : {};
            } catch (e) {
              return {};
            }
          })(
            "undefined" != typeof localStorage ? localStorage.getItem(tR) : null
          );
        }
        var tL = /^0x([A-Fa-f0-9]{64})$/,
          tU = (0, V.createContext)(null);
        function t$({ children: e }) {
          let t = (0, el.t_)(),
            { address: n } = (0, el.mA)(),
            r = tD(),
            [i] = (0, V.useState)(() =>
              null != g
                ? g
                : (g = (function ({ provider: e }) {
                    let t = tF(),
                      n = e,
                      r = new Set(),
                      i = new Map();
                    function a(e, n) {
                      var r, i;
                      return null != (i = null == (r = t[e]) ? void 0 : r[n])
                        ? i
                        : [];
                    }
                    async function o(e, t) {
                      await Promise.all(
                        a(e, t)
                          .filter((e) => "pending" === e.status)
                          .map(async (r) => {
                            let { confirmations: a, hash: o } = r,
                              u = i.get(o);
                            if (u) return await u;
                            let l = n
                              .waitForTransactionReceipt({
                                confirmations: a,
                                hash: o,
                              })
                              .then(({ status: n }) => {
                                var r;
                                i.delete(o),
                                  void 0 !== n &&
                                    ((r =
                                      0 === n || "reverted" === n
                                        ? "failed"
                                        : "confirmed"),
                                    s(e, t, (e) =>
                                      e.map((e) =>
                                        e.hash === o ? { ...e, status: r } : e
                                      )
                                    ));
                              });
                            return i.set(o, l), await l;
                          })
                      );
                    }
                    function s(e, n, i) {
                      var a, s;
                      (t = tF())[e] = null != (a = t[e]) ? a : {};
                      let u = 0,
                        l = i(null != (s = t[e][n]) ? s : []).filter(
                          ({ status: e }) => "pending" === e || u++ <= 10
                        );
                      (t[e][n] = l.length > 0 ? l : void 0),
                        localStorage.setItem(tR, JSON.stringify(t)),
                        r.forEach((e) => e()),
                        o(e, n);
                    }
                    return {
                      addTransaction: function (e, t, n) {
                        let r = (function (e) {
                          let t = [];
                          return (
                            tL.test(e.hash) ||
                              t.push("Invalid transaction hash"),
                            "string" != typeof e.description &&
                              t.push("Transaction must have a description"),
                            void 0 !== e.confirmations &&
                              (!Number.isInteger(e.confirmations) ||
                                e.confirmations < 1) &&
                              t.push(
                                "Transaction confirmations must be a positiver integer"
                              ),
                            t
                          );
                        })(n);
                        if (r.length > 0)
                          throw Error(
                            ["Unable to add transaction", ...r].join("\n")
                          );
                        s(e, t, (e) => [
                          { ...n, status: "pending" },
                          ...e.filter(({ hash: e }) => e !== n.hash),
                        ]);
                      },
                      clearTransactions: function (e, t) {
                        s(e, t, () => []);
                      },
                      getTransactions: a,
                      onChange: function (e) {
                        return (
                          r.add(e),
                          () => {
                            r.delete(e);
                          }
                        );
                      },
                      setProvider: function (e) {
                        n = e;
                      },
                      waitForPendingTransactions: o,
                    };
                  })({ provider: t }))
            );
          return (
            (0, V.useEffect)(() => {
              i.setProvider(t);
            }, [i, t]),
            (0, V.useEffect)(() => {
              n && r && i.waitForPendingTransactions(n, r);
            }, [i, n, r]),
            V.createElement(tU.Provider, { value: i }, e)
          );
        }
        function tq() {
          let e = (0, V.useContext)(tU);
          if (!e)
            throw Error(
              "Transaction hooks must be used within RainbowKitProvider"
            );
          return e;
        }
        function tH() {
          let e = tq(),
            { address: t } = (0, el.mA)(),
            n = tD(),
            [r, i] = (0, V.useState)(() =>
              e && t && n ? e.getTransactions(t, n) : []
            );
          return (
            (0, V.useEffect)(() => {
              if (e && t && n)
                return (
                  i(e.getTransactions(t, n)),
                  e.onChange(() => {
                    i(e.getTransactions(t, n));
                  })
                );
            }, [e, t, n]),
            r
          );
        }
        var tz = (e) => ("function" == typeof e ? e() : e);
        function tG(e, t = {}) {
          return Object.entries(
            (function (e, { extends: t } = {}) {
              let n = { ...eV(eQ, tz(e)) };
              if (!t) return n;
              let r = eV(eQ, tz(t)),
                i = Object.fromEntries(
                  Object.entries(n).filter(([e, t]) => t !== r[e])
                );
              return i;
            })(e, t)
          )
            .map(([e, t]) => `${e}:${t.replace(/[:;{}</>]/g, "")};`)
            .join("");
        }
        var tW = () => {
            let [e, t] = (0, V.useState)({ height: void 0, width: void 0 });
            return (
              (0, V.useEffect)(() => {
                function e() {
                  t({ height: window.innerHeight, width: window.innerWidth });
                }
                return (
                  window.addEventListener("resize", e),
                  e(),
                  () => window.removeEventListener("resize", e)
                );
              }, []),
              e
            );
          },
          tV = {
            appName: void 0,
            disclaimer: void 0,
            learnMoreUrl:
              "https://learn.rainbow.me/understanding-web3?utm_source=rainbowkit&utm_campaign=learnmore",
          },
          tK = (0, V.createContext)(tV),
          tZ = (0, V.createContext)(!1),
          tJ = { COMPACT: "compact", WIDE: "wide" },
          tY = (0, V.createContext)(tJ.WIDE),
          tX = (0, V.createContext)(!1);
        function tQ() {
          return (
            "undefined" != typeof navigator &&
            /Version\/([0-9._]+).*Safari/.test(navigator.userAgent)
          );
        }
        function t0() {
          var e;
          if ("undefined" == typeof navigator) return "Browser";
          let t = navigator.userAgent.toLowerCase();
          if (null == (e = navigator.brave) ? void 0 : e.isBrave)
            return "Brave";
          if (t.indexOf("edg/") > -1) return "Edge";
          if (t.indexOf("op") > -1) return "Opera";
          if (
            "undefined" != typeof document &&
            "" !==
              getComputedStyle(document.body).getPropertyValue(
                "--arc-palette-focus"
              )
          )
            return "Arc";
          if (t.indexOf("chrome") > -1) return "Chrome";
          if (t.indexOf("firefox") > -1) return "Firefox";
          if (tQ()) return "Safari";
          return "Browser";
        }
        var t1 = (e) => {
            var t, n, r, i, a, o, s, u, l, c, d, f;
            let p = t0();
            return null !=
              (f = {
                Arc:
                  null == (t = null == e ? void 0 : e.downloadUrls)
                    ? void 0
                    : t.chrome,
                Brave:
                  null == (n = null == e ? void 0 : e.downloadUrls)
                    ? void 0
                    : n.chrome,
                Chrome:
                  null == (r = null == e ? void 0 : e.downloadUrls)
                    ? void 0
                    : r.chrome,
                Edge:
                  (null == (i = null == e ? void 0 : e.downloadUrls)
                    ? void 0
                    : i.edge) ||
                  (null == (a = null == e ? void 0 : e.downloadUrls)
                    ? void 0
                    : a.chrome),
                Firefox:
                  null == (o = null == e ? void 0 : e.downloadUrls)
                    ? void 0
                    : o.firefox,
                Opera:
                  (null == (s = null == e ? void 0 : e.downloadUrls)
                    ? void 0
                    : s.opera) ||
                  (null == (u = null == e ? void 0 : e.downloadUrls)
                    ? void 0
                    : u.chrome),
                Safari:
                  null == (l = null == e ? void 0 : e.downloadUrls)
                    ? void 0
                    : l.safari,
                Browser:
                  null == (c = null == e ? void 0 : e.downloadUrls)
                    ? void 0
                    : c.browserExtension,
              }[p])
              ? f
              : null == (d = null == e ? void 0 : e.downloadUrls)
              ? void 0
              : d.browserExtension;
          },
          t2 = (e) => {
            var t, n, r, i;
            let a = e8();
            return null !=
              (i = a
                ? null == (t = null == e ? void 0 : e.downloadUrls)
                  ? void 0
                  : t.ios
                : null == (n = null == e ? void 0 : e.downloadUrls)
                ? void 0
                : n.android)
              ? i
              : null == (r = null == e ? void 0 : e.downloadUrls)
              ? void 0
              : r.mobile;
          },
          t6 = "rk-recent";
        function t3() {
          return "undefined" != typeof localStorage
            ? (function (e) {
                try {
                  let t = e ? JSON.parse(e) : [];
                  return Array.isArray(t) ? t : [];
                } catch (e) {
                  return [];
                }
              })(localStorage.getItem(t6))
            : [];
        }
        function t5() {
          let e = tI(),
            t = tA(),
            { connectAsync: n, connectors: r } = (0, el.$4)();
          async function i(r, i) {
            var a, o, s;
            let u = await i.getChainId(),
              l = await n({
                chainId:
                  null !=
                  (s =
                    null != t
                      ? t
                      : null == (a = e.find(({ id: e }) => e === u))
                      ? void 0
                      : a.id)
                    ? s
                    : null == (o = e[0])
                    ? void 0
                    : o.id,
                connector: i,
              });
            return (
              l &&
                (function (e) {
                  var t;
                  let n = ((t = [e, ...t3()]), [...new Set(t)]);
                  localStorage.setItem(t6, JSON.stringify(n));
                })(r),
              l
            );
          }
          async function a(e, t) {
            try {
              return await i(e, t);
            } catch (t) {
              let e =
                "UserRejectedRequestError" === t.name ||
                "Connection request reset. Please try again." === t.message;
              if (!e) throw t;
            }
          }
          let o = (function (e) {
              let t = [];
              for (let n of e) t.push(...n);
              return t;
            })(
              r.map((e) => {
                var t;
                return null != (t = e._wallets) ? t : [];
              })
            ).sort((e, t) => e.index - t.index),
            s = (function (e, t) {
              let n = {};
              return (
                e.forEach((e) => {
                  let r = t(e);
                  r && (n[r] = e);
                }),
                n
              );
            })(o, (e) => e.id),
            u = t3()
              .map((e) => s[e])
              .filter(tm)
              .slice(0, 3),
            l = [...u, ...o.filter((e) => !u.includes(e))],
            c = [];
          return (
            l.forEach((e) => {
              var t;
              if (!e) return;
              let n = u.includes(e);
              c.push({
                ...e,
                connect: () =>
                  e.connector.showQrModal
                    ? a(e.id, e.connector)
                    : i(e.id, e.connector),
                extensionDownloadUrl: t1(e),
                groupName: e.groupName,
                mobileDownloadUrl: t2(e),
                onConnecting: (t) =>
                  e.connector.on("message", ({ type: e }) =>
                    "connecting" === e ? t() : void 0
                  ),
                ready: (null == (t = e.installed) || t) && e.connector.ready,
                recent: n,
                showWalletConnectModal: e.walletConnectModalConnector
                  ? () => a(e.id, e.walletConnectModalConnector)
                  : void 0,
              });
            }),
            c
          );
        }
        var t4 = async () => (await n.e(794).then(n.bind(n, 20794))).default,
          t8 = () => ta(t4),
          t7 = () =>
            V.createElement(ts, {
              background: "#d0d5de",
              borderRadius: "10",
              height: "48",
              src: t4,
              width: "48",
            }),
          t9 = async () => (await n.e(3200).then(n.bind(n, 3200))).default,
          ne = () => ta(t9),
          nt = () =>
            V.createElement(ts, {
              background: "#d0d5de",
              borderRadius: "10",
              height: "48",
              src: t9,
              width: "48",
            }),
          nn = V.forwardRef(
            (
              {
                as: e = "div",
                children: t,
                className: n,
                color: r,
                display: i,
                font: a = "body",
                id: o,
                size: s = "16",
                style: u,
                tabIndex: l,
                textAlign: c = "inherit",
                weight: d = "regular",
              },
              f
            ) =>
              V.createElement(
                tt,
                {
                  as: e,
                  className: n,
                  color: r,
                  display: i,
                  fontFamily: a,
                  fontSize: s,
                  fontWeight: d,
                  id: o,
                  ref: f,
                  style: u,
                  tabIndex: l,
                  textAlign: c,
                },
                t
              )
          );
        nn.displayName = "Text";
        var nr = {
          large: { fontSize: "16", paddingX: "24", paddingY: "10" },
          medium: {
            fontSize: "14",
            height: "28",
            paddingX: "12",
            paddingY: "4",
          },
          small: { fontSize: "14", paddingX: "10", paddingY: "5" },
        };
        function ni({
          disabled: e = !1,
          href: t,
          label: n,
          onClick: r,
          rel: i = "noreferrer noopener",
          size: a = "medium",
          target: o = "_blank",
          testId: s,
          type: u = "primary",
        }) {
          let l = "primary" === u,
            c = "large" !== a,
            d = e7(),
            f = e
              ? "actionButtonSecondaryBackground"
              : l
              ? "accentColor"
              : c
              ? "actionButtonSecondaryBackground"
              : null,
            { fontSize: p, height: h, paddingX: m, paddingY: y } = nr[a];
          return V.createElement(
            tt,
            {
              ...(t
                ? e
                  ? {}
                  : { as: "a", href: t, rel: i, target: o }
                : { as: "button", type: "button" }),
              onClick: e ? void 0 : r,
              ...(d && c
                ? {}
                : {
                    borderColor:
                      !d || c || l
                        ? "actionButtonBorder"
                        : "actionButtonBorderMobile",
                    borderStyle: "solid",
                    borderWidth: "1",
                  }),
              borderRadius: "actionButton",
              className: !e && e2({ active: "shrinkSm", hover: "grow" }),
              display: "block",
              paddingX: m,
              paddingY: y,
              style: { willChange: "transform" },
              testId: s,
              textAlign: "center",
              transition: "transform",
              ...(f ? { background: f } : {}),
              ...(h ? { height: h } : {}),
            },
            V.createElement(
              nn,
              {
                color: e
                  ? "modalTextSecondary"
                  : l
                  ? "accentColorForeground"
                  : "accentColor",
                size: p,
                weight: "bold",
              },
              n
            )
          );
        }
        var na = () =>
            e7()
              ? V.createElement(
                  "svg",
                  {
                    "aria-hidden": !0,
                    fill: "none",
                    height: "11.5",
                    viewBox: "0 0 11.5 11.5",
                    width: "11.5",
                    xmlns: "http://www.w3.org/2000/svg",
                  },
                  V.createElement("path", {
                    d: "M2.13388 0.366117C1.64573 -0.122039 0.854272 -0.122039 0.366117 0.366117C-0.122039 0.854272 -0.122039 1.64573 0.366117 2.13388L3.98223 5.75L0.366117 9.36612C-0.122039 9.85427 -0.122039 10.6457 0.366117 11.1339C0.854272 11.622 1.64573 11.622 2.13388 11.1339L5.75 7.51777L9.36612 11.1339C9.85427 11.622 10.6457 11.622 11.1339 11.1339C11.622 10.6457 11.622 9.85427 11.1339 9.36612L7.51777 5.75L11.1339 2.13388C11.622 1.64573 11.622 0.854272 11.1339 0.366117C10.6457 -0.122039 9.85427 -0.122039 9.36612 0.366117L5.75 3.98223L2.13388 0.366117Z",
                    fill: "currentColor",
                  })
                )
              : V.createElement(
                  "svg",
                  {
                    "aria-hidden": !0,
                    fill: "none",
                    height: "10",
                    viewBox: "0 0 10 10",
                    width: "10",
                    xmlns: "http://www.w3.org/2000/svg",
                  },
                  V.createElement("path", {
                    d: "M1.70711 0.292893C1.31658 -0.0976311 0.683417 -0.0976311 0.292893 0.292893C-0.0976311 0.683417 -0.0976311 1.31658 0.292893 1.70711L3.58579 5L0.292893 8.29289C-0.0976311 8.68342 -0.0976311 9.31658 0.292893 9.70711C0.683417 10.0976 1.31658 10.0976 1.70711 9.70711L5 6.41421L8.29289 9.70711C8.68342 10.0976 9.31658 10.0976 9.70711 9.70711C10.0976 9.31658 10.0976 8.68342 9.70711 8.29289L6.41421 5L9.70711 1.70711C10.0976 1.31658 10.0976 0.683417 9.70711 0.292893C9.31658 -0.0976311 8.68342 -0.0976311 8.29289 0.292893L5 3.58579L1.70711 0.292893Z",
                    fill: "currentColor",
                  })
                ),
          no = ({ "aria-label": e = "Close", onClose: t }) => {
            let n = e7();
            return V.createElement(
              tt,
              {
                alignItems: "center",
                "aria-label": e,
                as: "button",
                background: "closeButtonBackground",
                borderColor: "actionButtonBorder",
                borderRadius: "full",
                borderStyle: "solid",
                borderWidth: n ? "0" : "1",
                className: e2({ active: "shrinkSm", hover: "growLg" }),
                color: "closeButton",
                display: "flex",
                height: n ? "30" : "28",
                justifyContent: "center",
                onClick: t,
                style: { willChange: "transform" },
                transition: "default",
                type: "button",
                width: n ? "30" : "28",
              },
              V.createElement(na, null)
            );
          },
          ns = async () => (await n.e(2898).then(n.bind(n, 92898))).default;
        function nu({ onClose: e }) {
          let [{ status: t, ...n }, r] = V.useState({ status: "idle" }),
            i = (function () {
              var e;
              let { adapter: t } = null != (e = (0, V.useContext)(e6)) ? e : {};
              if (!t) throw Error("No authentication adapter found");
              return t;
            })(),
            a = (0, V.useCallback)(async () => {
              try {
                let e = await i.getNonce();
                r((t) => ({ ...t, nonce: e }));
              } catch (e) {
                r((e) => ({
                  ...e,
                  errorMessage: "Error preparing message, please retry!",
                  status: "idle",
                }));
              }
            }, [i]),
            o = (0, V.useRef)(!1);
          V.useEffect(() => {
            o.current || ((o.current = !0), a());
          }, [a]);
          let s = e7(),
            { address: u } = (0, el.mA)(),
            { chain: l } = (0, el.LN)(),
            { signMessageAsync: c } = (0, el.QW)(),
            { disconnect: d } = (0, el.qL)(),
            f = () => d(),
            p = async () => {
              try {
                let e;
                let t = null == l ? void 0 : l.id,
                  { nonce: a } = n;
                if (!u || !t || !a) return;
                r((e) => ({ ...e, errorMessage: void 0, status: "signing" }));
                let o = i.createMessage({ address: u, chainId: t, nonce: a });
                try {
                  e = await c({ message: i.getMessageBody({ message: o }) });
                } catch (e) {
                  if (e instanceof eK.ab)
                    return r((e) => ({ ...e, status: "idle" }));
                  return r((e) => ({
                    ...e,
                    errorMessage: "Error signing message, please retry!",
                    status: "idle",
                  }));
                }
                r((e) => ({ ...e, status: "verifying" }));
                try {
                  let t = await i.verify({ message: o, signature: e });
                  if (t) return;
                  throw Error();
                } catch (e) {
                  return r((e) => ({
                    ...e,
                    errorMessage: "Error verifying signature, please retry!",
                    status: "idle",
                  }));
                }
              } catch (e) {
                r({
                  errorMessage: "Oops, something went wrong!",
                  status: "idle",
                });
              }
            };
          return V.createElement(
            tt,
            { position: "relative" },
            V.createElement(
              tt,
              {
                display: "flex",
                paddingRight: "16",
                paddingTop: "16",
                position: "absolute",
                right: "0",
              },
              V.createElement(no, { onClose: e })
            ),
            V.createElement(
              tt,
              {
                alignItems: "center",
                display: "flex",
                flexDirection: "column",
                gap: s ? "32" : "24",
                padding: "24",
                paddingX: "18",
                style: { paddingTop: s ? "60px" : "36px" },
              },
              V.createElement(
                tt,
                {
                  alignItems: "center",
                  display: "flex",
                  flexDirection: "column",
                  gap: s ? "6" : "4",
                  style: { maxWidth: s ? 320 : 280 },
                },
                V.createElement(
                  tt,
                  {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: s ? "32" : "16",
                  },
                  V.createElement(ts, { height: 40, src: ns, width: 40 }),
                  V.createElement(
                    nn,
                    {
                      color: "modalText",
                      size: s ? "20" : "18",
                      textAlign: "center",
                      weight: "heavy",
                    },
                    "Verify your account"
                  )
                ),
                V.createElement(
                  tt,
                  {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: s ? "16" : "12",
                  },
                  V.createElement(
                    nn,
                    {
                      color: "modalTextSecondary",
                      size: s ? "16" : "14",
                      textAlign: "center",
                    },
                    "To finish connecting, you must sign a message in your wallet to verify that you are the owner of this account."
                  ),
                  "idle" === t && n.errorMessage
                    ? V.createElement(
                        nn,
                        {
                          color: "error",
                          size: s ? "16" : "14",
                          textAlign: "center",
                          weight: "bold",
                        },
                        n.errorMessage
                      )
                    : null
                )
              ),
              V.createElement(
                tt,
                {
                  alignItems: s ? void 0 : "center",
                  display: "flex",
                  flexDirection: "column",
                  gap: "8",
                  width: "full",
                },
                V.createElement(ni, {
                  disabled: !n.nonce || "signing" === t || "verifying" === t,
                  label: n.nonce
                    ? "signing" === t
                      ? "Waiting for signature..."
                      : "verifying" === t
                      ? "Verifying signature..."
                      : "Send message"
                    : "Preparing message...",
                  onClick: p,
                  size: s ? "large" : "medium",
                  testId: "auth-message-button",
                }),
                s
                  ? V.createElement(ni, {
                      label: "Cancel",
                      onClick: f,
                      size: "large",
                      type: "secondary",
                    })
                  : V.createElement(
                      tt,
                      {
                        as: "button",
                        borderRadius: "full",
                        className: e2({ active: "shrink", hover: "grow" }),
                        display: "block",
                        onClick: f,
                        paddingX: "10",
                        paddingY: "5",
                        rel: "noreferrer",
                        style: { willChange: "transform" },
                        target: "_blank",
                        transition: "default",
                      },
                      V.createElement(
                        nn,
                        {
                          color: "closeButton",
                          size: s ? "16" : "14",
                          weight: "bold",
                        },
                        "Cancel"
                      )
                    )
              )
            )
          );
        }
        var nl = "WALLETCONNECT_DEEPLINK_CHOICE";
        function nc() {
          localStorage.removeItem(nl);
        }
        var nd = (0, V.createContext)(void 0),
          nf = "data-rk",
          np = (e) => ({ [nf]: e || "" }),
          nh = (e) => {
            if (e && !/^[a-zA-Z0-9_]+$/.test(e))
              throw Error(`Invalid ID: ${e}`);
            return e ? `[${nf}="${e}"]` : `[${nf}]`;
          },
          nm = () => {
            let e = (0, V.useContext)(nd);
            return np(e);
          },
          ny = en();
        function ng({
          appInfo: e,
          avatar: t,
          chains: n,
          children: r,
          coolMode: i = !1,
          id: a,
          initialChain: o,
          modalSize: s = tJ.WIDE,
          showRecentTransactions: u = !1,
          theme: l = ny,
        }) {
          if (
            ((function () {
              let e = tI(),
                t = t5(),
                n = "unauthenticated" === e3(),
                r = (0, V.useCallback)(() => {
                  ta(
                    ...t.map((e) => e.iconUrl),
                    ...e.map((e) => e.iconUrl).filter(tm)
                  ),
                    e7() || (t8(), ne()),
                    n && ta(ns);
                }, [t, e, n]);
              (0, V.useEffect)(() => {
                r();
              }, [r]);
            })(),
            (function () {
              let e = (0, V.useCallback)(() => {
                !(function ({ version: e }) {
                  localStorage.setItem("rk-version", e);
                })({ version: "1.0.11" });
              }, []);
              (0, V.useEffect)(() => {
                e();
              }, [e]);
            })(),
            (0, el.mA)({ onDisconnect: nc }),
            "function" == typeof l)
          )
            throw Error(
              'A theme function was provided to the "theme" prop instead of a theme object. You must execute this function to get the resulting theme object.'
            );
          let c = nh(a),
            d = { ...tV, ...e },
            f = null != t ? t : td,
            { width: p } = tW();
          return V.createElement(
            tO,
            { chains: n, initialChain: o },
            V.createElement(
              tZ.Provider,
              { value: i },
              V.createElement(
                tY.Provider,
                { value: p && p < 768 ? tJ.COMPACT : s },
                V.createElement(
                  tX.Provider,
                  { value: u },
                  V.createElement(
                    t$,
                    null,
                    V.createElement(
                      tf.Provider,
                      { value: f },
                      V.createElement(
                        tK.Provider,
                        { value: d },
                        V.createElement(
                          nd.Provider,
                          { value: a },
                          V.createElement(
                            rE,
                            null,
                            l
                              ? V.createElement(
                                  "div",
                                  { ...np(a) },
                                  V.createElement("style", {
                                    dangerouslySetInnerHTML: {
                                      __html: [
                                        `${c}{${tG(
                                          "lightMode" in l ? l.lightMode : l
                                        )}}`,
                                        "darkMode" in l
                                          ? `@media(prefers-color-scheme:dark){${c}{${tG(
                                              l.darkMode,
                                              { extends: l.lightMode }
                                            )}}}`
                                          : null,
                                      ].join(""),
                                    },
                                  }),
                                  r
                                )
                              : r
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          );
        }
        var nb = (e, t) => {
          let n = e.querySelectorAll("button:not(:disabled), a[href]");
          0 !== n.length && n["end" === t ? n.length - 1 : 0].focus();
        };
        function nv(e) {
          let t = (0, V.useRef)(null);
          return (
            (0, V.useEffect)(() => {
              let e = document.activeElement;
              return () => {
                var t;
                null == (t = e.focus) || t.call(e);
              };
            }, []),
            (0, V.useEffect)(() => {
              if (t.current) {
                let e = t.current.querySelector("[data-auto-focus]");
                e ? e.focus() : t.current.focus();
              }
            }, [t]),
            V.createElement(
              V.Fragment,
              null,
              V.createElement("div", {
                onFocus: (0, V.useCallback)(
                  () => t.current && nb(t.current, "end"),
                  []
                ),
                tabIndex: 0,
              }),
              V.createElement("div", {
                ref: t,
                style: { outline: "none" },
                tabIndex: -1,
                ...e,
              }),
              V.createElement("div", {
                onFocus: (0, V.useCallback)(
                  () => t.current && nb(t.current, "start"),
                  []
                ),
                tabIndex: 0,
              })
            )
          );
        }
        var nw = (e) => e.stopPropagation();
        function nE({ children: e, onClose: t, open: n, titleId: r }) {
          (0, V.useEffect)(() => {
            let e = (e) => n && "Escape" === e.key && t();
            return (
              document.addEventListener("keydown", e),
              () => document.removeEventListener("keydown", e)
            );
          }, [n, t]);
          let [i, a] = (0, V.useState)(!0);
          (0, V.useEffect)(() => {
            a("hidden" !== getComputedStyle(window.document.body).overflow);
          }, []);
          let o = (0, V.useCallback)(() => t(), [t]),
            s = nm(),
            u = e7();
          return V.createElement(
            V.Fragment,
            null,
            n
              ? (0, ef.createPortal)(
                  V.createElement(
                    eG,
                    { enabled: i },
                    V.createElement(
                      tt,
                      { ...s },
                      V.createElement(
                        tt,
                        {
                          ...s,
                          alignItems: u ? "flex-end" : "center",
                          "aria-labelledby": r,
                          "aria-modal": !0,
                          className:
                            "_9pm4ki3 ju367v9b ju367vax ju367va ju367v2l ju367v8l",
                          onClick: o,
                          position: "fixed",
                          role: "dialog",
                        },
                        V.createElement(
                          nv,
                          {
                            className: "_9pm4ki5 ju367va ju367v10 ju367v8m",
                            onClick: nw,
                            role: "document",
                          },
                          e
                        )
                      )
                    )
                  ),
                  document.body
                )
              : null
          );
        }
        function nx({
          bottomSheetOnMobile: e = !1,
          children: t,
          marginTop: n,
          padding: r = "16",
          wide: i = !1,
        }) {
          let a = e7(),
            o = (0, V.useContext)(tY),
            s = o === tJ.COMPACT;
          return V.createElement(
            tt,
            { marginTop: n },
            V.createElement(
              tt,
              {
                className: [
                  i
                    ? a
                      ? "_1ckjpok2 _1ckjpok1 ju367vb0 ju367vdl ju367vp ju367vt ju367vv ju367vef ju367va ju367v10 ju367v67 ju367v8m"
                      : s
                      ? "_1ckjpok4 _1ckjpok1 ju367vb0 ju367vdl ju367vp ju367vt ju367vv ju367vef ju367va ju367v10 ju367v67 ju367v8m"
                      : "_1ckjpok3 _1ckjpok1 ju367vb0 ju367vdl ju367vp ju367vt ju367vv ju367vef ju367va ju367v10 ju367v67 ju367v8m"
                    : "_1ckjpok1 ju367vb0 ju367vdl ju367vp ju367vt ju367vv ju367vef ju367va ju367v10 ju367v67 ju367v8m",
                  a ? "_1ckjpok6 ju367vq" : null,
                  a && e ? "_1ckjpok7" : null,
                ].join(" "),
              },
              V.createElement(tt, { padding: r }, t)
            )
          );
        }
        var nC = ["k", "m", "b", "t"];
        function n_(e, t = 1) {
          return e
            .toString()
            .replace(RegExp(`(.+\\.\\d{${t}})\\d+`), "$1")
            .replace(/(\.[1-9]*)0+$/, "$1")
            .replace(/\.$/, "");
        }
        function nT(e) {
          if (e < 1) return n_(e, 3);
          if (e < 100) return n_(e, 2);
          if (e < 1e4)
            return new Intl.NumberFormat().format(parseFloat(n_(e, 1)));
          let t = String(e);
          for (let n = nC.length - 1; n >= 0; n--) {
            let r = 10 ** ((n + 1) * 3);
            if (r <= e) {
              t = n_((e = (10 * e) / r / 10), 1) + nC[n];
              break;
            }
          }
          return t;
        }
        function nS(e) {
          return e.length < 8
            ? e
            : `${e.substring(0, 4)}\u2026${e.substring(e.length - 4)}`;
        }
        function nP(e) {
          let t = e.split("."),
            n = t.pop();
          return t.join(".").length > 24
            ? `${t.join(".").substring(0, 24)}...`
            : `${t.join(".")}.${n}`;
        }
        var nO = () =>
            V.createElement(
              "svg",
              {
                fill: "none",
                height: "13",
                viewBox: "0 0 13 13",
                width: "13",
                xmlns: "http://www.w3.org/2000/svg",
              },
              V.createElement("path", {
                d: "M4.94568 12.2646C5.41052 12.2646 5.77283 12.0869 6.01892 11.7109L12.39 1.96973C12.5677 1.69629 12.6429 1.44336 12.6429 1.2041C12.6429 0.561523 12.1644 0.0966797 11.5082 0.0966797C11.057 0.0966797 10.7767 0.260742 10.5033 0.691406L4.9115 9.50977L2.07458 5.98926C1.82166 5.68848 1.54822 5.55176 1.16541 5.55176C0.502319 5.55176 0.0238037 6.02344 0.0238037 6.66602C0.0238037 6.95312 0.112671 7.20605 0.358765 7.48633L3.88611 11.7588C4.18005 12.1074 4.50818 12.2646 4.94568 12.2646Z",
                fill: "currentColor",
              })
            ),
          nI = () =>
            V.createElement(
              "svg",
              {
                fill: "none",
                height: "16",
                viewBox: "0 0 17 16",
                width: "17",
                xmlns: "http://www.w3.org/2000/svg",
              },
              V.createElement("path", {
                d: "M3.04236 12.3027H4.18396V13.3008C4.18396 14.8525 5.03845 15.7002 6.59705 15.7002H13.6244C15.183 15.7002 16.0375 14.8525 16.0375 13.3008V6.24609C16.0375 4.69434 15.183 3.84668 13.6244 3.84668H12.4828V2.8418C12.4828 1.29688 11.6283 0.442383 10.0697 0.442383H3.04236C1.48376 0.442383 0.629272 1.29004 0.629272 2.8418V9.90332C0.629272 11.4551 1.48376 12.3027 3.04236 12.3027ZM3.23376 10.5391C2.68689 10.5391 2.39294 10.2656 2.39294 9.68457V3.06055C2.39294 2.47949 2.68689 2.21289 3.23376 2.21289H9.8783C10.4252 2.21289 10.7191 2.47949 10.7191 3.06055V3.84668H6.59705C5.03845 3.84668 4.18396 4.69434 4.18396 6.24609V10.5391H3.23376ZM6.78845 13.9365C6.24158 13.9365 5.94763 13.6699 5.94763 13.0889V6.45801C5.94763 5.87695 6.24158 5.61035 6.78845 5.61035H13.433C13.9799 5.61035 14.2738 5.87695 14.2738 6.45801V13.0889C14.2738 13.6699 13.9799 13.9365 13.433 13.9365H6.78845Z",
                fill: "currentColor",
              })
            ),
          nA = () =>
            V.createElement(
              "svg",
              {
                fill: "none",
                height: "16",
                viewBox: "0 0 18 16",
                width: "18",
                xmlns: "http://www.w3.org/2000/svg",
              },
              V.createElement("path", {
                d: "M2.67834 15.5908H9.99963C11.5514 15.5908 12.399 14.7432 12.399 13.1777V10.2656H10.6354V12.9863C10.6354 13.5332 10.3688 13.8271 9.78772 13.8271H2.89026C2.3092 13.8271 2.0426 13.5332 2.0426 12.9863V3.15625C2.0426 2.60254 2.3092 2.30859 2.89026 2.30859H9.78772C10.3688 2.30859 10.6354 2.60254 10.6354 3.15625V5.89746H12.399V2.95801C12.399 1.39941 11.5514 0.544922 9.99963 0.544922H2.67834C1.12659 0.544922 0.278931 1.39941 0.278931 2.95801V13.1777C0.278931 14.7432 1.12659 15.5908 2.67834 15.5908ZM7.43616 8.85059H14.0875L15.0924 8.78906L14.566 9.14453L13.6842 9.96484C13.5406 10.1016 13.4586 10.2861 13.4586 10.4844C13.4586 10.8398 13.7321 11.168 14.1217 11.168C14.3199 11.168 14.4635 11.0928 14.6002 10.9561L16.7809 8.68652C16.986 8.48145 17.0543 8.27637 17.0543 8.06445C17.0543 7.85254 16.986 7.64746 16.7809 7.43555L14.6002 5.17285C14.4635 5.03613 14.3199 4.9541 14.1217 4.9541C13.7321 4.9541 13.4586 5.27539 13.4586 5.6377C13.4586 5.83594 13.5406 6.02734 13.6842 6.15723L14.566 6.98438L15.0924 7.33984L14.0875 7.27148H7.43616C7.01917 7.27148 6.65686 7.62012 6.65686 8.06445C6.65686 8.50195 7.01917 8.85059 7.43616 8.85059Z",
                fill: "currentColor",
              })
            ),
          nk = (e) => {
            var t, n;
            return null ==
              (n =
                null == (t = null == e ? void 0 : e.blockExplorers)
                  ? void 0
                  : t.default)
              ? void 0
              : n.url;
          },
          nj = () =>
            V.createElement(
              "svg",
              {
                fill: "none",
                height: "19",
                viewBox: "0 0 20 19",
                width: "20",
                xmlns: "http://www.w3.org/2000/svg",
              },
              V.createElement("path", {
                d: "M10 18.9443C15.0977 18.9443 19.2812 14.752 19.2812 9.6543C19.2812 4.56543 15.0889 0.373047 10 0.373047C4.90234 0.373047 0.71875 4.56543 0.71875 9.6543C0.71875 14.752 4.91113 18.9443 10 18.9443ZM10 16.6328C6.1416 16.6328 3.03906 13.5215 3.03906 9.6543C3.03906 5.7959 6.13281 2.68457 10 2.68457C13.8584 2.68457 16.9697 5.7959 16.9697 9.6543C16.9785 13.5215 13.8672 16.6328 10 16.6328ZM12.7158 12.1416C13.2432 12.1416 13.5684 11.7549 13.5684 11.1836V7.19336C13.5684 6.44629 13.1377 6.05957 12.417 6.05957H8.40918C7.8291 6.05957 7.45117 6.38477 7.45117 6.91211C7.45117 7.43945 7.8291 7.77344 8.40918 7.77344H9.69238L10.7207 7.63281L9.53418 8.67871L6.73047 11.4912C6.53711 11.6758 6.41406 11.9395 6.41406 12.2031C6.41406 12.7832 6.85352 13.1699 7.39844 13.1699C7.68848 13.1699 7.92578 13.0732 8.1543 12.8623L10.9316 10.0762L11.9775 8.89844L11.8545 9.98828V11.1836C11.8545 11.7725 12.1885 12.1416 12.7158 12.1416Z",
                fill: "currentColor",
              })
            ),
          nB = () =>
            V.createElement(
              "svg",
              {
                fill: "none",
                height: "19",
                viewBox: "0 0 20 19",
                width: "20",
                xmlns: "http://www.w3.org/2000/svg",
              },
              V.createElement("path", {
                d: "M10 18.9443C15.0977 18.9443 19.2812 14.752 19.2812 9.6543C19.2812 4.56543 15.0889 0.373047 10 0.373047C4.90234 0.373047 0.71875 4.56543 0.71875 9.6543C0.71875 14.752 4.91113 18.9443 10 18.9443ZM10 16.6328C6.1416 16.6328 3.03906 13.5215 3.03906 9.6543C3.03906 5.7959 6.13281 2.68457 10 2.68457C13.8584 2.68457 16.9697 5.7959 16.9697 9.6543C16.9785 13.5215 13.8672 16.6328 10 16.6328ZM7.29297 13.3018C7.58301 13.3018 7.81152 13.2139 7.99609 13.0205L10 11.0166L12.0127 13.0205C12.1973 13.2051 12.4258 13.3018 12.707 13.3018C13.2432 13.3018 13.6562 12.8887 13.6562 12.3525C13.6562 12.0977 13.5508 11.8691 13.3662 11.6934L11.3535 9.67188L13.375 7.6416C13.5596 7.44824 13.6562 7.22852 13.6562 6.98242C13.6562 6.44629 13.2432 6.0332 12.7158 6.0332C12.4346 6.0332 12.2148 6.12109 12.0215 6.31445L10 8.32715L7.9873 6.32324C7.80273 6.12988 7.58301 6.04199 7.29297 6.04199C6.76562 6.04199 6.35254 6.45508 6.35254 6.99121C6.35254 7.2373 6.44922 7.46582 6.63379 7.6416L8.65527 9.67188L6.63379 11.6934C6.44922 11.8691 6.35254 12.1064 6.35254 12.3525C6.35254 12.8887 6.76562 13.3018 7.29297 13.3018Z",
                fill: "currentColor",
              })
            ),
          nM = () =>
            V.createElement(
              "svg",
              {
                fill: "none",
                height: "20",
                viewBox: "0 0 20 20",
                width: "20",
                xmlns: "http://www.w3.org/2000/svg",
              },
              V.createElement("path", {
                d: "M10 19.4443C15.0977 19.4443 19.2812 15.252 19.2812 10.1543C19.2812 5.06543 15.0889 0.873047 10 0.873047C4.90234 0.873047 0.71875 5.06543 0.71875 10.1543C0.71875 15.252 4.91113 19.4443 10 19.4443ZM10 17.1328C6.1416 17.1328 3.03906 14.0215 3.03906 10.1543C3.03906 6.2959 6.13281 3.18457 10 3.18457C13.8584 3.18457 16.9697 6.2959 16.9697 10.1543C16.9785 14.0215 13.8672 17.1328 10 17.1328ZM9.07715 14.3379C9.4375 14.3379 9.7627 14.1533 9.97363 13.8369L13.7441 8.00977C13.8848 7.79883 13.9814 7.5791 13.9814 7.36816C13.9814 6.84961 13.5244 6.48926 13.0322 6.48926C12.707 6.48926 12.4258 6.66504 12.2148 7.0166L9.05957 12.0967L7.5918 10.2949C7.37207 10.0225 7.13477 9.9082 6.84473 9.9082C6.33496 9.9082 5.92188 10.3125 5.92188 10.8223C5.92188 11.0684 6.00098 11.2793 6.18555 11.5078L8.1543 13.8545C8.40918 14.1709 8.70801 14.3379 9.07715 14.3379Z",
                fill: "currentColor",
              })
            ),
          nN = (e) => {
            switch (e) {
              case "pending":
              default:
                return tl;
              case "confirmed":
                return nM;
              case "failed":
                return nB;
            }
          };
        function nD({ tx: e }) {
          let t = e7(),
            n = nN(e.status),
            r = "failed" === e.status ? "error" : "accentColor",
            { chain: i } = (0, el.LN)(),
            a =
              "confirmed" === e.status
                ? "Confirmed"
                : "failed" === e.status
                ? "Failed"
                : "Pending",
            o = nk(i);
          return V.createElement(
            V.Fragment,
            null,
            V.createElement(
              tt,
              {
                ...(o
                  ? {
                      as: "a",
                      background: { hover: "profileForeground" },
                      borderRadius: "menuButton",
                      className: e2({ active: "shrink" }),
                      href: `${o}/tx/${e.hash}`,
                      rel: "noreferrer noopener",
                      target: "_blank",
                      transition: "default",
                    }
                  : {}),
                color: "modalText",
                display: "flex",
                flexDirection: "row",
                justifyContent: "space-between",
                padding: "8",
                width: "full",
              },
              V.createElement(
                tt,
                {
                  alignItems: "center",
                  display: "flex",
                  flexDirection: "row",
                  gap: t ? "16" : "14",
                },
                V.createElement(tt, { color: r }, V.createElement(n, null)),
                V.createElement(
                  tt,
                  {
                    display: "flex",
                    flexDirection: "column",
                    gap: t ? "3" : "1",
                  },
                  V.createElement(
                    tt,
                    null,
                    V.createElement(
                      nn,
                      {
                        color: "modalText",
                        font: "body",
                        size: t ? "16" : "14",
                        weight: "bold",
                      },
                      null == e ? void 0 : e.description
                    )
                  ),
                  V.createElement(
                    tt,
                    null,
                    V.createElement(
                      nn,
                      {
                        color:
                          "pending" === e.status ? "modalTextSecondary" : r,
                        font: "body",
                        size: "14",
                        weight: t ? "medium" : "regular",
                      },
                      a
                    )
                  )
                )
              ),
              o &&
                V.createElement(
                  tt,
                  {
                    alignItems: "center",
                    color: "modalTextDim",
                    display: "flex",
                  },
                  V.createElement(nj, null)
                )
            )
          );
        }
        function nR({ address: e }) {
          let t = tH(),
            n = (function () {
              let e = tq(),
                { address: t } = (0, el.mA)(),
                n = tD();
              return (0, V.useCallback)(() => {
                if (!t || !n) throw Error("No address or chain ID found");
                e.clearTransactions(t, n);
              }, [e, t, n]);
            })(),
            { chain: r } = (0, el.LN)(),
            i = nk(r),
            a = t.slice(0, 3),
            o = a.length > 0,
            s = e7(),
            { appName: u } = (0, V.useContext)(tK);
          return V.createElement(
            V.Fragment,
            null,
            V.createElement(
              tt,
              {
                display: "flex",
                flexDirection: "column",
                gap: "10",
                paddingBottom: "2",
                paddingTop: "16",
                paddingX: s ? "8" : "18",
              },
              o &&
                V.createElement(
                  tt,
                  {
                    paddingBottom: s ? "4" : "0",
                    paddingTop: "8",
                    paddingX: s ? "12" : "6",
                  },
                  V.createElement(
                    tt,
                    { display: "flex", justifyContent: "space-between" },
                    V.createElement(
                      nn,
                      {
                        color: "modalTextSecondary",
                        size: s ? "16" : "14",
                        weight: "semibold",
                      },
                      "Recent Transactions"
                    ),
                    V.createElement(
                      tt,
                      {
                        style: {
                          marginBottom: -6,
                          marginLeft: -10,
                          marginRight: -10,
                          marginTop: -6,
                        },
                      },
                      V.createElement(
                        tt,
                        {
                          as: "button",
                          background: { hover: "profileForeground" },
                          borderRadius: "actionButton",
                          className: e2({ active: "shrink" }),
                          onClick: n,
                          paddingX: s ? "8" : "12",
                          paddingY: s ? "4" : "5",
                          transition: "default",
                          type: "button",
                        },
                        V.createElement(
                          nn,
                          {
                            color: "modalTextSecondary",
                            size: s ? "16" : "14",
                            weight: "semibold",
                          },
                          "Clear All"
                        )
                      )
                    )
                  )
                ),
              V.createElement(
                tt,
                { display: "flex", flexDirection: "column", gap: "4" },
                o
                  ? a.map((e) => V.createElement(nD, { key: e.hash, tx: e }))
                  : V.createElement(
                      V.Fragment,
                      null,
                      V.createElement(
                        tt,
                        { padding: s ? "12" : "8" },
                        V.createElement(
                          nn,
                          {
                            color: "modalTextDim",
                            size: s ? "16" : "14",
                            weight: s ? "medium" : "bold",
                          },
                          null != u ? u : "Your",
                          " transactions will appear here..."
                        )
                      ),
                      s &&
                        V.createElement(tt, {
                          background: "generalBorderDim",
                          height: "1",
                          marginX: "12",
                          marginY: "8",
                        })
                    )
              )
            ),
            i &&
              V.createElement(
                tt,
                { paddingBottom: "18", paddingX: s ? "8" : "18" },
                V.createElement(
                  tt,
                  {
                    alignItems: "center",
                    as: "a",
                    background: { hover: "profileForeground" },
                    borderRadius: "menuButton",
                    className: e2({ active: "shrink" }),
                    color: "modalTextDim",
                    display: "flex",
                    flexDirection: "row",
                    href: `${i}/address/${e}`,
                    justifyContent: "space-between",
                    paddingX: "8",
                    paddingY: "12",
                    rel: "noreferrer noopener",
                    style: { willChange: "transform" },
                    target: "_blank",
                    transition: "default",
                    width: "full",
                    ...(s ? { paddingLeft: "12" } : {}),
                  },
                  V.createElement(
                    nn,
                    {
                      color: "modalText",
                      font: "body",
                      size: s ? "16" : "14",
                      weight: s ? "semibold" : "bold",
                    },
                    "View more on Explorer"
                  ),
                  V.createElement(nj, null)
                )
              )
          );
        }
        function nF({ action: e, icon: t, label: n, testId: r, url: i }) {
          let a = e7();
          return V.createElement(
            tt,
            {
              ...(i
                ? {
                    as: "a",
                    href: i,
                    rel: "noreferrer noopener",
                    target: "_blank",
                  }
                : { as: "button", type: "button" }),
              background: {
                base: "profileAction",
                ...(a ? {} : { hover: "profileActionHover" }),
              },
              borderRadius: "menuButton",
              boxShadow: "profileDetailsAction",
              className: e2({ active: "shrinkSm", hover: a ? void 0 : "grow" }),
              display: "flex",
              onClick: e,
              padding: a ? "6" : "8",
              style: { willChange: "transform" },
              testId: r,
              transition: "default",
              width: "full",
            },
            V.createElement(
              tt,
              {
                alignItems: "center",
                display: "flex",
                flexDirection: "column",
                gap: "1",
                justifyContent: "center",
                paddingTop: "2",
                width: "full",
              },
              V.createElement(tt, { color: "modalText", height: "max" }, t),
              V.createElement(
                tt,
                null,
                V.createElement(
                  nn,
                  {
                    color: "modalText",
                    size: a ? "12" : "13",
                    weight: "semibold",
                  },
                  n
                )
              )
            )
          );
        }
        function nL({
          address: e,
          balanceData: t,
          ensAvatar: n,
          ensName: r,
          onClose: i,
          onDisconnect: a,
        }) {
          let o = (0, V.useContext)(tX),
            [s, u] = (0, V.useState)(!1),
            l = (0, V.useCallback)(() => {
              e && (navigator.clipboard.writeText(e), u(!0));
            }, [e]);
          if (
            ((0, V.useEffect)(() => {
              if (s) {
                let e = setTimeout(() => {
                  u(!1);
                }, 1500);
                return () => clearTimeout(e);
              }
            }, [s]),
            !e)
          )
            return null;
          let c = r ? nP(r) : nS(e),
            d = null == t ? void 0 : t.formatted,
            f = d ? nT(parseFloat(d)) : void 0,
            p = "rk_profile_title",
            h = e7();
          return V.createElement(
            V.Fragment,
            null,
            V.createElement(
              tt,
              { display: "flex", flexDirection: "column" },
              V.createElement(
                tt,
                { background: "profileForeground", padding: "16" },
                V.createElement(
                  tt,
                  {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: h ? "16" : "12",
                    justifyContent: "center",
                    margin: "8",
                    style: { textAlign: "center" },
                  },
                  V.createElement(
                    tt,
                    {
                      style: {
                        position: "absolute",
                        right: 16,
                        top: 16,
                        willChange: "transform",
                      },
                    },
                    V.createElement(no, { onClose: i })
                  ),
                  " ",
                  V.createElement(
                    tt,
                    { marginTop: h ? "24" : "0" },
                    V.createElement(tp, {
                      address: e,
                      imageUrl: n,
                      size: h ? 82 : 74,
                    })
                  ),
                  V.createElement(
                    tt,
                    {
                      display: "flex",
                      flexDirection: "column",
                      gap: h ? "4" : "0",
                      textAlign: "center",
                    },
                    V.createElement(
                      tt,
                      { textAlign: "center" },
                      V.createElement(
                        nn,
                        {
                          as: "h1",
                          color: "modalText",
                          id: p,
                          size: h ? "20" : "18",
                          weight: "heavy",
                        },
                        c
                      )
                    ),
                    t &&
                      V.createElement(
                        tt,
                        { textAlign: "center" },
                        V.createElement(
                          nn,
                          {
                            as: "h1",
                            color: "modalTextSecondary",
                            id: p,
                            size: h ? "16" : "14",
                            weight: "semibold",
                          },
                          f,
                          " ",
                          t.symbol
                        )
                      )
                  )
                ),
                V.createElement(
                  tt,
                  {
                    display: "flex",
                    flexDirection: "row",
                    gap: "8",
                    margin: "2",
                    marginTop: "16",
                  },
                  V.createElement(nF, {
                    action: l,
                    icon: s
                      ? V.createElement(nO, null)
                      : V.createElement(nI, null),
                    label: s ? "Copied!" : "Copy Address",
                  }),
                  V.createElement(nF, {
                    action: a,
                    icon: V.createElement(nA, null),
                    label: "Disconnect",
                    testId: "disconnect-button",
                  })
                )
              ),
              o &&
                V.createElement(
                  V.Fragment,
                  null,
                  V.createElement(tt, {
                    background: "generalBorder",
                    height: "1",
                    marginTop: "-1",
                  }),
                  V.createElement(tt, null, V.createElement(nR, { address: e }))
                )
            )
          );
        }
        function nU({ onClose: e, open: t }) {
          let { address: n } = (0, el.mA)(),
            { data: r } = (0, el.KQ)({ address: n }),
            i = tN(n),
            a = tM(i),
            { disconnect: o } = (0, el.qL)();
          return n
            ? V.createElement(
                V.Fragment,
                null,
                n &&
                  V.createElement(
                    nE,
                    { onClose: e, open: t, titleId: "rk_account_modal_title" },
                    V.createElement(
                      nx,
                      { bottomSheetOnMobile: !0, padding: "0" },
                      V.createElement(nL, {
                        address: n,
                        balanceData: r,
                        ensAvatar: a,
                        ensName: i,
                        onClose: e,
                        onDisconnect: o,
                      })
                    )
                  )
              )
            : null;
        }
        var n$ = ({ size: e }) =>
            V.createElement(
              "svg",
              {
                fill: "none",
                height: e,
                viewBox: "0 0 28 28",
                width: e,
                xmlns: "http://www.w3.org/2000/svg",
              },
              V.createElement("path", {
                d: "M6.742 22.195h8.367c1.774 0 2.743-.968 2.743-2.758V16.11h-2.016v3.11c0 .625-.305.96-.969.96H6.984c-.664 0-.968-.335-.968-.96V7.984c0-.632.304-.968.968-.968h7.883c.664 0 .969.336.969.968v3.133h2.016v-3.36c0-1.78-.97-2.757-2.743-2.757H6.742C4.97 5 4 5.977 4 7.758v11.68c0 1.789.969 2.757 2.742 2.757Zm5.438-7.703h7.601l1.149-.07-.602.406-1.008.938a.816.816 0 0 0-.258.593c0 .407.313.782.758.782.227 0 .39-.086.547-.243l2.492-2.593c.235-.235.313-.47.313-.711 0-.242-.078-.477-.313-.719l-2.492-2.586c-.156-.156-.32-.25-.547-.25-.445 0-.758.367-.758.781 0 .227.094.446.258.594l1.008.945.602.407-1.149-.079H12.18a.904.904 0 0 0 0 1.805Z",
                fill: "currentColor",
              })
            ),
          nq = V.forwardRef(
            (
              {
                children: e,
                currentlySelected: t = !1,
                onClick: n,
                testId: r,
                ...i
              },
              a
            ) => {
              let o = e7();
              return V.createElement(
                tt,
                {
                  as: "button",
                  borderRadius: "menuButton",
                  disabled: t,
                  display: "flex",
                  onClick: n,
                  ref: a,
                  testId: r,
                  type: "button",
                },
                V.createElement(
                  tt,
                  {
                    borderRadius: "menuButton",
                    className: [
                      o ? "v9horb0" : void 0,
                      !t && e2({ active: "shrink" }),
                    ],
                    padding: o ? "8" : "6",
                    transition: "default",
                    width: "full",
                    ...(t
                      ? {
                          background: "accentColor",
                          borderColor: "selectedOptionBorder",
                          borderStyle: "solid",
                          borderWidth: "1",
                          boxShadow: "selectedOption",
                          color: "accentColorForeground",
                        }
                      : {
                          background: { hover: "menuItemBackground" },
                          color: "modalText",
                          transition: "default",
                        }),
                    ...i,
                  },
                  e
                )
              );
            }
          );
        function nH({ onClose: e, open: t }) {
          var n;
          let { chain: r } = (0, el.LN)(),
            {
              chains: i,
              pendingChainId: a,
              reset: o,
              switchNetwork: s,
            } = (0, el.g0)({
              onSettled: () => {
                o(), e();
              },
            }),
            { disconnect: u } = (0, el.qL)(),
            l = "rk_chain_modal_title",
            c = e7(),
            d = null != (n = null == r ? void 0 : r.unsupported) && n,
            f = c ? "36" : "28",
            { appName: p } = (0, V.useContext)(tK),
            h = tI();
          return r && (null == r ? void 0 : r.id)
            ? V.createElement(
                nE,
                { onClose: e, open: t, titleId: l },
                V.createElement(
                  nx,
                  { bottomSheetOnMobile: !0 },
                  V.createElement(
                    tt,
                    { display: "flex", flexDirection: "column", gap: "14" },
                    V.createElement(
                      tt,
                      {
                        display: "flex",
                        flexDirection: "row",
                        justifyContent: "space-between",
                      },
                      c && V.createElement(tt, { width: "30" }),
                      V.createElement(
                        tt,
                        {
                          paddingBottom: "0",
                          paddingLeft: "8",
                          paddingTop: "4",
                        },
                        V.createElement(
                          nn,
                          {
                            as: "h1",
                            color: "modalText",
                            id: l,
                            size: c ? "20" : "18",
                            weight: "heavy",
                          },
                          "Switch Networks"
                        )
                      ),
                      V.createElement(no, { onClose: e })
                    ),
                    d &&
                      V.createElement(
                        tt,
                        { marginX: "8", textAlign: c ? "center" : "left" },
                        V.createElement(
                          nn,
                          {
                            color: "modalTextSecondary",
                            size: "14",
                            weight: "medium",
                          },
                          "Wrong network detected, switch or disconnect to continue."
                        )
                      ),
                    V.createElement(
                      tt,
                      {
                        display: "flex",
                        flexDirection: "column",
                        gap: "4",
                        padding: "2",
                      },
                      s
                        ? h.map(
                            (
                              { iconBackground: e, iconUrl: t, id: n, name: o },
                              u
                            ) => {
                              let l = i.find((e) => e.id === n);
                              if (!l) return null;
                              let d = l.id === (null == r ? void 0 : r.id),
                                p = !d && l.id === a;
                              return V.createElement(
                                V.Fragment,
                                { key: l.id },
                                V.createElement(
                                  nq,
                                  {
                                    currentlySelected: d,
                                    onClick: d ? void 0 : () => s(l.id),
                                    testId: `chain-option-${l.id}`,
                                  },
                                  V.createElement(
                                    tt,
                                    {
                                      fontFamily: "body",
                                      fontSize: "16",
                                      fontWeight: "bold",
                                    },
                                    V.createElement(
                                      tt,
                                      {
                                        alignItems: "center",
                                        display: "flex",
                                        flexDirection: "row",
                                        justifyContent: "space-between",
                                      },
                                      V.createElement(
                                        tt,
                                        {
                                          alignItems: "center",
                                          display: "flex",
                                          flexDirection: "row",
                                          gap: "4",
                                          height: f,
                                        },
                                        t &&
                                          V.createElement(
                                            tt,
                                            {
                                              height: "full",
                                              marginRight: "8",
                                            },
                                            V.createElement(ts, {
                                              alt: null != o ? o : l.name,
                                              background: e,
                                              borderRadius: "full",
                                              height: f,
                                              src: t,
                                              width: f,
                                            })
                                          ),
                                        V.createElement(
                                          "div",
                                          null,
                                          null != o ? o : l.name
                                        )
                                      ),
                                      d &&
                                        V.createElement(
                                          tt,
                                          {
                                            alignItems: "center",
                                            display: "flex",
                                            flexDirection: "row",
                                            marginRight: "6",
                                          },
                                          V.createElement(
                                            nn,
                                            {
                                              color: "accentColorForeground",
                                              size: "14",
                                              weight: "medium",
                                            },
                                            "Connected"
                                          ),
                                          V.createElement(tt, {
                                            background: "connectionIndicator",
                                            borderColor: "selectedOptionBorder",
                                            borderRadius: "full",
                                            borderStyle: "solid",
                                            borderWidth: "1",
                                            height: "8",
                                            marginLeft: "8",
                                            width: "8",
                                          })
                                        ),
                                      p &&
                                        V.createElement(
                                          tt,
                                          {
                                            alignItems: "center",
                                            display: "flex",
                                            flexDirection: "row",
                                            marginRight: "6",
                                          },
                                          V.createElement(
                                            nn,
                                            {
                                              color: "modalText",
                                              size: "14",
                                              weight: "medium",
                                            },
                                            "Confirm in Wallet"
                                          ),
                                          V.createElement(tt, {
                                            background: "standby",
                                            borderRadius: "full",
                                            height: "8",
                                            marginLeft: "8",
                                            width: "8",
                                          })
                                        )
                                    )
                                  )
                                ),
                                c &&
                                  u < h.length - 1 &&
                                  V.createElement(tt, {
                                    background: "generalBorderDim",
                                    height: "1",
                                    marginX: "8",
                                  })
                              );
                            }
                          )
                        : V.createElement(
                            tt,
                            {
                              background: "generalBorder",
                              borderRadius: "menuButton",
                              paddingX: "18",
                              paddingY: "12",
                            },
                            V.createElement(
                              nn,
                              {
                                color: "modalText",
                                size: "14",
                                weight: "medium",
                              },
                              "Your wallet does not support switching networks from",
                              " ",
                              null != p ? p : "this app",
                              ". Try switching networks from within your wallet instead."
                            )
                          ),
                      d &&
                        V.createElement(
                          V.Fragment,
                          null,
                          V.createElement(tt, {
                            background: "generalBorderDim",
                            height: "1",
                            marginX: "8",
                          }),
                          V.createElement(
                            nq,
                            {
                              onClick: () => u(),
                              testId: "chain-option-disconnect",
                            },
                            V.createElement(
                              tt,
                              {
                                color: "error",
                                fontFamily: "body",
                                fontSize: "16",
                                fontWeight: "bold",
                              },
                              V.createElement(
                                tt,
                                {
                                  alignItems: "center",
                                  display: "flex",
                                  flexDirection: "row",
                                  justifyContent: "space-between",
                                },
                                V.createElement(
                                  tt,
                                  {
                                    alignItems: "center",
                                    display: "flex",
                                    flexDirection: "row",
                                    gap: "4",
                                    height: f,
                                  },
                                  V.createElement(
                                    tt,
                                    {
                                      alignItems: "center",
                                      color: "error",
                                      height: f,
                                      justifyContent: "center",
                                      marginRight: "8",
                                    },
                                    V.createElement(n$, { size: Number(f) })
                                  ),
                                  V.createElement("div", null, "Disconnect")
                                )
                              )
                            )
                          )
                        )
                    )
                  )
                )
              )
            : null;
        }
        nq.displayName = "MenuButton";
        var nz = ({ children: e, href: t }) =>
            V.createElement(
              tt,
              {
                as: "a",
                color: "accentColor",
                href: t,
                rel: "noreferrer",
                target: "_blank",
              },
              e
            ),
          nG = ({ children: e }) =>
            V.createElement(
              nn,
              { color: "modalTextSecondary", size: "12", weight: "medium" },
              e
            );
        function nW({ compactModeEnabled: e = !1, getWallet: t }) {
          let { disclaimer: n, learnMoreUrl: r } = (0, V.useContext)(tK);
          return V.createElement(
            V.Fragment,
            null,
            V.createElement(
              tt,
              {
                alignItems: "center",
                color: "accentColor",
                display: "flex",
                flexDirection: "column",
                height: "full",
                justifyContent: "space-around",
              },
              V.createElement(
                tt,
                { marginBottom: "10" },
                !e &&
                  V.createElement(
                    nn,
                    { color: "modalText", size: "18", weight: "heavy" },
                    "What is a Wallet?"
                  )
              ),
              V.createElement(
                tt,
                {
                  display: "flex",
                  flexDirection: "column",
                  gap: "32",
                  justifyContent: "center",
                  marginY: "20",
                  style: { maxWidth: 312 },
                },
                V.createElement(
                  tt,
                  {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "row",
                    gap: "16",
                  },
                  V.createElement(
                    tt,
                    {
                      borderRadius: "6",
                      height: "48",
                      minWidth: "48",
                      width: "48",
                    },
                    V.createElement(t7, null)
                  ),
                  V.createElement(
                    tt,
                    { display: "flex", flexDirection: "column", gap: "4" },
                    V.createElement(
                      nn,
                      { color: "modalText", size: "14", weight: "bold" },
                      "A Home for your Digital Assets"
                    ),
                    V.createElement(
                      nn,
                      {
                        color: "modalTextSecondary",
                        size: "14",
                        weight: "medium",
                      },
                      "Wallets are used to send, receive, store, and display digital assets like Ethereum and NFTs."
                    )
                  )
                ),
                V.createElement(
                  tt,
                  {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "row",
                    gap: "16",
                  },
                  V.createElement(
                    tt,
                    {
                      borderRadius: "6",
                      height: "48",
                      minWidth: "48",
                      width: "48",
                    },
                    V.createElement(nt, null)
                  ),
                  V.createElement(
                    tt,
                    { display: "flex", flexDirection: "column", gap: "4" },
                    V.createElement(
                      nn,
                      { color: "modalText", size: "14", weight: "bold" },
                      "A New Way to Log In"
                    ),
                    V.createElement(
                      nn,
                      {
                        color: "modalTextSecondary",
                        size: "14",
                        weight: "medium",
                      },
                      "Instead of creating new accounts and passwords on every website, just connect your wallet."
                    )
                  )
                )
              ),
              V.createElement(
                tt,
                {
                  alignItems: "center",
                  display: "flex",
                  flexDirection: "column",
                  gap: "12",
                  justifyContent: "center",
                  margin: "10",
                },
                V.createElement(ni, { label: "Get a Wallet", onClick: t }),
                V.createElement(
                  tt,
                  {
                    as: "a",
                    className: e2({ active: "shrink", hover: "grow" }),
                    display: "block",
                    href: r,
                    paddingX: "12",
                    paddingY: "4",
                    rel: "noreferrer",
                    style: { willChange: "transform" },
                    target: "_blank",
                    transition: "default",
                  },
                  V.createElement(
                    nn,
                    { color: "accentColor", size: "14", weight: "bold" },
                    "Learn More"
                  )
                )
              ),
              n &&
                !e &&
                V.createElement(
                  tt,
                  { marginBottom: "8", marginTop: "12", textAlign: "center" },
                  V.createElement(n, { Link: nz, Text: nG })
                )
            )
          );
        }
        var nV = () =>
            V.createElement(
              "svg",
              {
                fill: "none",
                height: "17",
                viewBox: "0 0 11 17",
                width: "11",
                xmlns: "http://www.w3.org/2000/svg",
              },
              V.createElement("path", {
                d: "M0.99707 8.6543C0.99707 9.08496 1.15527 9.44531 1.51562 9.79688L8.16016 16.3096C8.43262 16.5732 8.74902 16.7051 9.13574 16.7051C9.90918 16.7051 10.5508 16.0811 10.5508 15.3076C10.5508 14.9121 10.3838 14.5605 10.0938 14.2705L4.30176 8.64551L10.0938 3.0293C10.3838 2.74805 10.5508 2.3877 10.5508 2.00098C10.5508 1.23633 9.90918 0.603516 9.13574 0.603516C8.74902 0.603516 8.43262 0.735352 8.16016 0.999023L1.51562 7.51172C1.15527 7.85449 1.00586 8.21484 0.99707 8.6543Z",
                fill: "currentColor",
              })
            ),
          nK = () =>
            V.createElement(
              "svg",
              {
                fill: "none",
                height: "12",
                viewBox: "0 0 8 12",
                width: "8",
                xmlns: "http://www.w3.org/2000/svg",
              },
              V.createElement("path", {
                d: "M3.64258 7.99609C4.19336 7.99609 4.5625 7.73828 4.68555 7.24609C4.69141 7.21094 4.70312 7.16406 4.70898 7.13477C4.80859 6.60742 5.05469 6.35547 6.04492 5.76367C7.14648 5.10156 7.67969 4.3457 7.67969 3.24414C7.67969 1.39844 6.17383 0.255859 3.95898 0.255859C2.32422 0.255859 1.05859 0.894531 0.548828 1.86719C0.396484 2.14844 0.320312 2.44727 0.320312 2.74023C0.314453 3.37305 0.742188 3.79492 1.42188 3.79492C1.91406 3.79492 2.33594 3.54883 2.53516 3.11523C2.78711 2.47656 3.23242 2.21289 3.83594 2.21289C4.55664 2.21289 5.10742 2.65234 5.10742 3.29102C5.10742 3.9707 4.7793 4.29883 3.81836 4.87891C3.02148 5.36523 2.50586 5.92773 2.50586 6.76562V6.90039C2.50586 7.55664 2.96289 7.99609 3.64258 7.99609ZM3.67188 11.4473C4.42773 11.4473 5.04297 10.8672 5.04297 10.1406C5.04297 9.41406 4.42773 8.83984 3.67188 8.83984C2.91602 8.83984 2.30664 9.41406 2.30664 10.1406C2.30664 10.8672 2.91602 11.4473 3.67188 11.4473Z",
                fill: "currentColor",
              })
            ),
          nZ = ({ "aria-label": e = "Info", onClick: t }) => {
            let n = e7();
            return V.createElement(
              tt,
              {
                alignItems: "center",
                "aria-label": e,
                as: "button",
                background: "closeButtonBackground",
                borderColor: "actionButtonBorder",
                borderRadius: "full",
                borderStyle: "solid",
                borderWidth: n ? "0" : "1",
                className: e2({ active: "shrinkSm", hover: "growLg" }),
                color: "closeButton",
                display: "flex",
                height: n ? "30" : "28",
                justifyContent: "center",
                onClick: t,
                style: { willChange: "transform" },
                transition: "default",
                type: "button",
                width: n ? "30" : "28",
              },
              V.createElement(nK, null)
            );
          },
          nJ = (e) => {
            let t = (0, V.useRef)(null),
              n = (0, V.useContext)(tZ),
              r = to(e);
            return (
              (0, V.useEffect)(() => {
                if (n && t.current && r)
                  return (function (e, t) {
                    let n;
                    nX++;
                    let r = [15, 20, 25, 35, 45],
                      i = [],
                      a = !1,
                      o = 0,
                      s = 0,
                      u = nY();
                    !(function e() {
                      a &&
                        i.length < 35 &&
                        (function () {
                          let e = r[Math.floor(Math.random() * r.length)],
                            n = 360 * Math.random(),
                            a = s - e / 2,
                            l = o - e / 2,
                            c = document.createElement("div");
                          (c.innerHTML = `<img src="${t}" width="${e}" height="${e}" style="border-radius: 25%">`),
                            c.setAttribute(
                              "style",
                              `position:absolute;will-change:transform;top:${a}px;left:${l}px;transform:rotate(${n}deg)`
                            ),
                            u.appendChild(c),
                            i.push({
                              direction: 0.5 >= Math.random() ? -1 : 1,
                              element: c,
                              left: l,
                              size: e,
                              speedHorz: 10 * Math.random(),
                              speedUp: 25 * Math.random(),
                              spinSpeed:
                                35 *
                                Math.random() *
                                (0.5 >= Math.random() ? -1 : 1),
                              spinVal: n,
                              top: a,
                            });
                        })(),
                        i.forEach((e) => {
                          (e.left = e.left - e.speedHorz * e.direction),
                            (e.top = e.top - e.speedUp),
                            (e.speedUp = Math.min(e.size, e.speedUp - 1)),
                            (e.spinVal = e.spinVal + e.spinSpeed),
                            e.top >=
                              Math.max(
                                window.innerHeight,
                                document.body.clientHeight
                              ) +
                                e.size &&
                              ((i = i.filter((t) => t !== e)),
                              e.element.remove()),
                            e.element.setAttribute(
                              "style",
                              `position:absolute;will-change:transform;top:${e.top}px;left:${e.left}px;transform:rotate(${e.spinVal}deg)`
                            );
                        }),
                        (n = requestAnimationFrame(e));
                    })();
                    let l =
                        "ontouchstart" in window || navigator.msMaxTouchPoints,
                      c = l ? "touchstart" : "mousedown",
                      d = l ? "touchend" : "mouseup",
                      f = l ? "touchmove" : "mousemove",
                      p = (e) => {
                        var t, n;
                        "touches" in e
                          ? ((o =
                              null == (t = e.touches) ? void 0 : t[0].clientX),
                            (s =
                              null == (n = e.touches) ? void 0 : n[0].clientY))
                          : ((o = e.clientX), (s = e.clientY));
                      },
                      h = (e) => {
                        p(e), (a = !0);
                      },
                      m = () => {
                        a = !1;
                      };
                    return (
                      e.addEventListener(f, p, { passive: !1 }),
                      e.addEventListener(c, h),
                      e.addEventListener(d, m),
                      e.addEventListener("mouseleave", m),
                      () => {
                        e.removeEventListener(f, p),
                          e.removeEventListener(c, h),
                          e.removeEventListener(d, m),
                          e.removeEventListener("mouseleave", m);
                        let t = setInterval(() => {
                          n &&
                            0 === i.length &&
                            (cancelAnimationFrame(n),
                            clearInterval(t),
                            0 == --nX && u.remove());
                        }, 500);
                      }
                    );
                  })(t.current, r);
              }, [n, r]),
              t
            );
          },
          nY = () => {
            let e = "_rk_coolMode",
              t = document.getElementById(e);
            if (t) return t;
            let n = document.createElement("div");
            return (
              n.setAttribute("id", e),
              n.setAttribute(
                "style",
                "overflow:hidden;position:fixed;height:100%;top:0;left:0;right:0;bottom:0;pointer-events:none;z-index:2147483647"
              ),
              document.body.appendChild(n),
              n
            );
          },
          nX = 0,
          nQ = ({
            as: e = "button",
            currentlySelected: t = !1,
            iconBackground: n,
            iconUrl: r,
            name: i,
            onClick: a,
            ready: o,
            recent: s,
            testId: u,
            ...l
          }) => {
            let c = nJ(r),
              [d, f] = (0, V.useState)(!1);
            return V.createElement(
              tt,
              {
                display: "flex",
                flexDirection: "column",
                onMouseEnter: () => f(!0),
                onMouseLeave: () => f(!1),
                ref: c,
              },
              V.createElement(
                tt,
                {
                  as: e,
                  borderRadius: "menuButton",
                  borderStyle: "solid",
                  borderWidth: "1",
                  className: t ? void 0 : ["g5kl0l0", e2({ active: "shrink" })],
                  disabled: t,
                  onClick: a,
                  padding: "5",
                  style: { willChange: "transform" },
                  testId: u,
                  transition: "default",
                  width: "full",
                  ...(t
                    ? {
                        background: "accentColor",
                        borderColor: "selectedOptionBorder",
                        boxShadow: "selectedWallet",
                      }
                    : { background: { hover: "menuItemBackground" } }),
                  ...l,
                },
                V.createElement(
                  tt,
                  {
                    color: t ? "accentColorForeground" : "modalText",
                    disabled: !o,
                    fontFamily: "body",
                    fontSize: "16",
                    fontWeight: "bold",
                    transition: "default",
                  },
                  V.createElement(
                    tt,
                    {
                      alignItems: "center",
                      display: "flex",
                      flexDirection: "row",
                      gap: "12",
                    },
                    V.createElement(ts, {
                      background: n,
                      ...(d ? {} : { borderColor: "actionButtonBorder" }),
                      borderRadius: "6",
                      height: "28",
                      src: r,
                      width: "28",
                    }),
                    V.createElement(
                      tt,
                      null,
                      V.createElement(
                        tt,
                        { style: { marginTop: s ? -2 : void 0 } },
                        i
                      ),
                      s &&
                        V.createElement(
                          nn,
                          {
                            color: t ? "accentColorForeground" : "accentColor",
                            size: "12",
                            style: { lineHeight: 1, marginTop: -1 },
                            weight: "medium",
                          },
                          "Recent"
                        )
                    )
                  )
                )
              )
            );
          };
        nQ.displayName = "ModalSelection";
        var n0 = (e, t = 1) => {
            let n = e.replace("#", "");
            3 === n.length &&
              (n = `${n[0]}${n[0]}${n[1]}${n[1]}${n[2]}${n[2]}`);
            let r = parseInt(n.substring(0, 2), 16),
              i = parseInt(n.substring(2, 4), 16),
              a = parseInt(n.substring(4, 6), 16);
            return t > 1 && t <= 100 && (t /= 100), `rgba(${r},${i},${a},${t})`;
          },
          n1 = (e) => (e ? [n0(e, 0.2), n0(e, 0.14), n0(e, 0.1)] : null),
          n2 = (e) => /^#([0-9a-f]{3}){1,2}$/i.test(e),
          n6 = async () => (await n.e(8137).then(n.bind(n, 68137))).default,
          n3 = () => ta(n6),
          n5 = () =>
            V.createElement(ts, {
              background: "#e3a5e8",
              borderColor: "generalBorder",
              borderRadius: "10",
              height: "48",
              src: n6,
              width: "48",
            }),
          n4 = async () => (await n.e(1748).then(n.bind(n, 31748))).default,
          n8 = () => ta(n4),
          n7 = () =>
            V.createElement(ts, {
              background: "#515a70",
              borderColor: "generalBorder",
              borderRadius: "10",
              height: "48",
              src: n4,
              width: "48",
            }),
          n9 = async () => (await n.e(5806).then(n.bind(n, 75806))).default,
          re = () => ta(n9),
          rt = () =>
            V.createElement(ts, {
              background: "#515a70",
              borderColor: "generalBorder",
              borderRadius: "10",
              height: "48",
              src: n9,
              width: "48",
            }),
          rn = (e, t) => {
            let n = Array.prototype.slice.call(
                eZ.create(e, { errorCorrectionLevel: t }).modules.data,
                0
              ),
              r = Math.sqrt(n.length);
            return n.reduce(
              (e, t, n) =>
                (n % r == 0 ? e.push([t]) : e[e.length - 1].push(t)) && e,
              []
            );
          };
        function rr({
          ecl: e = "M",
          logoBackground: t,
          logoMargin: n = 10,
          logoSize: r = 50,
          logoUrl: i,
          size: a = 200,
          uri: o,
        }) {
          let s = a - 2 * parseInt("20", 10),
            u = (0, V.useMemo)(() => {
              let t = [],
                n = rn(o, e),
                i = s / n.length;
              [
                { x: 0, y: 0 },
                { x: 1, y: 0 },
                { x: 0, y: 1 },
              ].forEach(({ x: e, y: r }) => {
                let a = (n.length - 7) * i * e,
                  o = (n.length - 7) * i * r;
                for (let n = 0; n < 3; n++)
                  t.push(
                    V.createElement("rect", {
                      fill: n % 2 != 0 ? "white" : "black",
                      height: i * (7 - 2 * n),
                      key: `${n}-${e}-${r}`,
                      rx: -((n - 2) * 5) + (0 === n ? 2 : 0),
                      ry: -((n - 2) * 5) + (0 === n ? 2 : 0),
                      width: i * (7 - 2 * n),
                      x: a + i * n,
                      y: o + i * n,
                    })
                  );
              });
              let a = Math.floor((r + 25) / i),
                u = n.length / 2 - a / 2,
                l = n.length / 2 + a / 2 - 1;
              return (
                n.forEach((e, r) => {
                  e.forEach((e, a) => {
                    !n[r][a] ||
                      (r < 7 && a < 7) ||
                      (r > n.length - 8 && a < 7) ||
                      (r < 7 && a > n.length - 8) ||
                      (r > u && r < l && a > u && a < l) ||
                      t.push(
                        V.createElement("circle", {
                          cx: r * i + i / 2,
                          cy: a * i + i / 2,
                          fill: "black",
                          key: `circle-${r}-${a}`,
                          r: i / 3,
                        })
                      );
                  });
                }),
                t
              );
            }, [e, r, s, o]),
            l = s / 2 - r / 2,
            c = r + 2 * n;
          return V.createElement(
            tt,
            {
              borderColor: "generalBorder",
              borderRadius: "menuButton",
              borderStyle: "solid",
              borderWidth: "1",
              className: "_1vwt0cg0",
              padding: "20",
              width: "max",
            },
            V.createElement(
              tt,
              {
                style: { height: s, userSelect: "none", width: s },
                userSelect: "none",
              },
              V.createElement(
                tt,
                {
                  display: "flex",
                  justifyContent: "center",
                  position: "relative",
                  style: { height: 0, top: l, width: s },
                  width: "full",
                },
                V.createElement(ts, {
                  background: t,
                  borderColor: { custom: "rgba(0, 0, 0, 0.06)" },
                  borderRadius: "13",
                  height: r,
                  src: i,
                  width: r,
                })
              ),
              V.createElement(
                "svg",
                { height: s, style: { all: "revert" }, width: s },
                V.createElement(
                  "defs",
                  null,
                  V.createElement(
                    "clipPath",
                    { id: "clip-wrapper" },
                    V.createElement("rect", { height: c, width: c })
                  ),
                  V.createElement(
                    "clipPath",
                    { id: "clip-logo" },
                    V.createElement("rect", { height: r, width: r })
                  )
                ),
                V.createElement("rect", {
                  fill: "transparent",
                  height: s,
                  width: s,
                }),
                u
              )
            )
          );
        }
        var ri = async () => {
            let e = t0();
            switch (e) {
              case "Arc":
                return (await n.e(6328).then(n.bind(n, 76328))).default;
              case "Brave":
                return (await n.e(6551).then(n.bind(n, 86551))).default;
              case "Chrome":
                return (await n.e(7682).then(n.bind(n, 57682))).default;
              case "Edge":
                return (await n.e(934).then(n.bind(n, 60934))).default;
              case "Firefox":
                return (await n.e(9223).then(n.bind(n, 99223))).default;
              case "Opera":
                return (await n.e(9941).then(n.bind(n, 89941))).default;
              case "Safari":
                return (await n.e(2604).then(n.bind(n, 62604))).default;
              default:
                return (await n.e(2746).then(n.bind(n, 92746))).default;
            }
          },
          ra = () => ta(ri);
        function ro({ getWalletDownload: e }) {
          let t = t5(),
            n = t.splice(0, 5);
          return V.createElement(
            tt,
            {
              alignItems: "center",
              display: "flex",
              flexDirection: "column",
              height: "full",
              marginTop: "18",
              width: "full",
            },
            V.createElement(
              tt,
              {
                alignItems: "center",
                display: "flex",
                flexDirection: "column",
                gap: "28",
                height: "full",
                width: "full",
              },
              null == n
                ? void 0
                : n
                    .filter((e) => {
                      var t;
                      return (
                        e.extensionDownloadUrl ||
                        (e.qrCode &&
                          (null == (t = e.downloadUrls) ? void 0 : t.qrCode))
                      );
                    })
                    .map((t) => {
                      let {
                          downloadUrls: n,
                          iconBackground: r,
                          iconUrl: i,
                          id: a,
                          name: o,
                          qrCode: s,
                        } = t,
                        u = (null == n ? void 0 : n.qrCode) && s,
                        l = !!t.extensionDownloadUrl,
                        c = (null == n ? void 0 : n.qrCode) && l;
                      return V.createElement(
                        tt,
                        {
                          alignItems: "center",
                          display: "flex",
                          gap: "16",
                          justifyContent: "space-between",
                          key: t.id,
                          width: "full",
                        },
                        V.createElement(
                          tt,
                          {
                            alignItems: "center",
                            display: "flex",
                            flexDirection: "row",
                            gap: "16",
                          },
                          V.createElement(ts, {
                            background: r,
                            borderColor: "actionButtonBorder",
                            borderRadius: "10",
                            height: "48",
                            src: i,
                            width: "48",
                          }),
                          V.createElement(
                            tt,
                            {
                              display: "flex",
                              flexDirection: "column",
                              gap: "2",
                            },
                            V.createElement(
                              nn,
                              {
                                color: "modalText",
                                size: "14",
                                weight: "bold",
                              },
                              o
                            ),
                            V.createElement(
                              nn,
                              {
                                color: "modalTextSecondary",
                                size: "14",
                                weight: "medium",
                              },
                              c
                                ? "Mobile Wallet and Extension"
                                : u
                                ? "Mobile Wallet"
                                : l
                                ? "Browser Extension"
                                : null
                            )
                          )
                        ),
                        V.createElement(
                          tt,
                          {
                            display: "flex",
                            flexDirection: "column",
                            gap: "4",
                          },
                          V.createElement(ni, {
                            label: "GET",
                            onClick: () => e(a),
                            type: "secondary",
                          })
                        )
                      );
                    })
            ),
            V.createElement(
              tt,
              {
                alignItems: "center",
                borderRadius: "10",
                display: "flex",
                flexDirection: "column",
                gap: "8",
                justifyContent: "space-between",
                marginBottom: "4",
                paddingY: "8",
                style: { maxWidth: 275, textAlign: "center" },
              },
              V.createElement(
                nn,
                { color: "modalText", size: "14", weight: "bold" },
                "Not what you’re looking for?"
              ),
              V.createElement(
                nn,
                { color: "modalTextSecondary", size: "14", weight: "medium" },
                "Select a wallet on the left to get started with a different wallet provider."
              )
            )
          );
        }
        function rs({
          changeWalletStep: e,
          compactModeEnabled: t,
          connectionError: n,
          onClose: r,
          qrCodeUri: i,
          reconnect: a,
          wallet: o,
        }) {
          var s;
          let {
              downloadUrls: u,
              iconBackground: l,
              iconUrl: c,
              name: d,
              qrCode: f,
              ready: p,
              showWalletConnectModal: h,
            } = o,
            m = null == (s = o.desktop) ? void 0 : s.getUri,
            y = tQ(),
            g = !!o.extensionDownloadUrl,
            b = (null == u ? void 0 : u.qrCode) && g,
            v = f && i,
            w = h
              ? {
                  description: `Need the ${
                    t ? "" : "official"
                  } WalletConnect modal?`,
                  label: "OPEN",
                  onClick: () => {
                    r(), h();
                  },
                }
              : v
              ? {
                  description: `Don\u2019t have ${d}?`,
                  label: "GET",
                  onClick: () => e(b ? "DOWNLOAD_OPTIONS" : "DOWNLOAD"),
                }
              : null,
            { width: E } = tW();
          return (
            (0, V.useEffect)(() => {
              ra();
            }, []),
            V.createElement(
              tt,
              {
                display: "flex",
                flexDirection: "column",
                height: "full",
                width: "full",
              },
              v
                ? V.createElement(
                    tt,
                    {
                      alignItems: "center",
                      display: "flex",
                      height: "full",
                      justifyContent: "center",
                    },
                    V.createElement(rr, {
                      logoBackground: l,
                      logoSize: t ? 60 : 72,
                      logoUrl: c,
                      size: t
                        ? 318
                        : E && E < 768
                        ? Math.max(280, Math.min(E - 308, 382))
                        : 382,
                      uri: i,
                    })
                  )
                : V.createElement(
                    tt,
                    {
                      alignItems: "center",
                      display: "flex",
                      justifyContent: "center",
                      style: { flexGrow: 1 },
                    },
                    V.createElement(
                      tt,
                      {
                        alignItems: "center",
                        display: "flex",
                        flexDirection: "column",
                        gap: "8",
                      },
                      V.createElement(
                        tt,
                        {
                          borderRadius: "10",
                          height: "44",
                          overflow: "hidden",
                        },
                        V.createElement(ts, {
                          height: "44",
                          src: c,
                          width: "44",
                        })
                      ),
                      V.createElement(
                        tt,
                        {
                          alignItems: "center",
                          display: "flex",
                          flexDirection: "column",
                          gap: "4",
                          paddingX: "32",
                          style: { textAlign: "center" },
                        },
                        V.createElement(
                          nn,
                          { color: "modalText", size: "18", weight: "bold" },
                          p
                            ? `Opening ${d}...`
                            : g
                            ? `${d} is not installed`
                            : `${d} is not available`
                        ),
                        !p && g
                          ? V.createElement(
                              tt,
                              { paddingTop: "20" },
                              V.createElement(ni, {
                                href: o.extensionDownloadUrl,
                                label: "INSTALL",
                                type: "secondary",
                              })
                            )
                          : null,
                        p &&
                          !v &&
                          V.createElement(
                            V.Fragment,
                            null,
                            V.createElement(
                              tt,
                              {
                                alignItems: "center",
                                display: "flex",
                                flexDirection: "column",
                                justifyContent: "center",
                              },
                              V.createElement(
                                nn,
                                {
                                  color: "modalTextSecondary",
                                  size: "14",
                                  textAlign: "center",
                                  weight: "medium",
                                },
                                "Confirm connection in the extension"
                              )
                            ),
                            V.createElement(
                              tt,
                              {
                                alignItems: "center",
                                color: "modalText",
                                display: "flex",
                                flexDirection: "row",
                                height: "32",
                                marginTop: "8",
                              },
                              n
                                ? V.createElement(ni, {
                                    label: "RETRY",
                                    onClick: m
                                      ? async () => {
                                          let e = await m();
                                          window.open(
                                            e,
                                            y ? "_blank" : "_self"
                                          );
                                        }
                                      : () => {
                                          a(o);
                                        },
                                  })
                                : V.createElement(
                                    tt,
                                    { color: "modalTextSecondary" },
                                    V.createElement(tl, null)
                                  )
                            )
                          )
                      )
                    )
                  ),
              V.createElement(
                tt,
                {
                  alignItems: "center",
                  borderRadius: "10",
                  display: "flex",
                  flexDirection: "row",
                  gap: "8",
                  height: "28",
                  justifyContent: "space-between",
                  marginTop: "12",
                },
                p &&
                  w &&
                  V.createElement(
                    V.Fragment,
                    null,
                    V.createElement(
                      nn,
                      {
                        color: "modalTextSecondary",
                        size: "14",
                        weight: "medium",
                      },
                      w.description
                    ),
                    V.createElement(ni, {
                      label: w.label,
                      onClick: w.onClick,
                      type: "secondary",
                    })
                  )
              )
            )
          );
        }
        var ru = ({
          actionLabel: e,
          description: t,
          iconAccent: n,
          iconBackground: r,
          iconUrl: i,
          isCompact: a,
          onAction: o,
          title: s,
          url: u,
          variant: l,
        }) => {
          let c = "browser" === l,
            d = !c && n && n1(n);
          return V.createElement(
            tt,
            {
              alignItems: "center",
              borderRadius: "13",
              display: "flex",
              justifyContent: "center",
              overflow: "hidden",
              paddingX: a ? "18" : "44",
              position: "relative",
              style: { flex: 1, isolation: "isolate" },
              width: "full",
            },
            V.createElement(tt, {
              borderColor: "actionButtonBorder",
              borderRadius: "13",
              borderStyle: "solid",
              borderWidth: "1",
              style: {
                bottom: "0",
                left: "0",
                position: "absolute",
                right: "0",
                top: "0",
                zIndex: 1,
              },
            }),
            c &&
              V.createElement(
                tt,
                {
                  background: "downloadTopCardBackground",
                  height: "full",
                  position: "absolute",
                  style: { zIndex: 0 },
                  width: "full",
                },
                V.createElement(
                  tt,
                  {
                    display: "flex",
                    flexDirection: "row",
                    justifyContent: "space-between",
                    style: {
                      bottom: "0",
                      filter: "blur(20px)",
                      left: "0",
                      position: "absolute",
                      right: "0",
                      top: "0",
                      transform: "translate3d(0, 0, 0)",
                    },
                  },
                  V.createElement(
                    tt,
                    {
                      style: {
                        filter: "blur(100px)",
                        marginLeft: -27,
                        marginTop: -20,
                        opacity: 0.6,
                        transform: "translate3d(0, 0, 0)",
                      },
                    },
                    V.createElement(ts, {
                      borderRadius: "full",
                      height: "200",
                      src: i,
                      width: "200",
                    })
                  ),
                  V.createElement(
                    tt,
                    {
                      style: {
                        filter: "blur(100px)",
                        marginRight: 0,
                        marginTop: 105,
                        opacity: 0.6,
                        overflow: "auto",
                        transform: "translate3d(0, 0, 0)",
                      },
                    },
                    V.createElement(ts, {
                      borderRadius: "full",
                      height: "200",
                      src: i,
                      width: "200",
                    })
                  )
                )
              ),
            !c &&
              d &&
              V.createElement(
                tt,
                {
                  background: "downloadBottomCardBackground",
                  style: {
                    bottom: "0",
                    left: "0",
                    position: "absolute",
                    right: "0",
                    top: "0",
                  },
                },
                V.createElement(tt, {
                  position: "absolute",
                  style: {
                    background: `radial-gradient(50% 50% at 50% 50%, ${d[0]} 0%, ${d[1]} 25%, rgba(0,0,0,0) 100%)`,
                    height: 564,
                    left: -215,
                    top: -197,
                    transform: "translate3d(0, 0, 0)",
                    width: 564,
                  },
                }),
                V.createElement(tt, {
                  position: "absolute",
                  style: {
                    background: `radial-gradient(50% 50% at 50% 50%, ${d[2]} 0%, rgba(0, 0, 0, 0) 100%)`,
                    height: 564,
                    left: -1,
                    top: -76,
                    transform: "translate3d(0, 0, 0)",
                    width: 564,
                  },
                })
              ),
            V.createElement(
              tt,
              {
                alignItems: "flex-start",
                display: "flex",
                flexDirection: "row",
                gap: "24",
                height: "max",
                justifyContent: "center",
                style: { zIndex: 1 },
              },
              V.createElement(
                tt,
                null,
                V.createElement(ts, {
                  height: "60",
                  src: i,
                  width: "60",
                  ...(r
                    ? {
                        background: r,
                        borderColor: "generalBorder",
                        borderRadius: "10",
                      }
                    : null),
                })
              ),
              V.createElement(
                tt,
                {
                  display: "flex",
                  flexDirection: "column",
                  gap: "4",
                  style: { flex: 1 },
                  width: "full",
                },
                V.createElement(
                  nn,
                  { color: "modalText", size: "14", weight: "bold" },
                  s
                ),
                V.createElement(
                  nn,
                  { color: "modalTextSecondary", size: "14", weight: "medium" },
                  t
                ),
                V.createElement(
                  tt,
                  { marginTop: "14", width: "max" },
                  V.createElement(ni, {
                    href: u,
                    label: e,
                    onClick: o,
                    size: "medium",
                  })
                )
              )
            )
          );
        };
        function rl({ changeWalletStep: e, wallet: t }) {
          let n = t0(),
            r = (0, V.useContext)(tY),
            i = "compact" === r,
            { extension: a, extensionDownloadUrl: o, mobileDownloadUrl: s } = t;
          return (
            (0, V.useEffect)(() => {
              n3(), re(), n8();
            }, []),
            V.createElement(
              tt,
              {
                alignItems: "center",
                display: "flex",
                flexDirection: "column",
                gap: "24",
                height: "full",
                marginBottom: "8",
                marginTop: "4",
                width: "full",
              },
              V.createElement(
                tt,
                {
                  alignItems: "center",
                  display: "flex",
                  flexDirection: "column",
                  gap: "8",
                  height: "full",
                  justifyContent: "center",
                  width: "full",
                },
                o &&
                  V.createElement(ru, {
                    actionLabel: `Add to ${n}`,
                    description:
                      "Access your wallet right from your favorite web browser.",
                    iconUrl: ri,
                    isCompact: i,
                    onAction: () =>
                      e(
                        (null == a ? void 0 : a.instructions)
                          ? "INSTRUCTIONS_EXTENSION"
                          : "CONNECT"
                      ),
                    title: `${t.name} for ${n}`,
                    url: o,
                    variant: "browser",
                  }),
                s &&
                  V.createElement(ru, {
                    actionLabel: "Get the app",
                    description:
                      "Use the mobile wallet to explore the world of Ethereum.",
                    iconAccent: t.iconAccent,
                    iconBackground: t.iconBackground,
                    iconUrl: t.iconUrl,
                    isCompact: i,
                    onAction: () => {
                      e("DOWNLOAD");
                    },
                    title: `${t.name} for Mobile`,
                    variant: "app",
                  })
              )
            )
          );
        }
        function rc({ changeWalletStep: e, wallet: t }) {
          let { downloadUrls: n, qrCode: r } = t;
          return (
            (0, V.useEffect)(() => {
              n3(), re();
            }, []),
            V.createElement(
              tt,
              {
                alignItems: "center",
                display: "flex",
                flexDirection: "column",
                gap: "24",
                height: "full",
                width: "full",
              },
              V.createElement(
                tt,
                { style: { maxWidth: 220, textAlign: "center" } },
                V.createElement(
                  nn,
                  {
                    color: "modalTextSecondary",
                    size: "14",
                    weight: "semibold",
                  },
                  "Scan with your phone to download on iOS or Android"
                )
              ),
              V.createElement(
                tt,
                { height: "full" },
                (null == n ? void 0 : n.qrCode)
                  ? V.createElement(rr, {
                      logoSize: 0,
                      size: 268,
                      uri: n.qrCode,
                    })
                  : null
              ),
              V.createElement(
                tt,
                {
                  alignItems: "center",
                  borderRadius: "10",
                  display: "flex",
                  flexDirection: "row",
                  gap: "8",
                  height: "34",
                  justifyContent: "space-between",
                  marginBottom: "12",
                  paddingY: "8",
                },
                V.createElement(ni, {
                  label: "Continue",
                  onClick: () =>
                    e(
                      (null == r ? void 0 : r.instructions)
                        ? "INSTRUCTIONS_MOBILE"
                        : "CONNECT"
                    ),
                })
              )
            )
          );
        }
        var rd = {
          create: () => V.createElement(n5, null),
          install: (e) =>
            V.createElement(ts, {
              background: e.iconBackground,
              borderColor: "generalBorder",
              borderRadius: "10",
              height: "48",
              src: e.iconUrl,
              width: "48",
            }),
          refresh: () => V.createElement(n7, null),
          scan: () => V.createElement(rt, null),
        };
        function rf({ connectWallet: e, wallet: t }) {
          var n, r, i, a;
          return V.createElement(
            tt,
            {
              alignItems: "center",
              display: "flex",
              flexDirection: "column",
              height: "full",
              width: "full",
            },
            V.createElement(
              tt,
              {
                display: "flex",
                flexDirection: "column",
                gap: "28",
                height: "full",
                justifyContent: "center",
                paddingY: "32",
                style: { maxWidth: 320 },
              },
              null ==
                (r =
                  null == (n = null == t ? void 0 : t.qrCode)
                    ? void 0
                    : n.instructions)
                ? void 0
                : r.steps.map((e, n) => {
                    var r;
                    return V.createElement(
                      tt,
                      {
                        alignItems: "center",
                        display: "flex",
                        flexDirection: "row",
                        gap: "16",
                        key: n,
                      },
                      V.createElement(
                        tt,
                        {
                          borderRadius: "10",
                          height: "48",
                          minWidth: "48",
                          overflow: "hidden",
                          position: "relative",
                          width: "48",
                        },
                        null == (r = rd[e.step]) ? void 0 : r.call(rd, t)
                      ),
                      V.createElement(
                        tt,
                        { display: "flex", flexDirection: "column", gap: "4" },
                        V.createElement(
                          nn,
                          { color: "modalText", size: "14", weight: "bold" },
                          e.title
                        ),
                        V.createElement(
                          nn,
                          {
                            color: "modalTextSecondary",
                            size: "14",
                            weight: "medium",
                          },
                          e.description
                        )
                      )
                    );
                  })
            ),
            V.createElement(
              tt,
              {
                alignItems: "center",
                display: "flex",
                flexDirection: "column",
                gap: "12",
                justifyContent: "center",
                marginBottom: "16",
              },
              V.createElement(ni, { label: "Connect", onClick: () => e(t) }),
              V.createElement(
                tt,
                {
                  as: "a",
                  className: e2({ active: "shrink", hover: "grow" }),
                  display: "block",
                  href:
                    null ==
                    (a =
                      null == (i = null == t ? void 0 : t.qrCode)
                        ? void 0
                        : i.instructions)
                      ? void 0
                      : a.learnMoreUrl,
                  paddingX: "12",
                  paddingY: "4",
                  rel: "noreferrer",
                  style: { willChange: "transform" },
                  target: "_blank",
                  transition: "default",
                },
                V.createElement(
                  nn,
                  { color: "accentColor", size: "14", weight: "bold" },
                  "Learn More"
                )
              )
            )
          );
        }
        function rp({ wallet: e }) {
          var t, n, r, i;
          return V.createElement(
            tt,
            {
              alignItems: "center",
              display: "flex",
              flexDirection: "column",
              height: "full",
              width: "full",
            },
            V.createElement(
              tt,
              {
                display: "flex",
                flexDirection: "column",
                gap: "28",
                height: "full",
                justifyContent: "center",
                paddingY: "32",
                style: { maxWidth: 320 },
              },
              null ==
                (n =
                  null == (t = null == e ? void 0 : e.extension)
                    ? void 0
                    : t.instructions)
                ? void 0
                : n.steps.map((t, n) => {
                    var r;
                    return V.createElement(
                      tt,
                      {
                        alignItems: "center",
                        display: "flex",
                        flexDirection: "row",
                        gap: "16",
                        key: n,
                      },
                      V.createElement(
                        tt,
                        {
                          borderRadius: "10",
                          height: "48",
                          minWidth: "48",
                          overflow: "hidden",
                          position: "relative",
                          width: "48",
                        },
                        null == (r = rd[t.step]) ? void 0 : r.call(rd, e)
                      ),
                      V.createElement(
                        tt,
                        { display: "flex", flexDirection: "column", gap: "4" },
                        V.createElement(
                          nn,
                          { color: "modalText", size: "14", weight: "bold" },
                          t.title
                        ),
                        V.createElement(
                          nn,
                          {
                            color: "modalTextSecondary",
                            size: "14",
                            weight: "medium",
                          },
                          t.description
                        )
                      )
                    );
                  })
            ),
            V.createElement(
              tt,
              {
                alignItems: "center",
                display: "flex",
                flexDirection: "column",
                gap: "12",
                justifyContent: "center",
                marginBottom: "16",
              },
              V.createElement(ni, {
                label: "Refresh",
                onClick: window.location.reload.bind(window.location),
              }),
              V.createElement(
                tt,
                {
                  as: "a",
                  className: e2({ active: "shrink", hover: "grow" }),
                  display: "block",
                  href:
                    null ==
                    (i =
                      null == (r = null == e ? void 0 : e.extension)
                        ? void 0
                        : r.instructions)
                      ? void 0
                      : i.learnMoreUrl,
                  paddingX: "12",
                  paddingY: "4",
                  rel: "noreferrer",
                  style: { willChange: "transform" },
                  target: "_blank",
                  transition: "default",
                },
                V.createElement(
                  nn,
                  { color: "accentColor", size: "14", weight: "bold" },
                  "Learn More"
                )
              )
            )
          );
        }
        function rh({ onClose: e }) {
          let t;
          let n = tQ(),
            [r, i] = (0, V.useState)(),
            [a, o] = (0, V.useState)(),
            [s, u] = (0, V.useState)(),
            l = !!(null == a ? void 0 : a.qrCode) && s,
            [c, d] = (0, V.useState)(!1),
            f = (0, V.useContext)(tY),
            p = f === tJ.COMPACT,
            { disclaimer: h } = (0, V.useContext)(tK),
            m = t5()
              .filter((e) => e.ready || !!e.extensionDownloadUrl)
              .sort((e, t) => e.groupIndex - t.groupIndex),
            y = (function (e, t) {
              let n = {};
              return (
                e.forEach((e) => {
                  let r = t(e);
                  r && (n[r] || (n[r] = []), n[r].push(e));
                }),
                n
              );
            })(m, (e) => e.groupName),
            g = (e) => {
              var t, r, i;
              if ((d(!1), e.ready)) {
                null ==
                  (r =
                    null == (t = null == e ? void 0 : e.connect)
                      ? void 0
                      : t.call(e)) ||
                  r.catch(() => {
                    d(!0);
                  });
                let a = null == (i = e.desktop) ? void 0 : i.getUri;
                a &&
                  setTimeout(async () => {
                    let e = await a();
                    window.open(e, n ? "_blank" : "_self");
                  }, 0);
              }
            },
            b = (e) => {
              var t;
              if ((g(e), i(e.id), e.ready)) {
                let n = !1;
                null == (t = null == e ? void 0 : e.onConnecting) ||
                  t.call(e, async () => {
                    var t, r;
                    if (n) return;
                    n = !0;
                    let i = m.find((t) => e.id === t.id),
                      a = await (null == (t = null == i ? void 0 : i.qrCode)
                        ? void 0
                        : t.getUri());
                    u(a),
                      setTimeout(
                        () => {
                          o(i), w("CONNECT");
                        },
                        a ? 0 : 50
                      );
                    let s = await (null == i
                        ? void 0
                        : i.connector.getProvider()),
                      l =
                        null == (r = null == s ? void 0 : s.signer)
                          ? void 0
                          : r.connection;
                    if (
                      (null == l ? void 0 : l.on) &&
                      (null == l ? void 0 : l.off)
                    ) {
                      let t = () => {
                          n(), b(e);
                        },
                        n = () => {
                          l.off("close", t), l.off("open", n);
                        };
                      l.on("close", t), l.on("open", n);
                    }
                  });
              } else
                o(e),
                  w(
                    (null == e ? void 0 : e.extensionDownloadUrl)
                      ? "DOWNLOAD_OPTIONS"
                      : "CONNECT"
                  );
            },
            v = () => {
              i(void 0), o(void 0), u(void 0);
            },
            w = (e, t = !1) => {
              t && "GET" === e && "GET" === E
                ? v()
                : t || "GET" !== e
                ? t || "CONNECT" !== e || x("CONNECT")
                : x("GET"),
                _(e);
            },
            [E, x] = (0, V.useState)("NONE"),
            [C, _] = (0, V.useState)("NONE"),
            T = null,
            S = null,
            P = null;
          (0, V.useEffect)(() => {
            d(!1);
          }, [C, a]);
          let O = !!(null == a ? void 0 : a.extensionDownloadUrl),
            I = !!(O && (null == a ? void 0 : a.mobileDownloadUrl));
          switch (C) {
            case "NONE":
              T = V.createElement(nW, { getWallet: () => w("GET") });
              break;
            case "LEARN_COMPACT":
              (T = V.createElement(nW, {
                compactModeEnabled: p,
                getWallet: () => w("GET"),
              })),
                (S = "What is a Wallet?"),
                (P = "NONE");
              break;
            case "GET":
              (T = V.createElement(ro, {
                getWalletDownload: (e) => {
                  var t;
                  i(e);
                  let n = m.find((t) => e === t.id),
                    r =
                      null == (t = null == n ? void 0 : n.downloadUrls)
                        ? void 0
                        : t.qrCode,
                    a = !!(null == n ? void 0 : n.extensionDownloadUrl);
                  o(n),
                    r && a
                      ? w("DOWNLOAD_OPTIONS")
                      : r
                      ? w("DOWNLOAD")
                      : w("INSTRUCTIONS_EXTENSION");
                },
              })),
                (S = "Get a Wallet"),
                (P = p ? "LEARN_COMPACT" : "NONE");
              break;
            case "CONNECT":
              (T =
                a &&
                V.createElement(rs, {
                  changeWalletStep: w,
                  compactModeEnabled: p,
                  connectionError: c,
                  onClose: e,
                  qrCodeUri: s,
                  reconnect: g,
                  wallet: a,
                })),
                (S =
                  l &&
                  `Scan with ${
                    "WalletConnect" === a.name ? "your phone" : a.name
                  }`),
                (P = p ? "NONE" : null),
                (t = p ? v : () => {});
              break;
            case "DOWNLOAD_OPTIONS":
              (T =
                a && V.createElement(rl, { changeWalletStep: w, wallet: a })),
                (S = a && `Get ${a.name}`),
                (P = I ? E : null);
              break;
            case "DOWNLOAD":
              (T =
                a && V.createElement(rc, { changeWalletStep: w, wallet: a })),
                (S = a && `Install ${a.name}`),
                (P = I ? "DOWNLOAD_OPTIONS" : E);
              break;
            case "INSTRUCTIONS_MOBILE":
              (T = a && V.createElement(rf, { connectWallet: b, wallet: a })),
                (S = a && `Get started with ${(p && a.shortName) || a.name}`),
                (P = "DOWNLOAD");
              break;
            case "INSTRUCTIONS_EXTENSION":
              (T = a && V.createElement(rp, { wallet: a })),
                (S = a && `Get started with ${(p && a.shortName) || a.name}`),
                (P = "DOWNLOAD_OPTIONS");
          }
          return V.createElement(
            tt,
            {
              display: "flex",
              flexDirection: "row",
              style: { maxHeight: p ? 468 : 504 },
            },
            (!p || "NONE" === C) &&
              V.createElement(
                tt,
                {
                  className: p ? "_1vwt0cg4" : "_1vwt0cg3",
                  display: "flex",
                  flexDirection: "column",
                  marginTop: "16",
                },
                V.createElement(
                  tt,
                  { display: "flex", justifyContent: "space-between" },
                  p &&
                    h &&
                    V.createElement(
                      tt,
                      { marginLeft: "16", width: "28" },
                      V.createElement(nZ, { onClick: () => w("LEARN_COMPACT") })
                    ),
                  p &&
                    !h &&
                    V.createElement(tt, { marginLeft: "16", width: "28" }),
                  V.createElement(
                    tt,
                    {
                      marginLeft: p ? "0" : "6",
                      paddingBottom: "8",
                      paddingTop: "2",
                      paddingX: "18",
                    },
                    V.createElement(
                      nn,
                      {
                        as: "h1",
                        color: "modalText",
                        id: "rk_connect_title",
                        size: "18",
                        weight: "heavy",
                      },
                      "Connect a Wallet"
                    )
                  ),
                  p &&
                    V.createElement(
                      tt,
                      { marginRight: "16" },
                      V.createElement(no, { onClose: e })
                    )
                ),
                V.createElement(
                  tt,
                  {
                    className: "_1vwt0cg2 ju367v75 ju367v7q",
                    paddingBottom: "18",
                  },
                  Object.entries(y).map(
                    ([e, t], n) =>
                      t.length > 0 &&
                      V.createElement(
                        V.Fragment,
                        { key: n },
                        e
                          ? V.createElement(
                              tt,
                              {
                                marginBottom: "8",
                                marginTop: "16",
                                marginX: "6",
                              },
                              V.createElement(
                                nn,
                                {
                                  color: "modalTextSecondary",
                                  size: "14",
                                  weight: "bold",
                                },
                                e
                              )
                            )
                          : null,
                        V.createElement(
                          tt,
                          {
                            display: "flex",
                            flexDirection: "column",
                            gap: "4",
                          },
                          t.map((e) =>
                            V.createElement(nQ, {
                              currentlySelected: e.id === r,
                              iconBackground: e.iconBackground,
                              iconUrl: e.iconUrl,
                              key: e.id,
                              name: e.name,
                              onClick: () => b(e),
                              ready: e.ready,
                              recent: e.recent,
                              testId: `wallet-option-${e.id}`,
                            })
                          )
                        )
                      )
                  )
                ),
                p &&
                  V.createElement(
                    V.Fragment,
                    null,
                    V.createElement(tt, {
                      background: "generalBorder",
                      height: "1",
                      marginTop: "-1",
                    }),
                    h
                      ? V.createElement(
                          tt,
                          {
                            paddingX: "24",
                            paddingY: "16",
                            textAlign: "center",
                          },
                          V.createElement(h, { Link: nz, Text: nG })
                        )
                      : V.createElement(
                          tt,
                          {
                            alignItems: "center",
                            display: "flex",
                            justifyContent: "space-between",
                            paddingX: "24",
                            paddingY: "16",
                          },
                          V.createElement(
                            tt,
                            { paddingY: "4" },
                            V.createElement(
                              nn,
                              {
                                color: "modalTextSecondary",
                                size: "14",
                                weight: "medium",
                              },
                              "New to Ethereum wallets?"
                            )
                          ),
                          V.createElement(
                            tt,
                            {
                              alignItems: "center",
                              display: "flex",
                              flexDirection: "row",
                              gap: "4",
                              justifyContent: "center",
                            },
                            V.createElement(
                              tt,
                              {
                                className: e2({
                                  active: "shrink",
                                  hover: "grow",
                                }),
                                cursor: "pointer",
                                onClick: () => w("LEARN_COMPACT"),
                                paddingY: "4",
                                style: { willChange: "transform" },
                                transition: "default",
                              },
                              V.createElement(
                                nn,
                                {
                                  color: "accentColor",
                                  size: "14",
                                  weight: "bold",
                                },
                                "Learn More"
                              )
                            )
                          )
                        )
                  )
              ),
            (!p || "NONE" !== C) &&
              V.createElement(
                V.Fragment,
                null,
                !p &&
                  V.createElement(tt, {
                    background: "generalBorder",
                    minWidth: "1",
                    width: "1",
                  }),
                V.createElement(
                  tt,
                  {
                    display: "flex",
                    flexDirection: "column",
                    margin: "16",
                    style: { flexGrow: 1 },
                  },
                  V.createElement(
                    tt,
                    {
                      alignItems: "center",
                      display: "flex",
                      justifyContent: "space-between",
                      marginBottom: "12",
                    },
                    V.createElement(
                      tt,
                      { width: "28" },
                      P &&
                        V.createElement(
                          tt,
                          {
                            as: "button",
                            className: e2({
                              active: "shrinkSm",
                              hover: "growLg",
                            }),
                            color: "accentColor",
                            onClick: () => {
                              P && w(P, !0), null == t || t();
                            },
                            paddingX: "8",
                            paddingY: "4",
                            style: {
                              boxSizing: "content-box",
                              height: 17,
                              willChange: "transform",
                            },
                            transition: "default",
                            type: "button",
                          },
                          V.createElement(nV, null)
                        )
                    ),
                    V.createElement(
                      tt,
                      {
                        display: "flex",
                        justifyContent: "center",
                        style: { flexGrow: 1 },
                      },
                      S &&
                        V.createElement(
                          nn,
                          {
                            color: "modalText",
                            size: "18",
                            textAlign: "center",
                            weight: "heavy",
                          },
                          S
                        )
                    ),
                    V.createElement(no, { onClose: e })
                  ),
                  V.createElement(
                    tt,
                    {
                      display: "flex",
                      flexDirection: "column",
                      style: { minHeight: p ? 396 : 432 },
                    },
                    V.createElement(
                      tt,
                      {
                        alignItems: "center",
                        display: "flex",
                        flexDirection: "column",
                        gap: "6",
                        height: "full",
                        justifyContent: "center",
                        marginX: "8",
                      },
                      T
                    )
                  )
                )
              )
          );
        }
        function rm({ onClose: e, wallet: t }) {
          let {
              connect: n,
              connector: r,
              iconBackground: i,
              iconUrl: a,
              id: o,
              mobile: s,
              name: u,
              onConnecting: l,
              ready: c,
              shortName: d,
            } = t,
            f = null == s ? void 0 : s.getUri,
            p = nJ(a);
          return V.createElement(
            tt,
            {
              as: "button",
              color: c ? "modalText" : "modalTextSecondary",
              disabled: !c,
              fontFamily: "body",
              key: o,
              onClick: (0, V.useCallback)(async () => {
                "walletConnect" === o && (null == e || e()), null == n || n();
                let t = !1;
                null == l ||
                  l(async () => {
                    if (!t && ((t = !0), f)) {
                      let e = await f();
                      if (
                        (("walletConnect" === r.id ||
                          "walletConnectLegacy" === r.id) &&
                          (function ({ mobileUri: e, name: t }) {
                            localStorage.setItem(
                              nl,
                              JSON.stringify({ href: e.split("?")[0], name: t })
                            );
                          })({ mobileUri: e, name: u }),
                        e.startsWith("http"))
                      ) {
                        let t = document.createElement("a");
                        (t.href = e),
                          (t.target = "_blank"),
                          (t.rel = "noreferrer noopener"),
                          t.click();
                      } else window.location.href = e;
                    }
                  });
              }, [r, n, f, l, e, u, o]),
              ref: p,
              style: { overflow: "visible", textAlign: "center" },
              testId: `wallet-option-${o}`,
              type: "button",
              width: "full",
            },
            V.createElement(
              tt,
              {
                alignItems: "center",
                display: "flex",
                flexDirection: "column",
                justifyContent: "center",
              },
              V.createElement(
                tt,
                { paddingBottom: "8", paddingTop: "10" },
                V.createElement(ts, {
                  background: i,
                  borderRadius: "13",
                  boxShadow: "walletLogo",
                  height: "60",
                  src: a,
                  width: "60",
                })
              ),
              V.createElement(
                tt,
                {
                  display: "flex",
                  flexDirection: "column",
                  textAlign: "center",
                },
                V.createElement(
                  nn,
                  {
                    as: "h2",
                    color: t.ready ? "modalText" : "modalTextSecondary",
                    size: "13",
                    weight: "medium",
                  },
                  V.createElement(
                    tt,
                    { as: "span", position: "relative" },
                    null != d ? d : u,
                    !t.ready && " (unsupported)"
                  )
                ),
                t.recent &&
                  V.createElement(
                    nn,
                    { color: "accentColor", size: "12", weight: "medium" },
                    "Recent"
                  )
              )
            )
          );
        }
        function ry({ onClose: e }) {
          var t;
          let n = t5(),
            { disclaimer: r, learnMoreUrl: i } = (0, V.useContext)(tK),
            a = null,
            o = null,
            s = !1,
            u = null,
            [l, c] = (0, V.useState)("CONNECT"),
            d = e8();
          switch (l) {
            case "CONNECT":
              (a = "Connect a Wallet"),
                (s = !0),
                (o = V.createElement(
                  tt,
                  null,
                  V.createElement(
                    tt,
                    {
                      background: "profileForeground",
                      className: "_1am14410",
                      display: "flex",
                      paddingBottom: "20",
                      paddingTop: "6",
                    },
                    V.createElement(
                      tt,
                      { display: "flex", style: { margin: "0 auto" } },
                      n
                        .filter((e) => e.ready)
                        .map((t) =>
                          V.createElement(
                            tt,
                            { key: t.id, paddingX: "20" },
                            V.createElement(
                              tt,
                              { width: "60" },
                              V.createElement(rm, { onClose: e, wallet: t })
                            )
                          )
                        )
                    )
                  ),
                  V.createElement(tt, {
                    background: "generalBorder",
                    height: "1",
                    marginBottom: "32",
                    marginTop: "-1",
                  }),
                  V.createElement(
                    tt,
                    {
                      alignItems: "center",
                      display: "flex",
                      flexDirection: "column",
                      gap: "32",
                      paddingX: "32",
                      style: { textAlign: "center" },
                    },
                    V.createElement(
                      tt,
                      {
                        display: "flex",
                        flexDirection: "column",
                        gap: "8",
                        textAlign: "center",
                      },
                      V.createElement(
                        nn,
                        { color: "modalText", size: "16", weight: "bold" },
                        "What is a Wallet?"
                      ),
                      V.createElement(
                        nn,
                        { color: "modalTextSecondary", size: "16" },
                        "A wallet is used to send, receive, store, and display digital assets. It’s also a new way to log in, without needing to create new accounts and passwords on\xa0every\xa0website."
                      )
                    )
                  ),
                  V.createElement(
                    tt,
                    { paddingTop: "32", paddingX: "20" },
                    V.createElement(
                      tt,
                      { display: "flex", gap: "14", justifyContent: "center" },
                      V.createElement(ni, {
                        label: "Get a Wallet",
                        onClick: () => c("GET"),
                        size: "large",
                        type: "secondary",
                      }),
                      V.createElement(ni, {
                        href: i,
                        label: "Learn More",
                        size: "large",
                        type: "secondary",
                      })
                    )
                  ),
                  r &&
                    V.createElement(
                      tt,
                      { marginTop: "28", marginX: "32", textAlign: "center" },
                      V.createElement(r, { Link: nz, Text: nG })
                    )
                ));
              break;
            case "GET": {
              (a = "Get a Wallet"), (u = "CONNECT");
              let e =
                null ==
                (t =
                  null == n
                    ? void 0
                    : n.filter((e) => {
                        var t, n, r;
                        return (
                          (null == (t = e.downloadUrls) ? void 0 : t.ios) ||
                          (null == (n = e.downloadUrls) ? void 0 : n.android) ||
                          (null == (r = e.downloadUrls) ? void 0 : r.mobile)
                        );
                      }))
                  ? void 0
                  : t.splice(0, 3);
              o = V.createElement(
                tt,
                null,
                V.createElement(
                  tt,
                  {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    height: "full",
                    marginBottom: "36",
                    marginTop: "5",
                    paddingTop: "12",
                    width: "full",
                  },
                  e.map((t, n) => {
                    let {
                      downloadUrls: r,
                      iconBackground: i,
                      iconUrl: a,
                      name: o,
                    } = t;
                    return (null == r ? void 0 : r.ios) ||
                      (null == r ? void 0 : r.android) ||
                      (null == r ? void 0 : r.mobile)
                      ? V.createElement(
                          tt,
                          {
                            display: "flex",
                            gap: "16",
                            key: t.id,
                            paddingX: "20",
                            width: "full",
                          },
                          V.createElement(
                            tt,
                            { style: { minHeight: 48, minWidth: 48 } },
                            V.createElement(ts, {
                              background: i,
                              borderColor: "generalBorder",
                              borderRadius: "10",
                              height: "48",
                              src: a,
                              width: "48",
                            })
                          ),
                          V.createElement(
                            tt,
                            {
                              display: "flex",
                              flexDirection: "column",
                              width: "full",
                            },
                            V.createElement(
                              tt,
                              {
                                alignItems: "center",
                                display: "flex",
                                height: "48",
                              },
                              V.createElement(
                                tt,
                                { width: "full" },
                                V.createElement(
                                  nn,
                                  {
                                    color: "modalText",
                                    size: "18",
                                    weight: "bold",
                                  },
                                  o
                                )
                              ),
                              V.createElement(ni, {
                                href:
                                  (d
                                    ? null == r
                                      ? void 0
                                      : r.ios
                                    : null == r
                                    ? void 0
                                    : r.android) ||
                                  (null == r ? void 0 : r.mobile),
                                label: "GET",
                                size: "small",
                                type: "secondary",
                              })
                            ),
                            n < e.length - 1 &&
                              V.createElement(tt, {
                                background: "generalBorderDim",
                                height: "1",
                                marginY: "10",
                                width: "full",
                              })
                          )
                        )
                      : null;
                  })
                ),
                V.createElement(tt, { style: { marginBottom: "42px" } }),
                V.createElement(
                  tt,
                  {
                    alignItems: "center",
                    display: "flex",
                    flexDirection: "column",
                    gap: "36",
                    paddingX: "36",
                    style: { textAlign: "center" },
                  },
                  V.createElement(
                    tt,
                    {
                      display: "flex",
                      flexDirection: "column",
                      gap: "12",
                      textAlign: "center",
                    },
                    V.createElement(
                      nn,
                      { color: "modalText", size: "16", weight: "bold" },
                      "Not what you’re looking for?"
                    ),
                    V.createElement(
                      nn,
                      { color: "modalTextSecondary", size: "16" },
                      "Select a wallet on the main screen to get started with a different wallet provider."
                    )
                  )
                )
              );
            }
          }
          return V.createElement(
            tt,
            { display: "flex", flexDirection: "column", paddingBottom: "36" },
            V.createElement(
              tt,
              {
                background: s ? "profileForeground" : "modalBackground",
                display: "flex",
                flexDirection: "column",
                paddingBottom: "4",
                paddingTop: "14",
              },
              V.createElement(
                tt,
                {
                  display: "flex",
                  justifyContent: "center",
                  paddingBottom: "6",
                  paddingX: "20",
                  position: "relative",
                },
                u &&
                  V.createElement(
                    tt,
                    {
                      display: "flex",
                      position: "absolute",
                      style: { left: 0, marginBottom: -20, marginTop: -20 },
                    },
                    V.createElement(
                      tt,
                      {
                        alignItems: "center",
                        as: "button",
                        className: e2({ active: "shrinkSm", hover: "growLg" }),
                        color: "accentColor",
                        display: "flex",
                        marginLeft: "4",
                        marginTop: "20",
                        onClick: () => c(u),
                        padding: "16",
                        style: { height: 17, willChange: "transform" },
                        transition: "default",
                        type: "button",
                      },
                      V.createElement(nV, null)
                    )
                  ),
                V.createElement(
                  tt,
                  { marginTop: "4", textAlign: "center", width: "full" },
                  V.createElement(
                    nn,
                    {
                      as: "h1",
                      color: "modalText",
                      id: "rk_connect_title",
                      size: "20",
                      weight: "bold",
                    },
                    a
                  )
                ),
                V.createElement(
                  tt,
                  {
                    alignItems: "center",
                    display: "flex",
                    height: "32",
                    paddingRight: "14",
                    position: "absolute",
                    right: "0",
                  },
                  V.createElement(
                    tt,
                    { style: { marginBottom: -20, marginTop: -20 } },
                    V.createElement(no, { onClose: e })
                  )
                )
              )
            ),
            V.createElement(tt, { display: "flex", flexDirection: "column" }, o)
          );
        }
        function rg({ onClose: e }) {
          return e7()
            ? V.createElement(ry, { onClose: e })
            : V.createElement(rh, { onClose: e });
        }
        function rb({ onClose: e, open: t }) {
          let n = "rk_connect_title",
            r = e5();
          return "disconnected" === r
            ? V.createElement(
                nE,
                { onClose: e, open: t, titleId: n },
                V.createElement(
                  nx,
                  { bottomSheetOnMobile: !0, padding: "0", wide: !0 },
                  V.createElement(rg, { onClose: e })
                )
              )
            : "unauthenticated" === r
            ? V.createElement(
                nE,
                { onClose: e, open: t, titleId: n },
                V.createElement(
                  nx,
                  { bottomSheetOnMobile: !0, padding: "0" },
                  V.createElement(nu, { onClose: e })
                )
              )
            : null;
        }
        function rv() {
          let [e, t] = (0, V.useState)(!1);
          return {
            closeModal: (0, V.useCallback)(() => t(!1), []),
            isModalOpen: e,
            openModal: (0, V.useCallback)(() => t(!0), []),
          };
        }
        var rw = (0, V.createContext)({
          accountModalOpen: !1,
          chainModalOpen: !1,
          connectModalOpen: !1,
        });
        function rE({ children: e }) {
          let { closeModal: t, isModalOpen: n, openModal: r } = rv(),
            { closeModal: i, isModalOpen: a, openModal: o } = rv(),
            { closeModal: s, isModalOpen: u, openModal: l } = rv(),
            c = e5(),
            { chain: d } = (0, el.LN)(),
            f = !(null == d ? void 0 : d.unsupported);
          function p({ keepConnectModalOpen: e = !1 } = {}) {
            e || t(), i(), s();
          }
          let h = "unauthenticated" === e3();
          return (
            (0, el.mA)({
              onConnect: () => p({ keepConnectModalOpen: h }),
              onDisconnect: () => p(),
            }),
            V.createElement(
              rw.Provider,
              {
                value: (0, V.useMemo)(
                  () => ({
                    accountModalOpen: a,
                    chainModalOpen: u,
                    connectModalOpen: n,
                    openAccountModal: f && "connected" === c ? o : void 0,
                    openChainModal: "connected" === c ? l : void 0,
                    openConnectModal:
                      "disconnected" === c || "unauthenticated" === c
                        ? r
                        : void 0,
                  }),
                  [c, f, a, u, n, o, l, r]
                ),
              },
              e,
              V.createElement(rb, { onClose: t, open: n }),
              V.createElement(nU, { onClose: i, open: a }),
              V.createElement(nH, { onClose: s, open: u })
            )
          );
        }
        function rx() {
          let { accountModalOpen: e, openAccountModal: t } = (0, V.useContext)(
            rw
          );
          return { accountModalOpen: e, openAccountModal: t };
        }
        function rC() {
          let { chainModalOpen: e, openChainModal: t } = (0, V.useContext)(rw);
          return { chainModalOpen: e, openChainModal: t };
        }
        function r_() {
          let { connectModalOpen: e, openConnectModal: t } = (0, V.useContext)(
            rw
          );
          return { connectModalOpen: e, openConnectModal: t };
        }
        var rT = () => {};
        function rS({ children: e }) {
          var t, n, r, i;
          let a = tj(),
            { address: o } = (0, el.mA)(),
            s = tN(o),
            u = tM(s),
            { data: l } = (0, el.KQ)({ address: o }),
            { chain: c } = (0, el.LN)(),
            d = tk(),
            f = null != (t = e3()) ? t : void 0,
            p = c ? d[c.id] : void 0,
            h = null != (n = null == p ? void 0 : p.name) ? n : void 0,
            m = null != (r = null == p ? void 0 : p.iconUrl) ? r : void 0,
            y =
              null != (i = null == p ? void 0 : p.iconBackground) ? i : void 0,
            g = to(m),
            b = (0, V.useContext)(tX),
            v = tH().some(({ status: e }) => "pending" === e) && b,
            w = l ? `${nT(parseFloat(l.formatted))} ${l.symbol}` : void 0,
            { openConnectModal: E } = r_(),
            { openChainModal: x } = rC(),
            { openAccountModal: C } = rx(),
            {
              accountModalOpen: _,
              chainModalOpen: T,
              connectModalOpen: S,
            } = (function () {
              let {
                accountModalOpen: e,
                chainModalOpen: t,
                connectModalOpen: n,
              } = (0, V.useContext)(rw);
              return {
                accountModalOpen: e,
                chainModalOpen: t,
                connectModalOpen: n,
              };
            })();
          return V.createElement(
            V.Fragment,
            null,
            e({
              account: o
                ? {
                    address: o,
                    balanceDecimals: null == l ? void 0 : l.decimals,
                    balanceFormatted: null == l ? void 0 : l.formatted,
                    balanceSymbol: null == l ? void 0 : l.symbol,
                    displayBalance: w,
                    displayName: s ? nP(s) : nS(o),
                    ensAvatar: null != u ? u : void 0,
                    ensName: null != s ? s : void 0,
                    hasPendingTransactions: v,
                  }
                : void 0,
              accountModalOpen: _,
              authenticationStatus: f,
              chain: c
                ? {
                    hasIcon: !!m,
                    iconBackground: y,
                    iconUrl: g,
                    id: c.id,
                    name: null != h ? h : c.name,
                    unsupported: c.unsupported,
                  }
                : void 0,
              chainModalOpen: T,
              connectModalOpen: S,
              mounted: a,
              openAccountModal: null != C ? C : rT,
              openChainModal: null != x ? x : rT,
              openConnectModal: null != E ? E : rT,
            })
          );
        }
        rS.displayName = "ConnectButton.Custom";
        var rP = {
          accountStatus: "full",
          chainStatus: { largeScreen: "full", smallScreen: "icon" },
          label: "Connect Wallet",
          showBalance: { largeScreen: !0, smallScreen: !1 },
        };
        function rO({
          accountStatus: e = rP.accountStatus,
          chainStatus: t = rP.chainStatus,
          label: n = rP.label,
          showBalance: r = rP.showBalance,
        }) {
          let i = tI(),
            a = e5();
          return V.createElement(
            rS,
            null,
            ({
              account: o,
              chain: s,
              mounted: u,
              openAccountModal: l,
              openChainModal: c,
              openConnectModal: d,
            }) => {
              var f, p, h;
              let m = u && "loading" !== a,
                y = null != (f = null == s ? void 0 : s.unsupported) && f;
              return V.createElement(
                tt,
                {
                  display: "flex",
                  gap: "12",
                  ...(!m && {
                    "aria-hidden": !0,
                    style: {
                      opacity: 0,
                      pointerEvents: "none",
                      userSelect: "none",
                    },
                  }),
                },
                m && o && "connected" === a
                  ? V.createElement(
                      V.Fragment,
                      null,
                      s &&
                        (i.length > 1 || y) &&
                        V.createElement(
                          tt,
                          {
                            alignItems: "center",
                            "aria-label": "Chain Selector",
                            as: "button",
                            background: y
                              ? "connectButtonBackgroundError"
                              : "connectButtonBackground",
                            borderRadius: "connectButton",
                            boxShadow: "connectButton",
                            className: e2({ active: "shrink", hover: "grow" }),
                            color: y
                              ? "connectButtonTextError"
                              : "connectButtonText",
                            display: eJ(t, (e) =>
                              "none" === e ? "none" : "flex"
                            ),
                            fontFamily: "body",
                            fontWeight: "bold",
                            gap: "6",
                            key: y ? "unsupported" : "supported",
                            onClick: c,
                            paddingX: "10",
                            paddingY: "8",
                            testId: y ? "wrong-network-button" : "chain-button",
                            transition: "default",
                            type: "button",
                          },
                          y
                            ? V.createElement(
                                tt,
                                {
                                  alignItems: "center",
                                  display: "flex",
                                  height: "24",
                                  paddingX: "4",
                                },
                                "Wrong network"
                              )
                            : V.createElement(
                                tt,
                                {
                                  alignItems: "center",
                                  display: "flex",
                                  gap: "6",
                                },
                                s.hasIcon
                                  ? V.createElement(
                                      tt,
                                      {
                                        display: eJ(t, (e) =>
                                          "full" === e || "icon" === e
                                            ? "block"
                                            : "none"
                                        ),
                                        height: "24",
                                        width: "24",
                                      },
                                      V.createElement(ts, {
                                        alt:
                                          null != (p = s.name)
                                            ? p
                                            : "Chain icon",
                                        background: s.iconBackground,
                                        borderRadius: "full",
                                        height: "24",
                                        src: s.iconUrl,
                                        width: "24",
                                      })
                                    )
                                  : null,
                                V.createElement(
                                  tt,
                                  {
                                    display: eJ(t, (e) =>
                                      "icon" !== e || s.iconUrl
                                        ? "full" === e || "name" === e
                                          ? "block"
                                          : "none"
                                        : "block"
                                    ),
                                  },
                                  null != (h = s.name) ? h : s.id
                                )
                              ),
                          V.createElement(th, null)
                        ),
                      !y &&
                        V.createElement(
                          tt,
                          {
                            alignItems: "center",
                            as: "button",
                            background: "connectButtonBackground",
                            borderRadius: "connectButton",
                            boxShadow: "connectButton",
                            className: e2({ active: "shrink", hover: "grow" }),
                            color: "connectButtonText",
                            display: "flex",
                            fontFamily: "body",
                            fontWeight: "bold",
                            onClick: l,
                            testId: "account-button",
                            transition: "default",
                            type: "button",
                          },
                          o.displayBalance &&
                            V.createElement(
                              tt,
                              {
                                display: eJ(r, (e) => (e ? "block" : "none")),
                                padding: "8",
                                paddingLeft: "12",
                              },
                              o.displayBalance
                            ),
                          V.createElement(
                            tt,
                            {
                              background: eY(r)[
                                e7() ? "smallScreen" : "largeScreen"
                              ]
                                ? "connectButtonInnerBackground"
                                : "connectButtonBackground",
                              borderColor: "connectButtonBackground",
                              borderRadius: "connectButton",
                              borderStyle: "solid",
                              borderWidth: "2",
                              color: "connectButtonText",
                              fontFamily: "body",
                              fontWeight: "bold",
                              paddingX: "8",
                              paddingY: "6",
                              transition: "default",
                            },
                            V.createElement(
                              tt,
                              {
                                alignItems: "center",
                                display: "flex",
                                gap: "6",
                                height: "24",
                              },
                              V.createElement(
                                tt,
                                {
                                  display: eJ(e, (e) =>
                                    "full" === e || "avatar" === e
                                      ? "block"
                                      : "none"
                                  ),
                                },
                                V.createElement(tp, {
                                  address: o.address,
                                  imageUrl: o.ensAvatar,
                                  loading: o.hasPendingTransactions,
                                  size: 24,
                                })
                              ),
                              V.createElement(
                                tt,
                                {
                                  alignItems: "center",
                                  display: "flex",
                                  gap: "6",
                                },
                                V.createElement(
                                  tt,
                                  {
                                    display: eJ(e, (e) =>
                                      "full" === e || "address" === e
                                        ? "block"
                                        : "none"
                                    ),
                                  },
                                  o.displayName
                                ),
                                V.createElement(th, null)
                              )
                            )
                          )
                        )
                    )
                  : V.createElement(
                      tt,
                      {
                        as: "button",
                        background: "accentColor",
                        borderRadius: "connectButton",
                        boxShadow: "connectButton",
                        className: e2({ active: "shrink", hover: "grow" }),
                        color: "accentColorForeground",
                        fontFamily: "body",
                        fontWeight: "bold",
                        height: "40",
                        key: "connect",
                        onClick: d,
                        paddingX: "14",
                        testId: "connect-button",
                        transition: "default",
                        type: "button",
                      },
                      n
                    )
              );
            }
          );
        }
        (rO.__defaultProps = rP), (rO.Custom = rS);
        var rI = n(75276);
        function rA(e = [], t = []) {
          return [...new Set([...e, ...t])];
        }
        n(15501),
          n(512),
          n(31416),
          n(73294),
          n(57664),
          n(37466),
          n(66736),
          n(62873),
          n(65755),
          n(66151),
          n(60075),
          n(34155),
          Object.prototype.hasOwnProperty,
          Object.prototype.propertyIsEnumerable,
          Object.prototype.hasOwnProperty,
          Object.prototype.propertyIsEnumerable;
        var rk = Object.defineProperty,
          rj = Object.defineProperties,
          rB = Object.getOwnPropertyDescriptors,
          rM = Object.getOwnPropertySymbols,
          rN = Object.prototype.hasOwnProperty,
          rD = Object.prototype.propertyIsEnumerable,
          rR = (e, t, n) =>
            t in e
              ? rk(e, t, {
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                  value: n,
                })
              : (e[t] = n),
          rF = (e, t) => {
            for (var n in t || (t = {})) rN.call(t, n) && rR(e, n, t[n]);
            if (rM) for (var n of rM(t)) rD.call(t, n) && rR(e, n, t[n]);
            return e;
          },
          rL = (e, t) => rj(e, rB(t));
        function rU(e) {
          return e.includes(":");
        }
        function r$(e) {
          var t, n, r;
          let i = {};
          if (
            !(
              Object.getPrototypeOf(e) === Object.prototype &&
              Object.keys(e).length
            )
          )
            return i;
          for (let [a, o] of Object.entries(e)) {
            let e = rU(a) ? [a] : o.chains,
              s = o.methods || [],
              u = o.events || [],
              l = rU(a) ? a.split(":")[0] : a;
            i[l] = rL(rF({}, i[l]), {
              chains: rA(e, null == (t = i[l]) ? void 0 : t.chains),
              methods: rA(s, null == (n = i[l]) ? void 0 : n.methods),
              events: rA(u, null == (r = i[l]) ? void 0 : r.events),
            });
          }
          return i;
        }
        var rq = n(45775),
          rH = n(79578),
          rz = n(3980),
          rG = n(92106),
          rW = "eip155",
          rV = "requestedChains",
          rK = "wallet_addEthereumChain",
          rZ = class extends rI.wR {
            constructor(e) {
              super({ ...e, options: { isNewChainsStale: !0, ...e.options } }),
                (0, rI.Ko)(this, w),
                (0, rI.Ko)(this, x),
                (0, rI.Ko)(this, _),
                (0, rI.Ko)(this, S),
                (0, rI.Ko)(this, O),
                (0, rI.Ko)(this, A),
                (0, rI.Ko)(this, j),
                (0, rI.Ko)(this, M),
                (0, rI.Ko)(this, D),
                (this.id = "walletConnect"),
                (this.name = "WalletConnect"),
                (this.ready = !0),
                (0, rI.Ko)(this, b, void 0),
                (0, rI.Ko)(this, v, void 0),
                (this.onAccountsChanged = (e) => {
                  0 === e.length
                    ? this.emit("disconnect")
                    : this.emit("change", { account: (0, rq.K)(e[0]) });
                }),
                (this.onChainChanged = (e) => {
                  let t = Number(e),
                    n = this.isChainUnsupported(t);
                  this.emit("change", { chain: { id: t, unsupported: n } });
                }),
                (this.onDisconnect = () => {
                  (0, rI.U9)(this, A, k).call(this, []),
                    this.emit("disconnect");
                }),
                (this.onDisplayUri = (e) => {
                  this.emit("message", { type: "display_uri", data: e });
                }),
                (this.onConnect = () => {
                  this.emit("connect", {});
                }),
                (0, rI.U9)(this, w, E).call(this);
            }
            async connect({ chainId: e, pairingTopic: t } = {}) {
              try {
                let n = e;
                if (!n) {
                  let e = this.storage?.getItem("store"),
                    t = e?.state?.data?.chain?.id;
                  n = t && !this.isChainUnsupported(t) ? t : this.chains[0]?.id;
                }
                if (!n) throw Error("No chains found on connector.");
                let r = await this.getProvider();
                (0, rI.U9)(this, S, P).call(this);
                let i = (0, rI.U9)(this, _, T).call(this);
                if (
                  (r.session && i && (await r.disconnect()), !r.session || i)
                ) {
                  let e = this.chains
                    .filter((e) => e.id !== n)
                    .map((e) => e.id);
                  this.emit("message", { type: "connecting" }),
                    await r.connect({
                      pairingTopic: t,
                      optionalChains: [n, ...e],
                    }),
                    (0, rI.U9)(this, A, k).call(
                      this,
                      this.chains.map(({ id: e }) => e)
                    );
                }
                let a = await r.enable(),
                  o = (0, rq.K)(a[0]),
                  s = await this.getChainId(),
                  u = this.isChainUnsupported(s);
                return { account: o, chain: { id: s, unsupported: u } };
              } catch (e) {
                if (/user rejected/i.test(e?.message)) throw new eK.ab(e);
                throw e;
              }
            }
            async disconnect() {
              let e = await this.getProvider();
              try {
                await e.disconnect();
              } catch (e) {
                if (!/No matching key/i.test(e.message)) throw e;
              } finally {
                (0, rI.U9)(this, O, I).call(this),
                  (0, rI.U9)(this, A, k).call(this, []);
              }
            }
            async getAccount() {
              let { accounts: e } = await this.getProvider();
              return (0, rq.K)(e[0]);
            }
            async getChainId() {
              let { chainId: e } = await this.getProvider();
              return e;
            }
            async getProvider({ chainId: e } = {}) {
              return (
                (0, rI.ac)(this, b) ||
                  (await (0, rI.U9)(this, w, E).call(this)),
                e && (await this.switchChain(e)),
                (0, rI.ac)(this, b)
              );
            }
            async getWalletClient({ chainId: e } = {}) {
              let [t, n] = await Promise.all([
                  this.getProvider({ chainId: e }),
                  this.getAccount(),
                ]),
                r = this.chains.find((t) => t.id === e);
              if (!t) throw Error("provider is required.");
              return (0, rH.K)({
                account: n,
                chain: r,
                transport: (0, rz.P)(t),
              });
            }
            async isAuthorized() {
              try {
                let [e, t] = await Promise.all([
                    this.getAccount(),
                    this.getProvider(),
                  ]),
                  n = (0, rI.U9)(this, _, T).call(this);
                if (!e) return !1;
                if (n && t.session) {
                  try {
                    await t.disconnect();
                  } catch {}
                  return !1;
                }
                return !0;
              } catch {
                return !1;
              }
            }
            async switchChain(e) {
              let t = this.chains.find((t) => t.id === e);
              if (!t) throw new eK.x3(Error("chain not found on connector."));
              try {
                let n = await this.getProvider(),
                  r = (0, rI.U9)(this, M, N).call(this),
                  i = (0, rI.U9)(this, D, R).call(this),
                  a = r.includes(e);
                if (!a && i.includes(rK)) {
                  await n.request({
                    method: rK,
                    params: [
                      {
                        chainId: (0, rG.eC)(t.id),
                        blockExplorerUrls: [t.blockExplorers?.default?.url],
                        chainName: t.name,
                        nativeCurrency: t.nativeCurrency,
                        rpcUrls: [...t.rpcUrls.default.http],
                      },
                    ],
                  });
                  let r = (0, rI.U9)(this, j, B).call(this);
                  r.push(e), (0, rI.U9)(this, A, k).call(this, r);
                }
                return (
                  await n.request({
                    method: "wallet_switchEthereumChain",
                    params: [{ chainId: (0, rG.eC)(e) }],
                  }),
                  t
                );
              } catch (t) {
                let e = "string" == typeof t ? t : t?.message;
                if (/user rejected request/i.test(e)) throw new eK.ab(t);
                throw new eK.x3(t);
              }
            }
          };
        (b = new WeakMap()),
          (v = new WeakMap()),
          (w = new WeakSet()),
          (E = async function () {
            return (
              (0, rI.ac)(this, v) ||
                "undefined" == typeof window ||
                (0, rI.qx)(this, v, (0, rI.U9)(this, x, C).call(this)),
              (0, rI.ac)(this, v)
            );
          }),
          (x = new WeakSet()),
          (C = async function () {
            let { EthereumProvider: e } = await Promise.all([
                n.e(1162),
                n.e(7687),
              ]).then(n.bind(n, 87687)),
              t = this.chains.map(({ id: e }) => e);
            if (t.length) {
              let {
                projectId: n,
                showQrModal: r = !0,
                qrModalOptions: i,
                metadata: a,
                relayUrl: o,
              } = this.options;
              (0, rI.qx)(
                this,
                b,
                await e.init({
                  showQrModal: r,
                  qrModalOptions: i,
                  projectId: n,
                  optionalChains: t,
                  rpcMap: Object.fromEntries(
                    this.chains.map((e) => [e.id, e.rpcUrls.default.http[0]])
                  ),
                  metadata: a,
                  relayUrl: o,
                })
              );
            }
          }),
          (_ = new WeakSet()),
          (T = function () {
            let e = (0, rI.U9)(this, D, R).call(this);
            if (e.includes(rK) || !this.options.isNewChainsStale) return !1;
            let t = (0, rI.U9)(this, j, B).call(this),
              n = this.chains.map(({ id: e }) => e),
              r = (0, rI.U9)(this, M, N).call(this);
            return (
              (!r.length || !!r.some((e) => n.includes(e))) &&
              !n.every((e) => t.includes(e))
            );
          }),
          (S = new WeakSet()),
          (P = function () {
            (0, rI.ac)(this, b) &&
              ((0, rI.U9)(this, O, I).call(this),
              (0, rI.ac)(this, b).on("accountsChanged", this.onAccountsChanged),
              (0, rI.ac)(this, b).on("chainChanged", this.onChainChanged),
              (0, rI.ac)(this, b).on("disconnect", this.onDisconnect),
              (0, rI.ac)(this, b).on("session_delete", this.onDisconnect),
              (0, rI.ac)(this, b).on("display_uri", this.onDisplayUri),
              (0, rI.ac)(this, b).on("connect", this.onConnect));
          }),
          (O = new WeakSet()),
          (I = function () {
            (0, rI.ac)(this, b) &&
              ((0, rI.ac)(this, b).removeListener(
                "accountsChanged",
                this.onAccountsChanged
              ),
              (0, rI.ac)(this, b).removeListener(
                "chainChanged",
                this.onChainChanged
              ),
              (0, rI.ac)(this, b).removeListener(
                "disconnect",
                this.onDisconnect
              ),
              (0, rI.ac)(this, b).removeListener(
                "session_delete",
                this.onDisconnect
              ),
              (0, rI.ac)(this, b).removeListener(
                "display_uri",
                this.onDisplayUri
              ),
              (0, rI.ac)(this, b).removeListener("connect", this.onConnect));
          }),
          (A = new WeakSet()),
          (k = function (e) {
            this.storage?.setItem(rV, e);
          }),
          (j = new WeakSet()),
          (B = function () {
            return this.storage?.getItem(rV) ?? [];
          }),
          (M = new WeakSet()),
          (N = function () {
            if (!(0, rI.ac)(this, b)) return [];
            let e = rI.ac(this, b).session?.namespaces;
            if (!e) return [];
            let t = r$(e),
              n = t[rW]?.chains?.map((e) => parseInt(e.split(":")[1] || ""));
            return n ?? [];
          }),
          (D = new WeakSet()),
          (R = function () {
            if (!(0, rI.ac)(this, b)) return [];
            let e = rI.ac(this, b).session?.namespaces;
            if (!e) return [];
            let t = r$(e),
              n = t[rW]?.methods;
            return n ?? [];
          });
        var rJ = n(92219),
          rY = n(57858),
          rX = n(53516),
          rQ = class extends rI.wR {
            constructor({ chains: e, options: t }) {
              super({ chains: e, options: { reloadOnDisconnect: !1, ...t } }),
                (this.id = "coinbaseWallet"),
                (this.name = "Coinbase Wallet"),
                (this.ready = !0),
                (0, rI.Ko)(this, F, void 0),
                (0, rI.Ko)(this, L, void 0),
                (this.onAccountsChanged = (e) => {
                  0 === e.length
                    ? this.emit("disconnect")
                    : this.emit("change", { account: (0, rq.K)(e[0]) });
                }),
                (this.onChainChanged = (e) => {
                  let t = (0, rX.J)(e),
                    n = this.isChainUnsupported(t);
                  this.emit("change", { chain: { id: t, unsupported: n } });
                }),
                (this.onDisconnect = () => {
                  this.emit("disconnect");
                });
            }
            async connect({ chainId: e } = {}) {
              try {
                let t = await this.getProvider();
                t.on("accountsChanged", this.onAccountsChanged),
                  t.on("chainChanged", this.onChainChanged),
                  t.on("disconnect", this.onDisconnect),
                  this.emit("message", { type: "connecting" });
                let n = await t.enable(),
                  r = (0, rq.K)(n[0]),
                  i = await this.getChainId(),
                  a = this.isChainUnsupported(i);
                if (e && i !== e) {
                  let t = await this.switchChain(e);
                  (i = t.id), (a = this.isChainUnsupported(i));
                }
                return { account: r, chain: { id: i, unsupported: a } };
              } catch (e) {
                if (
                  /(user closed modal|accounts received is empty)/i.test(
                    e.message
                  )
                )
                  throw new eK.ab(e);
                throw e;
              }
            }
            async disconnect() {
              if (!(0, rI.ac)(this, L)) return;
              let e = await this.getProvider();
              e.removeListener("accountsChanged", this.onAccountsChanged),
                e.removeListener("chainChanged", this.onChainChanged),
                e.removeListener("disconnect", this.onDisconnect),
                e.disconnect(),
                e.close();
            }
            async getAccount() {
              let e = await this.getProvider();
              return (0, rq.K)(
                (await e.request({ method: "eth_accounts" }))[0]
              );
            }
            async getChainId() {
              let e = await this.getProvider(),
                t = (0, rX.J)(e.chainId);
              return t;
            }
            async getProvider() {
              if (!(0, rI.ac)(this, L)) {
                let e = (
                  await Promise.all([n.e(5811), n.e(5439)]).then(
                    n.t.bind(n, 45811, 19)
                  )
                ).default;
                "function" != typeof e &&
                  "function" == typeof e.default &&
                  (e = e.default),
                  (0, rI.qx)(this, F, new e(this.options));
                let t = rI.ac(this, F).walletExtension?.getChainId(),
                  r =
                    this.chains.find((e) =>
                      this.options.chainId
                        ? e.id === this.options.chainId
                        : e.id === t
                    ) || this.chains[0],
                  i = this.options.chainId || r?.id,
                  a = this.options.jsonRpcUrl || r?.rpcUrls.default.http[0];
                (0, rI.qx)(this, L, (0, rI.ac)(this, F).makeWeb3Provider(a, i));
              }
              return (0, rI.ac)(this, L);
            }
            async getWalletClient({ chainId: e } = {}) {
              let [t, n] = await Promise.all([
                  this.getProvider(),
                  this.getAccount(),
                ]),
                r = this.chains.find((t) => t.id === e);
              if (!t) throw Error("provider is required.");
              return (0, rH.K)({
                account: n,
                chain: r,
                transport: (0, rz.P)(t),
              });
            }
            async isAuthorized() {
              try {
                let e = await this.getAccount();
                return !!e;
              } catch {
                return !1;
              }
            }
            async switchChain(e) {
              let t = await this.getProvider(),
                n = (0, rG.eC)(e);
              try {
                return (
                  await t.request({
                    method: "wallet_switchEthereumChain",
                    params: [{ chainId: n }],
                  }),
                  this.chains.find((t) => t.id === e) ?? {
                    id: e,
                    name: `Chain ${n}`,
                    network: `${n}`,
                    nativeCurrency: {
                      name: "Ether",
                      decimals: 18,
                      symbol: "ETH",
                    },
                    rpcUrls: {
                      default: { http: [""] },
                      public: { http: [""] },
                    },
                  }
                );
              } catch (i) {
                let r = this.chains.find((t) => t.id === e);
                if (!r) throw new rY.B({ chainId: e, connectorId: this.id });
                if (4902 === i.code)
                  try {
                    return (
                      await t.request({
                        method: "wallet_addEthereumChain",
                        params: [
                          {
                            chainId: n,
                            chainName: r.name,
                            nativeCurrency: r.nativeCurrency,
                            rpcUrls: [r.rpcUrls.public?.http[0] ?? ""],
                            blockExplorerUrls: this.getBlockExplorerUrls(r),
                          },
                        ],
                      }),
                      r
                    );
                  } catch (e) {
                    throw new eK.ab(e);
                  }
                throw new eK.x3(i);
              }
            }
            async watchAsset({
              address: e,
              decimals: t = 18,
              image: n,
              symbol: r,
            }) {
              let i = await this.getProvider();
              return i.request({
                method: "wallet_watchAsset",
                params: {
                  type: "ERC20",
                  options: { address: e, decimals: t, image: n, symbol: r },
                },
              });
            }
          };
        (F = new WeakMap()), (L = new WeakMap());
        var r0 = class extends rJ._ {
          constructor({ chains: e, options: t } = {}) {
            let n = {
              name: "MetaMask",
              shimDisconnect: !0,
              getProvider() {
                function e(e) {
                  let t = !!e?.isMetaMask;
                  if (
                    t &&
                    (!e.isBraveWallet || e._events || e._state) &&
                    !e.isApexWallet &&
                    !e.isAvalanche &&
                    !e.isBitKeep &&
                    !e.isBlockWallet &&
                    !e.isCoin98 &&
                    !e.isFordefi &&
                    !e.isMathWallet &&
                    !e.isOkxWallet &&
                    !e.isOKExWallet &&
                    !e.isOneInchIOSWallet &&
                    !e.isOneInchAndroidWallet &&
                    !e.isOpera &&
                    !e.isPortal &&
                    !e.isRabby &&
                    !e.isDefiant &&
                    !e.isTokenPocket &&
                    !e.isTokenary &&
                    !e.isZeal &&
                    !e.isZerion
                  )
                    return e;
                }
                if ("undefined" == typeof window) return;
                let t = window.ethereum;
                return t?.providers ? t.providers.find(e) : e(t);
              },
              ...t,
            };
            super({ chains: e, options: n }),
              (this.id = "metaMask"),
              (this.shimDisconnectKey = `${this.id}.shimDisconnect`),
              (0, rI.Ko)(this, U, void 0),
              (0, rI.qx)(this, U, n.UNSTABLE_shimOnConnectSelectAccount);
          }
          async connect({ chainId: e } = {}) {
            try {
              let t = await this.getProvider();
              if (!t) throw new rY.N();
              t.on &&
                (t.on("accountsChanged", this.onAccountsChanged),
                t.on("chainChanged", this.onChainChanged),
                t.on("disconnect", this.onDisconnect)),
                this.emit("message", { type: "connecting" });
              let n = null;
              if (
                (0, rI.ac)(this, U) &&
                this.options?.shimDisconnect &&
                !this.storage?.getItem(this.shimDisconnectKey)
              ) {
                n = await this.getAccount().catch(() => null);
                let e = !!n;
                if (e)
                  try {
                    await t.request({
                      method: "wallet_requestPermissions",
                      params: [{ eth_accounts: {} }],
                    }),
                      (n = await this.getAccount());
                  } catch (e) {
                    if (this.isUserRejectedRequestError(e)) throw new eK.ab(e);
                    if (e.code === new eK.pT(e).code) throw e;
                  }
              }
              if (!n) {
                let e = await t.request({ method: "eth_requestAccounts" });
                n = (0, rq.K)(e[0]);
              }
              let r = await this.getChainId(),
                i = this.isChainUnsupported(r);
              if (e && r !== e) {
                let t = await this.switchChain(e);
                (r = t.id), (i = this.isChainUnsupported(r));
              }
              return (
                this.options?.shimDisconnect &&
                  this.storage?.setItem(this.shimDisconnectKey, !0),
                { account: n, chain: { id: r, unsupported: i }, provider: t }
              );
            } catch (e) {
              if (this.isUserRejectedRequestError(e)) throw new eK.ab(e);
              if (-32002 === e.code) throw new eK.pT(e);
              throw e;
            }
          }
        };
        U = new WeakMap();
        var r1 =
            /(imtoken|metamask|rainbow|trust wallet|uniswap wallet|ledger)/i,
          r2 = class extends rI.wR {
            constructor() {
              super(...arguments),
                (0, rI.Ko)(this, q),
                (this.id = "walletConnectLegacy"),
                (this.name = "WalletConnectLegacy"),
                (this.ready = !0),
                (0, rI.Ko)(this, $, void 0),
                (this.onAccountsChanged = (e) => {
                  0 === e.length
                    ? this.emit("disconnect")
                    : this.emit("change", { account: (0, rq.K)(e[0]) });
                }),
                (this.onChainChanged = (e) => {
                  let t = (0, rX.J)(e),
                    n = this.isChainUnsupported(t);
                  this.emit("change", { chain: { id: t, unsupported: n } });
                }),
                (this.onDisconnect = () => {
                  this.emit("disconnect");
                });
            }
            async connect({ chainId: e } = {}) {
              try {
                let t = e;
                if (!t) {
                  let e = this.storage?.getItem("store"),
                    n = e?.state?.data?.chain?.id;
                  n && !this.isChainUnsupported(n) && (t = n);
                }
                let n = await this.getProvider({ chainId: t, create: !0 });
                n.on("accountsChanged", this.onAccountsChanged),
                  n.on("chainChanged", this.onChainChanged),
                  n.on("disconnect", this.onDisconnect),
                  setTimeout(
                    () => this.emit("message", { type: "connecting" }),
                    0
                  );
                let r = await n.enable(),
                  i = (0, rq.K)(r[0]),
                  a = await this.getChainId(),
                  o = this.isChainUnsupported(a),
                  s = n.connector?.peerMeta?.name ?? "";
                return (
                  r1.test(s) && (this.switchChain = (0, rI.U9)(this, q, H)),
                  { account: i, chain: { id: a, unsupported: o } }
                );
              } catch (e) {
                if (/user closed modal/i.test(e.message)) throw new eK.ab(e);
                throw e;
              }
            }
            async disconnect() {
              let e = await this.getProvider();
              await e.disconnect(),
                e.removeListener("accountsChanged", this.onAccountsChanged),
                e.removeListener("chainChanged", this.onChainChanged),
                e.removeListener("disconnect", this.onDisconnect),
                "undefined" != typeof localStorage &&
                  localStorage.removeItem("walletconnect");
            }
            async getAccount() {
              let e = await this.getProvider();
              return (0, rq.K)(e.accounts[0]);
            }
            async getChainId() {
              let e = await this.getProvider(),
                t = (0, rX.J)(e.chainId);
              return t;
            }
            async getProvider({ chainId: e, create: t } = {}) {
              if (!(0, rI.ac)(this, $) || e || t) {
                let t = this.options?.infuraId
                    ? {}
                    : this.chains.reduce(
                        (e, t) => ({ ...e, [t.id]: t.rpcUrls.default.http[0] }),
                        {}
                      ),
                  r = (
                    await Promise.all([n.e(1162), n.e(7619)]).then(
                      n.bind(n, 17619)
                    )
                  ).default;
                (0, rI.qx)(
                  this,
                  $,
                  new r({
                    ...this.options,
                    chainId: e,
                    rpc: { ...t, ...this.options?.rpc },
                  })
                ),
                  ((0, rI.ac)(this, $).http = await (0, rI.ac)(
                    this,
                    $
                  ).setHttpProvider(e));
              }
              return (0, rI.ac)(this, $);
            }
            async getWalletClient({ chainId: e } = {}) {
              let [t, n] = await Promise.all([
                  this.getProvider({ chainId: e }),
                  this.getAccount(),
                ]),
                r = this.chains.find((t) => t.id === e);
              if (!t) throw Error("provider is required.");
              return (0, rH.K)({
                account: n,
                chain: r,
                transport: (0, rz.P)(t),
              });
            }
            async isAuthorized() {
              try {
                let e = await this.getAccount();
                return !!e;
              } catch {
                return !1;
              }
            }
          };
        ($ = new WeakMap()),
          (q = new WeakSet()),
          (H = async function (e) {
            let t = await this.getProvider(),
              n = (0, rG.eC)(e);
            try {
              return (
                await Promise.race([
                  t.request({
                    method: "wallet_switchEthereumChain",
                    params: [{ chainId: n }],
                  }),
                  new Promise((t) =>
                    this.on("change", ({ chain: n }) => {
                      n?.id === e && t(e);
                    })
                  ),
                ]),
                this.chains.find((t) => t.id === e) ?? {
                  id: e,
                  name: `Chain ${n}`,
                  network: `${n}`,
                  nativeCurrency: {
                    name: "Ether",
                    decimals: 18,
                    symbol: "ETH",
                  },
                  rpcUrls: { default: { http: [""] }, public: { http: [""] } },
                }
              );
            } catch (t) {
              let e = "string" == typeof t ? t : t?.message;
              if (/user rejected request/i.test(e)) throw new eK.ab(t);
              throw new eK.x3(t);
            }
          });
        var r6 = n(77777),
          r3 = n(40936),
          r5 = class extends rI.wR {
            constructor({ chains: e, options: t }) {
              let n = { shimDisconnect: !1, ...t };
              super({ chains: e, options: n }),
                (this.id = "safe"),
                (this.name = "Safe"),
                (this.ready =
                  "undefined" != typeof window && window?.parent !== window),
                (0, rI.Ko)(this, z, void 0),
                (0, rI.Ko)(this, G, void 0),
                (this.shimDisconnectKey = `${this.id}.shimDisconnect`);
              let r = r3;
              "function" != typeof r3 &&
                "function" == typeof r3.default &&
                (r = r3.default),
                (0, rI.qx)(this, G, new r(n));
            }
            async connect() {
              let e = await this.getProvider();
              if (!e) throw new rY.N();
              e.on &&
                (e.on("accountsChanged", this.onAccountsChanged),
                e.on("chainChanged", this.onChainChanged),
                e.on("disconnect", this.onDisconnect)),
                this.emit("message", { type: "connecting" });
              let t = await this.getAccount(),
                n = await this.getChainId();
              return (
                this.options.shimDisconnect &&
                  this.storage?.setItem(this.shimDisconnectKey, !0),
                {
                  account: t,
                  chain: { id: n, unsupported: this.isChainUnsupported(n) },
                }
              );
            }
            async disconnect() {
              let e = await this.getProvider();
              e?.removeListener &&
                (e.removeListener("accountsChanged", this.onAccountsChanged),
                e.removeListener("chainChanged", this.onChainChanged),
                e.removeListener("disconnect", this.onDisconnect),
                this.options.shimDisconnect &&
                  this.storage?.removeItem(this.shimDisconnectKey));
            }
            async getAccount() {
              let e = await this.getProvider();
              if (!e) throw new rY.N();
              return (0, rq.K)(
                (await e.request({ method: "eth_accounts" }))[0]
              );
            }
            async getChainId() {
              let e = await this.getProvider();
              if (!e) throw new rY.N();
              return (0, rX.J)(e.chainId);
            }
            async getProvider() {
              if (!(0, rI.ac)(this, z)) {
                let e = await (0, rI.ac)(this, G).safe.getInfo();
                if (!e) throw Error("Could not load Safe information");
                (0, rI.qx)(this, z, new r6.N(e, (0, rI.ac)(this, G)));
              }
              return (0, rI.ac)(this, z);
            }
            async getWalletClient({ chainId: e } = {}) {
              let t = await this.getProvider(),
                n = await this.getAccount(),
                r = this.chains.find((t) => t.id === e);
              if (!t) throw Error("provider is required.");
              return (0, rH.K)({
                account: n,
                chain: r,
                transport: (0, rz.P)(t),
              });
            }
            async isAuthorized() {
              try {
                if (
                  this.options.shimDisconnect &&
                  !this.storage?.getItem(this.shimDisconnectKey)
                )
                  return !1;
                let e = await this.getAccount();
                return !!e;
              } catch {
                return !1;
              }
            }
            onAccountsChanged(e) {}
            onChainChanged(e) {}
            onDisconnect() {
              this.emit("disconnect");
            }
          };
        (z = new WeakMap()), (G = new WeakMap());
        var r4 = (e) => () => {
            let t = -1,
              n = [],
              r = [],
              i = [],
              a = [];
            e.forEach(({ groupName: e, wallets: n }, a) => {
              n.forEach((n) => {
                if (
                  (t++,
                  (null == n ? void 0 : n.iconAccent) &&
                    !n2(null == n ? void 0 : n.iconAccent))
                )
                  throw Error(
                    `Property \`iconAccent\` is not a hex value for wallet: ${n.name}`
                  );
                let o = { ...n, groupIndex: a, groupName: e, index: t };
                "function" == typeof n.hidden ? i.push(o) : r.push(o);
              });
            });
            let o = [...r, ...i];
            return (
              o.forEach(
                ({
                  createConnector: e,
                  groupIndex: t,
                  groupName: r,
                  hidden: i,
                  index: o,
                  ...s
                }) => {
                  let u;
                  if ("function" == typeof i) {
                    let e = i({
                      wallets: [
                        ...a.map(
                          ({ connector: e, id: t, installed: n, name: r }) => ({
                            connector: e,
                            id: t,
                            installed: n,
                            name: r,
                          })
                        ),
                      ],
                    });
                    if (e) return;
                  }
                  let { connector: l, ...c } = Object.fromEntries(
                    Object.entries(e()).filter(([e, t]) => void 0 !== t)
                  );
                  if ("walletConnect" === s.id && c.qrCode && !e7()) {
                    let { chains: e, options: t } = l;
                    (u = new rZ({
                      chains: e,
                      options: { ...t, showQrModal: !0 },
                    })),
                      n.push(u);
                  }
                  let d = {
                    connector: l,
                    groupIndex: t,
                    groupName: r,
                    index: o,
                    walletConnectModalConnector: u,
                    ...s,
                    ...c,
                  };
                  a.push(d),
                    n.includes(l) || (n.push(l), (l._wallets = [])),
                    l._wallets.push(d);
                }
              ),
              n
            );
          },
          r8 = ({ chains: e, ...t }) => {
            var r;
            return {
              id: "brave",
              name: "Brave Wallet",
              iconUrl: async () =>
                (await n.e(6847).then(n.bind(n, 86847))).default,
              iconBackground: "#fff",
              installed:
                "undefined" != typeof window &&
                (null == (r = window.ethereum) ? void 0 : r.isBraveWallet) ===
                  !0,
              downloadUrls: {},
              createConnector: () => ({
                connector: new rJ._({ chains: e, options: t }),
              }),
            };
          },
          r7 = ({ appName: e, chains: t, ...r }) => {
            var i;
            let a =
              "undefined" != typeof window &&
              (null == (i = window.ethereum) ? void 0 : i.isCoinbaseWallet) ===
                !0;
            return {
              id: "coinbase",
              name: "Coinbase Wallet",
              shortName: "Coinbase",
              iconUrl: async () =>
                (await n.e(1950).then(n.bind(n, 41950))).default,
              iconAccent: "#2c5ff6",
              iconBackground: "#2c5ff6",
              installed: a || void 0,
              downloadUrls: {
                android:
                  "https://play.google.com/store/apps/details?id=org.toshi",
                ios: "https://apps.apple.com/us/app/coinbase-wallet-store-crypto/id1278383455",
                mobile: "https://coinbase.com/wallet/downloads",
                qrCode: "https://coinbase-wallet.onelink.me/q5Sx/fdb9b250",
                chrome:
                  "https://chrome.google.com/webstore/detail/coinbase-wallet-extension/hnfanknocfeofbddgcijnmhnfnkdnaad",
                browserExtension: "https://coinbase.com/wallet",
              },
              createConnector: () => {
                let n = e8(),
                  i = new rQ({
                    chains: t,
                    options: { appName: e, headlessMode: !0, ...r },
                  }),
                  a = async () => (await i.getProvider()).qrUrl;
                return {
                  connector: i,
                  ...(n
                    ? {}
                    : {
                        qrCode: {
                          getUri: a,
                          instructions: {
                            learnMoreUrl:
                              "https://coinbase.com/wallet/articles/getting-started-mobile",
                            steps: [
                              {
                                description:
                                  "We recommend putting Coinbase Wallet on your home screen for quicker access.",
                                step: "install",
                                title: "Open the Coinbase Wallet app",
                              },
                              {
                                description:
                                  "You can easily backup your wallet using the cloud backup feature.",
                                step: "create",
                                title: "Create or Import a Wallet",
                              },
                              {
                                description:
                                  "After you scan, a connection prompt will appear for you to connect your wallet.",
                                step: "scan",
                                title: "Tap the scan button",
                              },
                            ],
                          },
                        },
                        extension: {
                          instructions: {
                            learnMoreUrl:
                              "https://coinbase.com/wallet/articles/getting-started-extension",
                            steps: [
                              {
                                description:
                                  "We recommend pinning Coinbase Wallet to your taskbar for quicker access to your wallet.",
                                step: "install",
                                title: "Install the Coinbase Wallet extension",
                              },
                              {
                                description:
                                  "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",
                                step: "create",
                                title: "Create or Import a Wallet",
                              },
                              {
                                description:
                                  "Once you set up your wallet, click below to refresh the browser and load up the extension.",
                                step: "refresh",
                                title: "Refresh your browser",
                              },
                            ],
                          },
                        },
                      }),
                };
              },
            };
          },
          r9 = ({ chains: e, ...t }) => ({
            id: "injected",
            name: "Browser Wallet",
            iconUrl: async () =>
              (await n.e(1088).then(n.bind(n, 81088))).default,
            iconBackground: "#fff",
            hidden: ({ wallets: e }) =>
              e.some(
                (e) =>
                  e.installed &&
                  e.name === e.connector.name &&
                  (e.connector instanceof rJ._ || "coinbase" === e.id)
              ),
            createConnector: () => ({
              connector: new rJ._({ chains: e, options: t }),
            }),
          });
        async function ie(e, t) {
          let n = await e.getProvider();
          return "2" === t
            ? new Promise((e) => n.once("display_uri", e))
            : n.connector.uri;
        }
        var it = new Map();
        function ir({
          chains: e,
          options: t = {},
          projectId: n,
          version: r = "2",
        }) {
          let i = "21fef48091f12692cad574a6f7753643";
          if ("2" === r) {
            if (n && "" !== n)
              ("YOUR_PROJECT_ID" === n || n === i) &&
                console.warn(
                  "Invalid projectId. Please create a unique WalletConnect Cloud projectId for your dApp https://www.rainbowkit.com/docs/installation#configure"
                );
            else
              throw Error(
                "No projectId found. Every dApp must now provide a WalletConnect Cloud projectId to enable WalletConnect v2 https://www.rainbowkit.com/docs/installation#configure"
              );
          }
          let a = {
              chains: e,
              options:
                "1" === r
                  ? { qrcode: !1, ...t }
                  : {
                      projectId: "YOUR_PROJECT_ID" === n ? i : n,
                      showQrModal: !1,
                      ...t,
                    },
            },
            o = JSON.stringify(a),
            s = it.get(o);
          return null != s
            ? s
            : (function (e, t) {
                let n = "1" === e ? new r2(t) : new rZ(t);
                return it.set(JSON.stringify(t), n), n;
              })(r, a);
        }
        function ii(e) {
          return (
            !!(null == e ? void 0 : e.isMetaMask) &&
            (!e.isBraveWallet || !!e._events || !!e._state) &&
            !e.isApexWallet &&
            !e.isAvalanche &&
            !e.isBackpack &&
            !e.isBifrost &&
            !e.isBitKeep &&
            !e.isBitski &&
            !e.isBlockWallet &&
            !e.isCoinbaseWallet &&
            !e.isDawn &&
            !e.isEnkrypt &&
            !e.isExodus &&
            !e.isFrame &&
            !e.isFrontier &&
            !e.isGamestop &&
            !e.isHyperPay &&
            !e.isImToken &&
            !e.isKuCoinWallet &&
            !e.isMathWallet &&
            !e.isOkxWallet &&
            !e.isOKExWallet &&
            !e.isOneInchIOSWallet &&
            !e.isOneInchAndroidWallet &&
            !e.isOpera &&
            !e.isPhantom &&
            !e.isPortal &&
            !e.isRabby &&
            !e.isRainbow &&
            !e.isStatus &&
            !e.isTalisman &&
            !e.isTally &&
            !e.isTokenPocket &&
            !e.isTokenary &&
            !e.isTrust &&
            !e.isTrustWallet &&
            !e.isXDEFI &&
            !e.isZerion
          );
        }
        var ia = ({
          chains: e,
          projectId: t,
          walletConnectOptions: r,
          walletConnectVersion: i = "2",
          ...a
        }) => {
          var o, s;
          let u =
              "undefined" != typeof window &&
              (null == (o = window.ethereum) ? void 0 : o.providers),
            l =
              "undefined" != typeof window &&
              void 0 !== window.ethereum &&
              ((null == (s = window.ethereum.providers)
                ? void 0
                : s.some(ii)) ||
                window.ethereum.isMetaMask),
            c = !l;
          return {
            id: "metaMask",
            name: "MetaMask",
            iconUrl: async () =>
              (await n.e(4419).then(n.bind(n, 84419))).default,
            iconAccent: "#f6851a",
            iconBackground: "#fff",
            installed: c ? void 0 : l,
            downloadUrls: {
              android:
                "https://play.google.com/store/apps/details?id=io.metamask",
              ios: "https://apps.apple.com/us/app/metamask/id1438144202",
              mobile: "https://metamask.io/download",
              qrCode: "https://metamask.io/download",
              chrome:
                "https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn",
              edge: "https://microsoftedge.microsoft.com/addons/detail/metamask/ejbalbakoplchlghecdalmeeeajnimhm",
              firefox:
                "https://addons.mozilla.org/firefox/addon/ether-metamask",
              opera: "https://addons.opera.com/extensions/details/metamask-10",
              browserExtension: "https://metamask.io/download",
            },
            createConnector: () => {
              let n = c
                  ? ir({ projectId: t, chains: e, version: i, options: r })
                  : new r0({
                      chains: e,
                      options: {
                        getProvider: () =>
                          u
                            ? u.find(ii)
                            : "undefined" != typeof window
                            ? window.ethereum
                            : void 0,
                        ...a,
                      },
                    }),
                o = async () => {
                  let e = await ie(n, i);
                  return e4()
                    ? e
                    : e8()
                    ? `metamask://wc?uri=${encodeURIComponent(e)}`
                    : `https://metamask.app.link/wc?uri=${encodeURIComponent(
                        e
                      )}`;
                };
              return {
                connector: n,
                mobile: { getUri: c ? o : void 0 },
                qrCode: c
                  ? {
                      getUri: o,
                      instructions: {
                        learnMoreUrl: "https://metamask.io/faqs/",
                        steps: [
                          {
                            description:
                              "We recommend putting MetaMask on your home screen for quicker access.",
                            step: "install",
                            title: "Open the MetaMask app",
                          },
                          {
                            description:
                              "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",
                            step: "create",
                            title: "Create or Import a Wallet",
                          },
                          {
                            description:
                              "After you scan, a connection prompt will appear for you to connect your wallet.",
                            step: "scan",
                            title: "Tap the scan button",
                          },
                        ],
                      },
                    }
                  : void 0,
                extension: {
                  instructions: {
                    learnMoreUrl: "https://metamask.io/faqs/",
                    steps: [
                      {
                        description:
                          "We recommend pinning MetaMask to your taskbar for quicker access to your wallet.",
                        step: "install",
                        title: "Install the MetaMask extension",
                      },
                      {
                        description:
                          "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",
                        step: "create",
                        title: "Create or Import a Wallet",
                      },
                      {
                        description:
                          "Once you set up your wallet, click below to refresh the browser and load up the extension.",
                        step: "refresh",
                        title: "Refresh your browser",
                      },
                    ],
                  },
                },
              };
            },
          };
        };
        function io(e) {
          if ("undefined" == typeof window || void 0 === window.ethereum)
            return;
          let t = window.ethereum.providers;
          return t
            ? t.find((t) => t[e])
            : window.ethereum[e]
            ? window.ethereum
            : void 0;
        }
        var is = ({
            chains: e,
            projectId: t,
            walletConnectOptions: r,
            walletConnectVersion: i = "2",
            ...a
          }) => {
            let o = !!io("isRainbow"),
              s = !o;
            return {
              id: "rainbow",
              name: "Rainbow",
              iconUrl: async () =>
                (await n.e(1608).then(n.bind(n, 31608))).default,
              iconBackground: "#0c2f78",
              installed: s ? void 0 : o,
              downloadUrls: {
                android:
                  "https://play.google.com/store/apps/details?id=me.rainbow&referrer=utm_source%3Drainbowkit&utm_source=rainbowkit",
                ios: "https://apps.apple.com/app/apple-store/id1457119021?pt=119997837&ct=rainbowkit&mt=8",
                mobile: "https://rainbow.download?utm_source=rainbowkit",
                qrCode:
                  "https://rainbow.download?utm_source=rainbowkit&utm_medium=qrcode",
                browserExtension:
                  "https://rainbow.me/extension?utm_source=rainbowkit",
              },
              createConnector: () => {
                let n = s
                    ? ir({ projectId: t, chains: e, version: i, options: r })
                    : (function ({ chains: e, flag: t, options: n }) {
                        return new rJ._({
                          chains: e,
                          options: {
                            getProvider: () =>
                              (function (e) {
                                if (
                                  "undefined" == typeof window ||
                                  void 0 === window.ethereum
                                )
                                  return;
                                let t = window.ethereum.providers,
                                  n = io(e);
                                return (
                                  n ||
                                  (void 0 !== t && t.length > 0
                                    ? t[0]
                                    : window.ethereum)
                                );
                              })(t),
                            ...n,
                          },
                        });
                      })({ flag: "isRainbow", chains: e, options: a }),
                  o = async () => {
                    let e = await ie(n, i);
                    return e4()
                      ? e
                      : e8()
                      ? `rainbow://wc?uri=${encodeURIComponent(
                          e
                        )}&connector=rainbowkit`
                      : `https://rnbwapp.com/wc?uri=${encodeURIComponent(
                          e
                        )}&connector=rainbowkit`;
                  };
                return {
                  connector: n,
                  mobile: { getUri: s ? o : void 0 },
                  qrCode: s
                    ? {
                        getUri: o,
                        instructions: {
                          learnMoreUrl:
                            "https://learn.rainbow.me/connect-to-a-website-or-app?utm_source=rainbowkit&utm_medium=connector&utm_campaign=learnmore",
                          steps: [
                            {
                              description:
                                "We recommend putting Rainbow on your home screen for faster access to your wallet.",
                              step: "install",
                              title: "Open the Rainbow app",
                            },
                            {
                              description:
                                "You can easily backup your wallet using our backup feature on your phone.",
                              step: "create",
                              title: "Create or Import a Wallet",
                            },
                            {
                              description:
                                "After you scan, a connection prompt will appear for you to connect your wallet.",
                              step: "scan",
                              title: "Tap the scan button",
                            },
                          ],
                        },
                      }
                    : void 0,
                };
              },
            };
          },
          iu = ({ chains: e, ...t }) => ({
            id: "safe",
            name: "Safe",
            iconAccent: "#12ff80",
            iconBackground: "#fff",
            iconUrl: async () =>
              (await n.e(514).then(n.bind(n, 60514))).default,
            installed:
              "undefined" != typeof window &&
              (null == window ? void 0 : window.parent) !== window,
            downloadUrls: {},
            createConnector: () => ({
              connector: new r5({ chains: e, options: t }),
            }),
          }),
          il = ({ chains: e, options: t, projectId: r, version: i = "2" }) => ({
            id: "walletConnect",
            name: "WalletConnect",
            iconUrl: async () =>
              (await n.e(3525).then(n.bind(n, 33525))).default,
            iconBackground: "#3b99fc",
            createConnector: () => {
              let n = e8(),
                a =
                  "1" === i
                    ? ir({
                        version: "1",
                        chains: e,
                        options: { qrcode: n, ...t },
                      })
                    : ir({
                        version: "2",
                        chains: e,
                        projectId: r,
                        options: { showQrModal: n, ...t },
                      }),
                o = async () => ie(a, i);
              return {
                connector: a,
                ...(n ? {} : { mobile: { getUri: o }, qrCode: { getUri: o } }),
              };
            },
          }),
          ic = "#1A1B1F",
          id = {
            blue: { accentColor: "#3898FF", accentColorForeground: "#FFF" },
            green: { accentColor: "#4BD166", accentColorForeground: ic },
            orange: { accentColor: "#FF983D", accentColorForeground: ic },
            pink: { accentColor: "#FF7AB8", accentColorForeground: ic },
            purple: { accentColor: "#7A70FF", accentColorForeground: "#FFF" },
            red: { accentColor: "#FF6257", accentColorForeground: "#FFF" },
          },
          ip = id.blue,
          ih = ({
            accentColor: e = ip.accentColor,
            accentColorForeground: t = ip.accentColorForeground,
            ...n
          } = {}) => ({
            ...Q(n),
            colors: {
              accentColor: e,
              accentColorForeground: t,
              actionButtonBorder: "rgba(255, 255, 255, 0.04)",
              actionButtonBorderMobile: "rgba(255, 255, 255, 0.08)",
              actionButtonSecondaryBackground: "rgba(255, 255, 255, 0.08)",
              closeButton: "rgba(224, 232, 255, 0.6)",
              closeButtonBackground: "rgba(255, 255, 255, 0.08)",
              connectButtonBackground: ic,
              connectButtonBackgroundError: "#FF494A",
              connectButtonInnerBackground:
                "linear-gradient(0deg, rgba(255, 255, 255, 0.075), rgba(255, 255, 255, 0.15))",
              connectButtonText: "#FFF",
              connectButtonTextError: "#FFF",
              connectionIndicator: "#30E000",
              downloadBottomCardBackground:
                "linear-gradient(126deg, rgba(0, 0, 0, 0) 9.49%, rgba(120, 120, 120, 0.2) 71.04%), #1A1B1F",
              downloadTopCardBackground:
                "linear-gradient(126deg, rgba(120, 120, 120, 0.2) 9.49%, rgba(0, 0, 0, 0) 71.04%), #1A1B1F",
              error: "#FF494A",
              generalBorder: "rgba(255, 255, 255, 0.08)",
              generalBorderDim: "rgba(255, 255, 255, 0.04)",
              menuItemBackground: "rgba(224, 232, 255, 0.1)",
              modalBackdrop: "rgba(0, 0, 0, 0.5)",
              modalBackground: "#1A1B1F",
              modalBorder: "rgba(255, 255, 255, 0.08)",
              modalText: "#FFF",
              modalTextDim: "rgba(224, 232, 255, 0.3)",
              modalTextSecondary: "rgba(255, 255, 255, 0.6)",
              profileAction: "rgba(224, 232, 255, 0.1)",
              profileActionHover: "rgba(224, 232, 255, 0.2)",
              profileForeground: "rgba(224, 232, 255, 0.05)",
              selectedOptionBorder: "rgba(224, 232, 255, 0.1)",
              standby: "#FFD641",
            },
            shadows: {
              connectButton: "0px 4px 12px rgba(0, 0, 0, 0.1)",
              dialog: "0px 8px 32px rgba(0, 0, 0, 0.32)",
              profileDetailsAction: "0px 2px 6px rgba(37, 41, 46, 0.04)",
              selectedOption: "0px 2px 6px rgba(0, 0, 0, 0.24)",
              selectedWallet: "0px 2px 6px rgba(0, 0, 0, 0.24)",
              walletLogo: "0px 2px 16px rgba(0, 0, 0, 0.16)",
            },
          });
        ih.accentColors = id;
        var im = n(9008),
          iy = n.n(im),
          ig = n(89401),
          ib = n(5152),
          iv = n.n(ib),
          iw = n(11163);
        async function iE(e, t) {
          let n = await e.getProvider();
          return "2" === t
            ? new Promise((e) => n.once("display_uri", e))
            : n.connector.uri;
        }
        var ix = new Map();
        function iC({
          chains: e,
          options: t = {},
          projectId: n,
          version: r = "2",
        }) {
          let i = "21fef48091f12692cad574a6f7753643";
          if ("2" === r) {
            if (n && "" !== n)
              ("YOUR_PROJECT_ID" === n || n === i) &&
                console.warn(
                  "Invalid projectId. Please create a unique WalletConnect Cloud projectId for your dApp https://www.rainbowkit.com/docs/installation#configure"
                );
            else
              throw Error(
                "No projectId found. Every dApp must now provide a WalletConnect Cloud projectId to enable WalletConnect v2 https://www.rainbowkit.com/docs/installation#configure"
              );
          }
          let a = {
              chains: e,
              options:
                "1" === r
                  ? { qrcode: !1, ...t }
                  : {
                      projectId: "YOUR_PROJECT_ID" === n ? i : n,
                      showQrModal: !1,
                      ...t,
                    },
            },
            o = JSON.stringify(a),
            s = ix.get(o);
          return null != s
            ? s
            : (function (e, t) {
                let n = "1" === e ? new r2(t) : new rZ(t);
                return ix.set(JSON.stringify(t), n), n;
              })(r, a);
        }
        function i_() {
          var e;
          let t = (e) => {
              let t = !!e.isTrust;
              return t;
            },
            n = "undefined" != typeof window && void 0 !== window.ethereum;
          return n
            ? window.trustwallet
              ? window.trustwallet
              : t(window.ethereum)
              ? window.ethereum
              : (null == (e = window.ethereum) ? void 0 : e.providers)
              ? window.ethereum.providers.find(t)
              : void 0
            : void 0;
        }
        var iT = n(84898),
          iS = n(41664),
          iP = n.n(iS),
          iO = n(51512),
          iI = n(59537),
          iA = n(3526),
          ik = n(25675),
          ij = n.n(ik);
        function iB(e) {
          let { chain: t, ...n } = e,
            r = t.name.toLowerCase().split(" ")[0];
          return (0, W.jsx)("div", {
            ...n,
            "data-sentry-component": "ChainIcon",
            "data-sentry-source-file": "chain-icon.tsx",
            children: (0, W.jsx)(ij(), {
              className: "rounded-full",
              src:
                t.icon || "https://assets.odos.xyz/chains/".concat(r, ".png"),
              alt: "ChainIcon",
              width: 18,
              height: 18,
              "data-sentry-element": "Image",
              "data-sentry-source-file": "chain-icon.tsx",
            }),
          });
        }
        var iM = n(87023);
        let iN = (e) =>
          (0, W.jsx)("svg", {
            width: "24",
            height: "24",
            viewBox: "0 0 24 24",
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg",
            ...e,
            "data-sentry-element": "svg",
            "data-sentry-component": "CheckSvg",
            "data-sentry-source-file": "check-svg.tsx",
            children: (0, W.jsx)("path", {
              d: "M9.52495 17.6568L4.57495 12.7068L5.98895 11.2928L9.52645 14.8263L9.52495 14.8278L18.01 6.34277L19.424 7.75677L10.939 16.2428L9.52595 17.6558L9.52495 17.6568Z",
              fill: "#fff",
              "data-sentry-element": "path",
              "data-sentry-source-file": "check-svg.tsx",
            }),
          });
        var iD = n(48164);
        function iR(e) {
          let { chain: t, setChain: n, chains: r } = e,
            { showDropdown: i, setShowDropdown: a } = (0, iA.Z)(),
            o = r.filter((e) => !iD.NH.includes(e.id)),
            s = r.filter((e) => iD.NH.includes(e.id));
          return r.find((e) => e.id === t.id)
            ? (0, W.jsxs)("div", {
                className: "flex relative",
                "data-sentry-component": "ChainSelector",
                "data-sentry-source-file": "chain-selector.tsx",
                children: [
                  (0, W.jsxs)("button", {
                    onClick: () => {
                      a((e) => !e);
                    },
                    className:
                      "flex items-center justify-center lg:justify-start h-8 w-8 lg:w-auto p-0 lg:px-2 lg:gap-2 rounded bg-gray-800 hover:bg-gray-700 text-white",
                    children: [
                      (0, W.jsx)(iB, {
                        chain: t,
                        "data-sentry-element": "ChainIcon",
                        "data-sentry-source-file": "chain-selector.tsx",
                      }),
                      (0, W.jsx)("p", {
                        className: "hidden lg:block ".concat(iI.s.body3Bold),
                        children: t.name,
                      }),
                      (0, W.jsx)(iM.N, {
                        className: "hidden lg:block",
                        "data-sentry-element": "TriangleDownSvg",
                        "data-sentry-source-file": "chain-selector.tsx",
                      }),
                    ],
                  }),
                  i
                    ? (0, W.jsx)(iF, {
                        mainnetChains: o,
                        testnetChains: s,
                        chain: t,
                        setChain: n,
                        setShowDropdown: a,
                      })
                    : (0, W.jsx)(W.Fragment, {}),
                ],
              })
            : (0, W.jsx)(W.Fragment, {});
        }
        function iF(e) {
          let {
            mainnetChains: t,
            testnetChains: n,
            chain: r,
            setChain: i,
            setShowDropdown: a,
          } = e;
          return 0 === t.length && 0 === n.length
            ? (0, W.jsx)(W.Fragment, {})
            : (0, W.jsx)("div", {
                className:
                  "absolute right-1 md:right-[-5rem] top-10 md:top-12 z-[1500] flex flex-col w-48 bg-gray-800 border border-solid border-gray-700 rounded-xl py-3 items-start gap-4 shadow-[4px_4px_12px_12px_rgba(0,0,0,0.15)]",
                "data-sentry-component": "ChainsDropDown",
                "data-sentry-source-file": "chain-selector.tsx",
                children:
                  0 === n.length
                    ? (0, W.jsx)(iL, {
                        title: "Mainnet",
                        chain: r,
                        setChain: i,
                        chains: t,
                        setShowDropdown: a,
                      })
                    : 0 === t.length
                    ? (0, W.jsx)(iL, {
                        title: "Testnet",
                        chain: r,
                        setChain: i,
                        chains: n,
                        setShowDropdown: a,
                      })
                    : (0, W.jsxs)(W.Fragment, {
                        children: [
                          (0, W.jsx)(iL, {
                            title: "Mainnet",
                            chain: r,
                            setChain: i,
                            chains: t,
                            setShowDropdown: a,
                          }),
                          (0, W.jsx)("div", {
                            className:
                              "h-0 self-stretch stroke-[1px] stroke-gray-700",
                            children: (0, W.jsx)("svg", {
                              children: (0, W.jsx)("line", {
                                x1: "0",
                                y1: "0",
                                x2: "158",
                                y2: "0",
                                stroke: "#374151",
                                strokeWidth: 1,
                              }),
                            }),
                          }),
                          (0, W.jsx)(iL, {
                            title: "Testnet",
                            chain: r,
                            setChain: i,
                            chains: n,
                            setShowDropdown: a,
                          }),
                        ],
                      }),
              });
        }
        function iL(e) {
          let {
            title: t,
            chain: n,
            setChain: r,
            chains: i,
            setShowDropdown: a,
          } = e;
          return (0, W.jsxs)("div", {
            className:
              "flex flex-col items-start gap-1 self-stretch rounded-none",
            "data-sentry-component": "ChainList",
            "data-sentry-source-file": "chain-selector.tsx",
            children: [
              (0, W.jsx)("div", {
                className: "self-stretch px-4 text-gray-400 ".concat(
                  iI.s.body3Bold
                ),
                children: t,
              }),
              (0, W.jsx)("div", {
                className:
                  "flex flex-col items-start self-stretch rounded-none",
                children: (0, W.jsx)("div", {
                  className:
                    "flex flex-col items-start self-stretch rounded-none",
                  children: i
                    .sort((e, t) => e.id - t.id)
                    .map((e) =>
                      (0, W.jsxs)(
                        "div",
                        {
                          className:
                            "flex items-center gap-2 px-3 py-2 self-stretch cursor-pointer text-white ".concat(
                              iI.s.body3Bold,
                              " hover:bg-gray-600"
                            ),
                          onClick: () => {
                            try {
                              r(e);
                            } catch (e) {
                              console.error(e);
                            } finally {
                              a(!1);
                            }
                          },
                          children: [
                            (0, W.jsx)(iB, { chain: e }),
                            (0, W.jsx)("span", { children: e.name }),
                            e.id === n.id
                              ? (0, W.jsx)(iN, { className: "ml-auto" })
                              : (0, W.jsx)(W.Fragment, {}),
                          ],
                        },
                        e.name
                      )
                    ),
                }),
              }),
            ],
          });
        }
        let iU = (e) => {
          let { openConnectModal: t } = e;
          return (0, W.jsxs)("button", {
            className:
              "flex items-center py-0 px-3 md:px-4 h-8 rounded bg-blue-500 hover:bg-blue-600 disabled:bg-gray-800 text-white disabled:text-green-500 text-xs sm:text-sm",
            onClick: () => t && t(),
            "data-sentry-component": "ConnectButton",
            "data-sentry-source-file": "connect-button.tsx",
            children: [
              "Connect",
              (0, W.jsx)("span", {
                className: "hidden md:block md:ml-1",
                children: "Wallet",
              }),
            ],
          });
        };
        function i$(e) {
          let { address: t, ...n } = e,
            r = t.substring(2).match(/.{1,6}/g);
          if (!r) return (0, W.jsx)(W.Fragment, {});
          let [i, a, o, s] = r;
          return (0, W.jsx)("div", {
            ...n,
            style: {
              background: "\n          radial-gradient(ellipse at top left, #"
                .concat(
                  i,
                  " 15%, transparent 60%), \n          radial-gradient(ellipse at bottom left, #"
                )
                .concat(
                  a,
                  " 15%, transparent 60%),\n          radial-gradient(ellipse at top right, #"
                )
                .concat(
                  o,
                  " 15%, transparent 60%),\n          radial-gradient(ellipse at bottom right, #"
                )
                .concat(s, " 15%, transparent 60%)\n        "),
            },
            "data-sentry-component": "UserIcon",
            "data-sentry-source-file": "user-icon.tsx",
            children: (0, W.jsx)("svg", {
              className:
                "left-1/2 top-1/2 transform translate-x-1/2 translate-y-1/2 w-1/2 h-1/2",
              viewBox: "0 0 99 114",
              "data-sentry-element": "svg",
              "data-sentry-source-file": "user-icon.tsx",
              children: (0, W.jsx)("path", {
                fill: "#fff",
                d: "M28.336 106.399a55.837 55.837 0 0 1-20.9-20.634 55.12 55.12 0 0 1-7.432-28.28 56.73 56.73 0 0 1 7.39-28.59 53.23 53.23 0 0 1 20.394-20.73A58.773 58.773 0 0 1 57.626.712 58.97 58.97 0 0 1 80.62 4.777a44.88 44.88 0 0 1 15.74 11.246 2.423 2.423 0 0 1-.274 3.388L84.04 29.844a2.478 2.478 0 0 1-3.285 0 32.342 32.342 0 0 0-10.662-6.76 32.594 32.594 0 0 0-12.468-2.183 33.655 33.655 0 0 0-17.936 4.773 33.19 33.19 0 0 0-12.586 13.52 39.104 39.104 0 0 0-4.243 18.291 39.242 39.242 0 0 0 4.38 18.292A32.65 32.65 0 0 0 39.559 88.92a35.591 35.591 0 0 0 18.477 4.743c9.581 0 17.382-2.981 23.678-9.078a2.478 2.478 0 0 1 3.285 0l12.455 10.568a2.308 2.308 0 0 1 .89 1.634 2.283 2.283 0 0 1-.616 1.754 49.95 49.95 0 0 1-15.603 10.839 60.747 60.747 0 0 1-24.5 4.607 56.55 56.55 0 0 1-29.29-7.588Z",
                "data-sentry-element": "path",
                "data-sentry-source-file": "user-icon.tsx",
              }),
            }),
          });
        }
        let iq = (e) => {
            var t;
            let { address: n, openAccountModal: r } = e;
            return (0, W.jsxs)("button", {
              className:
                "flex items-center justify-center gap-2 md:justify-start rounded md:w-full py-0 px-2 md:px-4 cursor-pointer h-8 bg-gray-800 md:bg-gray-950 hover:bg-gray-600 active::bg-gray-600",
              onClick: () => r && r(),
              "data-sentry-component": "UserButton",
              "data-sentry-source-file": "user-button.tsx",
              children: [
                (0, W.jsx)(i$, {
                  className: "w-4 h-4 rounded-[100%] aspect-square",
                  address: n,
                  "data-sentry-element": "UserIcon",
                  "data-sentry-source-file": "user-button.tsx",
                }),
                (0, W.jsx)("span", {
                  className: "hidden md:block text-white ".concat(
                    iI.s.body3Bold
                  ),
                  children:
                    ((t = n || ""),
                    "".concat(t.slice(0, 6), "...").concat(t.slice(-4))),
                }),
              ],
            });
          },
          iH = (e) =>
            (0, W.jsx)("svg", {
              width: "12",
              height: "12",
              viewBox: "0 0 24 24",
              fill: "none",
              xmlns: "http://www.w3.org/2000/svg",
              ...e,
              "data-sentry-element": "svg",
              "data-sentry-component": "TriangleDownRedSvg",
              "data-sentry-source-file": "triangle-down-red-svg.tsx",
              children: (0, W.jsx)("path", {
                d: "M12 16L6 8H18L12 16Z",
                fill: "red",
                "data-sentry-element": "path",
                "data-sentry-source-file": "triangle-down-red-svg.tsx",
              }),
            }),
          iz = (e) => {
            let { openChainModal: t } = e;
            return (0, W.jsxs)("button", {
              className:
                "flex items-center font-bold h-8 py-0 px-3 md:px-4 rounded bg-gray-100 text-white disabled:text-gray-500 text-xs sm:text-sm",
              onClick: () => t && t(),
              "data-sentry-component": "WrongNetworkButton",
              "data-sentry-source-file": "wrong-network-button.tsx",
              children: [
                (0, W.jsxs)("span", {
                  className: "text-red-500 inline-block",
                  children: [
                    (0, W.jsx)("span", {
                      className: "hidden sm:inline",
                      children: "Wrong",
                    }),
                    " Network",
                  ],
                }),
                (0, W.jsx)(iH, {
                  "data-sentry-element": "TriangleDownRedSvg",
                  "data-sentry-source-file": "wrong-network-button.tsx",
                }),
              ],
            });
          };
        function iG(e) {
          let { address: t, status: n } = e,
            { openChainModal: r } = rC(),
            { openConnectModal: i } = r_(),
            { openAccountModal: a } = rx();
          return (0, W.jsx)("div", {
            className: "flex items-center",
            "data-sentry-component": "WalletSelector",
            "data-sentry-source-file": "wallet-selector.tsx",
            children:
              "disconnected" === n || "connecting" === n
                ? (0, W.jsx)(iU, { openConnectModal: i })
                : a && t
                ? (0, W.jsx)(iq, { address: t, openAccountModal: a })
                : r
                ? (0, W.jsx)(iz, { openChainModal: r })
                : (0, W.jsx)("button", {
                    disabled: !0,
                    className:
                      "flex items-center h-8 py-0 px-3 md:px-4 rounded bg-blue-500 hover:bg-blue-600 disabled:bg-gray-800 text-white disabled:text-green-500 text-xs sm:text-sm",
                    children: n,
                  }),
          });
        }
        let iW = (e) =>
            (0, W.jsxs)("svg", {
              xmlns: "http://www.w3.org/2000/svg",
              width: "25",
              height: "24",
              viewBox: "0 0 25 24",
              fill: "none",
              ...e,
              "data-sentry-element": "svg",
              "data-sentry-component": "DocsIconSvg",
              "data-sentry-source-file": "docs-icon-svg.tsx",
              children: [
                (0, W.jsx)("path", {
                  d: "M12.5 2L12.617 2.007C12.8402 2.03332 13.0481 2.13408 13.207 2.29301C13.3659 2.45194 13.4667 2.65978 13.493 2.883L13.5 3V7L13.505 7.15C13.5408 7.62617 13.7458 8.07383 14.0829 8.41203C14.42 8.75023 14.8669 8.95666 15.343 8.994L15.5 9H19.5L19.617 9.007C19.8402 9.03332 20.0481 9.13408 20.207 9.29301C20.3659 9.45194 20.4667 9.65978 20.493 9.883L20.5 10V19C20.5 19.7652 20.2077 20.5015 19.6827 21.0583C19.1578 21.615 18.4399 21.9501 17.676 21.995L17.5 22H7.5C6.73479 22 5.99849 21.7077 5.44174 21.1827C4.88499 20.6578 4.54989 19.9399 4.505 19.176L4.5 19V5C4.49996 4.23479 4.79233 3.49849 5.31728 2.94174C5.84224 2.38499 6.56011 2.04989 7.324 2.005L7.5 2H12.5Z",
                  fill: "white",
                  "data-sentry-element": "path",
                  "data-sentry-source-file": "docs-icon-svg.tsx",
                }),
                (0, W.jsx)("path", {
                  d: "M19.5 6.99999H15.5L15.499 2.99899L19.5 6.99999Z",
                  fill: "white",
                  "data-sentry-element": "path",
                  "data-sentry-source-file": "docs-icon-svg.tsx",
                }),
                (0, W.jsx)("path", {
                  d: "M12.5 2L12.617 2.007C12.8402 2.03332 13.0481 2.13408 13.207 2.29301C13.3659 2.45194 13.4667 2.65978 13.493 2.883L13.5 3V7L13.505 7.15C13.5408 7.62617 13.7458 8.07383 14.0829 8.41203C14.42 8.75023 14.8669 8.95666 15.343 8.994L15.5 9H19.5L19.617 9.007C19.8402 9.03332 20.0481 9.13408 20.207 9.29301C20.3659 9.45194 20.4667 9.65978 20.493 9.883L20.5 10V19C20.5 19.7652 20.2077 20.5015 19.6827 21.0583C19.1578 21.615 18.4399 21.9501 17.676 21.995L17.5 22H7.5C6.73479 22 5.99849 21.7077 5.44174 21.1827C4.88499 20.6578 4.54989 19.9399 4.505 19.176L4.5 19V5C4.49996 4.23479 4.79233 3.49849 5.31728 2.94174C5.84224 2.38499 6.56011 2.04989 7.324 2.005L7.5 2H12.5Z",
                  stroke: "white",
                  "data-sentry-element": "path",
                  "data-sentry-source-file": "docs-icon-svg.tsx",
                }),
                (0, W.jsx)("path", {
                  d: "M19.5 6.99999H15.5L15.499 2.99899L19.5 6.99999Z",
                  stroke: "white",
                  "data-sentry-element": "path",
                  "data-sentry-source-file": "docs-icon-svg.tsx",
                }),
              ],
            }),
          iV = (e) =>
            (0, W.jsx)("svg", {
              xmlns: "http://www.w3.org/2000/svg",
              width: "25",
              height: "24",
              viewBox: "0 0 25 24",
              fill: "none",
              ...e,
              "data-sentry-element": "svg",
              "data-sentry-component": "DiscordIconSvg",
              "data-sentry-source-file": "discord-icon-svg.tsx",
              children: (0, W.jsx)("path", {
                d: "M15.4831 3L15.6061 3.006C17.6201 3.22 19.1331 3.678 20.5721 4.679C20.7438 4.79882 20.8736 4.96951 20.9431 5.167C22.8191 10.482 23.3161 15.154 22.3941 17.447C21.3911 19.452 19.7881 21 18.0001 21C17.0601 21 15.7431 19.404 15.2231 18.031L15.2031 18.036C16.0411 17.905 16.8931 17.713 17.7751 17.462C17.9015 17.4259 18.0195 17.3652 18.1224 17.2835C18.2252 17.2018 18.311 17.1006 18.3748 16.9858C18.4386 16.8709 18.4792 16.7446 18.4942 16.6141C18.5091 16.4835 18.4983 16.3513 18.4621 16.225C18.426 16.0987 18.3654 15.9807 18.2837 15.8778C18.202 15.7749 18.1008 15.6891 17.9859 15.6253C17.8711 15.5615 17.7448 15.521 17.6142 15.506C17.4837 15.491 17.3515 15.5019 17.2251 15.538C13.9051 16.488 11.0951 16.488 7.77514 15.538C7.52 15.4651 7.24634 15.4965 7.01436 15.6253C6.78238 15.7541 6.61108 15.9699 6.53814 16.225C6.46521 16.4801 6.49661 16.7538 6.62545 16.9858C6.75429 17.2178 6.97 17.3891 7.22514 17.462C7.95014 17.669 8.65614 17.835 9.35114 17.961L9.79514 18.035C9.31814 19.405 8.10014 21 7.16814 21C5.42514 21 3.89214 19.445 2.90114 17.356C2.06014 15.15 2.53214 10.488 4.31514 5.182C4.38084 4.98553 4.50593 4.81431 4.67314 4.692C6.06514 3.676 7.48014 3.217 9.39014 3.007C9.57129 2.98716 9.75441 3.0172 9.91973 3.09386C10.085 3.17053 10.2263 3.29091 10.3281 3.442L10.3911 3.549L11.0431 4.837L11.2031 4.818C12.0801 4.728 12.9211 4.728 13.7981 4.818L13.9561 4.837L14.6061 3.55C14.6789 3.40579 14.7854 3.28135 14.9168 3.18731C15.0481 3.09327 15.2002 3.03243 15.3601 3.01L15.4831 3ZM9.50014 9C9.0222 8.99998 8.56006 9.17111 8.1974 9.48241C7.83474 9.7937 7.59555 10.2246 7.52314 10.697L7.50514 10.851L7.50014 11L7.50514 11.15C7.53433 11.538 7.67609 11.9092 7.91304 12.2178C8.15 12.5265 8.47186 12.7594 8.83919 12.8878C9.20651 13.0163 9.60333 13.0349 9.98103 12.9412C10.3587 12.8475 10.7009 12.6456 10.9656 12.3604C11.2303 12.0751 11.406 11.7188 11.4712 11.3352C11.5364 10.9516 11.4883 10.5572 11.3328 10.2005C11.1772 9.84383 10.921 9.54025 10.5955 9.32701C10.2699 9.11377 9.88929 9.00012 9.50014 9ZM15.5001 9C15.0222 8.99998 14.5601 9.17111 14.1974 9.48241C13.8347 9.7937 13.5956 10.2246 13.5231 10.697L13.5051 10.851L13.5001 11L13.5051 11.15C13.5343 11.538 13.6761 11.9092 13.913 12.2178C14.15 12.5265 14.4719 12.7594 14.8392 12.8878C15.2065 13.0163 15.6033 13.0349 15.981 12.9412C16.3587 12.8475 16.7009 12.6456 16.9656 12.3604C17.2303 12.0751 17.406 11.7188 17.4712 11.3352C17.5364 10.9516 17.4883 10.5572 17.3328 10.2005C17.1772 9.84383 16.921 9.54025 16.5955 9.32701C16.2699 9.11377 15.8893 9.00012 15.5001 9Z",
                fill: "white",
                "data-sentry-element": "path",
                "data-sentry-source-file": "discord-icon-svg.tsx",
              }),
            }),
          iK = (e) =>
            (0, W.jsx)("svg", {
              width: "24",
              height: "24",
              viewBox: "0 0 24 24",
              xmlns: "http://www.w3.org/2000/svg",
              fill: "none",
              ...e,
              "data-sentry-element": "svg",
              "data-sentry-component": "TwitterLogoSvg",
              "data-sentry-source-file": "twitter-logo-svg.tsx",
              children: (0, W.jsx)("path", {
                d: "M7.53321 21C4.76035 21 2.17558 20.2023 0 18.8258C1.84714 18.9441 5.10692 18.6609 7.1345 16.748C4.08435 16.6095 2.7088 14.2956 2.52938 13.3068C2.78854 13.4057 4.02454 13.5243 4.72229 13.2475C1.21363 12.3773 0.675367 9.33164 0.79498 8.40213C1.45285 8.857 2.56925 9.01521 3.00783 8.97566C-0.261606 6.66176 0.914594 3.18103 1.49273 2.42951C3.83899 5.64474 7.35532 7.45053 11.7055 7.55097C11.6234 7.19515 11.5801 6.8247 11.5801 6.44422C11.5801 3.7136 13.8115 1.5 16.564 1.5C18.0022 1.5 19.2981 2.10429 20.2077 3.07088C21.1688 2.84813 22.6151 2.32669 23.3222 1.87576C22.9658 3.14148 21.8562 4.19735 21.1851 4.5887C21.1796 4.57532 21.1906 4.60201 21.1851 4.5887C21.7746 4.50049 23.3698 4.19725 24 3.77434C23.6884 4.48541 22.512 5.66768 21.5466 6.32958C21.7262 14.1649 15.6656 21 7.53321 21Z",
                fill: "white",
                "data-sentry-element": "path",
                "data-sentry-source-file": "twitter-logo-svg.tsx",
              }),
            });
        var iZ = (e) =>
          (0, W.jsx)("svg", {
            width: "24",
            height: "24",
            viewBox: "0 0 24 24",
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg",
            ...e,
            "data-sentry-element": "svg",
            "data-sentry-component": "MenuSvg",
            "data-sentry-source-file": "menu-svg.tsx",
            children: (0, W.jsx)("path", {
              d: "M3 18V16.5H21V18H3ZM3 12.75V11.25H21V12.75H3ZM3 7.5V6H21V7.5H3Z",
              className: "fill-white",
              "data-sentry-element": "path",
              "data-sentry-source-file": "menu-svg.tsx",
            }),
          });
        let iJ = (e) =>
            (0, W.jsx)("svg", {
              xmlns: "http://www.w3.org/2000/svg",
              width: "16",
              height: "16",
              viewBox: "0 0 16 16",
              fill: "none",
              ...e,
              "data-sentry-element": "svg",
              "data-sentry-component": "LimitPageSvg",
              "data-sentry-source-file": "limit-page-svg.tsx",
              children: (0, W.jsx)("path", {
                d: "M6 9.33333C6 10.438 7.79067 11.3333 10 11.3333C12.2093 11.3333 14 10.438 14 9.33333M6 9.33333C6 8.22867 7.79067 7.33333 10 7.33333C12.2093 7.33333 14 8.22867 14 9.33333M6 9.33333V12C6 13.104 7.79067 14 10 14C12.2093 14 14 13.104 14 12V9.33333M2 4C2 4.71467 2.76267 5.37467 4 5.732C5.23733 6.08933 6.76267 6.08933 8 5.732C9.23733 5.37467 10 4.71467 10 4C10 3.28533 9.23733 2.62533 8 2.268C6.76267 1.91067 5.23733 1.91067 4 2.268C2.76267 2.62533 2 3.28533 2 4ZM2 4V10.6667C2 11.2587 2.51467 11.6333 3.33333 12M2 7.33333C2 7.92533 2.51467 8.3 3.33333 8.66667",
                strokeWidth: "1.5",
                strokeLinecap: "round",
                strokeLinejoin: "round",
                "data-sentry-element": "path",
                "data-sentry-source-file": "limit-page-svg.tsx",
              }),
            }),
          iY = (e) => {
            let { disabled: t, onClick: n, children: r } = e;
            return (0, W.jsx)("button", {
              disabled: t,
              onClick: n,
              className:
                "group flex flex-row gap-2 items-center text-gray-300 font-semibold disabled:text-white stroke-gray-500 fill-gray-500 disabled:stroke-blue-500 disabled:fill-blue-500",
              "data-sentry-component": "PageButton",
              "data-sentry-source-file": "page-button.tsx",
              children: r,
            });
          },
          iX = (e) =>
            (0, W.jsx)("svg", {
              xmlns: "http://www.w3.org/2000/svg",
              width: "16",
              height: "17",
              viewBox: "0 0 16 17",
              fill: "none",
              ...e,
              "data-sentry-element": "svg",
              "data-sentry-component": "VaultPageSvg",
              "data-sentry-source-file": "vault-page-svg.tsx",
              children: (0, W.jsx)("path", {
                d: "M1.33325 13.8333C1.4847 14.0443 1.68523 14.2153 1.91753 14.3314C2.14984 14.4476 2.40692 14.5054 2.66659 14.5C2.92625 14.5054 3.18333 14.4476 3.41564 14.3314C3.64794 14.2153 3.84847 14.0443 3.99992 13.8333C4.15137 13.6223 4.3519 13.4514 4.5842 13.3352C4.8165 13.2191 5.07359 13.1612 5.33325 13.1667C5.59292 13.1612 5.85 13.2191 6.0823 13.3352C6.3146 13.4514 6.51514 13.6223 6.66659 13.8333C6.81803 14.0443 7.01857 14.2153 7.25087 14.3314C7.48317 14.4476 7.74025 14.5054 7.99992 14.5C8.25958 14.5054 8.51667 14.4476 8.74897 14.3314C8.98127 14.2153 9.18181 14.0443 9.33325 13.8333C9.4847 13.6223 9.68523 13.4514 9.91753 13.3352C10.1498 13.2191 10.4069 13.1612 10.6666 13.1667C10.9262 13.1612 11.1833 13.2191 11.4156 13.3352C11.6479 13.4514 11.8485 13.6223 11.9999 13.8333C12.1514 14.0443 12.3519 14.2153 12.5842 14.3314C12.8165 14.4476 13.0736 14.5054 13.3333 14.5C13.5929 14.5054 13.85 14.4476 14.0823 14.3314C14.3146 14.2153 14.5151 14.0443 14.6666 13.8333M1.33325 11.1667C1.4847 11.3777 1.68523 11.5486 1.91753 11.6648C2.14984 11.7809 2.40692 11.8388 2.66659 11.8333C2.92625 11.8388 3.18333 11.7809 3.41564 11.6648C3.64794 11.5486 3.84847 11.3777 3.99992 11.1667C4.15137 10.9557 4.3519 10.7847 4.5842 10.6686C4.8165 10.5524 5.07359 10.4946 5.33325 10.5C5.59292 10.4946 5.85 10.5524 6.0823 10.6686C6.3146 10.7847 6.51514 10.9557 6.66659 11.1667C6.81803 11.3777 7.01857 11.5486 7.25087 11.6648C7.48317 11.7809 7.74025 11.8388 7.99992 11.8333C8.25958 11.8388 8.51667 11.7809 8.74897 11.6648C8.98127 11.5486 9.18181 11.3777 9.33325 11.1667C9.4847 10.9557 9.68523 10.7847 9.91753 10.6686C10.1498 10.5524 10.4069 10.4946 10.6666 10.5C10.9262 10.4946 11.1833 10.5524 11.4156 10.6686C11.6479 10.7847 11.8485 10.9557 11.9999 11.1667C12.1514 11.3777 12.3519 11.5486 12.5842 11.6648C12.8165 11.7809 13.0736 11.8388 13.3333 11.8333C13.5929 11.8388 13.85 11.7809 14.0823 11.6648C14.3146 11.5486 14.5151 11.3777 14.6666 11.1667M9.99992 8.5V3.5C9.99992 3.23478 10.1053 2.98043 10.2928 2.79289C10.4803 2.60536 10.7347 2.5 10.9999 2.5C11.2651 2.5 11.5195 2.60536 11.707 2.79289C11.8946 2.98043 11.9999 3.23478 11.9999 3.5M5.99992 8.5V3.5C5.99992 3.23478 5.89456 2.98043 5.70703 2.79289C5.51949 2.60536 5.26514 2.5 4.99992 2.5C4.7347 2.5 4.48035 2.60536 4.29281 2.79289C4.10528 2.98043 3.99992 3.23478 3.99992 3.5M9.99992 3.83333H5.99992M5.99992 7.16667H9.99992",
                strokeWidth: "1.5",
                strokeLinecap: "round",
                strokeLinejoin: "round",
                "data-sentry-element": "path",
                "data-sentry-source-file": "vault-page-svg.tsx",
              }),
            });
        var iQ = (e) => {
          let { onMenuClick: t } = e,
            n = (0, iw.useRouter)(),
            { selectedChain: r, setSelectedChain: i } = (0, iO.ql)(),
            { address: a, status: o } = (0, el.mA)();
          return (0, W.jsxs)("div", {
            className:
              "flex items-center justify-between h-12 md:h-16 py-0 px-4",
            "data-sentry-component": "HeaderContainer",
            "data-sentry-source-file": "header-container.tsx",
            children: [
              (0, W.jsxs)("div", {
                className: "flex items-center gap-4 md:gap-12",
                children: [
                  (0, W.jsx)(iP(), {
                    className: "flex gap-2 items-center",
                    target: "_blank",
                    href: "https://clober.io",
                    rel: "noreferrer",
                    "data-sentry-element": "Link",
                    "data-sentry-source-file": "header-container.tsx",
                    children: (0, W.jsx)("img", {
                      className: "h-5 md:h-7",
                      src: "/logo.svg",
                      alt: "logo",
                    }),
                  }),
                  (0, W.jsxs)("div", {
                    className: "hidden lg:flex items-center gap-8",
                    children: [

                    ],
                  }),
                ],
              }),
              (0, W.jsxs)("div", {
                className: "flex gap-2 w-auto md:gap-4 ml-auto",
                children: [
                  (0, W.jsxs)("div", {
                    className:
                      "hidden lg:flex items-center justify-center mr-2 gap-4",
                    children: [

                      (0, W.jsx)(iP(), {
                        className: "link",
                        target: "_blank",
                        href: "https://twitter.com/",
                        rel: "noreferrer",
                        "data-sentry-element": "Link",
                        "data-sentry-source-file": "header-container.tsx",
                        children: (0, W.jsx)(iK, {
                          className: "w-5 h-5",
                          "data-sentry-element": "TwitterLogoSvg",
                          "data-sentry-source-file": "header-container.tsx",
                        }),
                      }),
                    ],
                  }),
                  (0, W.jsx)(iR, {
                    chain: r,
                    setChain: i,
                    chains: iD.FP,
                    "data-sentry-element": "ChainSelector",
                    "data-sentry-source-file": "header-container.tsx",
                  }),
                  (0, W.jsx)(iG, {
                    address: a,
                    status: o,
                    "data-sentry-element": "WalletSelector",
                    "data-sentry-source-file": "header-container.tsx",
                  }),
                  (0, W.jsx)("button", {
                    className:
                      "w-8 h-8 lg:hover:bg-gray-200 hover:bg-gray-700 rounded sm:rounded-lg flex items-center justify-center lg:hidden",
                    onClick: t,
                    children: (0, W.jsx)(iZ, {
                      "data-sentry-element": "MenuSvg",
                      "data-sentry-source-file": "header-container.tsx",
                    }),
                  }),
                ],
              }),
            ],
          });
        };
        let i0 = (e) => {
          let { latestBlockNumber: t } = e;
          return (0, W.jsx)(W.Fragment, {
            children: (0, W.jsxs)("div", {
              className:
                "flex bg-gray-950 items-center fixed right-2 bottom-8 h-[1.125rem] py-0 px-2 gap-1 rounded-2xl text-gray-400 ".concat(
                  iI.s.body5
                ),
              children: [
                t || "syncing",
                (0, W.jsx)("div", {
                  className: "".concat(
                    t ? "bg-[#45D87F7f]" : "bg-[#FFC6357f]",
                    " rounded-lg w-1 h-1 animate-ping"
                  ),
                }),
              ],
            }),
          });
        };
        var i1 = (e) => {
            let { latestSubgraphBlockNumber: t } = e;
            return (0, W.jsxs)(W.Fragment, {
              children: [
                (0, W.jsxs)("div", {
                  className:
                    "flex h-8 justify-between items-center px-4 text-xs text-gray-500 mb-1 bg-[#0b1933]",
                  children: [
                    (0, W.jsxs)("div", {
                      className: "flex items-center",
                      children: [
                        "Support:",
                        " ",
                        (0, W.jsx)("a", {
                          href: "mailto:official@clober.io",
                          className: "text-gray-500 hover:text-blue-500",
                          children: "official@clober.io",
                        }),
                      ],
                    }),
                    (0, W.jsxs)("div", {
                      className: "flex w-auto ml-auto",
                      children: [
                        "Powered by Clober (v",
                        "6e593cacbf5bc4c4ef4210062c719bd2a300bebe".slice(0, 7),
                        ")",
                      ],
                    }),
                  ],
                }),
                (0, W.jsx)(i0, {
                  latestBlockNumber: t,
                  "data-sentry-element": "BlockNumberWidget",
                  "data-sentry-source-file": "footer.tsx",
                }),
              ],
            });
          },
          i2 = n(92751);
        let i6 = (e) => ({
          id: e.id,
          name: e.name,
          network: e.network,
          nativeCurrency: e.nativeCurrency,
          rpcUrls: e.rpcUrls,
          blockExplorers: e.blockExplorers,
          contracts: e.contracts,
        });
        var i3 = n(6807),
          i5 = n(20130),
          i4 = n(59159),
          i8 = n(84373),
          i7 = n(59163),
          i9 = n(37515),
          ae = n(32984),
          at = n(12351),
          an = n(23784),
          ar = n(61363),
          ai = n(64103),
          aa = n(19946),
          ao = n(82180),
          as = n(46045),
          au = n(84575),
          al = n(73781),
          ac = n(7815),
          ad =
            (((c = ad || {})[(c.Forwards = 0)] = "Forwards"),
            (c[(c.Backwards = 1)] = "Backwards"),
            c),
          af = n(14879),
          ap = n(15466);
        function ah(...e) {
          return (0, V.useMemo)(() => (0, ap.r)(...e), [...e]);
        }
        var am = n(3855);
        function ay(e, t, n, r) {
          let i = (0, am.E)(n);
          (0, V.useEffect)(() => {
            function n(e) {
              i.current(e);
            }
            return (
              (e = null != e ? e : window).addEventListener(t, n, r),
              () => e.removeEventListener(t, n, r)
            );
          }, [e, t, r]);
        }
        var ag = n(81021);
        function ab(e, t) {
          let n = (0, V.useRef)([]),
            r = (0, al.z)(e);
          (0, V.useEffect)(() => {
            let e = [...n.current];
            for (let [i, a] of t.entries())
              if (n.current[i] !== a) {
                let i = r(t, e);
                return (n.current = t), i;
              }
          }, [r, ...t]);
        }
        var av = n(94192);
        function aw(e) {
          let t = (0, al.z)(e),
            n = (0, V.useRef)(!1);
          (0, V.useEffect)(
            () => (
              (n.current = !1),
              () => {
                (n.current = !0),
                  (0, ag.Y)(() => {
                    n.current && t();
                  });
              }
            ),
            [t]
          );
        }
        function aE(e) {
          if (!e) return new Set();
          if ("function" == typeof e) return new Set(e());
          let t = new Set();
          for (let n of e.current)
            n.current instanceof HTMLElement && t.add(n.current);
          return t;
        }
        var ax =
          (((d = ax || {})[(d.None = 1)] = "None"),
          (d[(d.InitialFocus = 2)] = "InitialFocus"),
          (d[(d.TabLock = 4)] = "TabLock"),
          (d[(d.FocusLock = 8)] = "FocusLock"),
          (d[(d.RestoreFocus = 16)] = "RestoreFocus"),
          (d[(d.All = 30)] = "All"),
          d);
        let aC = Object.assign(
            (0, at.yV)(function (e, t) {
              let n,
                r = (0, V.useRef)(null),
                i = (0, an.T)(r, t),
                { initialFocus: a, containers: o, features: s = 30, ...u } = e;
              (0, ao.H)() || (s = 1);
              let l = ah(r);
              (function ({ ownerDocument: e }, t) {
                let n = (function (e = !0) {
                  let t = (0, V.useRef)(a_.slice());
                  return (
                    ab(
                      ([e], [n]) => {
                        !0 === n &&
                          !1 === e &&
                          (0, ag.Y)(() => {
                            t.current.splice(0);
                          }),
                          !1 === n && !0 === e && (t.current = a_.slice());
                      },
                      [e, a_, t]
                    ),
                    (0, al.z)(() => {
                      var e;
                      return null !=
                        (e = t.current.find((e) => null != e && e.isConnected))
                        ? e
                        : null;
                    })
                  );
                })(t);
                ab(() => {
                  t ||
                    ((null == e ? void 0 : e.activeElement) ===
                      (null == e ? void 0 : e.body) &&
                      (0, au.C5)(n()));
                }, [t]),
                  aw(() => {
                    t && (0, au.C5)(n());
                  });
              })({ ownerDocument: l }, !!(16 & s));
              let c = (function (
                { ownerDocument: e, container: t, initialFocus: n },
                r
              ) {
                let i = (0, V.useRef)(null),
                  a = (0, af.t)();
                return (
                  ab(() => {
                    if (!r) return;
                    let o = t.current;
                    o &&
                      (0, ag.Y)(() => {
                        if (!a.current) return;
                        let t = null == e ? void 0 : e.activeElement;
                        if (null != n && n.current) {
                          if ((null == n ? void 0 : n.current) === t) {
                            i.current = t;
                            return;
                          }
                        } else if (o.contains(t)) {
                          i.current = t;
                          return;
                        }
                        null != n && n.current
                          ? (0, au.C5)(n.current)
                          : (0, au.jA)(o, au.TO.First) === au.fE.Error &&
                            console.warn(
                              "There are no focusable elements inside the <FocusTrap />"
                            ),
                          (i.current = null == e ? void 0 : e.activeElement);
                      });
                  }, [r]),
                  i
                );
              })(
                { ownerDocument: l, container: r, initialFocus: a },
                !!(2 & s)
              );
              (function (
                {
                  ownerDocument: e,
                  container: t,
                  containers: n,
                  previousActiveElement: r,
                },
                i
              ) {
                let a = (0, af.t)();
                ay(
                  null == e ? void 0 : e.defaultView,
                  "focus",
                  (e) => {
                    if (!i || !a.current) return;
                    let o = aE(n);
                    t.current instanceof HTMLElement && o.add(t.current);
                    let s = r.current;
                    if (!s) return;
                    let u = e.target;
                    u && u instanceof HTMLElement
                      ? aT(o, u)
                        ? ((r.current = u), (0, au.C5)(u))
                        : (e.preventDefault(),
                          e.stopPropagation(),
                          (0, au.C5)(s))
                      : (0, au.C5)(r.current);
                  },
                  !0
                );
              })(
                {
                  ownerDocument: l,
                  container: r,
                  containers: o,
                  previousActiveElement: c,
                },
                !!(8 & s)
              );
              let d =
                  ((n = (0, V.useRef)(0)),
                  (0, ac.s)(
                    "keydown",
                    (e) => {
                      "Tab" === e.key && (n.current = e.shiftKey ? 1 : 0);
                    },
                    !0
                  ),
                  n),
                f = (0, al.z)((e) => {
                  let t = r.current;
                  t &&
                    (0, ae.E)(d.current, {
                      [ad.Forwards]: () => {
                        (0, au.jA)(t, au.TO.First, {
                          skipElements: [e.relatedTarget],
                        });
                      },
                      [ad.Backwards]: () => {
                        (0, au.jA)(t, au.TO.Last, {
                          skipElements: [e.relatedTarget],
                        });
                      },
                    });
                }),
                p = (0, av.G)(),
                h = (0, V.useRef)(!1);
              return V.createElement(
                V.Fragment,
                null,
                !!(4 & s) &&
                  V.createElement(as._, {
                    as: "button",
                    type: "button",
                    "data-headlessui-focus-guard": !0,
                    onFocus: f,
                    features: as.A.Focusable,
                  }),
                (0, at.sY)({
                  ourProps: {
                    ref: i,
                    onKeyDown(e) {
                      "Tab" == e.key &&
                        ((h.current = !0),
                        p.requestAnimationFrame(() => {
                          h.current = !1;
                        }));
                    },
                    onBlur(e) {
                      let t = aE(o);
                      r.current instanceof HTMLElement && t.add(r.current);
                      let n = e.relatedTarget;
                      n instanceof HTMLElement &&
                        "true" !== n.dataset.headlessuiFocusGuard &&
                        (aT(t, n) ||
                          (h.current
                            ? (0, au.jA)(
                                r.current,
                                (0, ae.E)(d.current, {
                                  [ad.Forwards]: () => au.TO.Next,
                                  [ad.Backwards]: () => au.TO.Previous,
                                }) | au.TO.WrapAround,
                                { relativeTo: e.target }
                              )
                            : e.target instanceof HTMLElement &&
                              (0, au.C5)(e.target)));
                    },
                  },
                  theirProps: u,
                  defaultTag: "div",
                  name: "FocusTrap",
                }),
                !!(4 & s) &&
                  V.createElement(as._, {
                    as: "button",
                    type: "button",
                    "data-headlessui-focus-guard": !0,
                    onFocus: f,
                    features: as.A.Focusable,
                  })
              );
            }),
            { features: ax }
          ),
          a_ = [];
        function aT(e, t) {
          for (let n of e) if (n.contains(t)) return !0;
          return !1;
        }
        !(function (e) {
          function t() {
            "loading" !== document.readyState &&
              (e(), document.removeEventListener("DOMContentLoaded", t));
          }
          "undefined" != typeof window &&
            "undefined" != typeof document &&
            (document.addEventListener("DOMContentLoaded", t), t());
        })(() => {
          function e(e) {
            e.target instanceof HTMLElement &&
              e.target !== document.body &&
              a_[0] !== e.target &&
              (a_.unshift(e.target),
              (a_ = a_.filter((e) => null != e && e.isConnected)).splice(10));
          }
          window.addEventListener("click", e, { capture: !0 }),
            window.addEventListener("mousedown", e, { capture: !0 }),
            window.addEventListener("focus", e, { capture: !0 }),
            document.body.addEventListener("click", e, { capture: !0 }),
            document.body.addEventListener("mousedown", e, { capture: !0 }),
            document.body.addEventListener("focus", e, { capture: !0 });
        });
        var aS = n(16723);
        let aP = (0, V.createContext)(!1);
        function aO(e) {
          return V.createElement(aP.Provider, { value: e.force }, e.children);
        }
        var aI = n(77896);
        let aA = V.Fragment,
          ak = V.Fragment,
          aj = (0, V.createContext)(null),
          aB = (0, V.createContext)(null),
          aM = Object.assign(
            (0, at.yV)(function (e, t) {
              let n = (0, V.useRef)(null),
                r = (0, an.T)(
                  (0, an.h)((e) => {
                    n.current = e;
                  }),
                  t
                ),
                i = ah(n),
                a = (function (e) {
                  let t = (0, V.useContext)(aP),
                    n = (0, V.useContext)(aj),
                    r = ah(e),
                    [i, a] = (0, V.useState)(() => {
                      if ((!t && null !== n) || aI.O.isServer) return null;
                      let e =
                        null == r
                          ? void 0
                          : r.getElementById("headlessui-portal-root");
                      if (e) return e;
                      if (null === r) return null;
                      let i = r.createElement("div");
                      return (
                        i.setAttribute("id", "headlessui-portal-root"),
                        r.body.appendChild(i)
                      );
                    });
                  return (
                    (0, V.useEffect)(() => {
                      null !== i &&
                        ((null != r && r.body.contains(i)) ||
                          null == r ||
                          r.body.appendChild(i));
                    }, [i, r]),
                    (0, V.useEffect)(() => {
                      t || (null !== n && a(n.current));
                    }, [n, a, t]),
                    i
                  );
                })(n),
                [o] = (0, V.useState)(() => {
                  var e;
                  return aI.O.isServer
                    ? null
                    : null != (e = null == i ? void 0 : i.createElement("div"))
                    ? e
                    : null;
                }),
                s = (0, V.useContext)(aB),
                u = (0, ao.H)();
              return (
                (0, aS.e)(() => {
                  !a ||
                    !o ||
                    a.contains(o) ||
                    (o.setAttribute("data-headlessui-portal", ""),
                    a.appendChild(o));
                }, [a, o]),
                (0, aS.e)(() => {
                  if (o && s) return s.register(o);
                }, [s, o]),
                aw(() => {
                  var e;
                  a &&
                    o &&
                    (o instanceof Node && a.contains(o) && a.removeChild(o),
                    a.childNodes.length <= 0 &&
                      (null == (e = a.parentElement) || e.removeChild(a)));
                }),
                u && a && o
                  ? (0, ef.createPortal)(
                      (0, at.sY)({
                        ourProps: { ref: r },
                        theirProps: e,
                        defaultTag: aA,
                        name: "Portal",
                      }),
                      o
                    )
                  : null
              );
            }),
            {
              Group: (0, at.yV)(function (e, t) {
                let { target: n, ...r } = e,
                  i = { ref: (0, an.T)(t) };
                return V.createElement(
                  aj.Provider,
                  { value: n },
                  (0, at.sY)({
                    ourProps: i,
                    theirProps: r,
                    defaultTag: ak,
                    name: "Popover.Group",
                  })
                );
              }),
            }
          ),
          aN = (0, V.createContext)(null),
          aD = Object.assign(
            (0, at.yV)(function (e, t) {
              let n = (0, aa.M)(),
                { id: r = `headlessui-description-${n}`, ...i } = e,
                a = (function e() {
                  let t = (0, V.useContext)(aN);
                  if (null === t) {
                    let t = Error(
                      "You used a <Description /> component, but it is not inside a relevant parent."
                    );
                    throw (
                      (Error.captureStackTrace && Error.captureStackTrace(t, e),
                      t)
                    );
                  }
                  return t;
                })(),
                o = (0, an.T)(t);
              (0, aS.e)(() => a.register(r), [r, a.register]);
              let s = { ref: o, ...a.props, id: r };
              return (0,
              at.sY)({ ourProps: s, theirProps: i, slot: a.slot || {}, defaultTag: "p", name: a.name || "Description" });
            }),
            {}
          );
        var aR = n(16567);
        let aF = (0, V.createContext)(() => {});
        aF.displayName = "StackContext";
        var aL =
          (((f = aL || {})[(f.Add = 0)] = "Add"),
          (f[(f.Remove = 1)] = "Remove"),
          f);
        function aU({
          children: e,
          onUpdate: t,
          type: n,
          element: r,
          enabled: i,
        }) {
          let a = (0, V.useContext)(aF),
            o = (0, al.z)((...e) => {
              null == t || t(...e), a(...e);
            });
          return (
            (0, aS.e)(() => {
              let e = void 0 === i || !0 === i;
              return (
                e && o(0, n, r),
                () => {
                  e && o(1, n, r);
                }
              );
            }, [o, n, r, i]),
            V.createElement(aF.Provider, { value: o }, e)
          );
        }
        var a$ = n(39650);
        let {
          useState: aq,
          useEffect: aH,
          useLayoutEffect: az,
          useDebugValue: aG,
        } = K;
        "undefined" != typeof window &&
          void 0 !== window.document &&
          window.document.createElement;
        let aW = K.useSyncExternalStore;
        var aV = n(9362);
        let aK =
          ((p = {
            PUSH(e, t) {
              var n;
              let r =
                null != (n = this.get(e))
                  ? n
                  : { doc: e, count: 0, d: (0, aV.k)(), meta: new Set() };
              return r.count++, r.meta.add(t), this.set(e, r), this;
            },
            POP(e, t) {
              let n = this.get(e);
              return n && (n.count--, n.meta.delete(t)), this;
            },
            SCROLL_PREVENT({ doc: e, d: t, meta: n }) {
              let r, i;
              let a = {
                  doc: e,
                  d: t,
                  meta: (function (e) {
                    let t = {};
                    for (let n of e) Object.assign(t, n(t));
                    return t;
                  })(n),
                },
                o = [
                  /iPhone/gi.test(window.navigator.platform) ||
                  (/Mac/gi.test(window.navigator.platform) &&
                    window.navigator.maxTouchPoints > 0)
                    ? {
                        before() {
                          r = window.pageYOffset;
                        },
                        after({ doc: e, d: t, meta: n }) {
                          function i(e) {
                            return n.containers
                              .flatMap((e) => e())
                              .some((t) => t.contains(e));
                          }
                          t.microTask(() => {
                            if (
                              "auto" !==
                              window.getComputedStyle(e.documentElement)
                                .scrollBehavior
                            ) {
                              let n = (0, aV.k)();
                              n.style(
                                e.documentElement,
                                "scroll-behavior",
                                "auto"
                              ),
                                t.add(() => t.microTask(() => n.dispose()));
                            }
                            t.style(e.body, "marginTop", `-${r}px`),
                              window.scrollTo(0, 0);
                            let n = null;
                            t.addEventListener(
                              e,
                              "click",
                              (t) => {
                                if (t.target instanceof HTMLElement)
                                  try {
                                    let r = t.target.closest("a");
                                    if (!r) return;
                                    let { hash: a } = new URL(r.href),
                                      o = e.querySelector(a);
                                    o && !i(o) && (n = o);
                                  } catch {}
                              },
                              !0
                            ),
                              t.addEventListener(
                                e,
                                "touchmove",
                                (e) => {
                                  e.target instanceof HTMLElement &&
                                    !i(e.target) &&
                                    e.preventDefault();
                                },
                                { passive: !1 }
                              ),
                              t.add(() => {
                                window.scrollTo(0, window.pageYOffset + r),
                                  n &&
                                    n.isConnected &&
                                    (n.scrollIntoView({ block: "nearest" }),
                                    (n = null));
                              });
                          });
                        },
                      }
                    : {},
                  {
                    before({ doc: e }) {
                      var t;
                      let n = e.documentElement;
                      i =
                        (null != (t = e.defaultView) ? t : window).innerWidth -
                        n.clientWidth;
                    },
                    after({ doc: e, d: t }) {
                      let n = e.documentElement,
                        r = i - (n.clientWidth - n.offsetWidth);
                      t.style(n, "paddingRight", `${r}px`);
                    },
                  },
                  {
                    before({ doc: e, d: t }) {
                      t.style(e.documentElement, "overflow", "hidden");
                    },
                  },
                ];
              o.forEach(({ before: e }) => (null == e ? void 0 : e(a))),
                o.forEach(({ after: e }) => (null == e ? void 0 : e(a)));
            },
            SCROLL_ALLOW({ d: e }) {
              e.dispose();
            },
            TEARDOWN({ doc: e }) {
              this.delete(e);
            },
          }),
          (r = new Map()),
          (i = new Set()),
          {
            getSnapshot: () => r,
            subscribe: (e) => (i.add(e), () => i.delete(e)),
            dispatch(e, ...t) {
              let n = p[e].call(r, ...t);
              n && ((r = n), i.forEach((e) => e()));
            },
          });
        aK.subscribe(() => {
          let e = aK.getSnapshot(),
            t = new Map();
          for (let [n] of e) t.set(n, n.documentElement.style.overflow);
          for (let n of e.values()) {
            let e = "hidden" === t.get(n.doc),
              r = 0 !== n.count;
            ((r && !e) || (!r && e)) &&
              aK.dispatch(n.count > 0 ? "SCROLL_PREVENT" : "SCROLL_ALLOW", n),
              0 === n.count && aK.dispatch("TEARDOWN", n);
          }
        });
        let aZ = new Map(),
          aJ = new Map();
        function aY(e, t = !0) {
          (0, aS.e)(() => {
            var n;
            if (!t) return;
            let r = "function" == typeof e ? e() : e.current;
            if (!r) return;
            let i = null != (n = aJ.get(r)) ? n : 0;
            return (
              aJ.set(r, i + 1),
              0 !== i ||
                (aZ.set(r, {
                  "aria-hidden": r.getAttribute("aria-hidden"),
                  inert: r.inert,
                }),
                r.setAttribute("aria-hidden", "true"),
                (r.inert = !0)),
              function () {
                var e;
                if (!r) return;
                let t = null != (e = aJ.get(r)) ? e : 1;
                if ((1 === t ? aJ.delete(r) : aJ.set(r, t - 1), 1 !== t))
                  return;
                let n = aZ.get(r);
                n &&
                  (null === n["aria-hidden"]
                    ? r.removeAttribute("aria-hidden")
                    : r.setAttribute("aria-hidden", n["aria-hidden"]),
                  (r.inert = n.inert),
                  aZ.delete(r));
              }
            );
          }, [e, t]);
        }
        var aX =
            (((h = aX || {})[(h.Open = 0)] = "Open"),
            (h[(h.Closed = 1)] = "Closed"),
            h),
          aQ = (((m = aQ || {})[(m.SetTitleId = 0)] = "SetTitleId"), m);
        let a0 = {
            0: (e, t) => (e.titleId === t.id ? e : { ...e, titleId: t.id }),
          },
          a1 = (0, V.createContext)(null);
        function a2(e) {
          let t = (0, V.useContext)(a1);
          if (null === t) {
            let t = Error(`<${e} /> is missing a parent <Dialog /> component.`);
            throw (
              (Error.captureStackTrace && Error.captureStackTrace(t, a2), t)
            );
          }
          return t;
        }
        function a6(e, t) {
          return (0, ae.E)(t.type, a0, e, t);
        }
        a1.displayName = "DialogContext";
        let a3 = at.AN.RenderStrategy | at.AN.Static,
          a5 = Object.assign(
            (0, at.yV)(function (e, t) {
              var n;
              let r, i, a, o, s;
              let u = (0, aa.M)(),
                {
                  id: l = `headlessui-dialog-${u}`,
                  open: c,
                  onClose: d,
                  initialFocus: f,
                  __demoMode: p = !1,
                  ...h
                } = e,
                [m, y] = (0, V.useState)(0),
                g = (0, aR.oJ)();
              void 0 === c &&
                null !== g &&
                (c = (g & aR.ZM.Open) === aR.ZM.Open);
              let b = (0, V.useRef)(null),
                v = (0, an.T)(b, t),
                w = ah(b),
                E = e.hasOwnProperty("open") || null !== g,
                x = e.hasOwnProperty("onClose");
              if (!E && !x)
                throw Error(
                  "You have to provide an `open` and an `onClose` prop to the `Dialog` component."
                );
              if (!E)
                throw Error(
                  "You provided an `onClose` prop to the `Dialog`, but forgot an `open` prop."
                );
              if (!x)
                throw Error(
                  "You provided an `open` prop to the `Dialog`, but forgot an `onClose` prop."
                );
              if ("boolean" != typeof c)
                throw Error(
                  `You provided an \`open\` prop to the \`Dialog\`, but the value is not a boolean. Received: ${c}`
                );
              if ("function" != typeof d)
                throw Error(
                  `You provided an \`onClose\` prop to the \`Dialog\`, but the value is not a function. Received: ${d}`
                );
              let C = c ? 0 : 1,
                [_, T] = (0, V.useReducer)(a6, {
                  titleId: null,
                  descriptionId: null,
                  panelRef: (0, V.createRef)(),
                }),
                S = (0, al.z)(() => d(!1)),
                P = (0, al.z)((e) => T({ type: 0, id: e })),
                O = !!(0, ao.H)() && !p && 0 === C,
                I = m > 1,
                A = null !== (0, V.useContext)(a1),
                [k, j] =
                  ((r = (0, V.useContext)(aB)),
                  (i = (0, V.useRef)([])),
                  (a = (0, al.z)(
                    (e) => (i.current.push(e), r && r.register(e), () => o(e))
                  )),
                  (o = (0, al.z)((e) => {
                    let t = i.current.indexOf(e);
                    -1 !== t && i.current.splice(t, 1), r && r.unregister(e);
                  })),
                  (s = (0, V.useMemo)(
                    () => ({ register: a, unregister: o, portals: i }),
                    [a, o, i]
                  )),
                  [
                    i,
                    (0, V.useMemo)(
                      () =>
                        function ({ children: e }) {
                          return V.createElement(aB.Provider, { value: s }, e);
                        },
                      [s]
                    ),
                  ]),
                {
                  resolveContainers: B,
                  mainTreeNodeRef: M,
                  MainTreeNode: N,
                } = (function ({
                  defaultContainers: e = [],
                  portals: t,
                  mainTreeNodeRef: n,
                } = {}) {
                  var r;
                  let i = (0, V.useRef)(
                      null != (r = null == n ? void 0 : n.current) ? r : null
                    ),
                    a = ah(i),
                    o = (0, al.z)(() => {
                      var n;
                      let r = [];
                      for (let t of e)
                        null !== t &&
                          (t instanceof HTMLElement
                            ? r.push(t)
                            : "current" in t &&
                              t.current instanceof HTMLElement &&
                              r.push(t.current));
                      if (null != t && t.current)
                        for (let e of t.current) r.push(e);
                      for (let e of null !=
                      (n =
                        null == a
                          ? void 0
                          : a.querySelectorAll("html > *, body > *"))
                        ? n
                        : [])
                        e !== document.body &&
                          e !== document.head &&
                          e instanceof HTMLElement &&
                          "headlessui-portal-root" !== e.id &&
                          (e.contains(i.current) ||
                            r.some((t) => e.contains(t)) ||
                            r.push(e));
                      return r;
                    });
                  return {
                    resolveContainers: o,
                    contains: (0, al.z)((e) => o().some((t) => t.contains(e))),
                    mainTreeNodeRef: i,
                    MainTreeNode: (0, V.useMemo)(
                      () =>
                        function () {
                          return null != n
                            ? null
                            : V.createElement(as._, {
                                features: as.A.Hidden,
                                ref: i,
                              });
                        },
                      [i, n]
                    ),
                  };
                })({
                  portals: k,
                  defaultContainers: [
                    null != (n = _.panelRef.current) ? n : b.current,
                  ],
                }),
                D = I ? "parent" : "leaf",
                R = null !== g && (g & aR.ZM.Closing) === aR.ZM.Closing,
                F = !A && !R && O;
              aY(
                (0, V.useCallback)(() => {
                  var e, t;
                  return null !=
                    (t = Array.from(
                      null !=
                        (e =
                          null == w ? void 0 : w.querySelectorAll("body > *"))
                        ? e
                        : []
                    ).find(
                      (e) =>
                        "headlessui-portal-root" !== e.id &&
                        e.contains(M.current) &&
                        e instanceof HTMLElement
                    ))
                    ? t
                    : null;
                }, [M]),
                F
              );
              let L = !!I || O;
              aY(
                (0, V.useCallback)(() => {
                  var e, t;
                  return null !=
                    (t = Array.from(
                      null !=
                        (e =
                          null == w
                            ? void 0
                            : w.querySelectorAll("[data-headlessui-portal]"))
                        ? e
                        : []
                    ).find(
                      (e) => e.contains(M.current) && e instanceof HTMLElement
                    ))
                    ? t
                    : null;
                }, [M]),
                L
              );
              let U = !(!O || I);
              (0, a$.O)(B, S, U);
              let $ = !(I || 0 !== C);
              ay(null == w ? void 0 : w.defaultView, "keydown", (e) => {
                $ &&
                  (e.defaultPrevented ||
                    (e.key === ar.R.Escape &&
                      (e.preventDefault(), e.stopPropagation(), S())));
              }),
                (function (e, t, n = () => [document.body]) {
                  var r;
                  let i, a;
                  (r = (e) => {
                    var t;
                    return {
                      containers: [...(null != (t = e.containers) ? t : []), n],
                    };
                  }),
                    (i = aW(aK.subscribe, aK.getSnapshot, aK.getSnapshot)),
                    (a = e ? i.get(e) : void 0) && a.count,
                    (0, aS.e)(() => {
                      if (!(!e || !t))
                        return (
                          aK.dispatch("PUSH", e, r),
                          () => aK.dispatch("POP", e, r)
                        );
                    }, [t, e]);
                })(w, !(R || 0 !== C || A), B),
                (0, V.useEffect)(() => {
                  if (0 !== C || !b.current) return;
                  let e = new ResizeObserver((e) => {
                    for (let t of e) {
                      let e = t.target.getBoundingClientRect();
                      0 === e.x &&
                        0 === e.y &&
                        0 === e.width &&
                        0 === e.height &&
                        S();
                    }
                  });
                  return e.observe(b.current), () => e.disconnect();
                }, [C, b, S]);
              let [q, H] = (function () {
                  let [e, t] = (0, V.useState)([]);
                  return [
                    e.length > 0 ? e.join(" ") : void 0,
                    (0, V.useMemo)(
                      () =>
                        function (e) {
                          let n = (0, al.z)(
                              (e) => (
                                t((t) => [...t, e]),
                                () =>
                                  t((t) => {
                                    let n = t.slice(),
                                      r = n.indexOf(e);
                                    return -1 !== r && n.splice(r, 1), n;
                                  })
                              )
                            ),
                            r = (0, V.useMemo)(
                              () => ({
                                register: n,
                                slot: e.slot,
                                name: e.name,
                                props: e.props,
                              }),
                              [n, e.slot, e.name, e.props]
                            );
                          return V.createElement(
                            aN.Provider,
                            { value: r },
                            e.children
                          );
                        },
                      [t]
                    ),
                  ];
                })(),
                z = (0, V.useMemo)(
                  () => [{ dialogState: C, close: S, setTitleId: P }, _],
                  [C, _, S, P]
                ),
                G = (0, V.useMemo)(() => ({ open: 0 === C }), [C]),
                W = {
                  ref: v,
                  id: l,
                  role: "dialog",
                  "aria-modal": 0 === C || void 0,
                  "aria-labelledby": _.titleId,
                  "aria-describedby": q,
                };
              return V.createElement(
                aU,
                {
                  type: "Dialog",
                  enabled: 0 === C,
                  element: b,
                  onUpdate: (0, al.z)((e, t) => {
                    "Dialog" === t &&
                      (0, ae.E)(e, {
                        [aL.Add]: () => y((e) => e + 1),
                        [aL.Remove]: () => y((e) => e - 1),
                      });
                  }),
                },
                V.createElement(
                  aO,
                  { force: !0 },
                  V.createElement(
                    aM,
                    null,
                    V.createElement(
                      a1.Provider,
                      { value: z },
                      V.createElement(
                        aM.Group,
                        { target: b },
                        V.createElement(
                          aO,
                          { force: !1 },
                          V.createElement(
                            H,
                            { slot: G, name: "Dialog.Description" },
                            V.createElement(
                              aC,
                              {
                                initialFocus: f,
                                containers: B,
                                features: O
                                  ? (0, ae.E)(D, {
                                      parent: aC.features.RestoreFocus,
                                      leaf:
                                        aC.features.All &
                                        ~aC.features.FocusLock,
                                    })
                                  : aC.features.None,
                              },
                              V.createElement(
                                j,
                                null,
                                (0, at.sY)({
                                  ourProps: W,
                                  theirProps: h,
                                  slot: G,
                                  defaultTag: "div",
                                  features: a3,
                                  visible: 0 === C,
                                  name: "Dialog",
                                })
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                ),
                V.createElement(N, null)
              );
            }),
            {
              Backdrop: (0, at.yV)(function (e, t) {
                let n = (0, aa.M)(),
                  { id: r = `headlessui-dialog-backdrop-${n}`, ...i } = e,
                  [{ dialogState: a }, o] = a2("Dialog.Backdrop"),
                  s = (0, an.T)(t);
                (0, V.useEffect)(() => {
                  if (null === o.panelRef.current)
                    throw Error(
                      "A <Dialog.Backdrop /> component is being used, but a <Dialog.Panel /> component is missing."
                    );
                }, [o.panelRef]);
                let u = (0, V.useMemo)(() => ({ open: 0 === a }), [a]);
                return V.createElement(
                  aO,
                  { force: !0 },
                  V.createElement(
                    aM,
                    null,
                    (0, at.sY)({
                      ourProps: { ref: s, id: r, "aria-hidden": !0 },
                      theirProps: i,
                      slot: u,
                      defaultTag: "div",
                      name: "Dialog.Backdrop",
                    })
                  )
                );
              }),
              Panel: (0, at.yV)(function (e, t) {
                let n = (0, aa.M)(),
                  { id: r = `headlessui-dialog-panel-${n}`, ...i } = e,
                  [{ dialogState: a }, o] = a2("Dialog.Panel"),
                  s = (0, an.T)(t, o.panelRef),
                  u = (0, V.useMemo)(() => ({ open: 0 === a }), [a]),
                  l = (0, al.z)((e) => {
                    e.stopPropagation();
                  });
                return (0,
                at.sY)({ ourProps: { ref: s, id: r, onClick: l }, theirProps: i, slot: u, defaultTag: "div", name: "Dialog.Panel" });
              }),
              Overlay: (0, at.yV)(function (e, t) {
                let n = (0, aa.M)(),
                  { id: r = `headlessui-dialog-overlay-${n}`, ...i } = e,
                  [{ dialogState: a, close: o }] = a2("Dialog.Overlay"),
                  s = (0, an.T)(t),
                  u = (0, al.z)((e) => {
                    if (e.target === e.currentTarget) {
                      if ((0, ai.P)(e.currentTarget)) return e.preventDefault();
                      e.preventDefault(), e.stopPropagation(), o();
                    }
                  }),
                  l = (0, V.useMemo)(() => ({ open: 0 === a }), [a]);
                return (0,
                at.sY)({ ourProps: { ref: s, id: r, "aria-hidden": !0, onClick: u }, theirProps: i, slot: l, defaultTag: "div", name: "Dialog.Overlay" });
              }),
              Title: (0, at.yV)(function (e, t) {
                let n = (0, aa.M)(),
                  { id: r = `headlessui-dialog-title-${n}`, ...i } = e,
                  [{ dialogState: a, setTitleId: o }] = a2("Dialog.Title"),
                  s = (0, an.T)(t);
                (0, V.useEffect)(() => (o(r), () => o(null)), [r, o]);
                let u = (0, V.useMemo)(() => ({ open: 0 === a }), [a]);
                return (0,
                at.sY)({ ourProps: { ref: s, id: r }, theirProps: i, slot: u, defaultTag: "h2", name: "Dialog.Title" });
              }),
              Description: aD,
            }
          );
        var a4 = n(44080);
        let a8 = V.forwardRef(function ({ title: e, titleId: t, ...n }, r) {
            return V.createElement(
              "svg",
              Object.assign(
                {
                  xmlns: "http://www.w3.org/2000/svg",
                  fill: "none",
                  viewBox: "0 0 24 24",
                  strokeWidth: 1.5,
                  stroke: "currentColor",
                  "aria-hidden": "true",
                  ref: r,
                  "aria-labelledby": t,
                },
                n
              ),
              e ? V.createElement("title", { id: t }, e) : null,
              V.createElement("path", {
                strokeLinecap: "round",
                strokeLinejoin: "round",
                d: "M6 18L18 6M6 6l12 12",
              })
            );
          }),
          a7 = (e) =>
            (0, W.jsx)("svg", {
              xmlns: "http://www.w3.org/2000/svg",
              width: "25",
              height: "24",
              viewBox: "0 0 25 24",
              fill: "none",
              ...e,
              "data-sentry-element": "svg",
              "data-sentry-component": "DiscordLogoSvg",
              "data-sentry-source-file": "discord-logo-svg.tsx",
              children: (0, W.jsx)("path", {
                d: "M15.4831 3L15.6061 3.006C17.6201 3.22 19.1331 3.678 20.5721 4.679C20.7438 4.79882 20.8736 4.96951 20.9431 5.167C22.8191 10.482 23.3161 15.154 22.3941 17.447C21.3911 19.452 19.7881 21 18.0001 21C17.0601 21 15.7431 19.404 15.2231 18.031L15.2031 18.036C16.0411 17.905 16.8931 17.713 17.7751 17.462C17.9015 17.4259 18.0195 17.3652 18.1224 17.2835C18.2252 17.2018 18.311 17.1006 18.3748 16.9858C18.4386 16.8709 18.4792 16.7446 18.4942 16.6141C18.5091 16.4835 18.4983 16.3513 18.4621 16.225C18.426 16.0987 18.3654 15.9807 18.2837 15.8778C18.202 15.7749 18.1008 15.6891 17.9859 15.6253C17.8711 15.5615 17.7448 15.521 17.6142 15.506C17.4837 15.491 17.3515 15.5019 17.2251 15.538C13.9051 16.488 11.0951 16.488 7.77514 15.538C7.52 15.4651 7.24634 15.4965 7.01436 15.6253C6.78238 15.7541 6.61108 15.9699 6.53814 16.225C6.46521 16.4801 6.49661 16.7538 6.62545 16.9858C6.75429 17.2178 6.97 17.3891 7.22514 17.462C7.95014 17.669 8.65614 17.835 9.35114 17.961L9.79514 18.035C9.31814 19.405 8.10014 21 7.16814 21C5.42514 21 3.89214 19.445 2.90114 17.356C2.06014 15.15 2.53214 10.488 4.31514 5.182C4.38084 4.98553 4.50593 4.81431 4.67314 4.692C6.06514 3.676 7.48014 3.217 9.39014 3.007C9.57129 2.98716 9.75441 3.0172 9.91973 3.09386C10.085 3.17053 10.2263 3.29091 10.3281 3.442L10.3911 3.549L11.0431 4.837L11.2031 4.818C12.0801 4.728 12.9211 4.728 13.7981 4.818L13.9561 4.837L14.6061 3.55C14.6789 3.40579 14.7854 3.28135 14.9168 3.18731C15.0481 3.09327 15.2002 3.03243 15.3601 3.01L15.4831 3ZM9.50014 9C9.0222 8.99998 8.56006 9.17111 8.1974 9.48241C7.83474 9.7937 7.59555 10.2246 7.52314 10.697L7.50514 10.851L7.50014 11L7.50514 11.15C7.53433 11.538 7.67609 11.9092 7.91304 12.2178C8.15 12.5265 8.47186 12.7594 8.83919 12.8878C9.20651 13.0163 9.60333 13.0349 9.98103 12.9412C10.3587 12.8475 10.7009 12.6456 10.9656 12.3604C11.2303 12.0751 11.406 11.7188 11.4712 11.3352C11.5364 10.9516 11.4883 10.5572 11.3328 10.2005C11.1772 9.84383 10.921 9.54025 10.5955 9.32701C10.2699 9.11377 9.88929 9.00012 9.50014 9ZM15.5001 9C15.0222 8.99998 14.5601 9.17111 14.1974 9.48241C13.8347 9.7937 13.5956 10.2246 13.5231 10.697L13.5051 10.851L13.5001 11L13.5051 11.15C13.5343 11.538 13.6761 11.9092 13.913 12.2178C14.15 12.5265 14.4719 12.7594 14.8392 12.8878C15.2065 13.0163 15.6033 13.0349 15.981 12.9412C16.3587 12.8475 16.7009 12.6456 16.9656 12.3604C17.2303 12.0751 17.406 11.7188 17.4712 11.3352C17.5364 10.9516 17.4883 10.5572 17.3328 10.2005C17.1772 9.84383 16.921 9.54025 16.5955 9.32701C16.2699 9.11377 15.8893 9.00012 15.5001 9Z",
                fill: "white",
                "data-sentry-element": "path",
                "data-sentry-source-file": "discord-logo-svg.tsx",
              }),
            });
        var a9 = (e) => {
            let { chainId: t, open: n, setOpen: r, router: i } = e;
            return (0, W.jsx)(a4.u.Root, {
              show: n,
              as: V.Fragment,
              "data-sentry-element": "unknown",
              "data-sentry-component": "Panel",
              "data-sentry-source-file": "panel.tsx",
              children: (0, W.jsxs)(a5, {
                as: "div",
                className: "relative z-[10000]",
                onClose: r,
                "data-sentry-element": "Dialog",
                "data-sentry-source-file": "panel.tsx",
                children: [
                  (0, W.jsx)("div", {
                    className:
                      "fixed inset-0 bg-transparent bg-opacity-5 backdrop-blur-sm",
                  }),
                  (0, W.jsx)("div", {
                    className: "fixed inset-0 overflow-hidden",
                    children: (0, W.jsx)("div", {
                      className: "absolute inset-0 overflow-hidden",
                      children: (0, W.jsx)("div", {
                        className:
                          "pointer-events-none fixed inset-y-0 right-0 flex max-w-full",
                        children: (0, W.jsx)(a4.u.Child, {
                          as: V.Fragment,
                          enter:
                            "transform transition ease-in-out duration-500 sm:duration-700",
                          enterFrom: "translate-x-full",
                          enterTo: "translate-x-0",
                          leave:
                            "transform transition ease-in-out duration-500 sm:duration-700",
                          leaveFrom: "translate-x-0",
                          leaveTo: "translate-x-full",
                          "data-sentry-element": "unknown",
                          "data-sentry-source-file": "panel.tsx",
                          children: (0, W.jsx)(a5.Panel, {
                            className: "pointer-events-auto max-w-md",
                            "data-sentry-element": "unknown",
                            "data-sentry-source-file": "panel.tsx",
                            children: (0, W.jsxs)("div", {
                              className:
                                "flex h-full flex-col bg-[#171B24] shadow-xl",
                              children: [
                                (0, W.jsx)("div", {
                                  className:
                                    "flex items-center px-4 h-12 justify-end",
                                  children: (0, W.jsx)("div", {
                                    className: "flex items-start",
                                    children: (0, W.jsx)("div", {
                                      className: "flex items-center",
                                      children: (0, W.jsxs)("button", {
                                        type: "button",
                                        className:
                                          "relative rounded-md text-gray-400 hover:text-gray-500 outline-none",
                                        onClick: () => r(!1),
                                        children: [
                                          (0, W.jsx)("span", {
                                            className: "absolute -inset-2.5",
                                          }),
                                          (0, W.jsx)("span", {
                                            className: "sr-only",
                                            children: "Close panel",
                                          }),
                                          (0, W.jsx)(a8, {
                                            className: "h-6 w-6",
                                            "aria-hidden": "true",
                                            "data-sentry-element": "XMarkIcon",
                                            "data-sentry-source-file":
                                              "panel.tsx",
                                          }),
                                        ],
                                      }),
                                    }),
                                  }),
                                }),
                                (0, W.jsxs)("div", {
                                  className:
                                    "flex flex-col text-white text-base font-bold relative mb-6 flex-1 pl-8 pr-16 gap-[40px]",
                                  children: [
                                    (0, W.jsxs)("div", {
                                      className:
                                        "flex flex-col gap-8 items-start",
                                      children: [
                                        (0, W.jsxs)(iY, {
                                          disabled:
                                            "/limit" === i.pathname ||
                                            "/swap" === i.pathname,
                                          onClick: () => {
                                            i.push("/limit?chain=".concat(t)),
                                              r(!1);
                                          },
                                          "data-sentry-element": "PageButton",
                                          "data-sentry-source-file":
                                            "panel.tsx",
                                          children: [
                                            (0, W.jsx)(iJ, {
                                              className: "w-4 h-4",
                                              "data-sentry-element":
                                                "LimitPageSvg",
                                              "data-sentry-source-file":
                                                "panel.tsx",
                                            }),
                                            "Trade",
                                          ],
                                        }),
                                        (0, W.jsxs)(iY, {
                                          disabled: "/earn" === i.pathname,
                                          onClick: () => {
                                            i.push("/earn?chain=".concat(t)),
                                              r(!1);
                                          },
                                          "data-sentry-element": "PageButton",
                                          "data-sentry-source-file":
                                            "panel.tsx",
                                          children: [
                                            (0, W.jsx)(iX, {
                                              className: "w-4 h-4",
                                              "data-sentry-element":
                                                "VaultPageSvg",
                                              "data-sentry-source-file":
                                                "panel.tsx",
                                            }),
                                            "Earn",
                                          ],
                                        }),
                                        (0, W.jsxs)(iY, {
                                          disabled: !1,
                                          onClick: () => {},
                                          "data-sentry-element": "PageButton",
                                          "data-sentry-source-file":
                                            "panel.tsx",
                                          children: [
                                            (0, W.jsx)("svg", {
                                              xmlns:
                                                "http://www.w3.org/2000/svg",
                                              width: "16",
                                              height: "16",
                                              viewBox: "0 0 16 16",
                                              fill: "none",
                                              "data-sentry-element": "svg",
                                              "data-sentry-source-file":
                                                "panel.tsx",
                                              children: (0, W.jsx)("path", {
                                                d: "M4.04241 4.69475L4.04239 4.69478L2.02839 7.71778L2.02834 7.71775L2.02714 7.71975C1.97944 7.79916 1.95304 7.88954 1.95052 7.98214L1.9505 7.98214L1.9505 7.9835L1.95 13.5C1.95 13.6459 2.00795 13.7858 2.11109 13.8889C2.21424 13.9921 2.35413 14.05 2.5 14.05H13.5C13.6459 14.05 13.7858 13.9921 13.8889 13.8889C13.9921 13.7858 14.05 13.6459 14.05 13.5L14.0495 7.9835L14.0495 7.9835L14.0495 7.98214C14.047 7.88954 14.0206 7.79916 13.9729 7.71975L13.9729 7.71972L13.9716 7.71778L11.9576 4.69478L11.9576 4.69475C11.9074 4.61945 11.8393 4.55771 11.7595 4.51501C11.6796 4.47232 11.5905 4.44999 11.5 4.45H10.05V1.5C10.05 1.35413 9.99205 1.21424 9.88891 1.11109C9.78576 1.00795 9.64587 0.95 9.5 0.95H6.5C6.35413 0.95 6.21424 1.00795 6.11109 1.11109C6.00795 1.21424 5.95 1.35413 5.95 1.5V4.45H4.50001C4.50001 4.45 4.5 4.45 4.5 4.45C4.40948 4.44999 4.32035 4.47232 4.24053 4.51501C4.1607 4.55771 4.09265 4.61945 4.04241 4.69475ZM3.05 12.95V8.55H12.95V12.95H3.05ZM10.05 6V5.55H11.2057L12.4721 7.45H3.52791L4.79426 5.55H5.95V6C5.95 6.14587 6.00795 6.28576 6.11109 6.38891C6.21424 6.49205 6.35413 6.55 6.5 6.55H9.5C9.64587 6.55 9.78576 6.49205 9.88891 6.38891C9.99205 6.28576 10.05 6.14587 10.05 6ZM8.95 2.05V5.45H7.05V2.05H8.95Z",
                                                strokeWidth: "0.1",
                                                className:
                                                  "stroke-gray-500 fill-gray-500 group-disabled:stroke-blue-500 group-disabled:fill-blue-500",
                                                "data-sentry-element": "path",
                                                "data-sentry-source-file":
                                                  "panel.tsx",
                                              }),
                                            }),
                                            "Governance",
                                          ],
                                        }),
                                      ],
                                    }),
                                    (0, W.jsx)("svg", {
                                      xmlns: "http://www.w3.org/2000/svg",
                                      width: "192",
                                      height: "2",
                                      viewBox: "0 0 192 2",
                                      fill: "none",
                                      "data-sentry-element": "svg",
                                      "data-sentry-source-file": "panel.tsx",
                                      children: (0, W.jsx)("path", {
                                        d: "M0 1H192",
                                        strokeWidth: "1.5",
                                        className: "stroke-gray-600",
                                        "data-sentry-element": "path",
                                        "data-sentry-source-file": "panel.tsx",
                                      }),
                                    }),
                                    (0, W.jsxs)("div", {
                                      className: "flex flex-col gap-8",
                                      children: [
                                        (0, W.jsx)(iP(), {
                                          className: "link",
                                          target: "_blank",
                                          href: "https://twitter.com/CloberDEX",
                                          rel: "noreferrer",
                                          "data-sentry-element": "Link",
                                          "data-sentry-source-file":
                                            "panel.tsx",
                                          children: (0, W.jsxs)("div", {
                                            className:
                                              "flex flex-row gap-2 items-center",
                                            children: [
                                              (0, W.jsx)(iK, {
                                                className: "w-4 h-4",
                                                "data-sentry-element":
                                                  "TwitterLogoSvg",
                                                "data-sentry-source-file":
                                                  "panel.tsx",
                                              }),
                                              "Twitter",
                                            ],
                                          }),
                                        }),
                                        (0, W.jsx)(iP(), {
                                          className: "link",
                                          target: "_blank",
                                          href: "https://discord.gg/clober-dex",
                                          rel: "noreferrer",
                                          "data-sentry-element": "Link",
                                          "data-sentry-source-file":
                                            "panel.tsx",
                                          children: (0, W.jsxs)("div", {
                                            className:
                                              "flex flex-row gap-2 items-center",
                                            children: [
                                              (0, W.jsx)(a7, {
                                                className: "w-4 h-4",
                                                "data-sentry-element":
                                                  "DiscordLogoSvg",
                                                "data-sentry-source-file":
                                                  "panel.tsx",
                                              }),
                                              "Discord",
                                            ],
                                          }),
                                        }),
                                      ],
                                    }),
                                  ],
                                }),
                              ],
                            }),
                          }),
                        }),
                      }),
                    }),
                  }),
                ],
              }),
            });
          },
          oe = n(1286);
        class ot extends V.Component {
          componentDidCatch(e, t) {
            console.error("ErrorBoundary caught an error: ", e, t),
              localStorage.clear(),
              sessionStorage.clear(),
              oe.Tb({ error: e, errorInfo: t }),
              this.setState({ hasError: !0 });
          }
          render() {
            return this.state.hasError
              ? (0, W.jsx)("div", {
                  className: "text-white",
                  "data-sentry-component": "ErrorBoundary",
                  "data-sentry-source-file": "error-boundary.tsx",
                  children:
                    "Something went wrong. Please refresh the cache and try again.",
                })
              : this.props.children;
          }
          constructor(e) {
            super(e), (this.state = { hasError: !1 });
          }
        }
        var on = n(3389),
          or = n(19001),
          oi = n(28142);
        let {
            chains: oa,
            publicClient: oo,
            webSocketPublicClient: os,
          } = (0, ig.QB)(
            iD.FP.map((e) => i6(e)),
            [
              function (e) {
                return e.rpcUrls.public.http[0]
                  ? { chain: e, rpcUrls: e.rpcUrls.public }
                  : null;
              },
            ],
            { rank: !1 }
          ),
          ou = "14e09398dd595b0d1dccabf414ac4531",
          { wallets: ol } = (({ appName: e, chains: t, projectId: n }) => {
            let r = [
              {
                groupName: "Popular",
                wallets: [
                  r9({ chains: t }),
                  iu({ chains: t }),
                  is({ chains: t, projectId: n }),
                  r7({ appName: e, chains: t }),
                  ia({ chains: t, projectId: n }),
                  il({ chains: t, projectId: n }),
                  r8({ chains: t }),
                ],
              },
            ];
            return { connectors: r4(r), wallets: r };
          })({ appName: "Clober Dex", projectId: ou, chains: oa }),
          oc = r4([
            ...ol,
            {
              groupName: "Popular",
              wallets: [
                (({ chains: e, ...t }) => ({
                  id: "rabby",
                  name: "Rabby Wallet",
                  iconUrl: async () =>
                    (await n.e(1464).then(n.bind(n, 61464))).default,
                  iconBackground: "#8697FF",
                  installed:
                    "undefined" != typeof window &&
                    void 0 !== window.ethereum &&
                    !0 === window.ethereum.isRabby,
                  downloadUrls: {
                    chrome:
                      "https://chrome.google.com/webstore/detail/rabby-wallet/acmacodkjbdgmoleebolmdjonilkdbch",
                    browserExtension: "https://rabby.io",
                  },
                  createConnector: () => ({
                    connector: new rJ._({ chains: e, options: t }),
                    extension: {
                      instructions: {
                        learnMoreUrl: "https://rabby.io/",
                        steps: [
                          {
                            description:
                              "We recommend pinning Rabby to your taskbar for quicker access to your wallet.",
                            step: "install",
                            title: "Install the Rabby extension",
                          },
                          {
                            description:
                              "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",
                            step: "create",
                            title: "Create or Import a Wallet",
                          },
                          {
                            description:
                              "Once you set up your wallet, click below to refresh the browser and load up the extension.",
                            step: "refresh",
                            title: "Refresh your browser",
                          },
                        ],
                      },
                    },
                  }),
                }))({ chains: oa }),
                (({ chains: e, ...t }) => {
                  var r;
                  return {
                    id: "phantom",
                    name: "Phantom",
                    iconUrl: async () =>
                      (await n.e(1790).then(n.bind(n, 1790))).default,
                    iconBackground: "#9A8AEE",
                    installed:
                      ("undefined" != typeof window &&
                        !!(null == (r = window.phantom)
                          ? void 0
                          : r.ethereum)) ||
                      void 0,
                    downloadUrls: {
                      android:
                        "https://play.google.com/store/apps/details?id=app.phantom",
                      ios: "https://apps.apple.com/app/phantom-solana-wallet/1598432977",
                      mobile: "https://phantom.app/download",
                      qrCode: "https://phantom.app/download",
                      chrome:
                        "https://chrome.google.com/webstore/detail/phantom/bfnaelmomeimhlpmgjnjophhpkkoljpa",
                      firefox:
                        "https://addons.mozilla.org/firefox/addon/phantom-app/",
                      browserExtension: "https://phantom.app/download",
                    },
                    createConnector: () => {
                      let n = new rJ._({
                        chains: e,
                        options: {
                          getProvider: () => {
                            var e;
                            return "undefined" != typeof window
                              ? null == (e = window.phantom)
                                ? void 0
                                : e.ethereum
                              : void 0;
                          },
                          ...t,
                        },
                      });
                      return {
                        connector: n,
                        extension: {
                          instructions: {
                            steps: [
                              {
                                description:
                                  "We recommend pinning Phantom to your taskbar for easier access to your wallet.",
                                step: "install",
                                title: "Install the Phantom extension",
                              },
                              {
                                description:
                                  "Be sure to back up your wallet using a secure method. Never share your secret recovery phrase with anyone.",
                                step: "create",
                                title: "Create or Import a Wallet",
                              },
                              {
                                description:
                                  "Once you set up your wallet, click below to refresh the browser and load up the extension.",
                                step: "refresh",
                                title: "Refresh your browser",
                              },
                            ],
                            learnMoreUrl: "https://help.phantom.app",
                          },
                        },
                      };
                    },
                  };
                })({ chains: oa }),
                (({
                  chains: e,
                  projectId: t,
                  walletConnectOptions: r,
                  walletConnectVersion: i = "2",
                  ...a
                }) => {
                  let o =
                      "undefined" != typeof window &&
                      void 0 !== window.okxwallet,
                    s = !o;
                  return {
                    id: "okx",
                    name: "OKX Wallet",
                    iconUrl: async () =>
                      (await n.e(3258).then(n.bind(n, 33258))).default,
                    iconAccent: "#000",
                    iconBackground: "#000",
                    downloadUrls: {
                      android:
                        "https://play.google.com/store/apps/details?id=com.okinc.okex.gp",
                      ios: "https://itunes.apple.com/app/id1327268470?mt=8",
                      mobile: "https://okx.com/download",
                      qrCode: "https://okx.com/download",
                      chrome:
                        "https://chrome.google.com/webstore/detail/okx-wallet/mcohilncbfahbmgdjkbpemcciiolgcge",
                      edge: "https://microsoftedge.microsoft.com/addons/detail/okx-wallet/pbpjkcldjiffchgbbndmhojiacbgflha",
                      firefox:
                        "https://addons.mozilla.org/firefox/addon/okexwallet/",
                      browserExtension: "https://okx.com/download",
                    },
                    createConnector: () => {
                      let n = s
                        ? iC({
                            projectId: t,
                            chains: e,
                            version: i,
                            options: r,
                          })
                        : new rJ._({
                            chains: e,
                            options: {
                              getProvider: () => window.okxwallet,
                              ...a,
                            },
                          });
                      return {
                        connector: n,
                        mobile: {
                          getUri: s
                            ? async () => {
                                let e = await iE(n, i);
                                return "undefined" != typeof navigator &&
                                  /android/i.test(navigator.userAgent)
                                  ? e
                                  : `okex://main/wc?uri=${encodeURIComponent(
                                      e
                                    )}`;
                              }
                            : void 0,
                        },
                        qrCode: s
                          ? {
                              getUri: async () => iE(n, i),
                              instructions: {
                                learnMoreUrl: "https://okx.com/web3/",
                                steps: [
                                  {
                                    description:
                                      "We recommend putting OKX Wallet on your home screen for quicker access.",
                                    step: "install",
                                    title: "Open the OKX Wallet app",
                                  },
                                  {
                                    description:
                                      "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",
                                    step: "create",
                                    title: "Create or Import a Wallet",
                                  },
                                  {
                                    description:
                                      "After you scan, a connection prompt will appear for you to connect your wallet.",
                                    step: "scan",
                                    title: "Tap the scan button",
                                  },
                                ],
                              },
                            }
                          : void 0,
                        extension: {
                          instructions: {
                            learnMoreUrl: "https://okx.com/web3/",
                            steps: [
                              {
                                description:
                                  "We recommend pinning OKX Wallet to your taskbar for quicker access to your wallet.",
                                step: "install",
                                title: "Install the OKX Wallet extension",
                              },
                              {
                                description:
                                  "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",
                                step: "create",
                                title: "Create or Import a Wallet",
                              },
                              {
                                description:
                                  "Once you set up your wallet, click below to refresh the browser and load up the extension.",
                                step: "refresh",
                                title: "Refresh your browser",
                              },
                            ],
                          },
                        },
                      };
                    },
                  };
                })({ chains: oa, projectId: ou }),
              ],
            },
            {
              groupName: "The others",
              wallets: [
                (({ chains: e, ...t }) => {
                  var r, i;
                  let a =
                    "undefined" != typeof window &&
                    void 0 !== window.enkrypt &&
                    (null ==
                    (i =
                      null == (r = null == window ? void 0 : window.enkrypt)
                        ? void 0
                        : r.providers)
                      ? void 0
                      : i.ethereum);
                  return {
                    id: "enkrypt",
                    name: "Enkrypt Wallet",
                    installed: !!a || void 0,
                    iconUrl: async () =>
                      (await n.e(811).then(n.bind(n, 10811))).default,
                    iconBackground: "#FFFFFF",
                    downloadUrls: {
                      qrCode: "https://www.enkrypt.com",
                      chrome:
                        "https://chrome.google.com/webstore/detail/enkrypt-ethereum-polkadot/kkpllkodjeloidieedojogacfhpaihoh",
                      browserExtension: "https://www.enkrypt.com/",
                      edge: "https://microsoftedge.microsoft.com/addons/detail/enkrypt-ethereum-polkad/gfenajajnjjmmdojhdjmnngomkhlnfjl",
                      firefox:
                        "https://addons.mozilla.org/en-US/firefox/addon/enkrypt/",
                      opera:
                        "https://addons.opera.com/en/extensions/details/enkrypt/",
                      safari:
                        "https://apps.apple.com/app/enkrypt-web3-wallet/id1640164309",
                    },
                    createConnector: () => ({
                      connector: new rJ._({
                        chains: e,
                        options: {
                          getProvider: () => {
                            var e, t;
                            return a
                              ? null ==
                                (t =
                                  null ==
                                  (e = null == window ? void 0 : window.enkrypt)
                                    ? void 0
                                    : e.providers)
                                ? void 0
                                : t.ethereum
                              : void 0;
                          },
                          ...t,
                        },
                      }),
                      extension: {
                        instructions: {
                          learnMoreUrl:
                            "https://blog.enkrypt.com/what-is-a-web3-wallet/",
                          steps: [
                            {
                              description:
                                "We recommend pinning Enkrypt Wallet to your taskbar for quicker access to your wallet.",
                              step: "install",
                              title: "Install the Enkrypt Wallet extension",
                            },
                            {
                              description:
                                "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",
                              step: "create",
                              title: "Create or Import a Wallet",
                            },
                            {
                              description:
                                "Once you set up your wallet, click below to refresh the browser and load up the extension.",
                              step: "refresh",
                              title: "Refresh your browser",
                            },
                          ],
                        },
                      },
                    }),
                  };
                })({ chains: oa }),
                (({
                  chains: e,
                  projectId: t,
                  walletConnectOptions: r,
                  walletConnectVersion: i = "2",
                  ...a
                }) => {
                  let o = !!i_(),
                    s = !o;
                  return {
                    id: "trust",
                    name: "Trust Wallet",
                    iconUrl: async () =>
                      (await n.e(7645).then(n.bind(n, 97645))).default,
                    installed: o || void 0,
                    iconAccent: "#3375BB",
                    iconBackground: "#fff",
                    downloadUrls: {
                      android:
                        "https://play.google.com/store/apps/details?id=com.wallet.crypto.trustapp",
                      ios: "https://apps.apple.com/us/app/trust-crypto-bitcoin-wallet/id1288339409",
                      mobile: "https://trustwallet.com/download",
                      qrCode: "https://trustwallet.com/download",
                      chrome:
                        "https://chrome.google.com/webstore/detail/trust-wallet/egjidjbpglichdcondbcbdnbeeppgdph",
                      browserExtension:
                        "https://trustwallet.com/browser-extension",
                    },
                    createConnector: () => {
                      let n;
                      let o = async () => {
                          let e = await iE(l, i);
                          return `trust://wc?uri=${encodeURIComponent(e)}`;
                        },
                        u = async () => {
                          let e = await iE(l, i);
                          return e;
                        },
                        l = s
                          ? iC({
                              projectId: t,
                              chains: e,
                              version: i,
                              options: r,
                            })
                          : new rJ._({
                              chains: e,
                              options: { getProvider: i_, ...a },
                            });
                      return (
                        s &&
                          (n = {
                            getUri: u,
                            instructions: {
                              learnMoreUrl: "https://trustwallet.com/",
                              steps: [
                                {
                                  description:
                                    "Put Trust Wallet on your home screen for faster access to your wallet.",
                                  step: "install",
                                  title: "Open the Trust Wallet app",
                                },
                                {
                                  description:
                                    "Create a new wallet or import an existing one.",
                                  step: "create",
                                  title: "Create or Import a Wallet",
                                },
                                {
                                  description:
                                    "Choose New Connection, then scan the QR code and confirm the prompt to connect.",
                                  step: "scan",
                                  title: "Tap WalletConnect in Settings",
                                },
                              ],
                            },
                          }),
                        {
                          connector: l,
                          mobile: { getUri: s ? o : void 0 },
                          qrCode: n,
                          extension: {
                            instructions: {
                              learnMoreUrl:
                                "https://trustwallet.com/browser-extension",
                              steps: [
                                {
                                  description:
                                    "Click at the top right of your browser and pin Trust Wallet for easy access.",
                                  step: "install",
                                  title: "Install the Trust Wallet extension",
                                },
                                {
                                  description:
                                    "Create a new wallet or import an existing one.",
                                  step: "create",
                                  title: "Create or Import a wallet",
                                },
                                {
                                  description:
                                    "Once you set up Trust Wallet, click below to refresh the browser and load up the extension.",
                                  step: "refresh",
                                  title: "Refresh your browser",
                                },
                              ],
                            },
                          },
                        }
                      );
                    },
                  };
                })({ chains: oa, projectId: ou }),
                (({ chains: e, ...t }) => {
                  let r =
                    "undefined" != typeof window &&
                    void 0 !== (null == window ? void 0 : window.xfi);
                  return {
                    id: "xdefi",
                    name: "XDEFI Wallet",
                    installed: r,
                    iconUrl: async () =>
                      (await n.e(9315).then(n.bind(n, 89315))).default,
                    iconBackground: "#fff",
                    downloadUrls: {
                      chrome:
                        "https://chrome.google.com/webstore/detail/xdefi-wallet/hmeobnfnfcmdkdcmlblgagmfpfboieaf",
                      browserExtension: "https://xdefi.io",
                    },
                    createConnector: () => ({
                      connector: new rJ._({
                        chains: e,
                        options: {
                          getProvider: () => {
                            var e;
                            return r
                              ? null == (e = window.xfi)
                                ? void 0
                                : e.ethereum
                              : void 0;
                          },
                          ...t,
                        },
                      }),
                      extension: {
                        instructions: {
                          learnMoreUrl:
                            "https://xdefi.io/support-categories/xdefi-wallet/",
                          steps: [
                            {
                              description:
                                "We recommend pinning XDEFI Wallet to your taskbar for quicker access to your wallet.",
                              step: "install",
                              title: "Install the XDEFI Wallet extension",
                            },
                            {
                              description:
                                "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",
                              step: "create",
                              title: "Create or Import a Wallet",
                            },
                            {
                              description:
                                "Once you set up your wallet, click below to refresh the browser and load up the extension.",
                              step: "refresh",
                              title: "Refresh your browser",
                            },
                          ],
                        },
                      },
                    }),
                  };
                })({ chains: oa }),
                (({
                  chains: e,
                  projectId: t,
                  walletConnectOptions: r,
                  walletConnectVersion: i = "2",
                  ...a
                }) => {
                  let o =
                      "undefined" != typeof window &&
                      ((void 0 !== window.ethereum &&
                        window.ethereum.isZerion) ||
                        void 0 !== window.zerionWallet),
                    s = !o;
                  return {
                    id: "zerion",
                    name: "Zerion",
                    iconUrl: async () =>
                      (await n.e(1214).then(n.bind(n, 71214))).default,
                    iconAccent: "#2962ef",
                    iconBackground: "#2962ef",
                    installed: s ? void 0 : o,
                    downloadUrls: {
                      android:
                        "https://play.google.com/store/apps/details?id=io.zerion.android",
                      ios: "https://apps.apple.com/app/apple-store/id1456732565",
                      mobile: "https://link.zerion.io/pt3gdRP0njb",
                      qrCode: "https://link.zerion.io/pt3gdRP0njb",
                      chrome:
                        "https://chrome.google.com/webstore/detail/klghhnkeealcohjjanjjdaeeggmfmlpl",
                      browserExtension: "https://zerion.io/extension",
                    },
                    createConnector: () => {
                      let n = s
                          ? iC({
                              projectId: t,
                              chains: e,
                              version: i,
                              options: r,
                            })
                          : new rJ._({
                              chains: e,
                              options: {
                                getProvider: () =>
                                  "undefined" != typeof window
                                    ? window.zerionWallet || window.ethereum
                                    : void 0,
                                ...a,
                              },
                            }),
                        o = async () => {
                          let e = await iE(n, i);
                          return ("undefined" != typeof navigator &&
                            /iPhone|iPod/.test(navigator.userAgent)) ||
                            ("undefined" != typeof navigator &&
                              (/iPad/.test(navigator.userAgent) ||
                                ("MacIntel" === navigator.platform &&
                                  navigator.maxTouchPoints > 1)))
                            ? `zerion://wc?uri=${encodeURIComponent(e)}`
                            : e;
                        };
                      return {
                        connector: n,
                        mobile: { getUri: s ? o : void 0 },
                        qrCode: s
                          ? {
                              getUri: o,
                              instructions: {
                                learnMoreUrl:
                                  "https://zerion.io/blog/announcing-the-zerion-smart-wallet/",
                                steps: [
                                  {
                                    description:
                                      "We recommend putting Zerion on your home screen for quicker access.",
                                    step: "install",
                                    title: "Open the Zerion app",
                                  },
                                  {
                                    description:
                                      "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",
                                    step: "create",
                                    title: "Create or Import a Wallet",
                                  },
                                  {
                                    description:
                                      "After you scan, a connection prompt will appear for you to connect your wallet.",
                                    step: "scan",
                                    title: "Tap the scan button",
                                  },
                                ],
                              },
                            }
                          : void 0,
                        extension: {
                          instructions: {
                            learnMoreUrl: "https://help.zerion.io/en/",
                            steps: [
                              {
                                description:
                                  "We recommend pinning Zerion to your taskbar for quicker access to your wallet.",
                                step: "install",
                                title: "Install the Zerion extension",
                              },
                              {
                                description:
                                  "Be sure to back up your wallet using a secure method. Never share your secret phrase with anyone.",
                                step: "create",
                                title: "Create or Import a Wallet",
                              },
                              {
                                description:
                                  "Once you set up your wallet, click below to refresh the browser and load up the extension.",
                                step: "refresh",
                                title: "Refresh your browser",
                              },
                            ],
                          },
                        },
                      };
                    },
                  };
                })({ chains: oa, projectId: ou }),
              ],
            },
          ]),
          od = (0, el._g)({
            autoConnect: !0,
            connectors: oc,
            publicClient: oo,
            webSocketPublicClient: os,
          }),
          of = (e) => {
            let { children: t } = e,
              n = (0, el.NL)();
            return (
              (0, V.useEffect)(() => {
                localStorage.removeItem("wagmi.cache");
              }, [n]),
              (0, W.jsx)(W.Fragment, { children: t })
            );
          },
          op = (e) => {
            let { children: t } = e;
            return (0, W.jsx)(el.eM, {
              config: od,
              "data-sentry-element": "WagmiConfig",
              "data-sentry-component": "WalletProvider",
              "data-sentry-source-file": "_app.tsx",
              children: (0, W.jsx)(ng, {
                chains: iD.FP,
                theme: ih(),
                "data-sentry-element": "RainbowKitProvider",
                "data-sentry-source-file": "_app.tsx",
                children: (0, W.jsx)(of, {
                  "data-sentry-element": "CacheProvider",
                  "data-sentry-source-file": "_app.tsx",
                  children: t,
                }),
              }),
            });
          },
          oh = (e) => {
            let { children: t } = e;
            return (0, W.jsx)(i8.U, {
              "data-sentry-element": "OpenOrderProvider",
              "data-sentry-component": "LimitProvidersWrapper",
              "data-sentry-source-file": "_app.tsx",
              children: (0, W.jsx)(i7.S, {
                "data-sentry-element": "LimitContractProvider",
                "data-sentry-source-file": "_app.tsx",
                children: (0, W.jsx)(i5.F, {
                  "data-sentry-element": "LimitProvider",
                  "data-sentry-source-file": "_app.tsx",
                  children: (0, W.jsx)(i2.e, {
                    "data-sentry-element": "MarketProvider",
                    "data-sentry-source-file": "_app.tsx",
                    children: t,
                  }),
                }),
              }),
            });
          },
          om = (e) => {
            let { children: t } = e;
            return (0, W.jsx)(i4.s, {
              "data-sentry-element": "SwapProvider",
              "data-sentry-component": "SwapProvidersWrapper",
              "data-sentry-source-file": "_app.tsx",
              children: (0, W.jsx)(i9.g, {
                "data-sentry-element": "SwapContractProvider",
                "data-sentry-source-file": "_app.tsx",
                children: t,
              }),
            });
          },
          oy = (e) => {
            let { children: t } = e;
            return (0, W.jsx)(or.n, {
              "data-sentry-element": "PoolProvider",
              "data-sentry-component": "PoolProvidersWrapper",
              "data-sentry-source-file": "_app.tsx",
              children: (0, W.jsx)(oi.V, {
                "data-sentry-element": "PoolContractProvider",
                "data-sentry-source-file": "_app.tsx",
                children: t,
              }),
            });
          },
          og = (e) => {
            let { open: t, setOpen: n, children: r } = e,
              i = (0, iw.useRouter)(),
              { selectedChain: a } = (0, iO.ql)();
            return (0, W.jsx)(a9, {
              chainId: a.id,
              open: t,
              setOpen: n,
              router: i,
              "data-sentry-element": "Panel",
              "data-sentry-component": "PanelWrapper",
              "data-sentry-source-file": "_app.tsx",
              children: r,
            });
          },
          ob = (e) => {
            let { children: t } = e,
              n = (0, iw.useRouter)(),
              { selectedChain: r } = (0, iO.ql)();
            return (0, W.jsxs)("div", {
              className: "flex flex-1 relative justify-center bg-gray-950",
              "data-sentry-component": "MainComponentWrapper",
              "data-sentry-source-file": "_app.tsx",
              children: [
                (0, W.jsxs)("div", {
                  className:
                    "flex w-full flex-col items-center gap-4 sm:gap-6 p-4 pb-0",
                  children: [
                    (0, W.jsxs)("div", {
                      className: "relative flex gap-4 mt-14",
                      children: [
                        (0, W.jsx)("button", {
                          className:
                            "flex font-bold items-center justify-center text-base sm:text-2xl w-16 sm:w-[120px] bg-transparent text-gray-500 disabled:text-white border-0 rounded-none p-2 border-b-4 border-b-transparent border-t-4 border-t-transparent disabled:border-b-white",
                          disabled: "/limit" === n.pathname,
                          onClick: () => n.push("/limit?chain=".concat(r.id)),
                          children: "Limit",
                        }),
                        (0, W.jsx)("button", {
                          className:
                            "flex font-bold items-center justify-center text-base sm:text-2xl w-16 sm:w-[120px] bg-transparent text-gray-500 disabled:text-white border-0 rounded-none p-2 border-b-4 border-b-transparent border-t-4 border-t-transparent disabled:border-b-white",
                          disabled: "/swap" === n.pathname,
                          onClick: () => {
                            iD.NH.includes(r.id) ||
                              n.push("/swap?chain=".concat(r.id));
                          },
                          children: "Swap",
                        }),
                      ],
                    }),
                    t,
                  ],
                }),
                (0, W.jsx)("div", {
                  className:
                    "absolute w-full h-[30%] bottom-0 bg-gradient-to-t from-blue-500 to-transparent opacity-[15%] pointer-events-none",
                }),
              ],
            });
          },
          ov = () => {
            let { selectedChain: e } = (0, iO.ql)(),
              { data: t } = (0, el.aM)(
                ["latest-subgraph-block-number", e.id],
                async () => (0, iT.Le)({ chainId: e.id }),
                {
                  initialData: 0,
                  refetchInterval: 1e4,
                  refetchIntervalInBackground: !0,
                }
              );
            return (0, W.jsx)(i1, {
              latestSubgraphBlockNumber: t,
              "data-sentry-element": "Footer",
              "data-sentry-component": "FooterWrapper",
              "data-sentry-source-file": "_app.tsx",
            });
          };
        function ow(e) {
          let { Component: t, pageProps: n } = e,
            [r, i] = (0, V.useState)(!1),
            [a, o] = (0, V.useState)([]),
            s = (0, iw.useRouter)(),
            u = (0, V.useCallback)(async () => {
              a.length > 1 &&
                (o((e) => e.slice(0, e.length - 1)), s.push(a[a.length - 2]));
            }, [a, s]);
          return (
            (0, V.useEffect)(() => {
              o((e) => [...e, s.asPath]);
            }, [s.asPath]),
            (0, V.useEffect)(
              () => (
                window.addEventListener("popstate", u),
                () => window.removeEventListener("popstate", u)
              ),
              [u]
            ),
            (0, W.jsx)(W.Fragment, {
              children: (0, W.jsxs)(ot, {
                "data-sentry-element": "ErrorBoundary",
                "data-sentry-source-file": "_app.tsx",
                children: [
                  (0, W.jsxs)(iy(), {
                    "data-sentry-element": "Head",
                    "data-sentry-source-file": "_app.tsx",
                    children: [
                      (0, W.jsx)("title", {
                        children: "Clober | Fully On-chain Order Book",
                      }),
                      (0, W.jsx)("meta", {
                        content:
                          "Join Clober DEX and Start Trading on a Fully On-chain Order Book. Eliminate Counterparty Risk. Place Limit Orders. Low Transaction Costs Powered by LOBSTER.",
                        name: "description",
                        "data-sentry-element": "meta",
                        "data-sentry-source-file": "_app.tsx",
                      }),
                      (0, W.jsx)("link", {
                        rel: "apple-touch-icon",
                        href: "/favicon.png",
                      }),
                      (0, W.jsx)("link", {
                        rel: "icon",
                        type: "image/png",
                        href: "/favicon.png",
                      }),
                    ],
                  }),
                  (0, W.jsx)(op, {
                    "data-sentry-element": "WalletProvider",
                    "data-sentry-source-file": "_app.tsx",
                    children: (0, W.jsx)(i3.k, {
                      "data-sentry-element": "TransactionProvider",
                      "data-sentry-source-file": "_app.tsx",
                      children: (0, W.jsx)(iO.WZ, {
                        "data-sentry-element": "ChainProvider",
                        "data-sentry-source-file": "_app.tsx",
                        children: (0, W.jsx)(on.T, {
                          "data-sentry-element": "CurrencyProvider",
                          "data-sentry-source-file": "_app.tsx",
                          children: s.pathname.includes("/earn")
                            ? (0, W.jsx)(oy, {
                                children: (0, W.jsxs)("div", {
                                  className:
                                    "flex flex-col w-full min-h-[100vh] bg-gray-950",
                                  children: [
                                    (0, W.jsx)(og, { open: r, setOpen: i }),
                                    (0, W.jsx)(iQ, {
                                      onMenuClick: () => i(!0),
                                    }),
                                    (0, W.jsx)(t, { ...n }),
                                  ],
                                }),
                              })
                            : (0, W.jsx)(oh, {
                                children: (0, W.jsx)(om, {
                                  children: (0, W.jsxs)("div", {
                                    className:
                                      "flex flex-col w-[100vw] min-h-[100vh] bg-gray-950",
                                    children: [
                                      (0, W.jsx)(og, { open: r, setOpen: i }),
                                      (0, W.jsx)(iQ, {
                                        onMenuClick: () => i(!0),
                                      }),
                                      (0, W.jsx)(ob, {
                                        children: (0, W.jsx)(t, { ...n }),
                                      }),
                                      (0, W.jsx)(ov, {}),
                                    ],
                                  }),
                                }),
                              }),
                        }),
                      }),
                    }),
                  }),
                ],
              }),
            })
          );
        }
        var oE = iv()(() => Promise.resolve(ow), { ssr: !1 });
      },
      84062: function (e, t, n) {
        "use strict";
        let r, i, a, o, s, u, l, c, d, f, p, h, m, y, g, b, v, w, E, x, C, _;
        function T(e) {
          let t;
          let n = e[0],
            r = 1;
          for (; r < e.length; ) {
            let i = e[r],
              a = e[r + 1];
            if (
              ((r += 2),
              ("optionalAccess" === i || "optionalCall" === i) && null == n)
            )
              return;
            "access" === i || "optionalAccess" === i
              ? ((t = n), (n = a(n)))
              : ("call" === i || "optionalCall" === i) &&
                ((n = a((...e) => n.call(t, ...e))), (t = void 0));
          }
          return n;
        }
        let S = "8.45.0",
          P = globalThis;
        function O(e, t, n) {
          let r = n || P,
            i = (r.__SENTRY__ = r.__SENTRY__ || {}),
            a = (i[S] = i[S] || {});
          return a[e] || (a[e] = t());
        }
        function I(e) {
          let t = (e.__SENTRY__ = e.__SENTRY__ || {});
          return (t.version = t.version || S), (t[S] = t[S] || {});
        }
        function A() {
          return Date.now() / 1e3;
        }
        let k = (function () {
            let { performance: e } = P;
            if (!e || !e.now) return A;
            let t = Date.now() - e.now(),
              n = void 0 == e.timeOrigin ? t : e.timeOrigin;
            return () => (n + e.now()) / 1e3;
          })(),
          j = (() => {
            let { performance: e } = P;
            if (!e || !e.now) return;
            let t = e.now(),
              n = Date.now(),
              r = e.timeOrigin ? Math.abs(e.timeOrigin + t - n) : 36e5,
              i = e.timing && e.timing.navigationStart,
              a = "number" == typeof i ? Math.abs(i + t - n) : 36e5;
            return r < 36e5 || a < 36e5 ? (r <= a ? e.timeOrigin : i) : n;
          })();
        function B() {
          let e = P.crypto || P.msCrypto,
            t = () => 16 * Math.random();
          try {
            if (e && e.randomUUID) return e.randomUUID().replace(/-/g, "");
            e &&
              e.getRandomValues &&
              (t = () => {
                let t = new Uint8Array(1);
                return e.getRandomValues(t), t[0];
              });
          } catch (e) {}
          return "10000000100040008000100000000000".replace(/[018]/g, (e) =>
            (e ^ ((15 & t()) >> (e / 4))).toString(16)
          );
        }
        let M = Object.prototype.toString;
        function N(e, t) {
          return M.call(e) === `[object ${t}]`;
        }
        let D = ["debug", "info", "warn", "error", "log", "assert", "trace"],
          R = {},
          F = O("logger", function () {
            let e = !1,
              t = {
                enable: () => {
                  e = !0;
                },
                disable: () => {
                  e = !1;
                },
                isEnabled: () => e,
              };
            return (
              D.forEach((e) => {
                t[e] = () => void 0;
              }),
              t
            );
          });
        function L() {
          return B().substring(16);
        }
        let U = "_sentrySpan";
        function $(e, t) {
          t
            ? (function (e, t, n) {
                try {
                  Object.defineProperty(e, t, {
                    value: n,
                    writable: !0,
                    configurable: !0,
                  });
                } catch (e) {}
              })(e, U, t)
            : delete e[U];
        }
        class q {
          constructor() {
            (this._notifyingListeners = !1),
              (this._scopeListeners = []),
              (this._eventProcessors = []),
              (this._breadcrumbs = []),
              (this._attachments = []),
              (this._user = {}),
              (this._tags = {}),
              (this._extra = {}),
              (this._contexts = {}),
              (this._sdkProcessingMetadata = {}),
              (this._propagationContext = { traceId: B(), spanId: L() });
          }
          clone() {
            let e = new q();
            return (
              (e._breadcrumbs = [...this._breadcrumbs]),
              (e._tags = { ...this._tags }),
              (e._extra = { ...this._extra }),
              (e._contexts = { ...this._contexts }),
              this._contexts.flags &&
                (e._contexts.flags = {
                  values: [...this._contexts.flags.values],
                }),
              (e._user = this._user),
              (e._level = this._level),
              (e._session = this._session),
              (e._transactionName = this._transactionName),
              (e._fingerprint = this._fingerprint),
              (e._eventProcessors = [...this._eventProcessors]),
              (e._requestSession = this._requestSession),
              (e._attachments = [...this._attachments]),
              (e._sdkProcessingMetadata = { ...this._sdkProcessingMetadata }),
              (e._propagationContext = { ...this._propagationContext }),
              (e._client = this._client),
              (e._lastEventId = this._lastEventId),
              $(e, this[U]),
              e
            );
          }
          setClient(e) {
            this._client = e;
          }
          setLastEventId(e) {
            this._lastEventId = e;
          }
          getClient() {
            return this._client;
          }
          lastEventId() {
            return this._lastEventId;
          }
          addScopeListener(e) {
            this._scopeListeners.push(e);
          }
          addEventProcessor(e) {
            return this._eventProcessors.push(e), this;
          }
          setUser(e) {
            return (
              (this._user = e || {
                email: void 0,
                id: void 0,
                ip_address: void 0,
                username: void 0,
              }),
              this._session &&
                (function (e, t = {}) {
                  if (
                    (!t.user ||
                      (!e.ipAddress &&
                        t.user.ip_address &&
                        (e.ipAddress = t.user.ip_address),
                      e.did ||
                        t.did ||
                        (e.did = t.user.id || t.user.email || t.user.username)),
                    (e.timestamp = t.timestamp || k()),
                    t.abnormal_mechanism &&
                      (e.abnormal_mechanism = t.abnormal_mechanism),
                    t.ignoreDuration && (e.ignoreDuration = t.ignoreDuration),
                    t.sid && (e.sid = 32 === t.sid.length ? t.sid : B()),
                    void 0 !== t.init && (e.init = t.init),
                    !e.did && t.did && (e.did = `${t.did}`),
                    "number" == typeof t.started && (e.started = t.started),
                    e.ignoreDuration)
                  )
                    e.duration = void 0;
                  else if ("number" == typeof t.duration)
                    e.duration = t.duration;
                  else {
                    let t = e.timestamp - e.started;
                    e.duration = t >= 0 ? t : 0;
                  }
                  t.release && (e.release = t.release),
                    t.environment && (e.environment = t.environment),
                    !e.ipAddress && t.ipAddress && (e.ipAddress = t.ipAddress),
                    !e.userAgent && t.userAgent && (e.userAgent = t.userAgent),
                    "number" == typeof t.errors && (e.errors = t.errors),
                    t.status && (e.status = t.status);
                })(this._session, { user: e }),
              this._notifyScopeListeners(),
              this
            );
          }
          getUser() {
            return this._user;
          }
          getRequestSession() {
            return this._requestSession;
          }
          setRequestSession(e) {
            return (this._requestSession = e), this;
          }
          setTags(e) {
            return (
              (this._tags = { ...this._tags, ...e }),
              this._notifyScopeListeners(),
              this
            );
          }
          setTag(e, t) {
            return (
              (this._tags = { ...this._tags, [e]: t }),
              this._notifyScopeListeners(),
              this
            );
          }
          setExtras(e) {
            return (
              (this._extra = { ...this._extra, ...e }),
              this._notifyScopeListeners(),
              this
            );
          }
          setExtra(e, t) {
            return (
              (this._extra = { ...this._extra, [e]: t }),
              this._notifyScopeListeners(),
              this
            );
          }
          setFingerprint(e) {
            return (this._fingerprint = e), this._notifyScopeListeners(), this;
          }
          setLevel(e) {
            return (this._level = e), this._notifyScopeListeners(), this;
          }
          setTransactionName(e) {
            return (
              (this._transactionName = e), this._notifyScopeListeners(), this
            );
          }
          setContext(e, t) {
            return (
              null === t ? delete this._contexts[e] : (this._contexts[e] = t),
              this._notifyScopeListeners(),
              this
            );
          }
          setSession(e) {
            return (
              e ? (this._session = e) : delete this._session,
              this._notifyScopeListeners(),
              this
            );
          }
          getSession() {
            return this._session;
          }
          update(e) {
            if (!e) return this;
            let t = "function" == typeof e ? e(this) : e,
              [n, r] =
                t instanceof H
                  ? [t.getScopeData(), t.getRequestSession()]
                  : N(t, "Object")
                  ? [e, e.requestSession]
                  : [],
              {
                tags: i,
                extra: a,
                user: o,
                contexts: s,
                level: u,
                fingerprint: l = [],
                propagationContext: c,
              } = n || {};
            return (
              (this._tags = { ...this._tags, ...i }),
              (this._extra = { ...this._extra, ...a }),
              (this._contexts = { ...this._contexts, ...s }),
              o && Object.keys(o).length && (this._user = o),
              u && (this._level = u),
              l.length && (this._fingerprint = l),
              c && (this._propagationContext = c),
              r && (this._requestSession = r),
              this
            );
          }
          clear() {
            return (
              (this._breadcrumbs = []),
              (this._tags = {}),
              (this._extra = {}),
              (this._user = {}),
              (this._contexts = {}),
              (this._level = void 0),
              (this._transactionName = void 0),
              (this._fingerprint = void 0),
              (this._requestSession = void 0),
              (this._session = void 0),
              $(this, void 0),
              (this._attachments = []),
              this.setPropagationContext({ traceId: B() }),
              this._notifyScopeListeners(),
              this
            );
          }
          addBreadcrumb(e, t) {
            let n = "number" == typeof t ? t : 100;
            if (n <= 0) return this;
            let r = { timestamp: A(), ...e },
              i = this._breadcrumbs;
            return (
              i.push(r),
              (this._breadcrumbs = i.length > n ? i.slice(-n) : i),
              this._notifyScopeListeners(),
              this
            );
          }
          getLastBreadcrumb() {
            return this._breadcrumbs[this._breadcrumbs.length - 1];
          }
          clearBreadcrumbs() {
            return (this._breadcrumbs = []), this._notifyScopeListeners(), this;
          }
          addAttachment(e) {
            return this._attachments.push(e), this;
          }
          clearAttachments() {
            return (this._attachments = []), this;
          }
          getScopeData() {
            return {
              breadcrumbs: this._breadcrumbs,
              attachments: this._attachments,
              contexts: this._contexts,
              tags: this._tags,
              extra: this._extra,
              user: this._user,
              level: this._level,
              fingerprint: this._fingerprint || [],
              eventProcessors: this._eventProcessors,
              propagationContext: this._propagationContext,
              sdkProcessingMetadata: this._sdkProcessingMetadata,
              transactionName: this._transactionName,
              span: this[U],
            };
          }
          setSDKProcessingMetadata(e) {
            return (
              (this._sdkProcessingMetadata = (function e(t, n, r = 2) {
                if (!n || "object" != typeof n || r <= 0) return n;
                if (t && n && 0 === Object.keys(n).length) return t;
                let i = { ...t };
                for (let t in n)
                  Object.prototype.hasOwnProperty.call(n, t) &&
                    (i[t] = e(i[t], n[t], r - 1));
                return i;
              })(this._sdkProcessingMetadata, e, 2)),
              this
            );
          }
          setPropagationContext(e) {
            return (this._propagationContext = { spanId: L(), ...e }), this;
          }
          getPropagationContext() {
            return this._propagationContext;
          }
          captureException(e, t) {
            let n = t && t.event_id ? t.event_id : B();
            if (!this._client)
              return (
                F.warn(
                  "No client configured on scope - will not capture exception!"
                ),
                n
              );
            let r = Error("Sentry syntheticException");
            return (
              this._client.captureException(
                e,
                {
                  originalException: e,
                  syntheticException: r,
                  ...t,
                  event_id: n,
                },
                this
              ),
              n
            );
          }
          captureMessage(e, t, n) {
            let r = n && n.event_id ? n.event_id : B();
            if (!this._client)
              return (
                F.warn(
                  "No client configured on scope - will not capture message!"
                ),
                r
              );
            let i = Error(e);
            return (
              this._client.captureMessage(
                e,
                t,
                {
                  originalException: e,
                  syntheticException: i,
                  ...n,
                  event_id: r,
                },
                this
              ),
              r
            );
          }
          captureEvent(e, t) {
            let n = t && t.event_id ? t.event_id : B();
            return (
              this._client
                ? this._client.captureEvent(e, { ...t, event_id: n }, this)
                : F.warn(
                    "No client configured on scope - will not capture event!"
                  ),
              n
            );
          }
          _notifyScopeListeners() {
            this._notifyingListeners ||
              ((this._notifyingListeners = !0),
              this._scopeListeners.forEach((e) => {
                e(this);
              }),
              (this._notifyingListeners = !1));
          }
        }
        let H = q;
        class z {
          constructor(e, t) {
            let n, r;
            (n = e || new H()),
              (r = t || new H()),
              (this._stack = [{ scope: n }]),
              (this._isolationScope = r);
          }
          withScope(e) {
            var t;
            let n;
            let r = this._pushScope();
            try {
              n = e(r);
            } catch (e) {
              throw (this._popScope(), e);
            }
            return (t = n) && t.then && "function" == typeof t.then
              ? n.then(
                  (e) => (this._popScope(), e),
                  (e) => {
                    throw (this._popScope(), e);
                  }
                )
              : (this._popScope(), n);
          }
          getClient() {
            return this.getStackTop().client;
          }
          getScope() {
            return this.getStackTop().scope;
          }
          getIsolationScope() {
            return this._isolationScope;
          }
          getStackTop() {
            return this._stack[this._stack.length - 1];
          }
          _pushScope() {
            let e = this.getScope().clone();
            return this._stack.push({ client: this.getClient(), scope: e }), e;
          }
          _popScope() {
            return !(this._stack.length <= 1) && !!this._stack.pop();
          }
        }
        function G() {
          let e = (I(P), P),
            t = I(e);
          return (t.stack =
            t.stack ||
            new z(
              O("defaultCurrentScope", () => new H()),
              O("defaultIsolationScope", () => new H())
            ));
        }
        function W(e) {
          return G().withScope(e);
        }
        function V(e, t) {
          let n = G();
          return n.withScope(() => ((n.getStackTop().scope = e), t(e)));
        }
        function K(e) {
          return G().withScope(() => e(G().getIsolationScope()));
        }
        function Z(e) {
          (function () {
            let e = (I(P), P),
              t = (function (e) {
                let t = I(e);
                return t.acs
                  ? t.acs
                  : {
                      withIsolationScope: K,
                      withScope: W,
                      withSetScope: V,
                      withSetIsolationScope: (e, t) => K(t),
                      getCurrentScope: () => G().getScope(),
                      getIsolationScope: () => G().getIsolationScope(),
                    };
              })(e);
            return t.getIsolationScope();
          })().addEventProcessor(e);
        }
        var J,
          Y,
          X,
          Q,
          ee,
          et,
          en,
          er,
          ei,
          ea,
          eo,
          es,
          eu,
          el,
          ec = n(1286),
          ed = n(86905),
          ef = n(31079);
        let ep = [];
        function eh(e, t) {
          for (let n of t) n && n.afterAllSetup && n.afterAllSetup(e);
        }
        function em(e, t, n) {
          if (n[t.name]) {
            ed.X &&
              ef.kg.log(
                `Integration skipped because it was already installed: ${t.name}`
              );
            return;
          }
          if (
            ((n[t.name] = t),
            -1 === ep.indexOf(t.name) &&
              "function" == typeof t.setupOnce &&
              (t.setupOnce(), ep.push(t.name)),
            t.setup && "function" == typeof t.setup && t.setup(e),
            "function" == typeof t.preprocessEvent)
          ) {
            let n = t.preprocessEvent.bind(t);
            e.on("preprocessEvent", (t, r) => n(t, r, e));
          }
          if ("function" == typeof t.processEvent) {
            let n = t.processEvent.bind(t),
              r = Object.assign((t, r) => n(t, r, e), { id: t.name });
            e.addEventProcessor(r);
          }
          ed.X && ef.kg.log(`Integration installed: ${t.name}`);
        }
        var ey = n(2579),
          eg = n(47352);
        let eb = [
            /^Script error\.?$/,
            /^Javascript error: Script error\.? on line 0$/,
            /^ResizeObserver loop completed with undelivered notifications.$/,
            /^Cannot redefine property: googletag$/,
            "undefined is not an object (evaluating 'a.L')",
            'can\'t redefine non-configurable property "solana"',
            "vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)",
            "Can't find variable: _AutofillCallbackHandler",
            /^Non-Error promise rejection captured with value: Object Not Found Matching Id:\d+, MethodName:simulateEvent, ParamCount:\d+$/,
          ],
          ev = (e = {}) => ({
            name: "InboundFilters",
            processEvent(t, n, r) {
              var i;
              let a = r.getOptions(),
                o = (function (e = {}, t = {}) {
                  return {
                    allowUrls: [...(e.allowUrls || []), ...(t.allowUrls || [])],
                    denyUrls: [...(e.denyUrls || []), ...(t.denyUrls || [])],
                    ignoreErrors: [
                      ...(e.ignoreErrors || []),
                      ...(t.ignoreErrors || []),
                      ...(e.disableErrorDefaults ? [] : eb),
                    ],
                    ignoreTransactions: [
                      ...(e.ignoreTransactions || []),
                      ...(t.ignoreTransactions || []),
                    ],
                    ignoreInternal:
                      void 0 === e.ignoreInternal || e.ignoreInternal,
                  };
                })(e, a);
              return (
                o.ignoreInternal &&
                (function (e) {
                  try {
                    return "SentryError" === e.exception.values[0].type;
                  } catch (e) {}
                  return !1;
                })(t)
                  ? (ed.X &&
                      ef.kg
                        .warn(`Event dropped due to being internal Sentry Error.
Event: ${(0, ey.jH)(t)}`),
                    0)
                  : ((i = o.ignoreErrors),
                    !t.type &&
                      i &&
                      i.length &&
                      (function (e) {
                        let t;
                        let n = [];
                        e.message && n.push(e.message);
                        try {
                          t = e.exception.values[e.exception.values.length - 1];
                        } catch (e) {}
                        return (
                          t &&
                            t.value &&
                            (n.push(t.value),
                            t.type && n.push(`${t.type}: ${t.value}`)),
                          n
                        );
                      })(t).some((e) => (0, eg.U0)(e, i)))
                  ? (ed.X &&
                      ef.kg
                        .warn(`Event dropped due to being matched by \`ignoreErrors\` option.
Event: ${(0, ey.jH)(t)}`),
                    0)
                  : t.type ||
                    !t.exception ||
                    !t.exception.values ||
                    0 === t.exception.values.length ||
                    t.message ||
                    t.exception.values.some(
                      (e) =>
                        e.stacktrace ||
                        (e.type && "Error" !== e.type) ||
                        e.value
                    )
                  ? !(function (e, t) {
                      if ("transaction" !== e.type || !t || !t.length)
                        return !1;
                      let n = e.transaction;
                      return !!n && (0, eg.U0)(n, t);
                    })(t, o.ignoreTransactions)
                    ? !(function (e, t) {
                        if (!t || !t.length) return !1;
                        let n = ew(e);
                        return !!n && (0, eg.U0)(n, t);
                      })(t, o.denyUrls)
                      ? (function (e, t) {
                          if (!t || !t.length) return !0;
                          let n = ew(e);
                          return !n || (0, eg.U0)(n, t);
                        })(t, o.allowUrls) ||
                        (ed.X &&
                          ef.kg
                            .warn(`Event dropped due to not being matched by \`allowUrls\` option.
Event: ${(0, ey.jH)(t)}.
Url: ${ew(t)}`),
                        0)
                      : (ed.X &&
                          ef.kg
                            .warn(`Event dropped due to being matched by \`denyUrls\` option.
Event: ${(0, ey.jH)(t)}.
Url: ${ew(t)}`),
                        0)
                    : (ed.X &&
                        ef.kg
                          .warn(`Event dropped due to being matched by \`ignoreTransactions\` option.
Event: ${(0, ey.jH)(t)}`),
                      0)
                  : (ed.X &&
                      ef.kg
                        .warn(`Event dropped due to not having an error message, error type or stacktrace.
Event: ${(0, ey.jH)(t)}`),
                    0)
              )
                ? t
                : null;
            },
          });
        function ew(e) {
          try {
            let t;
            try {
              t = e.exception.values[0].stacktrace.frames;
            } catch (e) {}
            return t
              ? (function (e = []) {
                  for (let t = e.length - 1; t >= 0; t--) {
                    let n = e[t];
                    if (
                      n &&
                      "<anonymous>" !== n.filename &&
                      "[native code]" !== n.filename
                    )
                      return n.filename || null;
                  }
                  return null;
                })(t)
              : null;
          } catch (t) {
            return (
              ed.X &&
                ef.kg.error(`Cannot extract url for event ${(0, ey.jH)(e)}`),
              null
            );
          }
        }
        var eE = n(53769),
          ex = n(86771);
        let eC = new WeakMap(),
          e_ = () => ({
            name: "FunctionToString",
            setupOnce() {
              r = Function.prototype.toString;
              try {
                Function.prototype.toString = function (...e) {
                  let t = (0, ex.HK)(this),
                    n = eC.has((0, eE.s3)()) && void 0 !== t ? t : this;
                  return r.apply(n, e);
                };
              } catch (e) {}
            },
            setup(e) {
              eC.set(e, !0);
            },
          });
        var eT = n(66241);
        let eS = () => {
          let e;
          return {
            name: "Dedupe",
            processEvent(t) {
              if (t.type) return t;
              try {
                var n;
                if (
                  (n = e) &&
                  ((function (e, t) {
                    let n = e.message,
                      r = t.message;
                    return !!(
                      (n || r) &&
                      (!n || r) &&
                      (n || !r) &&
                      n === r &&
                      eO(e, t) &&
                      eP(e, t)
                    );
                  })(t, n) ||
                    (function (e, t) {
                      let n = eI(t),
                        r = eI(e);
                      return !!(
                        n &&
                        r &&
                        n.type === r.type &&
                        n.value === r.value &&
                        eO(e, t) &&
                        eP(e, t)
                      );
                    })(t, n))
                )
                  return (
                    ed.X &&
                      ef.kg.warn(
                        "Event dropped due to being a duplicate of previously captured event."
                      ),
                    null
                  );
              } catch (e) {}
              return (e = t);
            },
          };
        };
        function eP(e, t) {
          let n = (0, eT.Fr)(e),
            r = (0, eT.Fr)(t);
          if (!n && !r) return !0;
          if ((n && !r) || (!n && r) || r.length !== n.length) return !1;
          for (let e = 0; e < r.length; e++) {
            let t = r[e],
              i = n[e];
            if (
              t.filename !== i.filename ||
              t.lineno !== i.lineno ||
              t.colno !== i.colno ||
              t.function !== i.function
            )
              return !1;
          }
          return !0;
        }
        function eO(e, t) {
          let n = e.fingerprint,
            r = t.fingerprint;
          if (!n && !r) return !0;
          if ((n && !r) || (!n && r)) return !1;
          try {
            return !(n.join("") !== r.join(""));
          } catch (e) {
            return !1;
          }
        }
        function eI(e) {
          return e.exception && e.exception.values && e.exception.values[0];
        }
        var eA = n(83546),
          ek = n(98245);
        let ej = ek.GLOBAL_OBJ;
        function eB(e) {
          return (
            e &&
            /^function\s+\w+\(\)\s+\{\s+\[native code\]\s+\}$/.test(
              e.toString()
            )
          );
        }
        var eM = n(57486);
        let eN =
          /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;
        function eD(e, t = !1) {
          let {
            host: n,
            path: r,
            pass: i,
            port: a,
            projectId: o,
            protocol: s,
            publicKey: u,
          } = e;
          return `${s}://${u}${t && i ? `:${i}` : ""}@${n}${a ? `:${a}` : ""}/${
            r ? `${r}/` : r
          }${o}`;
        }
        function eR(e) {
          return {
            protocol: e.protocol,
            publicKey: e.publicKey || "",
            pass: e.pass || "",
            host: e.host,
            port: e.port || "",
            path: e.path || "",
            projectId: e.projectId,
          };
        }
        var eF = n(35139);
        function eL(e, t = []) {
          return [e, t];
        }
        function eU(e, t) {
          let n = e[1];
          for (let e of n) {
            let n = e[0].type,
              r = t(e, n);
            if (r) return !0;
          }
          return !1;
        }
        function e$(e) {
          return ek.GLOBAL_OBJ.__SENTRY__ &&
            ek.GLOBAL_OBJ.__SENTRY__.encodePolyfill
            ? ek.GLOBAL_OBJ.__SENTRY__.encodePolyfill(e)
            : new TextEncoder().encode(e);
        }
        let eq = {
          session: "session",
          sessions: "session",
          attachment: "attachment",
          transaction: "transaction",
          event: "error",
          client_report: "internal",
          user_report: "default",
          profile: "profile",
          profile_chunk: "profile",
          replay_event: "replay",
          replay_recording: "replay",
          check_in: "monitor",
          feedback: "feedback",
          span: "span",
          statsd: "metric_bucket",
          raw_security: "security",
        };
        function eH(e) {
          if (!e || !e.sdk) return;
          let { name: t, version: n } = e.sdk;
          return { name: t, version: n };
        }
        var ez = n(80621),
          eG = n(98222),
          eW = n(38103);
        class eV extends Error {
          constructor(e, t = "warn") {
            super(e),
              (this.message = e),
              (this.name = new.target.prototype.constructor.name),
              Object.setPrototypeOf(this, new.target.prototype),
              (this.logLevel = t);
          }
        }
        var eK = n(62120),
          eZ = n(3450);
        function eJ(e) {
          if ("boolean" == typeof e) return Number(e);
          let t = "string" == typeof e ? parseFloat(e) : e;
          if ("number" != typeof t || isNaN(t) || t < 0 || t > 1) {
            ed.X &&
              ef.kg.warn(
                `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(
                  e
                )} of type ${JSON.stringify(typeof e)}.`
              );
            return;
          }
          return t;
        }
        var eY = n(44124);
        let eX = "Not capturing exception because it's already been captured.";
        class eQ {
          constructor(e) {
            if (
              ((this._options = e),
              (this._integrations = {}),
              (this._numProcessing = 0),
              (this._outcomes = {}),
              (this._hooks = {}),
              (this._eventProcessors = []),
              e.dsn
                ? (this._dsn = (function (e) {
                    let t =
                      "string" == typeof e
                        ? (function (e) {
                            let t = eN.exec(e);
                            if (!t) {
                              (0, ef.Cf)(() => {
                                console.error(`Invalid Sentry Dsn: ${e}`);
                              });
                              return;
                            }
                            let [n, r, i = "", a = "", o = "", s = ""] =
                                t.slice(1),
                              u = "",
                              l = s,
                              c = l.split("/");
                            if (
                              (c.length > 1 &&
                                ((u = c.slice(0, -1).join("/")), (l = c.pop())),
                              l)
                            ) {
                              let e = l.match(/^\d+/);
                              e && (l = e[0]);
                            }
                            return eR({
                              host: a,
                              pass: i,
                              path: u,
                              projectId: l,
                              port: o,
                              protocol: n,
                              publicKey: r,
                            });
                          })(e)
                        : eR(e);
                    if (
                      t &&
                      (function (e) {
                        if (!eA.X) return !0;
                        let { port: t, projectId: n, protocol: r } = e,
                          i = [
                            "protocol",
                            "publicKey",
                            "host",
                            "projectId",
                          ].find(
                            (t) =>
                              !e[t] &&
                              (ef.kg.error(`Invalid Sentry Dsn: ${t} missing`),
                              !0)
                          );
                        return (
                          !i &&
                          (n.match(/^\d+$/)
                            ? "http" === r || "https" === r
                              ? !(t && isNaN(parseInt(t, 10))) ||
                                (ef.kg.error(
                                  `Invalid Sentry Dsn: Invalid port ${t}`
                                ),
                                !1)
                              : (ef.kg.error(
                                  `Invalid Sentry Dsn: Invalid protocol ${r}`
                                ),
                                !1)
                            : (ef.kg.error(
                                `Invalid Sentry Dsn: Invalid projectId ${n}`
                              ),
                              !1))
                        );
                      })(t)
                    )
                      return t;
                  })(e.dsn))
                : ed.X &&
                  ef.kg.warn("No DSN provided, client will not send events."),
              this._dsn)
            ) {
              var t, n, r;
              let i =
                ((t = this._dsn),
                (n = e.tunnel),
                (r = e._metadata ? e._metadata.sdk : void 0),
                n ||
                  `${(function (e) {
                    let t = e.protocol ? `${e.protocol}:` : "",
                      n = e.port ? `:${e.port}` : "";
                    return `${t}//${e.host}${n}${
                      e.path ? `/${e.path}` : ""
                    }/api/`;
                  })(t)}${t.projectId}/envelope/?${(function (e, t) {
                    let n = { sentry_version: "7" };
                    return (
                      e.publicKey && (n.sentry_key = e.publicKey),
                      t && (n.sentry_client = `${t.name}/${t.version}`),
                      new URLSearchParams(n).toString()
                    );
                  })(t, r)}`);
              this._transport = e.transport({
                tunnel: this._options.tunnel,
                recordDroppedEvent: this.recordDroppedEvent.bind(this),
                ...e.transportOptions,
                url: i,
              });
            }
            let i = ["enableTracing", "tracesSampleRate", "tracesSampler"].find(
              (t) => t in e && void 0 == e[t]
            );
            i &&
              (0, ef.Cf)(() => {
                console.warn(
                  `[Sentry] Deprecation warning: \`${i}\` is set to undefined, which leads to tracing being enabled. In v9, a value of \`undefined\` will result in tracing being disabled.`
                );
              });
          }
          captureException(e, t, n) {
            let r = (0, ey.DM)();
            if ((0, ey.YO)(e)) return ed.X && ef.kg.log(eX), r;
            let i = { event_id: r, ...t };
            return (
              this._process(
                this.eventFromException(e, i).then((e) =>
                  this._captureEvent(e, i, n)
                )
              ),
              i.event_id
            );
          }
          captureMessage(e, t, n, r) {
            let i = { event_id: (0, ey.DM)(), ...n },
              a = (0, eK.Le)(e) ? e : String(e),
              o = (0, eK.pt)(e)
                ? this.eventFromMessage(a, t, i)
                : this.eventFromException(e, i);
            return (
              this._process(o.then((e) => this._captureEvent(e, i, r))),
              i.event_id
            );
          }
          captureEvent(e, t, n) {
            let r = (0, ey.DM)();
            if (t && t.originalException && (0, ey.YO)(t.originalException))
              return ed.X && ef.kg.log(eX), r;
            let i = { event_id: r, ...t },
              a = e.sdkProcessingMetadata || {},
              o = a.capturedSpanScope;
            return this._process(this._captureEvent(e, i, o || n)), i.event_id;
          }
          captureSession(e) {
            "string" != typeof e.release
              ? ed.X &&
                ef.kg.warn(
                  "Discarded session because of missing or non-string release"
                )
              : (this.sendSession(e), (0, eG.CT)(e, { init: !1 }));
          }
          getDsn() {
            return this._dsn;
          }
          getOptions() {
            return this._options;
          }
          getSdkMetadata() {
            return this._options._metadata;
          }
          getTransport() {
            return this._transport;
          }
          flush(e) {
            let t = this._transport;
            return t
              ? (this.emit("flush"),
                this._isClientDoneProcessing(e).then((n) =>
                  t.flush(e).then((e) => n && e)
                ))
              : (0, eZ.WD)(!0);
          }
          close(e) {
            return this.flush(e).then(
              (e) => ((this.getOptions().enabled = !1), this.emit("close"), e)
            );
          }
          getEventProcessors() {
            return this._eventProcessors;
          }
          addEventProcessor(e) {
            this._eventProcessors.push(e);
          }
          init() {
            (this._isEnabled() ||
              this._options.integrations.some(({ name: e }) =>
                e.startsWith("Spotlight")
              )) &&
              this._setupIntegrations();
          }
          getIntegrationByName(e) {
            return this._integrations[e];
          }
          addIntegration(e) {
            let t = this._integrations[e.name];
            em(this, e, this._integrations), t || eh(this, [e]);
          }
          sendEvent(e, t = {}) {
            this.emit("beforeSendEvent", e, t);
            let n = (function (e, t, n, r) {
              var i;
              let a = eH(n),
                o = e.type && "replay_event" !== e.type ? e.type : "event";
              (i = n && n.sdk) &&
                ((e.sdk = e.sdk || {}),
                (e.sdk.name = e.sdk.name || i.name),
                (e.sdk.version = e.sdk.version || i.version),
                (e.sdk.integrations = [
                  ...(e.sdk.integrations || []),
                  ...(i.integrations || []),
                ]),
                (e.sdk.packages = [
                  ...(e.sdk.packages || []),
                  ...(i.packages || []),
                ]));
              let s = (function (e, t, n, r) {
                let i =
                  e.sdkProcessingMetadata &&
                  e.sdkProcessingMetadata.dynamicSamplingContext;
                return {
                  event_id: e.event_id,
                  sent_at: new Date().toISOString(),
                  ...(t && { sdk: t }),
                  ...(!!n && r && { dsn: eD(r) }),
                  ...(i && { trace: (0, ex.Jr)({ ...i }) }),
                };
              })(e, a, r, t);
              delete e.sdkProcessingMetadata;
              let u = [{ type: o }, e];
              return eL(s, [u]);
            })(e, this._dsn, this._options._metadata, this._options.tunnel);
            for (let e of t.attachments || [])
              n = (function (e, t) {
                let [n, r] = e;
                return [n, [...r, t]];
              })(
                n,
                (function (e) {
                  let t = "string" == typeof e.data ? e$(e.data) : e.data;
                  return [
                    (0, ex.Jr)({
                      type: "attachment",
                      length: t.length,
                      filename: e.filename,
                      content_type: e.contentType,
                      attachment_type: e.attachmentType,
                    }),
                    t,
                  ];
                })(e)
              );
            let r = this.sendEnvelope(n);
            r && r.then((t) => this.emit("afterSendEvent", e, t), null);
          }
          sendSession(e) {
            let t = (function (e, t, n, r) {
              let i = eH(n),
                a = {
                  sent_at: new Date().toISOString(),
                  ...(i && { sdk: i }),
                  ...(!!r && t && { dsn: eD(t) }),
                },
                o =
                  "aggregates" in e
                    ? [{ type: "sessions" }, e]
                    : [{ type: "session" }, e.toJSON()];
              return eL(a, [o]);
            })(e, this._dsn, this._options._metadata, this._options.tunnel);
            this.sendEnvelope(t);
          }
          recordDroppedEvent(e, t, n) {
            if (this._options.sendClientReports) {
              let r = "number" == typeof n ? n : 1,
                i = `${e}:${t}`;
              ed.X &&
                ef.kg.log(
                  `Recording outcome: "${i}"${r > 1 ? ` (${r} times)` : ""}`
                ),
                (this._outcomes[i] = (this._outcomes[i] || 0) + r);
            }
          }
          on(e, t) {
            let n = (this._hooks[e] = this._hooks[e] || []);
            return (
              n.push(t),
              () => {
                let e = n.indexOf(t);
                e > -1 && n.splice(e, 1);
              }
            );
          }
          emit(e, ...t) {
            let n = this._hooks[e];
            n && n.forEach((e) => e(...t));
          }
          sendEnvelope(e) {
            return (this.emit("beforeEnvelope", e),
            this._isEnabled() && this._transport)
              ? this._transport
                  .send(e)
                  .then(
                    null,
                    (e) => (
                      ed.X && ef.kg.error("Error while sending envelope:", e), e
                    )
                  )
              : (ed.X && ef.kg.error("Transport disabled"), (0, eZ.WD)({}));
          }
          _setupIntegrations() {
            let { integrations: e } = this._options;
            (this._integrations = (function (e, t) {
              let n = {};
              return (
                t.forEach((t) => {
                  t && em(e, t, n);
                }),
                n
              );
            })(this, e)),
              eh(this, e);
          }
          _updateSessionFromEvent(e, t) {
            let n = !1,
              r = !1,
              i = t.exception && t.exception.values;
            if (i)
              for (let e of ((r = !0), i)) {
                let t = e.mechanism;
                if (t && !1 === t.handled) {
                  n = !0;
                  break;
                }
              }
            let a = "ok" === e.status,
              o = (a && 0 === e.errors) || (a && n);
            o &&
              ((0, eG.CT)(e, {
                ...(n && { status: "crashed" }),
                errors: e.errors || Number(r || n),
              }),
              this.captureSession(e));
          }
          _isClientDoneProcessing(e) {
            return new eZ.cW((t) => {
              let n = 0,
                r = setInterval(() => {
                  0 == this._numProcessing
                    ? (clearInterval(r), t(!0))
                    : ((n += 1), e && n >= e && (clearInterval(r), t(!1)));
                }, 1);
            });
          }
          _isEnabled() {
            return (
              !1 !== this.getOptions().enabled && void 0 !== this._transport
            );
          }
          _prepareEvent(e, t, n = (0, eE.nZ)(), r = (0, eE.aF)()) {
            let i = this.getOptions(),
              a = Object.keys(this._integrations);
            return (
              !t.integrations && a.length > 0 && (t.integrations = a),
              this.emit("preprocessEvent", e, t),
              e.type || r.setLastEventId(e.event_id || t.event_id),
              (0, eY.R)(i, e, t, n, this, r).then((e) => {
                if (null === e) return e;
                e.contexts = { trace: (0, eE.XX)(n), ...e.contexts };
                let t = (0, eM.CG)(this, n);
                return (
                  (e.sdkProcessingMetadata = {
                    dynamicSamplingContext: t,
                    ...e.sdkProcessingMetadata,
                  }),
                  e
                );
              })
            );
          }
          _captureEvent(e, t = {}, n) {
            return this._processEvent(e, t, n).then(
              (e) => e.event_id,
              (e) => {
                ed.X &&
                  ("log" === e.logLevel ? ef.kg.log(e.message) : ef.kg.warn(e));
              }
            );
          }
          _processEvent(e, t, n) {
            let r = this.getOptions(),
              { sampleRate: i } = r,
              a = e1(e),
              o = e0(e),
              s = e.type || "error",
              u = `before send for type \`${s}\``,
              l = void 0 === i ? void 0 : eJ(i);
            if (o && "number" == typeof l && Math.random() > l)
              return (
                this.recordDroppedEvent("sample_rate", "error", e),
                (0, eZ.$2)(
                  new eV(
                    `Discarding event because it's not included in the random sample (sampling rate = ${i})`,
                    "log"
                  )
                )
              );
            let c = "replay_event" === s ? "replay" : s,
              d = e.sdkProcessingMetadata || {},
              f = d.capturedSpanIsolationScope;
            return this._prepareEvent(e, t, n, f)
              .then((n) => {
                if (null === n)
                  throw (
                    (this.recordDroppedEvent("event_processor", c, e),
                    new eV(
                      "An event processor returned `null`, will not send event.",
                      "log"
                    ))
                  );
                let i = t.data && !0 === t.data.__sentry__;
                if (i) return n;
                let a = (function (e, t, n, r) {
                  let {
                    beforeSend: i,
                    beforeSendTransaction: a,
                    beforeSendSpan: o,
                  } = t;
                  if (e0(n) && i) return i(n, r);
                  if (e1(n)) {
                    if (n.spans && o) {
                      let t = [];
                      for (let r of n.spans) {
                        let n = o(r);
                        n
                          ? t.push(n)
                          : ((0, ez.R6)(),
                            e.recordDroppedEvent("before_send", "span"));
                      }
                      n.spans = t;
                    }
                    if (a) {
                      if (n.spans) {
                        let e = n.spans.length;
                        n.sdkProcessingMetadata = {
                          ...n.sdkProcessingMetadata,
                          spanCountBeforeProcessing: e,
                        };
                      }
                      return a(n, r);
                    }
                  }
                  return n;
                })(this, r, n, t);
                return (function (e, t) {
                  let n = `${t} must return \`null\` or a valid event.`;
                  if ((0, eK.J8)(e))
                    return e.then(
                      (e) => {
                        if (!(0, eK.PO)(e) && null !== e) throw new eV(n);
                        return e;
                      },
                      (e) => {
                        throw new eV(`${t} rejected with ${e}`);
                      }
                    );
                  if (!(0, eK.PO)(e) && null !== e) throw new eV(n);
                  return e;
                })(a, u);
              })
              .then((r) => {
                if (null === r) {
                  if ((this.recordDroppedEvent("before_send", c, e), a)) {
                    let t = e.spans || [],
                      n = 1 + t.length;
                    this.recordDroppedEvent("before_send", "span", n);
                  }
                  throw new eV(
                    `${u} returned \`null\`, will not send event.`,
                    "log"
                  );
                }
                let i = n && n.getSession();
                if ((!a && i && this._updateSessionFromEvent(i, r), a)) {
                  let e =
                      (r.sdkProcessingMetadata &&
                        r.sdkProcessingMetadata.spanCountBeforeProcessing) ||
                      0,
                    t = r.spans ? r.spans.length : 0,
                    n = e - t;
                  n > 0 && this.recordDroppedEvent("before_send", "span", n);
                }
                let o = r.transaction_info;
                return (
                  a &&
                    o &&
                    r.transaction !== e.transaction &&
                    (r.transaction_info = { ...o, source: "custom" }),
                  this.sendEvent(r, t),
                  r
                );
              })
              .then(null, (e) => {
                if (e instanceof eV) throw e;
                throw (
                  (this.captureException(e, {
                    data: { __sentry__: !0 },
                    originalException: e,
                  }),
                  new eV(`Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.
Reason: ${e}`))
                );
              });
          }
          _process(e) {
            this._numProcessing++,
              e.then(
                (e) => (this._numProcessing--, e),
                (e) => (this._numProcessing--, e)
              );
          }
          _clearOutcomes() {
            let e = this._outcomes;
            return (
              (this._outcomes = {}),
              Object.entries(e).map(([e, t]) => {
                let [n, r] = e.split(":");
                return { reason: n, category: r, quantity: t };
              })
            );
          }
          _flushOutcomes() {
            ed.X && ef.kg.log("Flushing outcomes...");
            let e = this._clearOutcomes();
            if (0 === e.length) {
              ed.X && ef.kg.log("No outcomes to send");
              return;
            }
            if (!this._dsn) {
              ed.X && ef.kg.log("No dsn provided, will not send outcomes");
              return;
            }
            ed.X && ef.kg.log("Sending outcomes:", e);
            let t = (function (e, t, n) {
              let r = [
                { type: "client_report" },
                { timestamp: (0, eW.yW)(), discarded_events: e },
              ];
              return eL(t ? { dsn: t } : {}, [r]);
            })(e, this._options.tunnel && eD(this._dsn));
            this.sendEnvelope(t);
          }
        }
        function e0(e) {
          return void 0 === e.type;
        }
        function e1(e) {
          return "transaction" === e.type;
        }
        var e2 = n(63008);
        function e6(e, t) {
          let n = e5(e, t),
            r = {
              type: (function (e) {
                let t = e && e.name;
                if (!t && e8(e)) {
                  let t =
                    e.message &&
                    Array.isArray(e.message) &&
                    2 == e.message.length;
                  return t ? e.message[0] : "WebAssembly.Exception";
                }
                return t;
              })(t),
              value: (function (e) {
                let t = e && e.message;
                return t
                  ? t.error && "string" == typeof t.error.message
                    ? t.error.message
                    : e8(e) && Array.isArray(e.message) && 2 == e.message.length
                    ? e.message[1]
                    : t
                  : "No error message";
              })(t),
            };
          return (
            n.length && (r.stacktrace = { frames: n }),
            void 0 === r.type &&
              "" === r.value &&
              (r.value = "Unrecoverable error caught"),
            r
          );
        }
        function e3(e, t) {
          return { exception: { values: [e6(e, t)] } };
        }
        function e5(e, t) {
          let n = t.stacktrace || t.stack || "",
            r = t && e4.test(t.message) ? 1 : 0,
            i = "number" == typeof t.framesToPop ? t.framesToPop : 0;
          try {
            return e(n, r, i);
          } catch (e) {}
          return [];
        }
        let e4 = /Minified React error #\d+;/i;
        function e8(e) {
          return (
            "undefined" != typeof WebAssembly &&
            void 0 !== WebAssembly.Exception &&
            e instanceof WebAssembly.Exception
          );
        }
        function e7(e, t, n, r, i) {
          let a;
          if ((0, eK.VW)(t) && t.error) return e3(e, t.error);
          if ((0, eK.TX)(t) || (0, eK.fm)(t)) {
            if ("stack" in t) a = e3(e, t);
            else {
              let i = t.name || ((0, eK.TX)(t) ? "DOMError" : "DOMException"),
                o = t.message ? `${i}: ${t.message}` : i;
              (a = e9(e, o, n, r)), (0, ey.Db)(a, o);
            }
            return (
              "code" in t &&
                (a.tags = { ...a.tags, "DOMException.code": `${t.code}` }),
              a
            );
          }
          return (0, eK.VZ)(t)
            ? e3(e, t)
            : ((0, eK.PO)(t) || (0, eK.cO)(t)
                ? (a = (function (e, t, n, r) {
                    let i = (0, eE.s3)(),
                      a = i && i.getOptions().normalizeDepth,
                      o = (function (e) {
                        for (let t in e)
                          if (Object.prototype.hasOwnProperty.call(e, t)) {
                            let n = e[t];
                            if (n instanceof Error) return n;
                          }
                      })(t),
                      s = { __serialized__: (0, eF.Qy)(t, a) };
                    if (o)
                      return { exception: { values: [e6(e, o)] }, extra: s };
                    let u = {
                      exception: {
                        values: [
                          {
                            type: (0, eK.cO)(t)
                              ? t.constructor.name
                              : r
                              ? "UnhandledRejection"
                              : "Error",
                            value: (function (e, { isUnhandledRejection: t }) {
                              let n = (0, ex.zf)(e),
                                r = t ? "promise rejection" : "exception";
                              if ((0, eK.VW)(e))
                                return `Event \`ErrorEvent\` captured as ${r} with message \`${e.message}\``;
                              if ((0, eK.cO)(e)) {
                                let t = (function (e) {
                                  try {
                                    let t = Object.getPrototypeOf(e);
                                    return t ? t.constructor.name : void 0;
                                  } catch (e) {}
                                })(e);
                                return `Event \`${t}\` (type=${e.type}) captured as ${r}`;
                              }
                              return `Object captured as ${r} with keys: ${n}`;
                            })(t, { isUnhandledRejection: r }),
                          },
                        ],
                      },
                      extra: s,
                    };
                    if (n) {
                      let t = e5(e, n);
                      t.length &&
                        (u.exception.values[0].stacktrace = { frames: t });
                    }
                    return u;
                  })(e, t, n, i))
                : ((a = e9(e, t, n, r)), (0, ey.Db)(a, `${t}`, void 0)),
              (0, ey.EG)(a, { synthetic: !0 }),
              a);
        }
        function e9(e, t, n, r) {
          let i = {};
          if (r && n) {
            let r = e5(e, n);
            r.length &&
              (i.exception = {
                values: [{ value: t, stacktrace: { frames: r } }],
              }),
              (0, ey.EG)(i, { synthetic: !0 });
          }
          if ((0, eK.Le)(t)) {
            let {
              __sentry_template_string__: e,
              __sentry_template_values__: n,
            } = t;
            return (i.logentry = { message: e, params: n }), i;
          }
          return (i.message = t), i;
        }
        let te = ek.GLOBAL_OBJ,
          tt = 0;
        function tn(e, t = {}) {
          if ("function" != typeof e) return e;
          try {
            let t = e.__sentry_wrapped__;
            if (t) {
              if ("function" == typeof t) return t;
              return e;
            }
            if ((0, ex.HK)(e)) return e;
          } catch (t) {
            return e;
          }
          let n = function (...n) {
            try {
              let r = n.map((e) => tn(e, t));
              return e.apply(this, r);
            } catch (e) {
              throw (
                (tt++,
                setTimeout(() => {
                  tt--;
                }),
                (0, eE.$e)((r) => {
                  r.addEventProcessor(
                    (e) => (
                      t.mechanism &&
                        ((0, ey.Db)(e, void 0, void 0),
                        (0, ey.EG)(e, t.mechanism)),
                      (e.extra = { ...e.extra, arguments: n }),
                      e
                    )
                  ),
                    (0, ec.Tb)(e);
                }),
                e)
              );
            }
          };
          try {
            for (let t in e)
              Object.prototype.hasOwnProperty.call(e, t) && (n[t] = e[t]);
          } catch (e) {}
          (0, ex.$Q)(n, e), (0, ex.xp)(e, "__sentry_wrapped__", n);
          try {
            let t = Object.getOwnPropertyDescriptor(n, "name");
            t.configurable &&
              Object.defineProperty(n, "name", { get: () => e.name });
          } catch (e) {}
          return n;
        }
        class tr extends eQ {
          constructor(e) {
            let t = { parentSpanIsAlwaysRootSpan: !0, ...e },
              n = te.SENTRY_SDK_SOURCE || "npm";
            (function (e, t, n = [t], r = "npm") {
              let i = e._metadata || {};
              i.sdk ||
                (i.sdk = {
                  name: `sentry.javascript.${t}`,
                  packages: n.map((e) => ({
                    name: `${r}:@sentry/${e}`,
                    version: e2.J,
                  })),
                  version: e2.J,
                }),
                (e._metadata = i);
            })(t, "browser", ["browser"], n),
              super(t),
              t.sendClientReports &&
                te.document &&
                te.document.addEventListener("visibilitychange", () => {
                  "hidden" === te.document.visibilityState &&
                    this._flushOutcomes();
                });
          }
          eventFromException(e, t) {
            return (function (e, t, n, r) {
              let i = (n && n.syntheticException) || void 0,
                a = e7(e, t, i, r);
              return (
                (0, ey.EG)(a),
                (a.level = "error"),
                n && n.event_id && (a.event_id = n.event_id),
                (0, eZ.WD)(a)
              );
            })(this._options.stackParser, e, t, this._options.attachStacktrace);
          }
          eventFromMessage(e, t = "info", n) {
            return (function (e, t, n = "info", r, i) {
              let a = (r && r.syntheticException) || void 0,
                o = e9(e, t, a, i);
              return (
                (o.level = n),
                r && r.event_id && (o.event_id = r.event_id),
                (0, eZ.WD)(o)
              );
            })(
              this._options.stackParser,
              e,
              t,
              n,
              this._options.attachStacktrace
            );
          }
          captureUserFeedback(e) {
            if (!this._isEnabled()) return;
            let t = (function (e, { metadata: t, tunnel: n, dsn: r }) {
              let i = {
                  event_id: e.event_id,
                  sent_at: new Date().toISOString(),
                  ...(t &&
                    t.sdk && {
                      sdk: { name: t.sdk.name, version: t.sdk.version },
                    }),
                  ...(!!n && !!r && { dsn: eD(r) }),
                },
                a = [{ type: "user_report" }, e];
              return eL(i, [a]);
            })(e, {
              metadata: this.getSdkMetadata(),
              dsn: this.getDsn(),
              tunnel: this.getOptions().tunnel,
            });
            this.sendEnvelope(t);
          }
          _prepareEvent(e, t, n) {
            return (
              (e.platform = e.platform || "javascript"),
              super._prepareEvent(e, t, n)
            );
          }
        }
        let ti = "8.45.0",
          ta = globalThis;
        function to(e, t, n) {
          let r = n || ta,
            i = (r.__SENTRY__ = r.__SENTRY__ || {}),
            a = (i[ti] = i[ti] || {});
          return a[e] || (a[e] = t());
        }
        let ts = ["debug", "info", "warn", "error", "log", "assert", "trace"],
          tu = {},
          tl = to("logger", function () {
            let e = !1,
              t = {
                enable: () => {
                  e = !0;
                },
                disable: () => {
                  e = !1;
                },
                isEnabled: () => e,
              };
            return (
              ts.forEach((e) => {
                t[e] = () => void 0;
              }),
              t
            );
          }),
          tc = {},
          td = {};
        function tf(e, t) {
          (tc[e] = tc[e] || []), tc[e].push(t);
        }
        function tp(e, t) {
          if (!td[e]) {
            td[e] = !0;
            try {
              t();
            } catch (e) {}
          }
        }
        function th(e, t) {
          let n = e && tc[e];
          if (n)
            for (let e of n)
              try {
                e(t);
              } catch (e) {}
        }
        let tm = Object.prototype.toString;
        function ty(e, t) {
          return tm.call(e) === `[object ${t}]`;
        }
        function tg(e) {
          return ty(e, "String");
        }
        function tb(e) {
          return ty(e, "Object");
        }
        function tv(e, t, n) {
          if (!(t in e)) return;
          let r = e[t],
            i = n(r);
          "function" == typeof i &&
            (function (e, t) {
              try {
                let n = t.prototype || {};
                (e.prototype = t.prototype = n),
                  tw(e, "__sentry_original__", t);
              } catch (e) {}
            })(i, r);
          try {
            e[t] = i;
          } catch (e) {}
        }
        function tw(e, t, n) {
          try {
            Object.defineProperty(e, t, {
              value: n,
              writable: !0,
              configurable: !0,
            });
          } catch (e) {}
        }
        function tE(e) {
          let t = new Map();
          return (function e(t, n) {
            if (
              (function (e) {
                if (!tb(e)) return !1;
                try {
                  let t = Object.getPrototypeOf(e).constructor.name;
                  return !t || "Object" === t;
                } catch (e) {
                  return !0;
                }
              })(t)
            ) {
              let r = n.get(t);
              if (void 0 !== r) return r;
              let i = {};
              for (let r of (n.set(t, i), Object.getOwnPropertyNames(t)))
                void 0 !== t[r] && (i[r] = e(t[r], n));
              return i;
            }
            if (Array.isArray(t)) {
              let r = n.get(t);
              if (void 0 !== r) return r;
              let i = [];
              return (
                n.set(t, i),
                t.forEach((t) => {
                  i.push(e(t, n));
                }),
                i
              );
            }
            return t;
          })(e, t);
        }
        function tx() {
          let e = ta.crypto || ta.msCrypto,
            t = () => 16 * Math.random();
          try {
            if (e && e.randomUUID) return e.randomUUID().replace(/-/g, "");
            e &&
              e.getRandomValues &&
              (t = () => {
                let t = new Uint8Array(1);
                return e.getRandomValues(t), t[0];
              });
          } catch (e) {}
          return "10000000100040008000100000000000".replace(/[018]/g, (e) =>
            (e ^ ((15 & t()) >> (e / 4))).toString(16)
          );
        }
        function tC(e) {
          tf("dom", e), tp("dom", t_);
        }
        function t_() {
          if (!ta.document) return;
          let e = th.bind(null, "dom"),
            t = tT(e, !0);
          ta.document.addEventListener("click", t, !1),
            ta.document.addEventListener("keypress", t, !1),
            ["EventTarget", "Node"].forEach((t) => {
              let n = ta[t],
                r = n && n.prototype;
              r &&
                r.hasOwnProperty &&
                r.hasOwnProperty("addEventListener") &&
                (tv(r, "addEventListener", function (t) {
                  return function (n, r, i) {
                    if ("click" === n || "keypress" == n)
                      try {
                        let r = (this.__sentry_instrumentation_handlers__ =
                            this.__sentry_instrumentation_handlers__ || {}),
                          a = (r[n] = r[n] || { refCount: 0 });
                        if (!a.handler) {
                          let r = tT(e);
                          (a.handler = r), t.call(this, n, r, i);
                        }
                        a.refCount++;
                      } catch (e) {}
                    return t.call(this, n, r, i);
                  };
                }),
                tv(r, "removeEventListener", function (e) {
                  return function (t, n, r) {
                    if ("click" === t || "keypress" == t)
                      try {
                        let n = this.__sentry_instrumentation_handlers__ || {},
                          i = n[t];
                        i &&
                          (i.refCount--,
                          i.refCount <= 0 &&
                            (e.call(this, t, i.handler, r),
                            (i.handler = void 0),
                            delete n[t]),
                          0 === Object.keys(n).length &&
                            delete this.__sentry_instrumentation_handlers__);
                      } catch (e) {}
                    return e.call(this, t, n, r);
                  };
                }));
            });
        }
        function tT(e, t = !1) {
          return (n) => {
            if (!n || n._sentryCaptured) return;
            let r = (function (e) {
              try {
                return e.target;
              } catch (e) {
                return null;
              }
            })(n);
            if (
              "keypress" === n.type &&
              (!r ||
                !r.tagName ||
                ("INPUT" !== r.tagName &&
                  "TEXTAREA" !== r.tagName &&
                  !r.isContentEditable))
            )
              return;
            tw(n, "_sentryCaptured", !0),
              r && !r._sentryId && tw(r, "_sentryId", tx());
            let s = "keypress" === n.type ? "input" : n.type;
            !(function (e) {
              if (e.type !== a) return !1;
              try {
                if (!e.target || e.target._sentryId !== o) return !1;
              } catch (e) {}
              return !0;
            })(n) &&
              (e({ event: n, name: s, global: t }),
              (a = n.type),
              (o = r ? r._sentryId : void 0)),
              clearTimeout(i),
              (i = ta.setTimeout(() => {
                (o = void 0), (a = void 0);
              }, 1e3));
          };
        }
        function tS() {
          return Date.now() / 1e3;
        }
        let tP = (function () {
            let { performance: e } = ta;
            if (!e || !e.now) return tS;
            let t = Date.now() - e.now(),
              n = void 0 == e.timeOrigin ? t : e.timeOrigin;
            return () => (n + e.now()) / 1e3;
          })(),
          tO = (() => {
            let { performance: e } = ta;
            if (!e || !e.now) return;
            let t = e.now(),
              n = Date.now(),
              r = e.timeOrigin ? Math.abs(e.timeOrigin + t - n) : 36e5,
              i = e.timing && e.timing.navigationStart,
              a = "number" == typeof i ? Math.abs(i + t - n) : 36e5;
            return r < 36e5 || a < 36e5 ? (r <= a ? e.timeOrigin : i) : n;
          })(),
          tI = "__sentry_xhr_v3__";
        function tA(e) {
          tf("xhr", e), tp("xhr", tk);
        }
        function tk() {
          if (!ta.XMLHttpRequest) return;
          let e = XMLHttpRequest.prototype;
          (e.open = new Proxy(e.open, {
            apply(e, t, n) {
              let r = Error(),
                i = 1e3 * tP(),
                a = tg(n[0]) ? n[0].toUpperCase() : void 0,
                o = (function (e) {
                  if (tg(e)) return e;
                  try {
                    return e.toString();
                  } catch (e) {}
                })(n[1]);
              if (!a || !o) return e.apply(t, n);
              (t[tI] = { method: a, url: o, request_headers: {} }),
                "POST" === a &&
                  o.match(/sentry_key/) &&
                  (t.__sentry_own_request__ = !0);
              let s = () => {
                let e = t[tI];
                if (e && 4 === t.readyState) {
                  try {
                    e.status_code = t.status;
                  } catch (e) {}
                  let n = {
                    endTimestamp: 1e3 * tP(),
                    startTimestamp: i,
                    xhr: t,
                    virtualError: r,
                  };
                  th("xhr", n);
                }
              };
              return (
                "onreadystatechange" in t &&
                "function" == typeof t.onreadystatechange
                  ? (t.onreadystatechange = new Proxy(t.onreadystatechange, {
                      apply: (e, t, n) => (s(), e.apply(t, n)),
                    }))
                  : t.addEventListener("readystatechange", s),
                (t.setRequestHeader = new Proxy(t.setRequestHeader, {
                  apply(e, t, n) {
                    let [r, i] = n,
                      a = t[tI];
                    return (
                      a &&
                        tg(r) &&
                        tg(i) &&
                        (a.request_headers[r.toLowerCase()] = i),
                      e.apply(t, n)
                    );
                  },
                })),
                e.apply(t, n)
              );
            },
          })),
            (e.send = new Proxy(e.send, {
              apply(e, t, n) {
                let r = t[tI];
                if (!r) return e.apply(t, n);
                void 0 !== n[0] && (r.body = n[0]);
                let i = { startTimestamp: 1e3 * tP(), xhr: t };
                return th("xhr", i), e.apply(t, n);
              },
            }));
        }
        function tj(e) {
          let t = "history";
          tf(t, e), tp(t, tB);
        }
        function tB() {
          if (
            !(function () {
              let e = ta.chrome,
                t = e && e.app && e.app.runtime,
                n =
                  "history" in ta &&
                  !!ta.history.pushState &&
                  !!ta.history.replaceState;
              return !t && n;
            })()
          )
            return;
          let e = ta.onpopstate;
          function t(e) {
            return function (...t) {
              let n = t.length > 2 ? t[2] : void 0;
              if (n) {
                let e = s,
                  t = String(n);
                (s = t), th("history", { from: e, to: t });
              }
              return e.apply(this, t);
            };
          }
          (ta.onpopstate = function (...t) {
            let n = ta.location.href,
              r = s;
            if (((s = n), th("history", { from: r, to: n }), e))
              try {
                return e.apply(this, t);
              } catch (e) {}
          }),
            tv(ta.history, "pushState", t),
            tv(ta.history, "replaceState", t);
        }
        let tM = {},
          tN = {};
        function tD(e, t) {
          (tM[e] = tM[e] || []), tM[e].push(t);
        }
        function tR(e, t) {
          if (!tN[e]) {
            tN[e] = !0;
            try {
              t();
            } catch (t) {
              eA.X && ef.kg.error(`Error while instrumenting ${e}`, t);
            }
          }
        }
        function tF(e, t) {
          let n = e && tM[e];
          if (n)
            for (let r of n)
              try {
                r(t);
              } catch (t) {
                eA.X &&
                  ef.kg.error(
                    `Error while triggering instrumentation handler.
Type: ${e}
Name: ${(0, eT.$P)(r)}
Error:`,
                    t
                  );
              }
        }
        function tL() {
          "console" in ek.GLOBAL_OBJ &&
            ef.RU.forEach(function (e) {
              e in ek.GLOBAL_OBJ.console &&
                (0, ex.hl)(ek.GLOBAL_OBJ.console, e, function (t) {
                  return (
                    (ef.LD[e] = t),
                    function (...t) {
                      tF("console", { args: t, level: e });
                      let n = ef.LD[e];
                      n && n.apply(ek.GLOBAL_OBJ.console, t);
                    }
                  );
                });
            });
        }
        function tU(e, t) {
          let n = "fetch";
          tD(n, e), tR(n, () => t$(void 0, t));
        }
        function t$(e, t = !1) {
          (!t ||
            (function () {
              if ("string" == typeof EdgeRuntime) return !0;
              if (
                !(function () {
                  if (!("fetch" in ej)) return !1;
                  try {
                    return (
                      new Headers(),
                      new Request("http://www.example.com"),
                      new Response(),
                      !0
                    );
                  } catch (e) {
                    return !1;
                  }
                })()
              )
                return !1;
              if (eB(ej.fetch)) return !0;
              let e = !1,
                t = ej.document;
              if (t && "function" == typeof t.createElement)
                try {
                  let n = t.createElement("iframe");
                  (n.hidden = !0),
                    t.head.appendChild(n),
                    n.contentWindow &&
                      n.contentWindow.fetch &&
                      (e = eB(n.contentWindow.fetch)),
                    t.head.removeChild(n);
                } catch (e) {
                  eA.X &&
                    ef.kg.warn(
                      "Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ",
                      e
                    );
                }
              return e;
            })()) &&
            (0, ex.hl)(ek.GLOBAL_OBJ, "fetch", function (t) {
              return function (...n) {
                let r = Error(),
                  { method: i, url: a } = (function (e) {
                    if (0 === e.length) return { method: "GET", url: "" };
                    if (2 === e.length) {
                      let [t, n] = e;
                      return {
                        url: tG(t),
                        method: tz(n, "method")
                          ? String(n.method).toUpperCase()
                          : "GET",
                      };
                    }
                    let t = e[0];
                    return {
                      url: tG(t),
                      method: tz(t, "method")
                        ? String(t.method).toUpperCase()
                        : "GET",
                    };
                  })(n),
                  o = {
                    args: n,
                    fetchData: { method: i, url: a },
                    startTimestamp: 1e3 * (0, eW.ph)(),
                    virtualError: r,
                  };
                return (
                  e || tF("fetch", { ...o }),
                  t.apply(ek.GLOBAL_OBJ, n).then(
                    async (t) => (
                      e
                        ? e(t)
                        : tF("fetch", {
                            ...o,
                            endTimestamp: 1e3 * (0, eW.ph)(),
                            response: t,
                          }),
                      t
                    ),
                    (e) => {
                      throw (
                        (tF("fetch", {
                          ...o,
                          endTimestamp: 1e3 * (0, eW.ph)(),
                          error: e,
                        }),
                        (0, eK.VZ)(e) &&
                          void 0 === e.stack &&
                          ((e.stack = r.stack),
                          (0, ex.xp)(e, "framesToPop", 1)),
                        e)
                      );
                    }
                  )
                );
              };
            });
        }
        async function tq(e, t) {
          if (e && e.body) {
            let n = e.body,
              r = n.getReader(),
              i = setTimeout(() => {
                n.cancel().then(null, () => {});
              }, 9e4),
              a = !0;
            for (; a; ) {
              let e;
              try {
                e = setTimeout(() => {
                  n.cancel().then(null, () => {});
                }, 5e3);
                let { done: i } = await r.read();
                clearTimeout(e), i && (t(), (a = !1));
              } catch (e) {
                a = !1;
              } finally {
                clearTimeout(e);
              }
            }
            clearTimeout(i), r.releaseLock(), n.cancel().then(null, () => {});
          }
        }
        function tH(e) {
          let t;
          try {
            t = e.clone();
          } catch (e) {
            return;
          }
          tq(t, () => {
            tF("fetch-body-resolved", {
              endTimestamp: 1e3 * (0, eW.ph)(),
              response: e,
            });
          });
        }
        function tz(e, t) {
          return !!e && "object" == typeof e && !!e[t];
        }
        function tG(e) {
          return "string" == typeof e
            ? e
            : e
            ? tz(e, "url")
              ? e.url
              : e.toString
              ? e.toString()
              : ""
            : "";
        }
        function tW(e, t) {
          let n = (0, eE.s3)(),
            r = (0, eE.aF)();
          if (!n) return;
          let { beforeBreadcrumb: i = null, maxBreadcrumbs: a = 100 } =
            n.getOptions();
          if (a <= 0) return;
          let o = (0, eW.yW)(),
            s = { timestamp: o, ...e },
            u = i ? (0, ef.Cf)(() => i(s, t)) : s;
          null !== u &&
            (n.emit && n.emit("beforeAddBreadcrumb", u, t),
            r.addBreadcrumb(u, a));
        }
        var tV = n(10181);
        function tK(e) {
          if (void 0 !== e)
            return e >= 400 && e < 500
              ? "warning"
              : e >= 500
              ? "error"
              : void 0;
        }
        function tZ(e) {
          if (!e) return {};
          let t = e.match(
            /^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/
          );
          if (!t) return {};
          let n = t[6] || "",
            r = t[8] || "";
          return {
            host: t[4],
            path: t[5],
            protocol: t[2],
            search: n,
            hash: r,
            relative: t[5] + n + r,
          };
        }
        let tJ = (e = {}) => {
            let t = {
              console: !0,
              dom: !0,
              fetch: !0,
              history: !0,
              sentry: !0,
              xhr: !0,
              ...e,
            };
            return {
              name: "Breadcrumbs",
              setup(e) {
                var n;
                t.console &&
                  (function (e) {
                    let t = "console";
                    tD(t, e), tR(t, tL);
                  })(function (t) {
                    var n;
                    if ((0, eE.s3)() !== e) return;
                    let r = {
                      category: "console",
                      data: { arguments: t.args, logger: "console" },
                      level:
                        "warn" === (n = t.level)
                          ? "warning"
                          : [
                              "fatal",
                              "error",
                              "warning",
                              "log",
                              "info",
                              "debug",
                            ].includes(n)
                          ? n
                          : "log",
                      message: (0, eg.nK)(t.args, " "),
                    };
                    if ("assert" === t.level) {
                      if (!1 !== t.args[0]) return;
                      (r.message = `Assertion failed: ${
                        (0, eg.nK)(t.args.slice(1), " ") || "console.assert"
                      }`),
                        (r.data.arguments = t.args.slice(1));
                    }
                    tW(r, { input: t.args, level: t.level });
                  }),
                  t.dom &&
                    tC(
                      ((n = t.dom),
                      function (t) {
                        let r, i;
                        if ((0, eE.s3)() !== e) return;
                        let a =
                            "object" == typeof n
                              ? n.serializeAttribute
                              : void 0,
                          o =
                            "object" == typeof n &&
                            "number" == typeof n.maxStringLength
                              ? n.maxStringLength
                              : void 0;
                        o && o > 1024 && (o = 1024),
                          "string" == typeof a && (a = [a]);
                        try {
                          let e = t.event,
                            n = e && e.target ? e.target : e;
                          (r = (0, tV.Rt)(n, {
                            keyAttrs: a,
                            maxStringLength: o,
                          })),
                            (i = (0, tV.iY)(n));
                        } catch (e) {
                          r = "<unknown>";
                        }
                        if (0 === r.length) return;
                        let s = { category: `ui.${t.name}`, message: r };
                        i && (s.data = { "ui.component_name": i }),
                          tW(s, {
                            event: t.event,
                            name: t.name,
                            global: t.global,
                          });
                      })
                    ),
                  t.xhr &&
                    tA(function (t) {
                      if ((0, eE.s3)() !== e) return;
                      let { startTimestamp: n, endTimestamp: r } = t,
                        i = t.xhr[tI];
                      if (!n || !r || !i) return;
                      let { method: a, url: o, status_code: s, body: u } = i,
                        l = {
                          xhr: t.xhr,
                          input: u,
                          startTimestamp: n,
                          endTimestamp: r,
                        },
                        c = tK(s);
                      tW(
                        {
                          category: "xhr",
                          data: { method: a, url: o, status_code: s },
                          type: "http",
                          level: c,
                        },
                        l
                      );
                    }),
                  t.fetch &&
                    tU(function (t) {
                      if ((0, eE.s3)() !== e) return;
                      let { startTimestamp: n, endTimestamp: r } = t;
                      if (
                        !(
                          !r ||
                          (t.fetchData.url.match(/sentry_key/) &&
                            "POST" === t.fetchData.method)
                        )
                      ) {
                        if (t.error) {
                          let e = t.fetchData,
                            i = {
                              data: t.error,
                              input: t.args,
                              startTimestamp: n,
                              endTimestamp: r,
                            };
                          tW(
                            {
                              category: "fetch",
                              data: e,
                              level: "error",
                              type: "http",
                            },
                            i
                          );
                        } else {
                          let e = t.response,
                            i = { ...t.fetchData, status_code: e && e.status },
                            a = {
                              input: t.args,
                              response: e,
                              startTimestamp: n,
                              endTimestamp: r,
                            },
                            o = tK(i.status_code);
                          tW(
                            {
                              category: "fetch",
                              data: i,
                              type: "http",
                              level: o,
                            },
                            a
                          );
                        }
                      }
                    }),
                  t.history &&
                    tj(function (t) {
                      if ((0, eE.s3)() !== e) return;
                      let n = t.from,
                        r = t.to,
                        i = tZ(te.location.href),
                        a = n ? tZ(n) : void 0,
                        o = tZ(r);
                      (a && a.path) || (a = i),
                        i.protocol === o.protocol &&
                          i.host === o.host &&
                          (r = o.relative),
                        i.protocol === a.protocol &&
                          i.host === a.host &&
                          (n = a.relative),
                        tW({
                          category: "navigation",
                          data: { from: n, to: r },
                        });
                    }),
                  t.sentry &&
                    e.on("beforeSendEvent", function (t) {
                      (0, eE.s3)() === e &&
                        tW(
                          {
                            category: `sentry.${
                              "transaction" === t.type ? "transaction" : "event"
                            }`,
                            event_id: t.event_id,
                            level: t.level,
                            message: (0, ey.jH)(t),
                          },
                          { event: t }
                        );
                    });
              },
            };
          },
          tY = [
            "EventTarget",
            "Window",
            "Node",
            "ApplicationCache",
            "AudioTrackList",
            "BroadcastChannel",
            "ChannelMergerNode",
            "CryptoOperation",
            "EventSource",
            "FileReader",
            "HTMLUnknownElement",
            "IDBDatabase",
            "IDBRequest",
            "IDBTransaction",
            "KeyOperation",
            "MediaController",
            "MessagePort",
            "ModalWindow",
            "Notification",
            "SVGElementInstance",
            "Screen",
            "SharedWorker",
            "TextTrack",
            "TextTrackCue",
            "TextTrackList",
            "WebSocket",
            "WebSocketWorker",
            "Worker",
            "XMLHttpRequest",
            "XMLHttpRequestEventTarget",
            "XMLHttpRequestUpload",
          ],
          tX = (e = {}) => {
            let t = {
              XMLHttpRequest: !0,
              eventTarget: !0,
              requestAnimationFrame: !0,
              setInterval: !0,
              setTimeout: !0,
              ...e,
            };
            return {
              name: "BrowserApiErrors",
              setupOnce() {
                t.setTimeout && (0, ex.hl)(te, "setTimeout", tQ),
                  t.setInterval && (0, ex.hl)(te, "setInterval", tQ),
                  t.requestAnimationFrame &&
                    (0, ex.hl)(te, "requestAnimationFrame", t0),
                  t.XMLHttpRequest &&
                    "XMLHttpRequest" in te &&
                    (0, ex.hl)(XMLHttpRequest.prototype, "send", t1);
                let e = t.eventTarget;
                if (e) {
                  let t = Array.isArray(e) ? e : tY;
                  t.forEach(t2);
                }
              },
            };
          };
        function tQ(e) {
          return function (...t) {
            let n = t[0];
            return (
              (t[0] = tn(n, {
                mechanism: {
                  data: { function: (0, eT.$P)(e) },
                  handled: !1,
                  type: "instrument",
                },
              })),
              e.apply(this, t)
            );
          };
        }
        function t0(e) {
          return function (t) {
            return e.apply(this, [
              tn(t, {
                mechanism: {
                  data: {
                    function: "requestAnimationFrame",
                    handler: (0, eT.$P)(e),
                  },
                  handled: !1,
                  type: "instrument",
                },
              }),
            ]);
          };
        }
        function t1(e) {
          return function (...t) {
            let n = this;
            return (
              ["onload", "onerror", "onprogress", "onreadystatechange"].forEach(
                (e) => {
                  e in n &&
                    "function" == typeof n[e] &&
                    (0, ex.hl)(n, e, function (t) {
                      let n = {
                          mechanism: {
                            data: { function: e, handler: (0, eT.$P)(t) },
                            handled: !1,
                            type: "instrument",
                          },
                        },
                        r = (0, ex.HK)(t);
                      return (
                        r && (n.mechanism.data.handler = (0, eT.$P)(r)),
                        tn(t, n)
                      );
                    });
                }
              ),
              e.apply(this, t)
            );
          };
        }
        function t2(e) {
          let t = te[e],
            n = t && t.prototype;
          n &&
            n.hasOwnProperty &&
            n.hasOwnProperty("addEventListener") &&
            ((0, ex.hl)(n, "addEventListener", function (t) {
              return function (n, r, i) {
                try {
                  "function" == typeof r.handleEvent &&
                    (r.handleEvent = tn(r.handleEvent, {
                      mechanism: {
                        data: {
                          function: "handleEvent",
                          handler: (0, eT.$P)(r),
                          target: e,
                        },
                        handled: !1,
                        type: "instrument",
                      },
                    }));
                } catch (e) {}
                return t.apply(this, [
                  n,
                  tn(r, {
                    mechanism: {
                      data: {
                        function: "addEventListener",
                        handler: (0, eT.$P)(r),
                        target: e,
                      },
                      handled: !1,
                      type: "instrument",
                    },
                  }),
                  i,
                ]);
              };
            }),
            (0, ex.hl)(n, "removeEventListener", function (e) {
              return function (t, n, r) {
                try {
                  let i = n.__sentry_wrapped__;
                  i && e.call(this, t, i, r);
                } catch (e) {}
                return e.call(this, t, n, r);
              };
            }));
        }
        let t6 = () => ({
            name: "BrowserSession",
            setupOnce() {
              void 0 !== te.document &&
                ((0, ec.yj)({ ignoreDuration: !0 }),
                (0, ec.cg)(),
                tj(({ from: e, to: t }) => {
                  void 0 !== e &&
                    e !== t &&
                    ((0, ec.yj)({ ignoreDuration: !0 }), (0, ec.cg)());
                }));
            },
          }),
          t3 = null;
        function t5(e) {
          let t = "error";
          tD(t, e), tR(t, t4);
        }
        function t4() {
          (t3 = ek.GLOBAL_OBJ.onerror),
            (ek.GLOBAL_OBJ.onerror = function (e, t, n, r, i) {
              return (
                tF("error", { column: r, error: i, line: n, msg: e, url: t }),
                !!t3 && t3.apply(this, arguments)
              );
            }),
            (ek.GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = !0);
        }
        let t8 = null;
        function t7(e) {
          let t = "unhandledrejection";
          tD(t, e), tR(t, t9);
        }
        function t9() {
          (t8 = ek.GLOBAL_OBJ.onunhandledrejection),
            (ek.GLOBAL_OBJ.onunhandledrejection = function (e) {
              return (
                tF("unhandledrejection", e), !t8 || t8.apply(this, arguments)
              );
            }),
            (ek.GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = !0);
        }
        let ne = (e = {}) => {
          let t = { onerror: !0, onunhandledrejection: !0, ...e };
          return {
            name: "GlobalHandlers",
            setupOnce() {
              Error.stackTraceLimit = 50;
            },
            setup(e) {
              t.onerror &&
                t5((t) => {
                  let { stackParser: n, attachStacktrace: r } = nt();
                  if ((0, eE.s3)() !== e || tt > 0) return;
                  let { msg: i, url: a, line: o, column: s, error: u } = t,
                    l = (function (e, t, n, r) {
                      let i = (e.exception = e.exception || {}),
                        a = (i.values = i.values || []),
                        o = (a[0] = a[0] || {}),
                        s = (o.stacktrace = o.stacktrace || {}),
                        u = (s.frames = s.frames || []),
                        l = (0, eK.HD)(t) && t.length > 0 ? t : (0, tV.l4)();
                      return (
                        0 === u.length &&
                          u.push({
                            colno: r,
                            filename: l,
                            function: eT.Fi,
                            in_app: !0,
                            lineno: n,
                          }),
                        e
                      );
                    })(e7(n, u || i, void 0, r, !1), a, o, s);
                  (l.level = "error"),
                    (0, ec.eN)(l, {
                      originalException: u,
                      mechanism: { handled: !1, type: "onerror" },
                    });
                }),
                t.onunhandledrejection &&
                  t7((t) => {
                    let { stackParser: n, attachStacktrace: r } = nt();
                    if ((0, eE.s3)() !== e || tt > 0) return;
                    let i = (function (e) {
                        if ((0, eK.pt)(e)) return e;
                        try {
                          if ("reason" in e) return e.reason;
                          if ("detail" in e && "reason" in e.detail)
                            return e.detail.reason;
                        } catch (e) {}
                        return e;
                      })(t),
                      a = (0, eK.pt)(i)
                        ? {
                            exception: {
                              values: [
                                {
                                  type: "UnhandledRejection",
                                  value: `Non-Error promise rejection captured with value: ${String(
                                    i
                                  )}`,
                                },
                              ],
                            },
                          }
                        : e7(n, i, void 0, r, !0);
                    (a.level = "error"),
                      (0, ec.eN)(a, {
                        originalException: i,
                        mechanism: {
                          handled: !1,
                          type: "onunhandledrejection",
                        },
                      });
                  });
            },
          };
        };
        function nt() {
          let e = (0, eE.s3)(),
            t = (e && e.getOptions()) || {
              stackParser: () => [],
              attachStacktrace: !1,
            };
          return t;
        }
        let nn = () => ({
          name: "HttpContext",
          preprocessEvent(e) {
            if (!te.navigator && !te.location && !te.document) return;
            let t =
                (e.request && e.request.url) ||
                (te.location && te.location.href),
              { referrer: n } = te.document || {},
              { userAgent: r } = te.navigator || {},
              i = {
                ...(e.request && e.request.headers),
                ...(n && { Referer: n }),
                ...(r && { "User-Agent": r }),
              },
              a = { ...e.request, ...(t && { url: t }), headers: i };
            e.request = a;
          },
        });
        function nr(e, t) {
          (e.mechanism = e.mechanism || { type: "generic", handled: !0 }),
            (e.mechanism = {
              ...e.mechanism,
              ...("AggregateError" === e.type && { is_exception_group: !0 }),
              exception_id: t,
            });
        }
        function ni(e, t, n, r) {
          (e.mechanism = e.mechanism || { type: "generic", handled: !0 }),
            (e.mechanism = {
              ...e.mechanism,
              type: "chained",
              source: t,
              exception_id: n,
              parent_id: r,
            });
        }
        let na = (e = {}) => {
          let t = e.limit || 5,
            n = e.key || "cause";
          return {
            name: "LinkedErrors",
            preprocessEvent(e, r, i) {
              let a = i.getOptions();
              !(function (e, t, n = 250, r, i, a, o) {
                if (
                  !a.exception ||
                  !a.exception.values ||
                  !o ||
                  !(0, eK.V9)(o.originalException, Error)
                )
                  return;
                let s =
                  a.exception.values.length > 0
                    ? a.exception.values[a.exception.values.length - 1]
                    : void 0;
                s &&
                  (a.exception.values = (function e(t, n, r, i, a, o, s, u) {
                    if (o.length >= r + 1) return o;
                    let l = [...o];
                    if ((0, eK.V9)(i[a], Error)) {
                      nr(s, u);
                      let o = t(n, i[a]),
                        c = l.length;
                      ni(o, a, c, u),
                        (l = e(t, n, r, i[a], a, [o, ...l], o, c));
                    }
                    return (
                      Array.isArray(i.errors) &&
                        i.errors.forEach((i, o) => {
                          if ((0, eK.V9)(i, Error)) {
                            nr(s, u);
                            let c = t(n, i),
                              d = l.length;
                            ni(c, `errors[${o}]`, d, u),
                              (l = e(t, n, r, i, a, [c, ...l], c, d));
                          }
                        }),
                      l
                    );
                  })(
                    e,
                    t,
                    i,
                    o.originalException,
                    r,
                    a.exception.values,
                    s,
                    0
                  ).map(
                    (e) => (e.value && (e.value = (0, eg.$G)(e.value, n)), e)
                  ));
              })(e6, a.stackParser, a.maxValueLength, n, t, e, r);
            },
          };
        };
        function no(e, t, n, r) {
          let i = {
            filename: e,
            function: "<anonymous>" === t ? eT.Fi : t,
            in_app: !0,
          };
          return (
            void 0 !== n && (i.lineno = n), void 0 !== r && (i.colno = r), i
          );
        }
        let ns = /^\s*at (\S+?)(?::(\d+))(?::(\d+))\s*$/i,
          nu =
            /^\s*at (?:(.+?\)(?: \[.+\])?|.*?) ?\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\/)?.*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i,
          nl = /\((\S*)(?::(\d+))(?::(\d+))\)/,
          nc = [
            30,
            (e) => {
              let t = ns.exec(e);
              if (t) {
                let [, e, n, r] = t;
                return no(e, eT.Fi, +n, +r);
              }
              let n = nu.exec(e);
              if (n) {
                let e = n[2] && 0 === n[2].indexOf("eval");
                if (e) {
                  let e = nl.exec(n[2]);
                  e && ((n[2] = e[1]), (n[3] = e[2]), (n[4] = e[3]));
                }
                let [t, r] = nm(n[1] || eT.Fi, n[2]);
                return no(r, t, n[3] ? +n[3] : void 0, n[4] ? +n[4] : void 0);
              }
            },
          ],
          nd =
            /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:[-a-z]+)?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js)|\/[\w\-. /=]+)(?::(\d+))?(?::(\d+))?\s*$/i,
          nf = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i,
          np = [
            50,
            (e) => {
              let t = nd.exec(e);
              if (t) {
                let e = t[3] && t[3].indexOf(" > eval") > -1;
                if (e) {
                  let e = nf.exec(t[3]);
                  e &&
                    ((t[1] = t[1] || "eval"),
                    (t[3] = e[1]),
                    (t[4] = e[2]),
                    (t[5] = ""));
                }
                let n = t[3],
                  r = t[1] || eT.Fi;
                return (
                  ([r, n] = nm(r, n)),
                  no(n, r, t[4] ? +t[4] : void 0, t[5] ? +t[5] : void 0)
                );
              }
            },
          ],
          nh = (0, eT.pE)(...[nc, np]),
          nm = (e, t) => {
            let n = -1 !== e.indexOf("safari-extension"),
              r = -1 !== e.indexOf("safari-web-extension");
            return n || r
              ? [
                  -1 !== e.indexOf("@") ? e.split("@")[0] : eT.Fi,
                  n ? `safari-extension:${t}` : `safari-web-extension:${t}`,
                ]
              : [e, t];
          },
          ny = {};
        function ng(e) {
          var t;
          let n = ny[e];
          if (n) return n;
          let r = ta[e];
          if (
            (t = r) &&
            /^function\s+\w+\(\)\s+\{\s+\[native code\]\s+\}$/.test(
              t.toString()
            )
          )
            return (ny[e] = r.bind(ta));
          let i = ta.document;
          if (i && "function" == typeof i.createElement)
            try {
              let t = i.createElement("iframe");
              (t.hidden = !0), i.head.appendChild(t);
              let n = t.contentWindow;
              n && n[e] && (r = n[e]), i.head.removeChild(t);
            } catch (e) {}
          return r ? (ny[e] = r.bind(ta)) : r;
        }
        function nb(...e) {
          return ng("setTimeout")(...e);
        }
        function nv(e, t) {
          if ("event" === t || "transaction" === t)
            return Array.isArray(e) ? e[1] : void 0;
        }
        function nw(e, t = ng("fetch")) {
          let n = 0,
            r = 0;
          return (function (
            e,
            t,
            n = (function (e) {
              let t = [];
              function n(e) {
                return t.splice(t.indexOf(e), 1)[0] || Promise.resolve(void 0);
              }
              return {
                $: t,
                add: function (r) {
                  if (!(void 0 === e || t.length < e))
                    return (0, eZ.$2)(
                      new eV(
                        "Not adding Promise because buffer limit was reached."
                      )
                    );
                  let i = r();
                  return (
                    -1 === t.indexOf(i) && t.push(i),
                    i
                      .then(() => n(i))
                      .then(null, () => n(i).then(null, () => {})),
                    i
                  );
                },
                drain: function (e) {
                  return new eZ.cW((n, r) => {
                    let i = t.length;
                    if (!i) return n(!0);
                    let a = setTimeout(() => {
                      e && e > 0 && n(!1);
                    }, e);
                    t.forEach((e) => {
                      (0, eZ.WD)(e).then(() => {
                        --i || (clearTimeout(a), n(!0));
                      }, r);
                    });
                  });
                },
              };
            })(e.bufferSize || 64)
          ) {
            let r = {};
            return {
              send: function (i) {
                let a = [];
                if (
                  (eU(i, (t, n) => {
                    let i = eq[n];
                    if (
                      (function (e, t, n = Date.now()) {
                        return (e[t] || e.all || 0) > n;
                      })(r, i)
                    ) {
                      let r = nv(t, n);
                      e.recordDroppedEvent("ratelimit_backoff", i, r);
                    } else a.push(t);
                  }),
                  0 === a.length)
                )
                  return (0, eZ.WD)({});
                let o = eL(i[0], a),
                  s = (t) => {
                    eU(o, (n, r) => {
                      let i = nv(n, r);
                      e.recordDroppedEvent(t, eq[r], i);
                    });
                  };
                return n
                  .add(() =>
                    t({
                      body: (function (e) {
                        let [t, n] = e,
                          r = JSON.stringify(t);
                        function i(e) {
                          "string" == typeof r
                            ? (r = "string" == typeof e ? r + e : [e$(r), e])
                            : r.push("string" == typeof e ? e$(e) : e);
                        }
                        for (let e of n) {
                          let [t, n] = e;
                          if (
                            (i(`
${JSON.stringify(t)}
`),
                            "string" == typeof n || n instanceof Uint8Array)
                          )
                            i(n);
                          else {
                            let e;
                            try {
                              e = JSON.stringify(n);
                            } catch (t) {
                              e = JSON.stringify((0, eF.Fv)(n));
                            }
                            i(e);
                          }
                        }
                        return "string" == typeof r
                          ? r
                          : (function (e) {
                              let t = e.reduce((e, t) => e + t.length, 0),
                                n = new Uint8Array(t),
                                r = 0;
                              for (let t of e) n.set(t, r), (r += t.length);
                              return n;
                            })(r);
                      })(o),
                    }).then(
                      (e) => (
                        void 0 !== e.statusCode &&
                          (e.statusCode < 200 || e.statusCode >= 300) &&
                          ed.X &&
                          ef.kg.warn(
                            `Sentry responded with status code ${e.statusCode} to sent event.`
                          ),
                        (r = (function (
                          e,
                          { statusCode: t, headers: n },
                          r = Date.now()
                        ) {
                          let i = { ...e },
                            a = n && n["x-sentry-rate-limits"],
                            o = n && n["retry-after"];
                          if (a)
                            for (let e of a.trim().split(",")) {
                              let [t, n, , , a] = e.split(":", 5),
                                o = parseInt(t, 10),
                                s = (isNaN(o) ? 60 : o) * 1e3;
                              if (n)
                                for (let e of n.split(";"))
                                  "metric_bucket" === e
                                    ? (!a || a.split(";").includes("custom")) &&
                                      (i[e] = r + s)
                                    : (i[e] = r + s);
                              else i.all = r + s;
                            }
                          else
                            o
                              ? (i.all =
                                  r +
                                  (function (e, t = Date.now()) {
                                    let n = parseInt(`${e}`, 10);
                                    if (!isNaN(n)) return 1e3 * n;
                                    let r = Date.parse(`${e}`);
                                    return isNaN(r) ? 6e4 : r - t;
                                  })(o, r))
                              : 429 === t && (i.all = r + 6e4);
                          return i;
                        })(r, e)),
                        e
                      ),
                      (e) => {
                        throw (s("network_error"), e);
                      }
                    )
                  )
                  .then(
                    (e) => e,
                    (e) => {
                      if (e instanceof eV)
                        return (
                          ed.X &&
                            ef.kg.error(
                              "Skipped sending event because buffer is full."
                            ),
                          s("queue_overflow"),
                          (0, eZ.WD)({})
                        );
                      throw e;
                    }
                  );
              },
              flush: (e) => n.drain(e),
            };
          })(e, function (i) {
            let a = i.body.length;
            (n += a), r++;
            let o = {
              body: i.body,
              method: "POST",
              referrerPolicy: "origin",
              headers: e.headers,
              keepalive: n <= 6e4 && r < 15,
              ...e.fetchOptions,
            };
            if (!t)
              return (
                (ny.fetch = void 0),
                (0, eZ.$2)("No fetch implementation available")
              );
            try {
              return t(e.url, o).then(
                (e) => (
                  (n -= a),
                  r--,
                  {
                    statusCode: e.status,
                    headers: {
                      "x-sentry-rate-limits": e.headers.get(
                        "X-Sentry-Rate-Limits"
                      ),
                      "retry-after": e.headers.get("Retry-After"),
                    },
                  }
                )
              );
            } catch (e) {
              return (ny.fetch = void 0), (n -= a), r--, (0, eZ.$2)(e);
            }
          });
        }
        function nE(e) {
          let t = [ev(), e_(), tX(), tJ(), ne(), na(), eS(), nn()];
          return !1 !== e.autoSessionTracking && t.push(t6()), t;
        }
        let nx = "8.45.0";
        var nC = n(67294),
          n_ = n(34155);
        function nT() {
          return nS(ta), ta;
        }
        function nS(e) {
          let t = (e.__SENTRY__ = e.__SENTRY__ || {});
          return (t.version = t.version || ti), (t[ti] = t[ti] || {});
        }
        function nP() {
          return tx().substring(16);
        }
        let nO = "_sentrySpan";
        function nI(e, t) {
          t ? tw(e, nO, t) : delete e[nO];
        }
        class nA {
          constructor() {
            (this._notifyingListeners = !1),
              (this._scopeListeners = []),
              (this._eventProcessors = []),
              (this._breadcrumbs = []),
              (this._attachments = []),
              (this._user = {}),
              (this._tags = {}),
              (this._extra = {}),
              (this._contexts = {}),
              (this._sdkProcessingMetadata = {}),
              (this._propagationContext = { traceId: tx(), spanId: nP() });
          }
          clone() {
            let e = new nA();
            return (
              (e._breadcrumbs = [...this._breadcrumbs]),
              (e._tags = { ...this._tags }),
              (e._extra = { ...this._extra }),
              (e._contexts = { ...this._contexts }),
              this._contexts.flags &&
                (e._contexts.flags = {
                  values: [...this._contexts.flags.values],
                }),
              (e._user = this._user),
              (e._level = this._level),
              (e._session = this._session),
              (e._transactionName = this._transactionName),
              (e._fingerprint = this._fingerprint),
              (e._eventProcessors = [...this._eventProcessors]),
              (e._requestSession = this._requestSession),
              (e._attachments = [...this._attachments]),
              (e._sdkProcessingMetadata = { ...this._sdkProcessingMetadata }),
              (e._propagationContext = { ...this._propagationContext }),
              (e._client = this._client),
              (e._lastEventId = this._lastEventId),
              nI(e, this[nO]),
              e
            );
          }
          setClient(e) {
            this._client = e;
          }
          setLastEventId(e) {
            this._lastEventId = e;
          }
          getClient() {
            return this._client;
          }
          lastEventId() {
            return this._lastEventId;
          }
          addScopeListener(e) {
            this._scopeListeners.push(e);
          }
          addEventProcessor(e) {
            return this._eventProcessors.push(e), this;
          }
          setUser(e) {
            return (
              (this._user = e || {
                email: void 0,
                id: void 0,
                ip_address: void 0,
                username: void 0,
              }),
              this._session &&
                (function (e, t = {}) {
                  if (
                    (!t.user ||
                      (!e.ipAddress &&
                        t.user.ip_address &&
                        (e.ipAddress = t.user.ip_address),
                      e.did ||
                        t.did ||
                        (e.did = t.user.id || t.user.email || t.user.username)),
                    (e.timestamp = t.timestamp || tP()),
                    t.abnormal_mechanism &&
                      (e.abnormal_mechanism = t.abnormal_mechanism),
                    t.ignoreDuration && (e.ignoreDuration = t.ignoreDuration),
                    t.sid && (e.sid = 32 === t.sid.length ? t.sid : tx()),
                    void 0 !== t.init && (e.init = t.init),
                    !e.did && t.did && (e.did = `${t.did}`),
                    "number" == typeof t.started && (e.started = t.started),
                    e.ignoreDuration)
                  )
                    e.duration = void 0;
                  else if ("number" == typeof t.duration)
                    e.duration = t.duration;
                  else {
                    let t = e.timestamp - e.started;
                    e.duration = t >= 0 ? t : 0;
                  }
                  t.release && (e.release = t.release),
                    t.environment && (e.environment = t.environment),
                    !e.ipAddress && t.ipAddress && (e.ipAddress = t.ipAddress),
                    !e.userAgent && t.userAgent && (e.userAgent = t.userAgent),
                    "number" == typeof t.errors && (e.errors = t.errors),
                    t.status && (e.status = t.status);
                })(this._session, { user: e }),
              this._notifyScopeListeners(),
              this
            );
          }
          getUser() {
            return this._user;
          }
          getRequestSession() {
            return this._requestSession;
          }
          setRequestSession(e) {
            return (this._requestSession = e), this;
          }
          setTags(e) {
            return (
              (this._tags = { ...this._tags, ...e }),
              this._notifyScopeListeners(),
              this
            );
          }
          setTag(e, t) {
            return (
              (this._tags = { ...this._tags, [e]: t }),
              this._notifyScopeListeners(),
              this
            );
          }
          setExtras(e) {
            return (
              (this._extra = { ...this._extra, ...e }),
              this._notifyScopeListeners(),
              this
            );
          }
          setExtra(e, t) {
            return (
              (this._extra = { ...this._extra, [e]: t }),
              this._notifyScopeListeners(),
              this
            );
          }
          setFingerprint(e) {
            return (this._fingerprint = e), this._notifyScopeListeners(), this;
          }
          setLevel(e) {
            return (this._level = e), this._notifyScopeListeners(), this;
          }
          setTransactionName(e) {
            return (
              (this._transactionName = e), this._notifyScopeListeners(), this
            );
          }
          setContext(e, t) {
            return (
              null === t ? delete this._contexts[e] : (this._contexts[e] = t),
              this._notifyScopeListeners(),
              this
            );
          }
          setSession(e) {
            return (
              e ? (this._session = e) : delete this._session,
              this._notifyScopeListeners(),
              this
            );
          }
          getSession() {
            return this._session;
          }
          update(e) {
            if (!e) return this;
            let t = "function" == typeof e ? e(this) : e,
              [n, r] =
                t instanceof nk
                  ? [t.getScopeData(), t.getRequestSession()]
                  : tb(t)
                  ? [e, e.requestSession]
                  : [],
              {
                tags: i,
                extra: a,
                user: o,
                contexts: s,
                level: u,
                fingerprint: l = [],
                propagationContext: c,
              } = n || {};
            return (
              (this._tags = { ...this._tags, ...i }),
              (this._extra = { ...this._extra, ...a }),
              (this._contexts = { ...this._contexts, ...s }),
              o && Object.keys(o).length && (this._user = o),
              u && (this._level = u),
              l.length && (this._fingerprint = l),
              c && (this._propagationContext = c),
              r && (this._requestSession = r),
              this
            );
          }
          clear() {
            return (
              (this._breadcrumbs = []),
              (this._tags = {}),
              (this._extra = {}),
              (this._user = {}),
              (this._contexts = {}),
              (this._level = void 0),
              (this._transactionName = void 0),
              (this._fingerprint = void 0),
              (this._requestSession = void 0),
              (this._session = void 0),
              nI(this, void 0),
              (this._attachments = []),
              this.setPropagationContext({ traceId: tx() }),
              this._notifyScopeListeners(),
              this
            );
          }
          addBreadcrumb(e, t) {
            let n = "number" == typeof t ? t : 100;
            if (n <= 0) return this;
            let r = { timestamp: tS(), ...e },
              i = this._breadcrumbs;
            return (
              i.push(r),
              (this._breadcrumbs = i.length > n ? i.slice(-n) : i),
              this._notifyScopeListeners(),
              this
            );
          }
          getLastBreadcrumb() {
            return this._breadcrumbs[this._breadcrumbs.length - 1];
          }
          clearBreadcrumbs() {
            return (this._breadcrumbs = []), this._notifyScopeListeners(), this;
          }
          addAttachment(e) {
            return this._attachments.push(e), this;
          }
          clearAttachments() {
            return (this._attachments = []), this;
          }
          getScopeData() {
            return {
              breadcrumbs: this._breadcrumbs,
              attachments: this._attachments,
              contexts: this._contexts,
              tags: this._tags,
              extra: this._extra,
              user: this._user,
              level: this._level,
              fingerprint: this._fingerprint || [],
              eventProcessors: this._eventProcessors,
              propagationContext: this._propagationContext,
              sdkProcessingMetadata: this._sdkProcessingMetadata,
              transactionName: this._transactionName,
              span: this[nO],
            };
          }
          setSDKProcessingMetadata(e) {
            return (
              (this._sdkProcessingMetadata = (function e(t, n, r = 2) {
                if (!n || "object" != typeof n || r <= 0) return n;
                if (t && n && 0 === Object.keys(n).length) return t;
                let i = { ...t };
                for (let t in n)
                  Object.prototype.hasOwnProperty.call(n, t) &&
                    (i[t] = e(i[t], n[t], r - 1));
                return i;
              })(this._sdkProcessingMetadata, e, 2)),
              this
            );
          }
          setPropagationContext(e) {
            return (this._propagationContext = { spanId: nP(), ...e }), this;
          }
          getPropagationContext() {
            return this._propagationContext;
          }
          captureException(e, t) {
            let n = t && t.event_id ? t.event_id : tx();
            if (!this._client)
              return (
                tl.warn(
                  "No client configured on scope - will not capture exception!"
                ),
                n
              );
            let r = Error("Sentry syntheticException");
            return (
              this._client.captureException(
                e,
                {
                  originalException: e,
                  syntheticException: r,
                  ...t,
                  event_id: n,
                },
                this
              ),
              n
            );
          }
          captureMessage(e, t, n) {
            let r = n && n.event_id ? n.event_id : tx();
            if (!this._client)
              return (
                tl.warn(
                  "No client configured on scope - will not capture message!"
                ),
                r
              );
            let i = Error(e);
            return (
              this._client.captureMessage(
                e,
                t,
                {
                  originalException: e,
                  syntheticException: i,
                  ...n,
                  event_id: r,
                },
                this
              ),
              r
            );
          }
          captureEvent(e, t) {
            let n = t && t.event_id ? t.event_id : tx();
            return (
              this._client
                ? this._client.captureEvent(e, { ...t, event_id: n }, this)
                : tl.warn(
                    "No client configured on scope - will not capture event!"
                  ),
              n
            );
          }
          _notifyScopeListeners() {
            this._notifyingListeners ||
              ((this._notifyingListeners = !0),
              this._scopeListeners.forEach((e) => {
                e(this);
              }),
              (this._notifyingListeners = !1));
          }
        }
        let nk = nA;
        class nj {
          constructor(e, t) {
            let n, r;
            (n = e || new nk()),
              (r = t || new nk()),
              (this._stack = [{ scope: n }]),
              (this._isolationScope = r);
          }
          withScope(e) {
            var t;
            let n;
            let r = this._pushScope();
            try {
              n = e(r);
            } catch (e) {
              throw (this._popScope(), e);
            }
            return (t = n) && t.then && "function" == typeof t.then
              ? n.then(
                  (e) => (this._popScope(), e),
                  (e) => {
                    throw (this._popScope(), e);
                  }
                )
              : (this._popScope(), n);
          }
          getClient() {
            return this.getStackTop().client;
          }
          getScope() {
            return this.getStackTop().scope;
          }
          getIsolationScope() {
            return this._isolationScope;
          }
          getStackTop() {
            return this._stack[this._stack.length - 1];
          }
          _pushScope() {
            let e = this.getScope().clone();
            return this._stack.push({ client: this.getClient(), scope: e }), e;
          }
          _popScope() {
            return !(this._stack.length <= 1) && !!this._stack.pop();
          }
        }
        function nB() {
          let e = nT(),
            t = nS(e);
          return (t.stack =
            t.stack ||
            new nj(
              to("defaultCurrentScope", () => new nk()),
              to("defaultIsolationScope", () => new nk())
            ));
        }
        function nM(e) {
          return nB().withScope(e);
        }
        function nN(e, t) {
          let n = nB();
          return n.withScope(() => ((n.getStackTop().scope = e), t(e)));
        }
        function nD(e) {
          return nB().withScope(() => e(nB().getIsolationScope()));
        }
        function nR(e) {
          let t = nS(e);
          return t.acs
            ? t.acs
            : {
                withIsolationScope: nD,
                withScope: nM,
                withSetScope: nN,
                withSetIsolationScope: (e, t) => nD(t),
                getCurrentScope: () => nB().getScope(),
                getIsolationScope: () => nB().getIsolationScope(),
              };
        }
        function nF() {
          let e = nT(),
            t = nR(e);
          return t.getCurrentScope();
        }
        function nL(...e) {
          let t = nT(),
            n = nR(t);
          if (2 === e.length) {
            let [t, r] = e;
            return t ? n.withSetScope(t, r) : n.withScope(r);
          }
          return n.withScope(e[0]);
        }
        function nU() {
          return nF().getClient();
        }
        function n$(e) {
          let t = e._sentryMetrics;
          if (!t) return;
          let n = {};
          for (let [, [e, r]] of t) {
            let t = n[e] || (n[e] = []);
            t.push(tE(r));
          }
          return n;
        }
        let nq = "sentry.source",
          nH = "sentry.sample_rate",
          nz = "sentry.op",
          nG = "sentry.origin",
          nW = "sentry.measurement_unit",
          nV = "sentry.measurement_value",
          nK = "sentry.exclusive_time",
          nZ = !1;
        function nJ(e) {
          return "number" == typeof e
            ? nY(e)
            : Array.isArray(e)
            ? e[0] + e[1] / 1e9
            : e instanceof Date
            ? nY(e.getTime())
            : tP();
        }
        function nY(e) {
          return e > 9999999999 ? e / 1e3 : e;
        }
        function nX(e) {
          if ("function" == typeof e.getSpanJSON) return e.getSpanJSON();
          try {
            let { spanId: t, traceId: n } = e.spanContext();
            if (
              e.attributes &&
              e.startTime &&
              e.name &&
              e.endTime &&
              e.status
            ) {
              let {
                attributes: r,
                startTime: i,
                name: a,
                endTime: o,
                parentSpanId: s,
                status: u,
              } = e;
              return tE({
                span_id: t,
                trace_id: n,
                data: r,
                description: a,
                parent_span_id: s,
                start_timestamp: nJ(i),
                timestamp: nJ(o) || void 0,
                status: n0(u),
                op: r[nz],
                origin: r[nG],
                _metrics_summary: n$(e),
              });
            }
            return { span_id: t, trace_id: n };
          } catch (e) {
            return {};
          }
        }
        function nQ(e) {
          let { traceFlags: t } = e.spanContext();
          return 1 === t;
        }
        function n0(e) {
          return e && 0 !== e.code
            ? 1 === e.code
              ? "ok"
              : e.message || "unknown_error"
            : void 0;
        }
        let n1 = "_sentryChildSpans",
          n2 = "_sentryRootSpan";
        function n6(e, t) {
          let n = e[n2] || e;
          tw(t, n2, n), e[n1] ? e[n1].add(t) : tw(e, n1, new Set([t]));
        }
        function n3(e) {
          return e[n2] || e;
        }
        function n5() {
          let e = nT(),
            t = nR(e);
          return t.getActiveSpan ? t.getActiveSpan() : nF()[nO];
        }
        function n4(e, t = {}) {
          if (!e) return "<unknown>";
          try {
            let n,
              r = e,
              i = [],
              a = 0,
              o = 0,
              s = Array.isArray(t) ? t : t.keyAttrs,
              u = (!Array.isArray(t) && t.maxStringLength) || 80;
            for (
              ;
              r &&
              a++ < 5 &&
              ((n = (function (e, t) {
                let n = [];
                if (!e || !e.tagName) return "";
                if (ta.HTMLElement && e instanceof HTMLElement && e.dataset) {
                  if (e.dataset.sentryComponent)
                    return e.dataset.sentryComponent;
                  if (e.dataset.sentryElement) return e.dataset.sentryElement;
                }
                n.push(e.tagName.toLowerCase());
                let r =
                  t && t.length
                    ? t
                        .filter((t) => e.getAttribute(t))
                        .map((t) => [t, e.getAttribute(t)])
                    : null;
                if (r && r.length)
                  r.forEach((e) => {
                    n.push(`[${e[0]}="${e[1]}"]`);
                  });
                else {
                  e.id && n.push(`#${e.id}`);
                  let t = e.className;
                  if (t && tg(t)) {
                    let e = t.split(/\s+/);
                    for (let t of e) n.push(`.${t}`);
                  }
                }
                for (let t of ["aria-label", "type", "name", "title", "alt"]) {
                  let r = e.getAttribute(t);
                  r && n.push(`[${t}="${r}"]`);
                }
                return n.join("");
              })(r, s)),
              "html" !== n &&
                (!(a > 1) || !(o + 3 * i.length + n.length >= u)));

            )
              i.push(n), (o += n.length), (r = r.parentNode);
            return i.reverse().join(" > ");
          } catch (e) {
            return "<unknown>";
          }
        }
        function n8(e) {
          if (!e || 0 === e.length) return;
          let t = {};
          return (
            e.forEach((e) => {
              let n = e.attributes || {},
                r = n[nW],
                i = n[nV];
              "string" == typeof r &&
                "number" == typeof i &&
                (t[e.name] = { value: i, unit: r });
            }),
            t
          );
        }
        let n7 = (e, t) =>
            e > t[1] ? "poor" : e > t[0] ? "needs-improvement" : "good",
          n9 = (e, t, n, r) => {
            let i, a;
            return (o) => {
              t.value >= 0 &&
                (o || r) &&
                ((a = t.value - (i || 0)) || void 0 === i) &&
                ((i = t.value),
                (t.delta = a),
                (t.rating = n7(t.value, n)),
                e(t));
            };
          },
          re = () =>
            `v4-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`,
          rt = (e = !0) => {
            let t =
              ta.performance &&
              ta.performance.getEntriesByType &&
              ta.performance.getEntriesByType("navigation")[0];
            if (
              !e ||
              (t && t.responseStart > 0 && t.responseStart < performance.now())
            )
              return t;
          },
          rn = () => {
            let e = rt();
            return (e && e.activationStart) || 0;
          },
          rr = (e, t) => {
            let n = rt(),
              r = "navigate";
            return (
              n &&
                ((ta.document && ta.document.prerendering) || rn() > 0
                  ? (r = "prerender")
                  : ta.document && ta.document.wasDiscarded
                  ? (r = "restore")
                  : n.type && (r = n.type.replace(/_/g, "-"))),
              {
                name: e,
                value: void 0 === t ? -1 : t,
                rating: "good",
                delta: 0,
                entries: [],
                id: re(),
                navigationType: r,
              }
            );
          },
          ri = (e, t, n) => {
            try {
              if (PerformanceObserver.supportedEntryTypes.includes(e)) {
                let r = new PerformanceObserver((e) => {
                  Promise.resolve().then(() => {
                    t(e.getEntries());
                  });
                });
                return (
                  r.observe(Object.assign({ type: e, buffered: !0 }, n || {})),
                  r
                );
              }
            } catch (e) {}
          },
          ra = (e) => {
            let t = (t) => {
              ("pagehide" === t.type ||
                (ta.document && "hidden" === ta.document.visibilityState)) &&
                e(t);
            };
            ta.document &&
              (addEventListener("visibilitychange", t, !0),
              addEventListener("pagehide", t, !0));
          },
          ro = (e) => {
            let t = !1;
            return () => {
              t || (e(), (t = !0));
            };
          },
          rs = -1,
          ru = () =>
            "hidden" !== ta.document.visibilityState || ta.document.prerendering
              ? 1 / 0
              : 0,
          rl = (e) => {
            "hidden" === ta.document.visibilityState &&
              rs > -1 &&
              ((rs = "visibilitychange" === e.type ? e.timeStamp : 0), rd());
          },
          rc = () => {
            addEventListener("visibilitychange", rl, !0),
              addEventListener("prerenderingchange", rl, !0);
          },
          rd = () => {
            removeEventListener("visibilitychange", rl, !0),
              removeEventListener("prerenderingchange", rl, !0);
          },
          rf = () => (
            ta.document && rs < 0 && ((rs = ru()), rc()),
            {
              get firstHiddenTime() {
                return rs;
              },
            }
          ),
          rp = (e) => {
            ta.document && ta.document.prerendering
              ? addEventListener("prerenderingchange", () => e(), !0)
              : e();
          },
          rh = [1800, 3e3],
          rm = (e, t = {}) => {
            rp(() => {
              let n;
              let r = rf(),
                i = rr("FCP"),
                a = ri("paint", (e) => {
                  e.forEach((e) => {
                    "first-contentful-paint" === e.name &&
                      (a.disconnect(),
                      e.startTime < r.firstHiddenTime &&
                        ((i.value = Math.max(e.startTime - rn(), 0)),
                        i.entries.push(e),
                        n(!0)));
                  });
                });
              a && (n = n9(e, i, rh, t.reportAllChanges));
            });
          },
          ry = [0.1, 0.25],
          rg = (e, t = {}) => {
            rm(
              ro(() => {
                let n;
                let r = rr("CLS", 0),
                  i = 0,
                  a = [],
                  o = (e) => {
                    e.forEach((e) => {
                      if (!e.hadRecentInput) {
                        let t = a[0],
                          n = a[a.length - 1];
                        i &&
                        t &&
                        n &&
                        e.startTime - n.startTime < 1e3 &&
                        e.startTime - t.startTime < 5e3
                          ? ((i += e.value), a.push(e))
                          : ((i = e.value), (a = [e]));
                      }
                    }),
                      i > r.value && ((r.value = i), (r.entries = a), n());
                  },
                  s = ri("layout-shift", o);
                s &&
                  ((n = n9(e, r, ry, t.reportAllChanges)),
                  ra(() => {
                    o(s.takeRecords()), n(!0);
                  }),
                  setTimeout(n, 0));
              })
            );
          },
          rb = [100, 300],
          rv = (e, t = {}) => {
            rp(() => {
              let n;
              let r = rf(),
                i = rr("FID"),
                a = (e) => {
                  e.startTime < r.firstHiddenTime &&
                    ((i.value = e.processingStart - e.startTime),
                    i.entries.push(e),
                    n(!0));
                },
                o = (e) => {
                  e.forEach(a);
                },
                s = ri("first-input", o);
              (n = n9(e, i, rb, t.reportAllChanges)),
                s &&
                  ra(
                    ro(() => {
                      o(s.takeRecords()), s.disconnect();
                    })
                  );
            });
          },
          rw = 0,
          rE = 1 / 0,
          rx = 0,
          rC = (e) => {
            e.forEach((e) => {
              e.interactionId &&
                ((rE = Math.min(rE, e.interactionId)),
                (rw = (rx = Math.max(rx, e.interactionId))
                  ? (rx - rE) / 7 + 1
                  : 0));
            });
          },
          r_ = () => (u ? rw : performance.interactionCount || 0),
          rT = () => {
            "interactionCount" in performance ||
              u ||
              (u = ri("event", rC, {
                type: "event",
                buffered: !0,
                durationThreshold: 0,
              }));
          },
          rS = [],
          rP = new Map(),
          rO = () => r_() - 0,
          rI = () => {
            let e = Math.min(rS.length - 1, Math.floor(rO() / 50));
            return rS[e];
          },
          rA = [],
          rk = (e) => {
            if (
              (rA.forEach((t) => t(e)),
              !(e.interactionId || "first-input" === e.entryType))
            )
              return;
            let t = rS[rS.length - 1],
              n = rP.get(e.interactionId);
            if (n || rS.length < 10 || (t && e.duration > t.latency)) {
              if (n)
                e.duration > n.latency
                  ? ((n.entries = [e]), (n.latency = e.duration))
                  : e.duration === n.latency &&
                    e.startTime === (n.entries[0] && n.entries[0].startTime) &&
                    n.entries.push(e);
              else {
                let t = {
                  id: e.interactionId,
                  latency: e.duration,
                  entries: [e],
                };
                rP.set(t.id, t), rS.push(t);
              }
              rS.sort((e, t) => t.latency - e.latency),
                rS.length > 10 && rS.splice(10).forEach((e) => rP.delete(e.id));
            }
          },
          rj = (e) => {
            let t = ta.requestIdleCallback || ta.setTimeout,
              n = -1;
            return (
              (e = ro(e)),
              ta.document && "hidden" === ta.document.visibilityState
                ? e()
                : ((n = t(e)), ra(e)),
              n
            );
          },
          rB = [200, 500],
          rM = (e, t = {}) => {
            "PerformanceEventTiming" in ta &&
              "interactionId" in PerformanceEventTiming.prototype &&
              rp(() => {
                let n;
                rT();
                let r = rr("INP"),
                  i = (e) => {
                    rj(() => {
                      e.forEach(rk);
                      let t = rI();
                      t &&
                        t.latency !== r.value &&
                        ((r.value = t.latency), (r.entries = t.entries), n());
                    });
                  },
                  a = ri("event", i, {
                    durationThreshold:
                      null != t.durationThreshold ? t.durationThreshold : 40,
                  });
                (n = n9(e, r, rB, t.reportAllChanges)),
                  a &&
                    (a.observe({ type: "first-input", buffered: !0 }),
                    ra(() => {
                      i(a.takeRecords()), n(!0);
                    }));
              });
          },
          rN = [2500, 4e3],
          rD = {},
          rR = (e, t = {}) => {
            rp(() => {
              let n;
              let r = rf(),
                i = rr("LCP"),
                a = (e) => {
                  t.reportAllChanges || (e = e.slice(-1)),
                    e.forEach((e) => {
                      e.startTime < r.firstHiddenTime &&
                        ((i.value = Math.max(e.startTime - rn(), 0)),
                        (i.entries = [e]),
                        n());
                    });
                },
                o = ri("largest-contentful-paint", a);
              if (o) {
                n = n9(e, i, rN, t.reportAllChanges);
                let r = ro(() => {
                  rD[i.id] ||
                    (a(o.takeRecords()),
                    o.disconnect(),
                    (rD[i.id] = !0),
                    n(!0));
                });
                ["keydown", "click"].forEach((e) => {
                  ta.document &&
                    addEventListener(e, () => rj(r), { once: !0, capture: !0 });
                }),
                  ra(r);
              }
            });
          },
          rF = [800, 1800],
          rL = (e) => {
            ta.document && ta.document.prerendering
              ? rp(() => rL(e))
              : ta.document && "complete" !== ta.document.readyState
              ? addEventListener("load", () => rL(e), !0)
              : setTimeout(e, 0);
          },
          rU = (e, t = {}) => {
            let n = rr("TTFB"),
              r = n9(e, n, rF, t.reportAllChanges);
            rL(() => {
              let e = rt();
              e &&
                ((n.value = Math.max(e.responseStart - rn(), 0)),
                (n.entries = [e]),
                r(!0));
            });
          },
          r$ = {},
          rq = {};
        function rH(e, t = !1) {
          return r0("cls", e, rZ, l, t);
        }
        function rz(e, t = !1) {
          return r0("lcp", e, rY, d, t);
        }
        function rG(e) {
          return r0("fid", e, rJ, c);
        }
        function rW(e) {
          return r0("inp", e, rQ, p);
        }
        function rV(e, t) {
          return (
            r1(e, t),
            rq[e] ||
              ((function (e) {
                let t = {};
                "event" === e && (t.durationThreshold = 0),
                  ri(
                    e,
                    (t) => {
                      rK(e, { entries: t });
                    },
                    t
                  );
              })(e),
              (rq[e] = !0)),
            r2(e, t)
          );
        }
        function rK(e, t) {
          let n = r$[e];
          if (n && n.length)
            for (let e of n)
              try {
                e(t);
              } catch (e) {}
        }
        function rZ() {
          return rg(
            (e) => {
              rK("cls", { metric: e }), (l = e);
            },
            { reportAllChanges: !0 }
          );
        }
        function rJ() {
          return rv((e) => {
            rK("fid", { metric: e }), (c = e);
          });
        }
        function rY() {
          return rR(
            (e) => {
              rK("lcp", { metric: e }), (d = e);
            },
            { reportAllChanges: !0 }
          );
        }
        function rX() {
          return rU((e) => {
            rK("ttfb", { metric: e }), (f = e);
          });
        }
        function rQ() {
          return rM((e) => {
            rK("inp", { metric: e }), (p = e);
          });
        }
        function r0(e, t, n, r, i = !1) {
          let a;
          return (
            r1(e, t),
            rq[e] || ((a = n()), (rq[e] = !0)),
            r && t({ metric: r }),
            r2(e, t, i ? a : void 0)
          );
        }
        function r1(e, t) {
          (r$[e] = r$[e] || []), r$[e].push(t);
        }
        function r2(e, t, n) {
          return () => {
            n && n();
            let r = r$[e];
            if (!r) return;
            let i = r.indexOf(t);
            -1 !== i && r.splice(i, 1);
          };
        }
        function r6(e) {
          if ("boolean" == typeof __SENTRY_TRACING__ && !__SENTRY_TRACING__)
            return !1;
          let t = nU(),
            n = e || (t && t.getOptions());
          return (
            !!n &&
            (n.enableTracing || "tracesSampleRate" in n || "tracesSampler" in n)
          );
        }
        let r3 = /^sentry-/;
        function r5(e) {
          return e
            .split(",")
            .map((e) => e.split("=").map((e) => decodeURIComponent(e.trim())))
            .reduce((e, [t, n]) => (t && n && (e[t] = n), e), {});
        }
        let r4 = "_frozenDsc";
        function r8(e) {
          let t = nU();
          if (!t) return {};
          let n = n3(e),
            r = n[r4];
          if (r) return r;
          let i = n.spanContext().traceState,
            a = i && i.get("sentry.dsc"),
            o =
              a &&
              (function (e) {
                let t =
                  e && (tg(e) || Array.isArray(e))
                    ? Array.isArray(e)
                      ? e.reduce((e, t) => {
                          let n = r5(t);
                          return (
                            Object.entries(n).forEach(([t, n]) => {
                              e[t] = n;
                            }),
                            e
                          );
                        }, {})
                      : r5(e)
                    : void 0;
                if (!t) return;
                let n = Object.entries(t).reduce((e, [t, n]) => {
                  if (t.match(r3)) {
                    let r = t.slice(7);
                    e[r] = n;
                  }
                  return e;
                }, {});
                return Object.keys(n).length > 0 ? n : void 0;
              })(a);
          if (o) return o;
          let s = (function (e, t) {
              let n = t.getOptions(),
                { publicKey: r } = t.getDsn() || {},
                i = tE({
                  environment: n.environment || "production",
                  release: n.release,
                  public_key: r,
                  trace_id: e,
                });
              return t.emit("createDsc", i), i;
            })(e.spanContext().traceId, t),
            u = nX(n),
            l = u.data || {},
            c = l[nH];
          null != c && (s.sample_rate = `${c}`);
          let d = l[nq],
            f = u.description;
          return (
            "url" !== d && f && (s.transaction = f),
            r6() && (s.sampled = String(nQ(n))),
            t.emit("createDsc", s, n),
            s
          );
        }
        class r7 {
          constructor(e = {}) {
            (this._traceId = e.traceId || tx()),
              (this._spanId = e.spanId || nP());
          }
          spanContext() {
            return {
              spanId: this._spanId,
              traceId: this._traceId,
              traceFlags: 0,
            };
          }
          end(e) {}
          setAttribute(e, t) {
            return this;
          }
          setAttributes(e) {
            return this;
          }
          setStatus(e) {
            return this;
          }
          updateName(e) {
            return this;
          }
          isRecording() {
            return !1;
          }
          addEvent(e, t, n) {
            return this;
          }
          addLink(e) {
            return this;
          }
          addLinks(e) {
            return this;
          }
          recordException(e, t) {}
        }
        let r9 = "_sentryScope",
          ie = "_sentryIsolationScope";
        function it(e) {
          return { scope: e[r9], isolationScope: e[ie] };
        }
        class ir {
          constructor(e = {}) {
            (this._traceId = e.traceId || tx()),
              (this._spanId = e.spanId || nP()),
              (this._startTime = e.startTimestamp || tP()),
              (this._attributes = {}),
              this.setAttributes({
                [nG]: "manual",
                [nz]: e.op,
                ...e.attributes,
              }),
              (this._name = e.name),
              e.parentSpanId && (this._parentSpanId = e.parentSpanId),
              "sampled" in e && (this._sampled = e.sampled),
              e.endTimestamp && (this._endTime = e.endTimestamp),
              (this._events = []),
              (this._isStandaloneSpan = e.isStandalone),
              this._endTime && this._onSpanEnded();
          }
          addLink(e) {
            return this;
          }
          addLinks(e) {
            return this;
          }
          recordException(e, t) {}
          spanContext() {
            let { _spanId: e, _traceId: t, _sampled: n } = this;
            return { spanId: e, traceId: t, traceFlags: n ? 1 : 0 };
          }
          setAttribute(e, t) {
            return (
              void 0 === t
                ? delete this._attributes[e]
                : (this._attributes[e] = t),
              this
            );
          }
          setAttributes(e) {
            return (
              Object.keys(e).forEach((t) => this.setAttribute(t, e[t])), this
            );
          }
          updateStartTime(e) {
            this._startTime = nJ(e);
          }
          setStatus(e) {
            return (this._status = e), this;
          }
          updateName(e) {
            return (this._name = e), this.setAttribute(nq, "custom"), this;
          }
          end(e) {
            this._endTime || ((this._endTime = nJ(e)), this._onSpanEnded());
          }
          getSpanJSON() {
            return tE({
              data: this._attributes,
              description: this._name,
              op: this._attributes[nz],
              parent_span_id: this._parentSpanId,
              span_id: this._spanId,
              start_timestamp: this._startTime,
              status: n0(this._status),
              timestamp: this._endTime,
              trace_id: this._traceId,
              origin: this._attributes[nG],
              _metrics_summary: n$(this),
              profile_id: this._attributes["sentry.profile_id"],
              exclusive_time: this._attributes[nK],
              measurements: n8(this._events),
              is_segment:
                (this._isStandaloneSpan && n3(this) === this) || void 0,
              segment_id: this._isStandaloneSpan
                ? n3(this).spanContext().spanId
                : void 0,
            });
          }
          isRecording() {
            return !this._endTime && !!this._sampled;
          }
          addEvent(e, t, n) {
            let r = ii(t) ? t : n || tP(),
              i = ii(t) ? {} : t || {},
              a = { name: e, time: nJ(r), attributes: i };
            return this._events.push(a), this;
          }
          isStandaloneSpan() {
            return !!this._isStandaloneSpan;
          }
          _onSpanEnded() {
            let e = nU();
            e && e.emit("spanEnd", this);
            let t = this._isStandaloneSpan || this === n3(this);
            if (!t) return;
            if (this._isStandaloneSpan) {
              this._sampled
                ? (function (e) {
                    let t = nU();
                    if (!t) return;
                    let n = e[1];
                    if (!n || 0 === n.length) {
                      t.recordDroppedEvent("before_send", "span");
                      return;
                    }
                    t.sendEnvelope(e);
                  })(
                    (function (e, t) {
                      let n = r8(e[0]),
                        r = t && t.getDsn(),
                        i = t && t.getOptions().tunnel,
                        a = {
                          sent_at: new Date().toISOString(),
                          ...(!!n.trace_id && !!n.public_key && { trace: n }),
                          ...(!!i &&
                            r && {
                              dsn: (function (e, t = !1) {
                                let {
                                  host: n,
                                  path: r,
                                  pass: i,
                                  port: a,
                                  projectId: o,
                                  protocol: s,
                                  publicKey: u,
                                } = e;
                                return `${s}://${u}${
                                  t && i ? `:${i}` : ""
                                }@${n}${a ? `:${a}` : ""}/${
                                  r ? `${r}/` : r
                                }${o}`;
                              })(r),
                            }),
                        },
                        o = t && t.getOptions().beforeSendSpan,
                        s = o
                          ? (e) => {
                              let t = o(nX(e));
                              return (
                                !t &&
                                  (nZ ||
                                    ((function (e) {
                                      if (!("console" in ta)) return e();
                                      let t = ta.console,
                                        n = {},
                                        r = Object.keys(tu);
                                      r.forEach((e) => {
                                        let r = tu[e];
                                        (n[e] = t[e]), (t[e] = r);
                                      });
                                      try {
                                        return e();
                                      } finally {
                                        r.forEach((e) => {
                                          t[e] = n[e];
                                        });
                                      }
                                    })(() => {
                                      console.warn(
                                        "[Sentry] Deprecation warning: Returning null from `beforeSendSpan` will be disallowed from SDK version 9.0.0 onwards. The callback will only support mutating spans. To drop certain spans, configure the respective integrations directly."
                                      );
                                    }),
                                    (nZ = !0))),
                                t
                              );
                            }
                          : (e) => nX(e),
                        u = [];
                      for (let t of e) {
                        let e = s(t);
                        e && u.push([{ type: "span" }, e]);
                      }
                      return (function (e, t = []) {
                        return [e, t];
                      })(a, u);
                    })([this], e)
                  )
                : e && e.recordDroppedEvent("sample_rate", "span");
              return;
            }
            let n = this._convertSpanToTransaction();
            if (n) {
              let e = it(this).scope || nF();
              e.captureEvent(n);
            }
          }
          _convertSpanToTransaction() {
            if (!ia(nX(this))) return;
            this._name || (this._name = "<unlabeled transaction>");
            let { scope: e, isolationScope: t } = it(this),
              n = e || nF(),
              r = n.getClient() || nU();
            if (!0 !== this._sampled) {
              r && r.recordDroppedEvent("sample_rate", "transaction");
              return;
            }
            let i = (function (e) {
                let t = new Set();
                return (
                  (function e(n) {
                    if (!t.has(n) && nQ(n)) {
                      t.add(n);
                      let r = n[n1] ? Array.from(n[n1]) : [];
                      for (let t of r) e(t);
                    }
                  })(e),
                  Array.from(t)
                );
              })(this).filter(
                (e) => e !== this && !(e instanceof ir && e.isStandaloneSpan())
              ),
              a = i.map((e) => nX(e)).filter(ia),
              o = this._attributes[nq],
              s = {
                contexts: {
                  trace: (function (e) {
                    let { spanId: t, traceId: n } = e.spanContext(),
                      {
                        data: r,
                        op: i,
                        parent_span_id: a,
                        status: o,
                        origin: s,
                      } = nX(e);
                    return tE({
                      parent_span_id: a,
                      span_id: t,
                      trace_id: n,
                      data: r,
                      op: i,
                      status: o,
                      origin: s,
                    });
                  })(this),
                },
                spans:
                  a.length > 1e3
                    ? a
                        .sort((e, t) => e.start_timestamp - t.start_timestamp)
                        .slice(0, 1e3)
                    : a,
                start_timestamp: this._startTime,
                timestamp: this._endTime,
                transaction: this._name,
                type: "transaction",
                sdkProcessingMetadata: {
                  capturedSpanScope: e,
                  capturedSpanIsolationScope: t,
                  ...tE({ dynamicSamplingContext: r8(this) }),
                },
                _metrics_summary: n$(this),
                ...(o && { transaction_info: { source: o } }),
              },
              u = n8(this._events),
              l = u && Object.keys(u).length;
            return l && (s.measurements = u), s;
          }
        }
        function ii(e) {
          return (
            (e && "number" == typeof e) || e instanceof Date || Array.isArray(e)
          );
        }
        function ia(e) {
          return (
            !!e.start_timestamp && !!e.timestamp && !!e.span_id && !!e.trace_id
          );
        }
        let io = "__SENTRY_SUPPRESS_TRACING__";
        function is(e) {
          let t = il();
          if (t.startInactiveSpan) return t.startInactiveSpan(e);
          let n = (function (e) {
              let t = e.experimental || {},
                n = { isStandalone: t.standalone, ...e };
              if (e.startTime) {
                let t = { ...n };
                return (
                  (t.startTimestamp = nJ(e.startTime)), delete t.startTime, t
                );
              }
              return n;
            })(e),
            { forceTransaction: r, parentSpan: i } = e,
            a = e.scope
              ? (t) => nL(e.scope, t)
              : void 0 !== i
              ? (e) => iu(i, e)
              : (e) => e();
          return a(() => {
            let t = nF(),
              i = (function (e) {
                let t = e[nO];
                if (!t) return;
                let n = nU(),
                  r = n ? n.getOptions() : {};
                return r.parentSpanIsAlwaysRootSpan ? n3(t) : t;
              })(t),
              a = e.onlyIfParent && !i;
            return a
              ? new r7()
              : (function ({
                  parentSpan: e,
                  spanArguments: t,
                  forceTransaction: n,
                  scope: r,
                }) {
                  var i;
                  let a;
                  if (!r6()) return new r7();
                  let o = (function () {
                    let e = nT(),
                      t = nR(e);
                    return t.getIsolationScope();
                  })();
                  if (e && !n)
                    (a = (function (e, t, n) {
                      let { spanId: r, traceId: i } = e.spanContext(),
                        a =
                          !t.getScopeData().sdkProcessingMetadata[io] && nQ(e),
                        o = a
                          ? new ir({
                              ...n,
                              parentSpanId: r,
                              traceId: i,
                              sampled: a,
                            })
                          : new r7({ traceId: i });
                      n6(e, o);
                      let s = nU();
                      return (
                        s &&
                          (s.emit("spanStart", o),
                          n.endTimestamp && s.emit("spanEnd", o)),
                        o
                      );
                    })(e, r, t)),
                      n6(e, a);
                  else if (e) {
                    let n = r8(e),
                      { traceId: i, spanId: o } = e.spanContext(),
                      s = nQ(e);
                    tw(
                      (a = ic({ traceId: i, parentSpanId: o, ...t }, r, s)),
                      r4,
                      n
                    );
                  } else {
                    let {
                      traceId: e,
                      dsc: n,
                      parentSpanId: i,
                      sampled: s,
                    } = {
                      ...o.getPropagationContext(),
                      ...r.getPropagationContext(),
                    };
                    (a = ic({ traceId: e, parentSpanId: i, ...t }, r, s)),
                      n && tw(a, r4, n);
                  }
                  return (i = a) && (tw(i, ie, o), tw(i, r9, r)), a;
                })({
                  parentSpan: i,
                  spanArguments: n,
                  forceTransaction: r,
                  scope: t,
                });
          });
        }
        function iu(e, t) {
          let n = il();
          return n.withActiveSpan
            ? n.withActiveSpan(e, t)
            : nL((n) => (nI(n, e || void 0), t(n)));
        }
        function il() {
          let e = nT();
          return nR(e);
        }
        function ic(e, t, n) {
          let r = nU(),
            i = (r && r.getOptions()) || {},
            { name: a = "", attributes: o } = e,
            [s, u] = t.getScopeData().sdkProcessingMetadata[io]
              ? [!1]
              : (function (e, t) {
                  let n;
                  if (!r6(e)) return [!1];
                  n =
                    "function" == typeof e.tracesSampler
                      ? e.tracesSampler(t)
                      : void 0 !== t.parentSampled
                      ? t.parentSampled
                      : void 0 !== e.tracesSampleRate
                      ? e.tracesSampleRate
                      : 1;
                  let r = (function (e) {
                    if ("boolean" == typeof e) return Number(e);
                    let t = "string" == typeof e ? parseFloat(e) : e;
                    if (
                      !("number" != typeof t || isNaN(t)) &&
                      !(t < 0) &&
                      !(t > 1)
                    )
                      return t;
                  })(n);
                  return void 0 === r
                    ? [!1]
                    : r && Math.random() < r
                    ? [!0, r]
                    : [!1, r];
                })(i, {
                  name: a,
                  parentSampled: n,
                  attributes: o,
                  transactionContext: { name: a, parentSampled: n },
                }),
            l = new ir({
              ...e,
              attributes: { [nq]: "custom", ...e.attributes },
              sampled: s,
            });
          return (
            void 0 !== u && l.setAttribute(nH, u),
            r && r.emit("spanStart", l),
            l
          );
        }
        function id(e) {
          return "number" == typeof e && isFinite(e);
        }
        function ip(e, t, n, { ...r }) {
          let i = nX(e).start_timestamp;
          return (
            i &&
              i > t &&
              "function" == typeof e.updateStartTime &&
              e.updateStartTime(t),
            iu(e, () => {
              let e = is({ startTime: t, ...r });
              return e && e.end(n), e;
            })
          );
        }
        function ih(e) {
          let t;
          let n = nU();
          if (!n) return;
          let { name: r, transaction: i, attributes: a, startTime: o } = e,
            { release: s, environment: u } = n.getOptions(),
            l = n.getIntegrationByName("Replay"),
            c = l && l.getReplayId(),
            d = nF(),
            f = d.getUser(),
            p = void 0 !== f ? f.email || f.id || f.ip_address : void 0;
          try {
            t = d.getScopeData().contexts.profile.profile_id;
          } catch (e) {}
          let h = {
            release: s,
            environment: u,
            user: p || void 0,
            profile_id: t || void 0,
            replay_id: c || void 0,
            transaction: i,
            "user_agent.original": ta.navigator && ta.navigator.userAgent,
            ...a,
          };
          return is({
            name: r,
            attributes: h,
            startTime: o,
            experimental: { standalone: !0 },
          });
        }
        function im() {
          return ta && ta.addEventListener && ta.performance;
        }
        function iy(e) {
          return e / 1e3;
        }
        let ig = 0,
          ib = {};
        function iv(e, t, n, r, i = n) {
          let a =
              "secureConnection" === n
                ? "connectEnd"
                : "fetch" === n
                ? "domainLookupStart"
                : `${n}End`,
            o = t[a],
            s = t[`${n}Start`];
          s &&
            o &&
            ip(e, r + iy(s), r + iy(o), {
              op: `browser.${i}`,
              name: t.name,
              attributes: { [nG]: "auto.ui.browser.metrics" },
            });
        }
        function iw(e, t, n, r) {
          let i = t[n];
          null != i && i < 2147483647 && (e[r] = i);
        }
        let iE = [],
          ix = new Map(),
          iC = {
            click: "click",
            pointerdown: "click",
            pointerup: "click",
            mousedown: "click",
            mouseup: "click",
            touchstart: "click",
            touchend: "click",
            mouseover: "hover",
            mouseout: "hover",
            mouseenter: "hover",
            mouseleave: "hover",
            pointerover: "hover",
            pointerout: "hover",
            pointerenter: "hover",
            pointerleave: "hover",
            dragstart: "drag",
            dragend: "drag",
            drag: "drag",
            dragenter: "drag",
            dragleave: "drag",
            dragover: "drag",
            drop: "drag",
            keydown: "press",
            keyup: "press",
            keypress: "press",
            input: "press",
          };
        var i_ = n(7084),
          iT = n(62561),
          iS = n(94916),
          iP = n(6250);
        class iO {
          constructor(e = {}) {
            (this._traceId = e.traceId || (0, iP.Ht)()),
              (this._spanId = e.spanId || (0, iP.M)());
          }
          spanContext() {
            return {
              spanId: this._spanId,
              traceId: this._traceId,
              traceFlags: ez.ve,
            };
          }
          end(e) {}
          setAttribute(e, t) {
            return this;
          }
          setAttributes(e) {
            return this;
          }
          setStatus(e) {
            return this;
          }
          updateName(e) {
            return this;
          }
          isRecording() {
            return !1;
          }
          addEvent(e, t, n) {
            return this;
          }
          addLink(e) {
            return this;
          }
          addLinks(e) {
            return this;
          }
          recordException(e, t) {}
        }
        var iI = n(84049),
          iA = n(62052),
          ik = n(79563),
          ij = n(44552);
        function iB(e) {
          if (!e || 0 === e.length) return;
          let t = {};
          return (
            e.forEach((e) => {
              let n = e.attributes || {},
                r = n[i_.E1],
                i = n[i_.Wb];
              "string" == typeof r &&
                "number" == typeof i &&
                (t[e.name] = { value: i, unit: r });
            }),
            t
          );
        }
        let iM = "_sentryScope",
          iN = "_sentryIsolationScope";
        function iD(e) {
          return { scope: e[iM], isolationScope: e[iN] };
        }
        class iR {
          constructor(e = {}) {
            (this._traceId = e.traceId || (0, iP.Ht)()),
              (this._spanId = e.spanId || (0, iP.M)()),
              (this._startTime = e.startTimestamp || (0, eW.ph)()),
              (this._attributes = {}),
              this.setAttributes({
                [i_.S3]: "manual",
                [i_.$J]: e.op,
                ...e.attributes,
              }),
              (this._name = e.name),
              e.parentSpanId && (this._parentSpanId = e.parentSpanId),
              "sampled" in e && (this._sampled = e.sampled),
              e.endTimestamp && (this._endTime = e.endTimestamp),
              (this._events = []),
              (this._isStandaloneSpan = e.isStandalone),
              this._endTime && this._onSpanEnded();
          }
          addLink(e) {
            return this;
          }
          addLinks(e) {
            return this;
          }
          recordException(e, t) {}
          spanContext() {
            let { _spanId: e, _traceId: t, _sampled: n } = this;
            return { spanId: e, traceId: t, traceFlags: n ? ez.i0 : ez.ve };
          }
          setAttribute(e, t) {
            return (
              void 0 === t
                ? delete this._attributes[e]
                : (this._attributes[e] = t),
              this
            );
          }
          setAttributes(e) {
            return (
              Object.keys(e).forEach((t) => this.setAttribute(t, e[t])), this
            );
          }
          updateStartTime(e) {
            this._startTime = (0, ez.$k)(e);
          }
          setStatus(e) {
            return (this._status = e), this;
          }
          updateName(e) {
            return (this._name = e), this.setAttribute(i_.Zj, "custom"), this;
          }
          end(e) {
            this._endTime ||
              ((this._endTime = (0, ez.$k)(e)),
              (function (e) {
                if (!ed.X) return;
                let {
                    description: t = "< unknown name >",
                    op: n = "< unknown op >",
                  } = (0, ez.XU)(e),
                  { spanId: r } = e.spanContext(),
                  i = (0, ez.Gx)(e),
                  a = i === e,
                  o = `[Tracing] Finishing "${n}" ${
                    a ? "root " : ""
                  }span "${t}" with ID ${r}`;
                ef.kg.log(o);
              })(this),
              this._onSpanEnded());
          }
          getSpanJSON() {
            return (0, ex.Jr)({
              data: this._attributes,
              description: this._name,
              op: this._attributes[i_.$J],
              parent_span_id: this._parentSpanId,
              span_id: this._spanId,
              start_timestamp: this._startTime,
              status: (0, ez._4)(this._status),
              timestamp: this._endTime,
              trace_id: this._traceId,
              origin: this._attributes[i_.S3],
              _metrics_summary: (0, ij.y)(this),
              profile_id: this._attributes[i_.p6],
              exclusive_time: this._attributes[i_.JQ],
              measurements: iB(this._events),
              is_segment:
                (this._isStandaloneSpan && (0, ez.Gx)(this) === this) || void 0,
              segment_id: this._isStandaloneSpan
                ? (0, ez.Gx)(this).spanContext().spanId
                : void 0,
            });
          }
          isRecording() {
            return !this._endTime && !!this._sampled;
          }
          addEvent(e, t, n) {
            ed.X && ef.kg.log("[Tracing] Adding an event to span:", e);
            let r = iF(t) ? t : n || (0, eW.ph)(),
              i = iF(t) ? {} : t || {},
              a = { name: e, time: (0, ez.$k)(r), attributes: i };
            return this._events.push(a), this;
          }
          isStandaloneSpan() {
            return !!this._isStandaloneSpan;
          }
          _onSpanEnded() {
            let e = (0, eE.s3)();
            e && e.emit("spanEnd", this);
            let t = this._isStandaloneSpan || this === (0, ez.Gx)(this);
            if (!t) return;
            if (this._isStandaloneSpan) {
              this._sampled
                ? (function (e) {
                    let t = (0, eE.s3)();
                    if (!t) return;
                    let n = e[1];
                    if (!n || 0 === n.length) {
                      t.recordDroppedEvent("before_send", "span");
                      return;
                    }
                    t.sendEnvelope(e);
                  })(
                    (function (e, t) {
                      let n = (0, eM.jC)(e[0]),
                        r = t && t.getDsn(),
                        i = t && t.getOptions().tunnel,
                        a = {
                          sent_at: new Date().toISOString(),
                          ...(!!n.trace_id && !!n.public_key && { trace: n }),
                          ...(!!i && r && { dsn: eD(r) }),
                        },
                        o = t && t.getOptions().beforeSendSpan,
                        s = o
                          ? (e) => {
                              let t = o((0, ez.XU)(e));
                              return t || (0, ez.R6)(), t;
                            }
                          : (e) => (0, ez.XU)(e),
                        u = [];
                      for (let t of e) {
                        let e = s(t);
                        e && u.push([{ type: "span" }, e]);
                      }
                      return eL(a, u);
                    })([this], e)
                  )
                : (ed.X &&
                    ef.kg.log(
                      "[Tracing] Discarding standalone span because its trace was not chosen to be sampled."
                    ),
                  e && e.recordDroppedEvent("sample_rate", "span"));
              return;
            }
            let n = this._convertSpanToTransaction();
            if (n) {
              let e = iD(this).scope || (0, eE.nZ)();
              e.captureEvent(n);
            }
          }
          _convertSpanToTransaction() {
            if (!iL((0, ez.XU)(this))) return;
            this._name ||
              (ed.X &&
                ef.kg.warn(
                  "Transaction has no name, falling back to `<unlabeled transaction>`."
                ),
              (this._name = "<unlabeled transaction>"));
            let { scope: e, isolationScope: t } = iD(this),
              n = e || (0, eE.nZ)(),
              r = n.getClient() || (0, eE.s3)();
            if (!0 !== this._sampled) {
              ed.X &&
                ef.kg.log(
                  "[Tracing] Discarding transaction because its trace was not chosen to be sampled."
                ),
                r && r.recordDroppedEvent("sample_rate", "transaction");
              return;
            }
            let i = (0, ez.Dp)(this).filter(
                (e) => e !== this && !(e instanceof iR && e.isStandaloneSpan())
              ),
              a = i.map((e) => (0, ez.XU)(e)).filter(iL),
              o = this._attributes[i_.Zj],
              s = {
                contexts: { trace: (0, ez.HR)(this) },
                spans:
                  a.length > 1e3
                    ? a
                        .sort((e, t) => e.start_timestamp - t.start_timestamp)
                        .slice(0, 1e3)
                    : a,
                start_timestamp: this._startTime,
                timestamp: this._endTime,
                transaction: this._name,
                type: "transaction",
                sdkProcessingMetadata: {
                  capturedSpanScope: e,
                  capturedSpanIsolationScope: t,
                  ...(0, ex.Jr)({ dynamicSamplingContext: (0, eM.jC)(this) }),
                },
                _metrics_summary: (0, ij.y)(this),
                ...(o && { transaction_info: { source: o } }),
              },
              u = iB(this._events),
              l = u && Object.keys(u).length;
            return (
              l &&
                (ed.X &&
                  ef.kg.log(
                    "[Measurements] Adding measurements to transaction event",
                    JSON.stringify(u, void 0, 2)
                  ),
                (s.measurements = u)),
              s
            );
          }
        }
        function iF(e) {
          return (
            (e && "number" == typeof e) || e instanceof Date || Array.isArray(e)
          );
        }
        function iL(e) {
          return (
            !!e.start_timestamp && !!e.timestamp && !!e.span_id && !!e.trace_id
          );
        }
        let iU = "__SENTRY_SUPPRESS_TRACING__";
        function i$(e) {
          let t = iq();
          if (t.startInactiveSpan) return t.startInactiveSpan(e);
          let n = (function (e) {
              let t = e.experimental || {},
                n = { isStandalone: t.standalone, ...e };
              if (e.startTime) {
                let t = { ...n };
                return (
                  (t.startTimestamp = (0, ez.$k)(e.startTime)),
                  delete t.startTime,
                  t
                );
              }
              return n;
            })(e),
            { forceTransaction: r, parentSpan: i } = e,
            a = e.scope
              ? (t) => (0, eE.$e)(e.scope, t)
              : void 0 !== i
              ? (e) =>
                  (function (e, t) {
                    let n = iq();
                    return n.withActiveSpan
                      ? n.withActiveSpan(e, t)
                      : (0, eE.$e)((n) => ((0, iS.D)(n, e || void 0), t(n)));
                  })(i, e)
              : (e) => e();
          return a(() => {
            let t = (0, eE.nZ)(),
              i = (function (e) {
                let t = (0, iS.Y)(e);
                if (!t) return;
                let n = (0, eE.s3)(),
                  r = n ? n.getOptions() : {};
                return r.parentSpanIsAlwaysRootSpan ? (0, ez.Gx)(t) : t;
              })(t),
              a = e.onlyIfParent && !i;
            return a
              ? new iO()
              : (function ({
                  parentSpan: e,
                  spanArguments: t,
                  forceTransaction: n,
                  scope: r,
                }) {
                  var i;
                  let a;
                  if (!(0, iT.z)()) return new iO();
                  let o = (0, eE.aF)();
                  if (e && !n)
                    (a = (function (e, t, n) {
                      let { spanId: r, traceId: i } = e.spanContext(),
                        a =
                          !t.getScopeData().sdkProcessingMetadata[iU] &&
                          (0, ez.Tt)(e),
                        o = a
                          ? new iR({
                              ...n,
                              parentSpanId: r,
                              traceId: i,
                              sampled: a,
                            })
                          : new iO({ traceId: i });
                      (0, ez.j5)(e, o);
                      let s = (0, eE.s3)();
                      return (
                        s &&
                          (s.emit("spanStart", o),
                          n.endTimestamp && s.emit("spanEnd", o)),
                        o
                      );
                    })(e, r, t)),
                      (0, ez.j5)(e, a);
                  else if (e) {
                    let n = (0, eM.jC)(e),
                      { traceId: i, spanId: o } = e.spanContext(),
                      s = (0, ez.Tt)(e);
                    (a = iH({ traceId: i, parentSpanId: o, ...t }, r, s)),
                      (0, eM.Lh)(a, n);
                  } else {
                    let {
                      traceId: e,
                      dsc: n,
                      parentSpanId: i,
                      sampled: s,
                    } = {
                      ...o.getPropagationContext(),
                      ...r.getPropagationContext(),
                    };
                    (a = iH({ traceId: e, parentSpanId: i, ...t }, r, s)),
                      n && (0, eM.Lh)(a, n);
                  }
                  return (
                    (function (e) {
                      if (!ed.X) return;
                      let {
                          description: t = "< unknown name >",
                          op: n = "< unknown op >",
                          parent_span_id: r,
                        } = (0, ez.XU)(e),
                        { spanId: i } = e.spanContext(),
                        a = (0, ez.Tt)(e),
                        o = (0, ez.Gx)(e),
                        s = o === e,
                        u = `[Tracing] Starting ${
                          a ? "sampled" : "unsampled"
                        } ${s ? "root " : ""}span`,
                        l = [`op: ${n}`, `name: ${t}`, `ID: ${i}`];
                      if ((r && l.push(`parent ID: ${r}`), !s)) {
                        let { op: e, description: t } = (0, ez.XU)(o);
                        l.push(`root ID: ${o.spanContext().spanId}`),
                          e && l.push(`root op: ${e}`),
                          t && l.push(`root description: ${t}`);
                      }
                      ef.kg.log(`${u}
  ${l.join("\n  ")}`);
                    })(a),
                    (i = a) && ((0, ex.xp)(i, iN, o), (0, ex.xp)(i, iM, r)),
                    a
                  );
                })({
                  parentSpan: i,
                  spanArguments: n,
                  forceTransaction: r,
                  scope: t,
                });
          });
        }
        function iq() {
          let e = (0, iA.c)();
          return (0, ik.G)(e);
        }
        function iH(e, t, n) {
          let r = (0, eE.s3)(),
            i = (r && r.getOptions()) || {},
            { name: a = "", attributes: o } = e,
            [s, u] = t.getScopeData().sdkProcessingMetadata[iU]
              ? [!1]
              : (function (e, t) {
                  let n;
                  if (!(0, iT.z)(e)) return [!1];
                  n =
                    "function" == typeof e.tracesSampler
                      ? e.tracesSampler(t)
                      : void 0 !== t.parentSampled
                      ? t.parentSampled
                      : void 0 !== e.tracesSampleRate
                      ? e.tracesSampleRate
                      : 1;
                  let r = eJ(n);
                  return void 0 === r
                    ? (ed.X &&
                        ef.kg.warn(
                          "[Tracing] Discarding transaction because of invalid sample rate."
                        ),
                      [!1])
                    : r
                    ? Math.random() < r
                      ? [!0, r]
                      : (ed.X &&
                          ef.kg.log(
                            `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(
                              n
                            )})`
                          ),
                        [!1, r])
                    : (ed.X &&
                        ef.kg.log(
                          `[Tracing] Discarding transaction because ${
                            "function" == typeof e.tracesSampler
                              ? "tracesSampler returned 0 or false"
                              : "a negative sampling decision was inherited or tracesSampleRate is set to 0"
                          }`
                        ),
                      [!1, r]);
                })(i, {
                  name: a,
                  parentSampled: n,
                  attributes: o,
                  transactionContext: { name: a, parentSampled: n },
                }),
            l = new iR({
              ...e,
              attributes: { [i_.Zj]: "custom", ...e.attributes },
              sampled: s,
            });
          return (
            void 0 !== u && l.setAttribute(i_.TE, u),
            r && r.emit("spanStart", l),
            l
          );
        }
        let iz = {
          idleTimeout: 1e3,
          finalTimeout: 3e4,
          childSpanTimeout: 15e3,
        };
        function iG(e, t = {}) {
          let n;
          let r = new Map(),
            i = !1,
            a = "externalFinish",
            o = !t.disableAutoFinish,
            s = [],
            {
              idleTimeout: u = iz.idleTimeout,
              finalTimeout: l = iz.finalTimeout,
              childSpanTimeout: c = iz.childSpanTimeout,
              beforeSpanEnd: d,
            } = t,
            f = (0, eE.s3)();
          if (!f || !(0, iT.z)()) return new iO();
          let p = (0, eE.nZ)(),
            h = (0, ez.HN)(),
            m = (function (e) {
              let t = i$(e);
              return (
                (0, iS.D)((0, eE.nZ)(), t),
                ed.X && ef.kg.log("[Tracing] Started span is an idle span"),
                t
              );
            })(e);
          function y() {
            n && (clearTimeout(n), (n = void 0));
          }
          function g(e) {
            y(),
              (n = setTimeout(() => {
                !i && 0 === r.size && o && ((a = "idleTimeout"), m.end(e));
              }, u));
          }
          function b(e) {
            n = setTimeout(() => {
              !i && o && ((a = "heartbeatFailed"), m.end(e));
            }, c);
          }
          function v(e) {
            (i = !0), r.clear(), s.forEach((e) => e()), (0, iS.D)(p, h);
            let t = (0, ez.XU)(m),
              { start_timestamp: n } = t;
            if (!n) return;
            (t.data || {})[i_.ju] || m.setAttribute(i_.ju, a),
              ef.kg.log(`[Tracing] Idle span "${t.op}" finished`);
            let o = (0, ez.Dp)(m).filter((e) => e !== m),
              c = 0;
            o.forEach((t) => {
              t.isRecording() &&
                (t.setStatus({ code: iI.jt, message: "cancelled" }),
                t.end(e),
                ed.X &&
                  ef.kg.log(
                    "[Tracing] Cancelling span since span ended early",
                    JSON.stringify(t, void 0, 2)
                  ));
              let n = (0, ez.XU)(t),
                { timestamp: r = 0, start_timestamp: i = 0 } = n,
                a = i <= e,
                o = (l + u) / 1e3,
                s = r - i <= o;
              if (ed.X) {
                let e = JSON.stringify(t, void 0, 2);
                a
                  ? s ||
                    ef.kg.log(
                      "[Tracing] Discarding span since it finished after idle span final timeout",
                      e
                    )
                  : ef.kg.log(
                      "[Tracing] Discarding span since it happened after idle span was finished",
                      e
                    );
              }
              (!s || !a) && ((0, ez.ed)(m, t), c++);
            }),
              c > 0 && m.setAttribute("sentry.idle_span_discarded_spans", c);
          }
          return (
            (m.end = new Proxy(m.end, {
              apply(e, t, n) {
                d && d(m);
                let [r, ...i] = n,
                  a = r || (0, eW.ph)(),
                  o = (0, ez.$k)(a),
                  s = (0, ez.Dp)(m).filter((e) => e !== m);
                if (!s.length) return v(o), Reflect.apply(e, t, [o, ...i]);
                let u = s
                    .map((e) => (0, ez.XU)(e).timestamp)
                    .filter((e) => !!e),
                  c = u.length ? Math.max(...u) : void 0,
                  f = (0, ez.XU)(m).start_timestamp,
                  p = Math.min(
                    f ? f + l / 1e3 : 1 / 0,
                    Math.max(f || -1 / 0, Math.min(o, c || 1 / 0))
                  );
                return v(p), Reflect.apply(e, t, [p, ...i]);
              },
            })),
            s.push(
              f.on("spanStart", (e) => {
                if (i || e === m || (0, ez.XU)(e).timestamp) return;
                let t = (0, ez.Dp)(m);
                t.includes(e) &&
                  (function (e) {
                    y(), r.set(e, !0);
                    let t = (0, eW.ph)();
                    b(t + c / 1e3);
                  })(e.spanContext().spanId);
              })
            ),
            s.push(
              f.on("spanEnd", (e) => {
                i ||
                  (function (e) {
                    if ((r.has(e) && r.delete(e), 0 === r.size)) {
                      let e = (0, eW.ph)();
                      g(e + u / 1e3);
                    }
                  })(e.spanContext().spanId);
              })
            ),
            s.push(
              f.on("idleSpanEnableAutoFinish", (e) => {
                e === m && ((o = !0), g(), r.size && b());
              })
            ),
            t.disableAutoFinish || g(),
            setTimeout(() => {
              i ||
                (m.setStatus({ code: iI.jt, message: "deadline_exceeded" }),
                (a = "finalTimeout"),
                m.end());
            }, l),
            m
          );
        }
        let iW = !1;
        function iV() {
          let e = (0, ez.HN)(),
            t = e && (0, ez.Gx)(e);
          if (t) {
            let e = "internal_error";
            ed.X &&
              ef.kg.log(`[Tracing] Root span: ${e} -> Global error occurred`),
              t.setStatus({ code: iI.jt, message: e });
          }
        }
        iV.tag = "sentry_tracingErrorCallback";
        var iK = n(52109),
          iZ = n(28221);
        function iJ(e = {}) {
          let t = (0, eE.s3)();
          if (!(0, ec._k)() || !t) return {};
          let n = (0, iA.c)(),
            r = (0, ik.G)(n);
          if (r.getTraceData) return r.getTraceData(e);
          let i = (0, eE.nZ)(),
            a = e.span || (0, ez.HN)(),
            o = a
              ? (0, ez.Hb)(a)
              : (function (e) {
                  let {
                    traceId: t,
                    sampled: n,
                    spanId: r,
                  } = e.getPropagationContext();
                  return (0, iK.$p)(t, r, n);
                })(i),
            s = a ? (0, eM.jC)(a) : (0, eM.CG)(t, i),
            u = (0, iZ.IQ)(s),
            l = iK.Ke.test(o);
          return l
            ? { "sentry-trace": o, baggage: u }
            : (ef.kg.warn(
                "Invalid sentry-trace data. Cannot generate trace data"
              ),
              {});
        }
        function iY(e) {
          return e
            .split(",")
            .filter((e) => !e.split("=")[0].startsWith(iZ.lq))
            .join(",");
        }
        let iX = new WeakMap(),
          iQ = new Map(),
          i0 = {
            traceFetch: !0,
            traceXHR: !0,
            enableHTTPTimings: !0,
            trackFetchStreamPerformance: !1,
          };
        function i1(e) {
          let { url: t } = (0, ez.XU)(e).data || {};
          if (!t || "string" != typeof t) return;
          let n = rV("resource", ({ entries: r }) => {
            r.forEach((r) => {
              if (
                "resource" === r.entryType &&
                "initiatorType" in r &&
                "string" == typeof r.nextHopProtocol &&
                ("fetch" === r.initiatorType ||
                  "xmlhttprequest" === r.initiatorType) &&
                r.name.endsWith(t)
              ) {
                let t = (function (e) {
                  let { name: t, version: n } = (function (e) {
                      let t = "unknown",
                        n = "unknown",
                        r = "";
                      for (let i of e) {
                        if ("/" === i) {
                          [t, n] = e.split("/");
                          break;
                        }
                        if (!isNaN(Number(i))) {
                          (t = "h" === r ? "http" : r), (n = e.split(r)[1]);
                          break;
                        }
                        r += i;
                      }
                      return r === e && (t = r), { name: t, version: n };
                    })(e.nextHopProtocol),
                    r = [];
                  return (r.push(
                    ["network.protocol.version", n],
                    ["network.protocol.name", t]
                  ),
                  eW.Z1)
                    ? [
                        ...r,
                        ["http.request.redirect_start", i2(e.redirectStart)],
                        ["http.request.fetch_start", i2(e.fetchStart)],
                        [
                          "http.request.domain_lookup_start",
                          i2(e.domainLookupStart),
                        ],
                        [
                          "http.request.domain_lookup_end",
                          i2(e.domainLookupEnd),
                        ],
                        ["http.request.connect_start", i2(e.connectStart)],
                        [
                          "http.request.secure_connection_start",
                          i2(e.secureConnectionStart),
                        ],
                        ["http.request.connection_end", i2(e.connectEnd)],
                        ["http.request.request_start", i2(e.requestStart)],
                        ["http.request.response_start", i2(e.responseStart)],
                        ["http.request.response_end", i2(e.responseEnd)],
                      ]
                    : r;
                })(r);
                t.forEach((t) => e.setAttribute(...t)), setTimeout(n);
              }
            });
          });
        }
        function i2(e = 0) {
          return ((eW.Z1 || performance.timeOrigin) + e) / 1e3;
        }
        function i6(e) {
          try {
            let t = new URL(e, te.location.origin);
            return t.href;
          } catch (e) {
            return;
          }
        }
        let i3 = {
            ...iz,
            instrumentNavigation: !0,
            instrumentPageLoad: !0,
            markBackgroundSpan: !0,
            enableLongTask: !0,
            enableLongAnimationFrame: !0,
            enableInp: !0,
            _experiments: {},
            ...i0,
          },
          i5 = (e = {}) => {
            iW || ((iW = !0), t5(iV), t7(iV));
            let {
                enableInp: t,
                enableLongTask: n,
                enableLongAnimationFrame: r,
                _experiments: {
                  enableInteractions: i,
                  enableStandaloneClsSpans: a,
                },
                beforeStartSpan: o,
                idleTimeout: s,
                finalTimeout: u,
                childSpanTimeout: l,
                markBackgroundSpan: c,
                traceFetch: d,
                traceXHR: p,
                trackFetchStreamPerformance: y,
                shouldCreateSpanForRequest: g,
                enableHTTPTimings: b,
                instrumentPageLoad: v,
                instrumentNavigation: w,
              } = { ...i3, ...e },
              E = (function ({ recordClsStandaloneSpans: e }) {
                let t = im();
                if (t && tO) {
                  t.mark && ta.performance.mark("sentry-tracing-init");
                  let n = rG(({ metric: e }) => {
                      let t = e.entries[e.entries.length - 1];
                      if (!t) return;
                      let n = iy(tO),
                        r = iy(t.startTime);
                      (ib.fid = { value: e.value, unit: "millisecond" }),
                        (ib["mark.fid"] = { value: n + r, unit: "second" });
                    }),
                    r = rz(({ metric: e }) => {
                      let t = e.entries[e.entries.length - 1];
                      t &&
                        ((ib.lcp = { value: e.value, unit: "millisecond" }),
                        (h = t));
                    }, !0),
                    i = r0(
                      "ttfb",
                      ({ metric: e }) => {
                        let t = e.entries[e.entries.length - 1];
                        t &&
                          (ib.ttfb = { value: e.value, unit: "millisecond" });
                      },
                      rX,
                      f
                    ),
                    a = e
                      ? (function () {
                          let e,
                            t,
                            n = 0;
                          if (
                            !(function () {
                              try {
                                return PerformanceObserver.supportedEntryTypes.includes(
                                  "layout-shift"
                                );
                              } catch (e) {
                                return !1;
                              }
                            })()
                          )
                            return;
                          let r = !1;
                          function i() {
                            r ||
                              ((r = !0),
                              t &&
                                (function (e, t, n) {
                                  let r = iy(
                                      (tO || 0) + ((t && t.startTime) || 0)
                                    ),
                                    i = nF().getScopeData().transactionName,
                                    a = t
                                      ? n4(t.sources[0] && t.sources[0].node)
                                      : "Layout shift",
                                    o = tE({
                                      [nG]: "auto.http.browser.cls",
                                      [nz]: "ui.webvital.cls",
                                      [nK]: (t && t.duration) || 0,
                                      "sentry.pageload.span_id": n,
                                    }),
                                    s = ih({
                                      name: a,
                                      transaction: i,
                                      attributes: o,
                                      startTime: r,
                                    });
                                  s &&
                                    (s.addEvent("cls", { [nW]: "", [nV]: e }),
                                    s.end(r));
                                })(n, e, t),
                              a());
                          }
                          let a = rH(({ metric: t }) => {
                            let r = t.entries[t.entries.length - 1];
                            r && ((n = t.value), (e = r));
                          }, !0);
                          ra(() => {
                            i();
                          }),
                            setTimeout(() => {
                              let e = nU();
                              if (!e) return;
                              let n = e.on("startNavigationSpan", () => {
                                  i(), n && n();
                                }),
                                r = n5(),
                                a = r && n3(r),
                                o = a && nX(a);
                              o &&
                                "pageload" === o.op &&
                                (t = a.spanContext().spanId);
                            }, 0);
                        })()
                      : rH(({ metric: e }) => {
                          let t = e.entries[e.entries.length - 1];
                          t &&
                            ((ib.cls = { value: e.value, unit: "" }), (m = t));
                        }, !0);
                  return () => {
                    n(), r(), i(), a && a();
                  };
                }
                return () => void 0;
              })({ recordClsStandaloneSpans: a || !1 });
            t &&
              (function () {
                let e = im();
                if (e && tO) {
                  let e = rW(({ metric: e }) => {
                    if (void 0 == e.value) return;
                    let t = e.entries.find(
                      (t) => t.duration === e.value && iC[t.name]
                    );
                    if (!t) return;
                    let { interactionId: n } = t,
                      r = iC[t.name],
                      i = iy(tO + t.startTime),
                      a = iy(e.value),
                      o = n5(),
                      s = o ? n3(o) : void 0,
                      u = null != n ? ix.get(n) : void 0,
                      l = u || s,
                      c = l
                        ? nX(l).description
                        : nF().getScopeData().transactionName,
                      d = n4(t.target),
                      f = tE({
                        [nG]: "auto.http.browser.inp",
                        [nz]: `ui.interaction.${r}`,
                        [nK]: t.duration,
                      }),
                      p = ih({
                        name: d,
                        transaction: c,
                        attributes: f,
                        startTime: i,
                      });
                    p &&
                      (p.addEvent("inp", {
                        [nW]: "millisecond",
                        [nV]: e.value,
                      }),
                      p.end(i + a));
                  });
                }
              })(),
              r &&
              ek.GLOBAL_OBJ.PerformanceObserver &&
              PerformanceObserver.supportedEntryTypes &&
              PerformanceObserver.supportedEntryTypes.includes(
                "long-animation-frame"
              )
                ? (function () {
                    let e = new PerformanceObserver((e) => {
                      let t = n5();
                      if (t)
                        for (let n of e.getEntries()) {
                          if (!n.scripts[0]) continue;
                          let e = iy(tO + n.startTime),
                            { start_timestamp: r, op: i } = nX(t);
                          if ("navigation" === i && r && e < r) continue;
                          let a = iy(n.duration),
                            o = { [nG]: "auto.ui.browser.metrics" },
                            s = n.scripts[0],
                            {
                              invoker: u,
                              invokerType: l,
                              sourceURL: c,
                              sourceFunctionName: d,
                              sourceCharPosition: f,
                            } = s;
                          (o["browser.script.invoker"] = u),
                            (o["browser.script.invoker_type"] = l),
                            c && (o["code.filepath"] = c),
                            d && (o["code.function"] = d),
                            -1 !== f &&
                              (o["browser.script.source_char_position"] = f),
                            ip(t, e, e + a, {
                              name: "Main UI thread blocked",
                              op: "ui.long-animation-frame",
                              attributes: o,
                            });
                        }
                    });
                    e.observe({ type: "long-animation-frame", buffered: !0 });
                  })()
                : n &&
                  rV("longtask", ({ entries: e }) => {
                    let t = n5();
                    if (!t) return;
                    let { op: n, start_timestamp: r } = nX(t);
                    for (let i of e) {
                      let e = iy(tO + i.startTime),
                        a = iy(i.duration);
                      ("navigation" === n && r && e < r) ||
                        ip(t, e, e + a, {
                          name: "Main UI thread blocked",
                          op: "ui.long-task",
                          attributes: { [nG]: "auto.ui.browser.metrics" },
                        });
                    }
                  }),
              i &&
                rV("event", ({ entries: e }) => {
                  let t = n5();
                  if (t) {
                    for (let n of e)
                      if ("click" === n.name) {
                        let e = iy(tO + n.startTime),
                          r = iy(n.duration),
                          i = {
                            name: n4(n.target),
                            op: `ui.interaction.${n.name}`,
                            startTime: e,
                            attributes: { [nG]: "auto.ui.browser.metrics" },
                          },
                          a = (function (e) {
                            if (!ta.HTMLElement) return null;
                            let t = e;
                            for (let e = 0; e < 5 && t; e++) {
                              if (t instanceof HTMLElement) {
                                if (t.dataset.sentryComponent)
                                  return t.dataset.sentryComponent;
                                if (t.dataset.sentryElement)
                                  return t.dataset.sentryElement;
                              }
                              t = t.parentNode;
                            }
                            return null;
                          })(n.target);
                        a && (i.attributes["ui.component_name"] = a),
                          ip(t, e, e + r, i);
                      }
                  }
                });
            let x = { name: void 0, source: void 0 };
            function C(e, t) {
              let n = "pageload" === t.op,
                r = o ? o(t) : t,
                i = r.attributes || {};
              t.name !== r.name && ((i[i_.Zj] = "custom"), (r.attributes = i)),
                (x.name = r.name),
                (x.source = i[i_.Zj]);
              let c = iG(r, {
                idleTimeout: s,
                finalTimeout: u,
                childSpanTimeout: l,
                disableAutoFinish: n,
                beforeSpanEnd: (e) => {
                  E(),
                    (function (e, t) {
                      let n = im();
                      if (!n || !n.getEntries || !tO) return;
                      let r = iy(tO),
                        i = n.getEntries(),
                        { op: a, start_timestamp: o } = nX(e);
                      if (
                        (i.slice(ig).forEach((t) => {
                          let n = iy(t.startTime),
                            i = iy(Math.max(0, t.duration));
                          if ("navigation" !== a || !o || !(r + n < o))
                            switch (t.entryType) {
                              case "navigation":
                                [
                                  "unloadEvent",
                                  "redirect",
                                  "domContentLoadedEvent",
                                  "loadEvent",
                                  "connect",
                                ].forEach((n) => {
                                  iv(e, t, n, r);
                                }),
                                  iv(e, t, "secureConnection", r, "TLS/SSL"),
                                  iv(e, t, "fetch", r, "cache"),
                                  iv(e, t, "domainLookup", r, "DNS"),
                                  (function (e, t, n) {
                                    let r = n + iy(t.requestStart),
                                      i = n + iy(t.responseEnd),
                                      a = n + iy(t.responseStart);
                                    t.responseEnd &&
                                      (ip(e, r, i, {
                                        op: "browser.request",
                                        name: t.name,
                                        attributes: {
                                          [nG]: "auto.ui.browser.metrics",
                                        },
                                      }),
                                      ip(e, a, i, {
                                        op: "browser.response",
                                        name: t.name,
                                        attributes: {
                                          [nG]: "auto.ui.browser.metrics",
                                        },
                                      }));
                                  })(e, t, r);
                                break;
                              case "mark":
                              case "paint":
                              case "measure": {
                                (function (e, t, n, r, i) {
                                  let a = rt(!1),
                                    o = iy(a ? a.requestStart : 0),
                                    s = i + Math.max(n, o),
                                    u = i + n,
                                    l = {
                                      [nG]: "auto.resource.browser.metrics",
                                    };
                                  s !== u &&
                                    ((l[
                                      "sentry.browser.measure_happened_before_request"
                                    ] = !0),
                                    (l["sentry.browser.measure_start_time"] =
                                      s)),
                                    ip(e, s, u + r, {
                                      name: t.name,
                                      op: t.entryType,
                                      attributes: l,
                                    });
                                })(e, t, n, i, r);
                                let a = rf(),
                                  o = t.startTime < a.firstHiddenTime;
                                "first-paint" === t.name &&
                                  o &&
                                  (ib.fp = {
                                    value: t.startTime,
                                    unit: "millisecond",
                                  }),
                                  "first-contentful-paint" === t.name &&
                                    o &&
                                    (ib.fcp = {
                                      value: t.startTime,
                                      unit: "millisecond",
                                    });
                                break;
                              }
                              case "resource":
                                (function (e, t, n, r, i, a) {
                                  if (
                                    "xmlhttprequest" === t.initiatorType ||
                                    "fetch" === t.initiatorType
                                  )
                                    return;
                                  let o = (function (e) {
                                      if (!e) return {};
                                      let t = e.match(
                                        /^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/
                                      );
                                      if (!t) return {};
                                      let n = t[6] || "",
                                        r = t[8] || "";
                                      return {
                                        host: t[4],
                                        path: t[5],
                                        protocol: t[2],
                                        search: n,
                                        hash: r,
                                        relative: t[5] + n + r,
                                      };
                                    })(n),
                                    s = {
                                      [nG]: "auto.resource.browser.metrics",
                                    };
                                  iw(
                                    s,
                                    t,
                                    "transferSize",
                                    "http.response_transfer_size"
                                  ),
                                    iw(
                                      s,
                                      t,
                                      "encodedBodySize",
                                      "http.response_content_length"
                                    ),
                                    iw(
                                      s,
                                      t,
                                      "decodedBodySize",
                                      "http.decoded_response_content_length"
                                    );
                                  let u = t.deliveryType;
                                  null != u &&
                                    (s["http.response_delivery_type"] = u);
                                  let l = t.renderBlockingStatus;
                                  l &&
                                    (s["resource.render_blocking_status"] = l),
                                    o.protocol &&
                                      (s["url.scheme"] = o.protocol
                                        .split(":")
                                        .pop()),
                                    o.host && (s["server.address"] = o.host),
                                    (s["url.same_origin"] = n.includes(
                                      ta.location.origin
                                    ));
                                  let c = a + r,
                                    d = c + i;
                                  ip(e, c, d, {
                                    name: n.replace(ta.location.origin, ""),
                                    op: t.initiatorType
                                      ? `resource.${t.initiatorType}`
                                      : "resource.other",
                                    attributes: s,
                                  });
                                })(e, t, t.name, n, i, r);
                            }
                        }),
                        (ig = Math.max(i.length - 1, 0)),
                        (function (e) {
                          let t = ta.navigator;
                          if (!t) return;
                          let n = t.connection;
                          n &&
                            (n.effectiveType &&
                              e.setAttribute(
                                "effectiveConnectionType",
                                n.effectiveType
                              ),
                            n.type && e.setAttribute("connectionType", n.type),
                            id(n.rtt) &&
                              (ib["connection.rtt"] = {
                                value: n.rtt,
                                unit: "millisecond",
                              })),
                            id(t.deviceMemory) &&
                              e.setAttribute(
                                "deviceMemory",
                                `${t.deviceMemory} GB`
                              ),
                            id(t.hardwareConcurrency) &&
                              e.setAttribute(
                                "hardwareConcurrency",
                                String(t.hardwareConcurrency)
                              );
                        })(e),
                        "pageload" === a)
                      ) {
                        (function (e) {
                          let t = rt(!1);
                          if (!t) return;
                          let { responseStart: n, requestStart: r } = t;
                          r <= n &&
                            (e["ttfb.requestTime"] = {
                              value: n - r,
                              unit: "millisecond",
                            });
                        })(ib);
                        let n = ib["mark.fid"];
                        n &&
                          ib.fid &&
                          (ip(e, n.value, n.value + iy(ib.fid.value), {
                            name: "first input delay",
                            op: "ui.action",
                            attributes: { [nG]: "auto.ui.browser.metrics" },
                          }),
                          delete ib["mark.fid"]),
                          ("fcp" in ib && t.recordClsOnPageloadSpan) ||
                            delete ib.cls,
                          Object.entries(ib).forEach(([e, t]) => {
                            !(function (e, t, n, r = n5()) {
                              let i = r && n3(r);
                              i && i.addEvent(e, { [nV]: t, [nW]: n });
                            })(e, t.value, t.unit);
                          }),
                          e.setAttribute("performance.timeOrigin", r),
                          e.setAttribute("performance.activationStart", rn()),
                          h &&
                            (h.element &&
                              e.setAttribute("lcp.element", n4(h.element)),
                            h.id && e.setAttribute("lcp.id", h.id),
                            h.url &&
                              e.setAttribute(
                                "lcp.url",
                                h.url.trim().slice(0, 200)
                              ),
                            null != h.loadTime &&
                              e.setAttribute("lcp.loadTime", h.loadTime),
                            null != h.renderTime &&
                              e.setAttribute("lcp.renderTime", h.renderTime),
                            e.setAttribute("lcp.size", h.size)),
                          m &&
                            m.sources &&
                            m.sources.forEach((t, n) =>
                              e.setAttribute(`cls.source.${n + 1}`, n4(t.node))
                            );
                      }
                      (h = void 0), (m = void 0), (ib = {});
                    })(e, { recordClsOnPageloadSpan: !a });
                },
              });
              function d() {
                ["interactive", "complete"].includes(te.document.readyState) &&
                  e.emit("idleSpanEnableAutoFinish", c);
              }
              return (
                n &&
                  te.document &&
                  (te.document.addEventListener("readystatechange", () => {
                    d();
                  }),
                  d()),
                c
              );
            }
            return {
              name: "BrowserTracing",
              afterAllSetup(e) {
                let n, r;
                let a = te.location && te.location.href;
                function o() {
                  n && !(0, ez.XU)(n).timestamp && n.end();
                }
                e.on("startNavigationSpan", (t) => {
                  (0, eE.s3)() === e &&
                    (o(), (n = C(e, { op: "navigation", ...t })));
                }),
                  e.on("startPageLoadSpan", (t, r = {}) => {
                    if ((0, eE.s3)() !== e) return;
                    o();
                    let i = r.sentryTrace || i7("sentry-trace"),
                      a = r.baggage || i7("baggage"),
                      s = (0, iK.pT)(i, a);
                    (0, eE.nZ)().setPropagationContext(s),
                      (n = C(e, { op: "pageload", ...t }));
                  }),
                  e.on("spanEnd", (e) => {
                    let t = (0, ez.XU)(e).op;
                    if (
                      e !== (0, ez.Gx)(e) ||
                      ("navigation" !== t && "pageload" !== t)
                    )
                      return;
                    let n = (0, eE.nZ)(),
                      r = n.getPropagationContext();
                    n.setPropagationContext({
                      ...r,
                      sampled: void 0 !== r.sampled ? r.sampled : (0, ez.Tt)(e),
                      dsc: r.dsc || (0, eM.jC)(e),
                    });
                  }),
                  te.location &&
                    (v &&
                      i4(e, {
                        name: te.location.pathname,
                        startTime: eW.Z1 ? eW.Z1 / 1e3 : void 0,
                        attributes: {
                          [i_.Zj]: "url",
                          [i_.S3]: "auto.pageload.browser",
                        },
                      }),
                    w &&
                      tj(({ to: t, from: n }) => {
                        if (void 0 === n && a && -1 !== a.indexOf(t)) {
                          a = void 0;
                          return;
                        }
                        n !== t &&
                          ((a = void 0),
                          i8(e, {
                            name: te.location.pathname,
                            attributes: {
                              [i_.Zj]: "url",
                              [i_.S3]: "auto.navigation.browser",
                            },
                          }));
                      })),
                  c &&
                    te &&
                    te.document &&
                    te.document.addEventListener("visibilitychange", () => {
                      let e = (0, ez.HN)();
                      if (!e) return;
                      let t = (0, ez.Gx)(e);
                      if (te.document.hidden && t) {
                        let { op: e, status: n } = (0, ez.XU)(t);
                        n || t.setStatus({ code: iI.jt, message: "cancelled" }),
                          t.setAttribute(
                            "sentry.cancellation_reason",
                            "document.hidden"
                          ),
                          t.end();
                      }
                    }),
                  i &&
                    te.document &&
                    addEventListener(
                      "click",
                      () => {
                        let e = (0, ez.HN)(),
                          t = e && (0, ez.Gx)(e);
                        if (t) {
                          let e = (0, ez.XU)(t).op;
                          if (["navigation", "pageload"].includes(e)) return;
                        }
                        r &&
                          (r.setAttribute(i_.ju, "interactionInterrupted"),
                          r.end(),
                          (r = void 0)),
                          x.name &&
                            (r = iG(
                              {
                                name: x.name,
                                op: "ui.action.click",
                                attributes: { [i_.Zj]: x.source || "url" },
                              },
                              {
                                idleTimeout: s,
                                finalTimeout: u,
                                childSpanTimeout: l,
                              }
                            ));
                      },
                      { once: !1, capture: !0 }
                    ),
                  t &&
                    (function () {
                      let e = ({ entries: e }) => {
                        let t = n5(),
                          n = t && n3(t);
                        e.forEach((e) => {
                          if (!("duration" in e) || !n) return;
                          let t = e.interactionId;
                          if (!(null == t || ix.has(t))) {
                            if (iE.length > 10) {
                              let e = iE.shift();
                              ix.delete(e);
                            }
                            iE.push(t), ix.set(t, n);
                          }
                        });
                      };
                      rV("event", e), rV("first-input", e);
                    })(),
                  (function (e, t) {
                    let {
                        traceFetch: n,
                        traceXHR: r,
                        trackFetchStreamPerformance: i,
                        shouldCreateSpanForRequest: a,
                        enableHTTPTimings: o,
                        tracePropagationTargets: s,
                      } = {
                        traceFetch: i0.traceFetch,
                        traceXHR: i0.traceXHR,
                        trackFetchStreamPerformance:
                          i0.trackFetchStreamPerformance,
                        ...t,
                      },
                      u = "function" == typeof a ? a : (e) => !0,
                      l = (e) =>
                        (function (e, t) {
                          let n = te.location && te.location.href;
                          if (n) {
                            let r, i;
                            try {
                              (r = new URL(e, n)), (i = new URL(n).origin);
                            } catch (e) {
                              return !1;
                            }
                            let a = r.origin === i;
                            return t
                              ? (0, eg.U0)(r.toString(), t) ||
                                  (a && (0, eg.U0)(r.pathname, t))
                              : a;
                          }
                          {
                            let n = !!e.match(/^\/(?!\/)/);
                            return t ? (0, eg.U0)(e, t) : n;
                          }
                        })(e, s),
                      c = {};
                    n &&
                      (e.addEventProcessor(
                        (e) => (
                          "transaction" === e.type &&
                            e.spans &&
                            e.spans.forEach((e) => {
                              if ("http.client" === e.op) {
                                let t = iQ.get(e.span_id);
                                t &&
                                  ((e.timestamp = t / 1e3),
                                  iQ.delete(e.span_id));
                              }
                            }),
                          e
                        )
                      ),
                      i &&
                        (function (e) {
                          let t = "fetch-body-resolved";
                          tD(t, e), tR(t, () => t$(tH));
                        })((e) => {
                          if (e.response) {
                            let t = iX.get(e.response);
                            t && e.endTimestamp && iQ.set(t, e.endTimestamp);
                          }
                        }),
                      tU((e) => {
                        let t = (function (
                          e,
                          t,
                          n,
                          r,
                          i = "auto.http.browser"
                        ) {
                          if (!e.fetchData) return;
                          let a = (0, iT.z)() && t(e.fetchData.url);
                          if (e.endTimestamp && a) {
                            let t = e.fetchData.__span;
                            if (!t) return;
                            let n = r[t];
                            n &&
                              ((function (e, t) {
                                if (t.response) {
                                  (0, iI.Q0)(e, t.response.status);
                                  let n =
                                    t.response &&
                                    t.response.headers &&
                                    t.response.headers.get("content-length");
                                  if (n) {
                                    let t = parseInt(n);
                                    t > 0 &&
                                      e.setAttribute(
                                        "http.response_content_length",
                                        t
                                      );
                                  }
                                } else
                                  t.error &&
                                    e.setStatus({
                                      code: iI.jt,
                                      message: "internal_error",
                                    });
                                e.end();
                              })(n, e),
                              delete r[t]);
                            return;
                          }
                          let { method: o, url: s } = e.fetchData,
                            u = (function (e) {
                              try {
                                let t = new URL(e);
                                return t.href;
                              } catch (e) {
                                return;
                              }
                            })(s),
                            l = u ? tZ(u).host : void 0,
                            c = !!(0, ez.HN)(),
                            d =
                              a && c
                                ? i$({
                                    name: `${o} ${s}`,
                                    attributes: {
                                      url: s,
                                      type: "fetch",
                                      "http.method": o,
                                      "http.url": u,
                                      "server.address": l,
                                      [i_.S3]: i,
                                      [i_.$J]: "http.client",
                                    },
                                  })
                                : new iO();
                          if (
                            ((e.fetchData.__span = d.spanContext().spanId),
                            (r[d.spanContext().spanId] = d),
                            n(e.fetchData.url))
                          ) {
                            let t = e.args[0],
                              n = e.args[1] || {},
                              r = (function (e, t, n) {
                                let r = iJ({ span: n }),
                                  i = r["sentry-trace"],
                                  a = r.baggage;
                                if (!i) return;
                                let o =
                                  t.headers ||
                                  ("undefined" != typeof Request &&
                                  (0, eK.V9)(e, Request)
                                    ? e.headers
                                    : void 0);
                                if (!o) return { ...r };
                                if (
                                  "undefined" != typeof Headers &&
                                  (0, eK.V9)(o, Headers)
                                ) {
                                  let e = new Headers(o);
                                  if ((e.set("sentry-trace", i), a)) {
                                    let t = e.get("baggage");
                                    if (t) {
                                      let n = iY(t);
                                      e.set("baggage", n ? `${n},${a}` : a);
                                    } else e.set("baggage", a);
                                  }
                                  return e;
                                }
                                if (Array.isArray(o)) {
                                  let e = [
                                    ...o
                                      .filter(
                                        (e) =>
                                          !(
                                            Array.isArray(e) &&
                                            "sentry-trace" === e[0]
                                          )
                                      )
                                      .map((e) => {
                                        if (
                                          !Array.isArray(e) ||
                                          "baggage" !== e[0] ||
                                          "string" != typeof e[1]
                                        )
                                          return e;
                                        {
                                          let [t, n, ...r] = e;
                                          return [t, iY(n), ...r];
                                        }
                                      }),
                                    ["sentry-trace", i],
                                  ];
                                  return a && e.push(["baggage", a]), e;
                                }
                                {
                                  let e = "baggage" in o ? o.baggage : void 0,
                                    t = [];
                                  return (
                                    Array.isArray(e)
                                      ? (t = e
                                          .map((e) =>
                                            "string" == typeof e ? iY(e) : e
                                          )
                                          .filter((e) => "" === e))
                                      : e && t.push(iY(e)),
                                    a && t.push(a),
                                    {
                                      ...o,
                                      "sentry-trace": i,
                                      baggage:
                                        t.length > 0 ? t.join(",") : void 0,
                                    }
                                  );
                                }
                              })(t, n, (0, iT.z)() && c ? d : void 0);
                            r && ((e.args[1] = n), (n.headers = r));
                          }
                          return d;
                        })(e, u, l, c);
                        if (
                          (e.response &&
                            e.fetchData.__span &&
                            iX.set(e.response, e.fetchData.__span),
                          t)
                        ) {
                          let n = i6(e.fetchData.url),
                            r = n ? tZ(n).host : void 0;
                          t.setAttributes({
                            "http.url": n,
                            "server.address": r,
                          });
                        }
                        o && t && i1(t);
                      })),
                      r &&
                        tA((e) => {
                          let t = (function (e, t, n, r) {
                            let i = e.xhr,
                              a = i && i[tI];
                            if (!i || i.__sentry_own_request__ || !a) return;
                            let o = (0, iT.z)() && t(a.url);
                            if (e.endTimestamp && o) {
                              let e = i.__sentry_xhr_span_id__;
                              if (!e) return;
                              let t = r[e];
                              t &&
                                void 0 !== a.status_code &&
                                ((0, iI.Q0)(t, a.status_code),
                                t.end(),
                                delete r[e]);
                              return;
                            }
                            let s = i6(a.url),
                              u = s ? tZ(s).host : void 0,
                              l = !!(0, ez.HN)(),
                              c =
                                o && l
                                  ? i$({
                                      name: `${a.method} ${a.url}`,
                                      attributes: {
                                        type: "xhr",
                                        "http.method": a.method,
                                        "http.url": s,
                                        url: a.url,
                                        "server.address": u,
                                        [i_.S3]: "auto.http.browser",
                                        [i_.$J]: "http.client",
                                      },
                                    })
                                  : new iO();
                            return (
                              (i.__sentry_xhr_span_id__ =
                                c.spanContext().spanId),
                              (r[i.__sentry_xhr_span_id__] = c),
                              n(a.url) &&
                                (function (e, t) {
                                  let { "sentry-trace": n, baggage: r } = iJ({
                                    span: t,
                                  });
                                  n &&
                                    (function (e, t, n) {
                                      try {
                                        e.setRequestHeader("sentry-trace", t),
                                          n && e.setRequestHeader("baggage", n);
                                      } catch (e) {}
                                    })(e, n, r);
                                })(i, (0, iT.z)() && l ? c : void 0),
                              c
                            );
                          })(e, u, l, c);
                          o && t && i1(t);
                        });
                  })(e, {
                    traceFetch: d,
                    traceXHR: p,
                    trackFetchStreamPerformance: y,
                    tracePropagationTargets:
                      e.getOptions().tracePropagationTargets,
                    shouldCreateSpanForRequest: g,
                    enableHTTPTimings: b,
                  });
              },
            };
          };
        function i4(e, t, n) {
          e.emit("startPageLoadSpan", t, n),
            (0, eE.nZ)().setTransactionName(t.name);
          let r = (0, ez.HN)(),
            i = r && (0, ez.XU)(r).op;
          return "pageload" === i ? r : void 0;
        }
        function i8(e, t) {
          (0, eE.aF)().setPropagationContext({ traceId: (0, iP.Ht)() }),
            (0, eE.nZ)().setPropagationContext({ traceId: (0, iP.Ht)() }),
            e.emit("startNavigationSpan", t),
            (0, eE.nZ)().setTransactionName(t.name);
          let n = (0, ez.HN)(),
            r = n && (0, ez.XU)(n).op;
          return "navigation" === r ? n : void 0;
        }
        function i7(e) {
          let t = (0, tV.qT)(`meta[name=${e}]`);
          return t ? t.getAttribute("content") : void 0;
        }
        let i9 = "sentry.source",
          ae = "sentry.op",
          at = "sentry.origin",
          an = "incomplete-app-router-transaction";
        function ar(e) {
          try {
            return new URL(e, "http://some-random-base.com/").pathname;
          } catch (e) {
            return "/";
          }
        }
        function ai(e) {
          return e
            .split(",")
            .map((e) => e.split("=").map((e) => decodeURIComponent(e.trim())))
            .reduce((e, [t, n]) => (t && n && (e[t] = n), e), {});
        }
        var aa = n(11163);
        let ao = aa.events ? aa : aa.default,
          as =
            /^(\S+:\\|\/?)([\s\S]*?)((?:\.{1,2}|[^/\\]+?|)(\.[^./\\]*|))(?:[/\\]*)$/;
        function au(...e) {
          let t = "",
            n = !1;
          for (let r = e.length - 1; r >= -1 && !n; r--) {
            let i = r >= 0 ? e[r] : "/";
            i && ((t = `${i}/${t}`), (n = "/" === i.charAt(0)));
          }
          return (
            (t = (function (e, t) {
              let n = 0;
              for (let t = e.length - 1; t >= 0; t--) {
                let r = e[t];
                "." === r
                  ? e.splice(t, 1)
                  : ".." === r
                  ? (e.splice(t, 1), n++)
                  : n && (e.splice(t, 1), n--);
              }
              if (t) for (; n--; n) e.unshift("..");
              return e;
            })(
              t.split("/").filter((e) => !!e),
              !n
            ).join("/")),
            (n ? "/" : "") + t || "."
          );
        }
        function al(e) {
          let t = 0;
          for (; t < e.length && "" === e[t]; t++);
          let n = e.length - 1;
          for (; n >= 0 && "" === e[n]; n--);
          return t > n ? [] : e.slice(t, n - t + 1);
        }
        let ac = (e = {}) => {
            let t = e.root,
              n = e.prefix || "app:///",
              r = "window" in P && void 0 !== P.window,
              i =
                e.iteratee ||
                (function ({ isBrowser: e, root: t, prefix: n }) {
                  return (r) => {
                    if (!r.filename) return r;
                    let i =
                        /^[a-zA-Z]:\\/.test(r.filename) ||
                        (r.filename.includes("\\") &&
                          !r.filename.includes("/")),
                      a = /^\//.test(r.filename);
                    if (e) {
                      if (t) {
                        let e = r.filename;
                        0 === e.indexOf(t) && (r.filename = e.replace(t, n));
                      }
                    } else if (i || a) {
                      var o;
                      let e;
                      let a = i
                          ? r.filename
                              .replace(/^[a-zA-Z]:/, "")
                              .replace(/\\/g, "/")
                          : r.filename,
                        s = t
                          ? (function (e, t) {
                              (e = au(e).slice(1)), (t = au(t).slice(1));
                              let n = al(e.split("/")),
                                r = al(t.split("/")),
                                i = Math.min(n.length, r.length),
                                a = i;
                              for (let e = 0; e < i; e++)
                                if (n[e] !== r[e]) {
                                  a = e;
                                  break;
                                }
                              let o = [];
                              for (let e = a; e < n.length; e++) o.push("..");
                              return (o = o.concat(r.slice(a))).join("/");
                            })(t, a)
                          : ((e =
                              (function (e) {
                                let t =
                                    e.length > 1024
                                      ? `<truncated>${e.slice(-1024)}`
                                      : e,
                                  n = as.exec(t);
                                return n ? n.slice(1) : [];
                              })(a)[2] || ""),
                            o &&
                              e.slice(-1 * o.length) === o &&
                              (e = e.slice(0, e.length - o.length)),
                            e);
                      r.filename = `${n}${s}`;
                    }
                    return r;
                  };
                })({ isBrowser: r, root: t, prefix: n });
            return {
              name: "RewriteFrames",
              processEvent(e) {
                let t = e;
                return (
                  e.exception &&
                    Array.isArray(e.exception.values) &&
                    (t = (function (e) {
                      try {
                        return {
                          ...e,
                          exception: {
                            ...e.exception,
                            values: e.exception.values.map((e) => {
                              var t;
                              return {
                                ...e,
                                ...(e.stacktrace && {
                                  stacktrace: {
                                    ...(t = e.stacktrace),
                                    frames:
                                      t &&
                                      t.frames &&
                                      t.frames.map((e) => i(e)),
                                  },
                                }),
                              };
                            }),
                          },
                        };
                      } catch (t) {
                        return e;
                      }
                    })(t)),
                  t
                );
              },
            };
          },
          ad = ({ assetPrefixPath: e }) => {
            let t = ac({
              iteratee: (t) => {
                try {
                  let { origin: n } = new URL(t.filename);
                  t.filename = T([
                    t,
                    "access",
                    (e) => e.filename,
                    "optionalAccess",
                    (e) => e.replace,
                    "call",
                    (e) => e(n, "app://"),
                    "access",
                    (e) => e.replace,
                    "call",
                    (t) => t(e, ""),
                  ]);
                } catch (e) {}
                return (
                  t.filename &&
                    t.filename.startsWith("app:///_next") &&
                    (t.filename = decodeURI(t.filename)),
                  t.filename &&
                    t.filename.match(
                      /^app:\/\/\/_next\/static\/chunks\/(main-|main-app-|polyfills-|webpack-|framework-|framework\.)[0-9a-f]+\.js$/
                    ) &&
                    (t.in_app = !1),
                  t
                );
              },
            });
            return { ...t, name: "NextjsClientStackFrameNormalization" };
          },
          af =
            /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;
        function ap(e) {
          let t;
          let n = e[0],
            r = 1;
          for (; r < e.length; ) {
            let i = e[r],
              a = e[r + 1];
            if (
              ((r += 2),
              ("optionalAccess" === i || "optionalCall" === i) && null == n)
            )
              return;
            "access" === i || "optionalAccess" === i
              ? ((t = n), (n = a(n)))
              : ("call" === i || "optionalCall" === i) &&
                ((n = a((...e) => n.call(t, ...e))), (t = void 0));
          }
          return n;
        }
        let ah = "8.45.0",
          am = globalThis;
        function ay(e, t, n) {
          let r = n || am,
            i = (r.__SENTRY__ = r.__SENTRY__ || {}),
            a = (i[ah] = i[ah] || {});
          return a[e] || (a[e] = t());
        }
        let ag = Object.prototype.toString;
        function ab(e, t) {
          return ag.call(e) === `[object ${t}]`;
        }
        function av(e) {
          return ab(e, "String");
        }
        function aw(e) {
          return ab(e, "Object");
        }
        function aE(e) {
          return !!(e && e.then && "function" == typeof e.then);
        }
        function ax(e, t) {
          try {
            return e instanceof t;
          } catch (e) {
            return !1;
          }
        }
        function aC(e, t = {}) {
          if (!e) return "<unknown>";
          try {
            let n,
              r = e,
              i = [],
              a = 0,
              o = 0,
              s = Array.isArray(t) ? t : t.keyAttrs,
              u = (!Array.isArray(t) && t.maxStringLength) || 80;
            for (
              ;
              r &&
              a++ < 5 &&
              ((n = (function (e, t) {
                let n = [];
                if (!e || !e.tagName) return "";
                if (am.HTMLElement && e instanceof HTMLElement && e.dataset) {
                  if (e.dataset.sentryComponent)
                    return e.dataset.sentryComponent;
                  if (e.dataset.sentryElement) return e.dataset.sentryElement;
                }
                n.push(e.tagName.toLowerCase());
                let r =
                  t && t.length
                    ? t
                        .filter((t) => e.getAttribute(t))
                        .map((t) => [t, e.getAttribute(t)])
                    : null;
                if (r && r.length)
                  r.forEach((e) => {
                    n.push(`[${e[0]}="${e[1]}"]`);
                  });
                else {
                  e.id && n.push(`#${e.id}`);
                  let t = e.className;
                  if (t && av(t)) {
                    let e = t.split(/\s+/);
                    for (let t of e) n.push(`.${t}`);
                  }
                }
                for (let t of ["aria-label", "type", "name", "title", "alt"]) {
                  let r = e.getAttribute(t);
                  r && n.push(`[${t}="${r}"]`);
                }
                return n.join("");
              })(r, s)),
              "html" !== n &&
                (!(a > 1) || !(o + 3 * i.length + n.length >= u)));

            )
              i.push(n), (o += n.length), (r = r.parentNode);
            return i.reverse().join(" > ");
          } catch (e) {
            return "<unknown>";
          }
        }
        let a_ = ["debug", "info", "warn", "error", "log", "assert", "trace"],
          aT = {},
          aS = ay("logger", function () {
            let e = !1,
              t = {
                enable: () => {
                  e = !0;
                },
                disable: () => {
                  e = !1;
                },
                isEnabled: () => e,
              };
            return (
              a_.forEach((e) => {
                t[e] = () => void 0;
              }),
              t
            );
          });
        function aP(e, t, n) {
          try {
            Object.defineProperty(e, t, {
              value: n,
              writable: !0,
              configurable: !0,
            });
          } catch (e) {}
        }
        function aO(e) {
          try {
            return "undefined" != typeof Element && ax(e, Element)
              ? aC(e)
              : Object.prototype.toString.call(e);
          } catch (e) {
            return "<unknown>";
          }
        }
        function aI(e) {
          if ("object" != typeof e || null === e) return {};
          {
            let t = {};
            for (let n in e)
              Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t;
          }
        }
        function aA(e) {
          let t = new Map();
          return (function e(t, n) {
            if (
              (function (e) {
                if (!aw(e)) return !1;
                try {
                  let t = Object.getPrototypeOf(e).constructor.name;
                  return !t || "Object" === t;
                } catch (e) {
                  return !0;
                }
              })(t)
            ) {
              let r = n.get(t);
              if (void 0 !== r) return r;
              let i = {};
              for (let r of (n.set(t, i), Object.getOwnPropertyNames(t)))
                void 0 !== t[r] && (i[r] = e(t[r], n));
              return i;
            }
            if (Array.isArray(t)) {
              let r = n.get(t);
              if (void 0 !== r) return r;
              let i = [];
              return (
                n.set(t, i),
                t.forEach((t) => {
                  i.push(e(t, n));
                }),
                i
              );
            }
            return t;
          })(e, t);
        }
        let ak = "<anonymous>";
        function aj(e, t = 100, n = Infinity) {
          try {
            return (function e(
              t,
              n,
              r = Infinity,
              i = Infinity,
              a = (function () {
                let e = "function" == typeof WeakSet,
                  t = e ? new WeakSet() : [];
                return [
                  function (n) {
                    if (e) return !!t.has(n) || (t.add(n), !1);
                    for (let e = 0; e < t.length; e++) {
                      let r = t[e];
                      if (r === n) return !0;
                    }
                    return t.push(n), !1;
                  },
                  function (n) {
                    if (e) t.delete(n);
                    else
                      for (let e = 0; e < t.length; e++)
                        if (t[e] === n) {
                          t.splice(e, 1);
                          break;
                        }
                  },
                ];
              })()
            ) {
              let [o, s] = a;
              if (
                null == n ||
                ["boolean", "string"].includes(typeof n) ||
                ("number" == typeof n && Number.isFinite(n))
              )
                return n;
              let u = (function (e, t) {
                try {
                  if ("domain" === e && t && "object" == typeof t && t._events)
                    return "[Domain]";
                  if ("domainEmitter" === e) return "[DomainEmitter]";
                  if ("undefined" != typeof global && t === global)
                    return "[Global]";
                  if ("undefined" != typeof window && t === window)
                    return "[Window]";
                  if ("undefined" != typeof document && t === document)
                    return "[Document]";
                  if (
                    "object" == typeof t &&
                    null !== t &&
                    (t.__isVue || t._isVue)
                  )
                    return "[VueViewModel]";
                  if (
                    aw(t) &&
                    "nativeEvent" in t &&
                    "preventDefault" in t &&
                    "stopPropagation" in t
                  )
                    return "[SyntheticEvent]";
                  if ("number" == typeof t && !Number.isFinite(t))
                    return `[${t}]`;
                  if ("function" == typeof t)
                    return `[Function: ${(function (e) {
                      try {
                        if (!e || "function" != typeof e) return ak;
                        return e.name || ak;
                      } catch (e) {
                        return ak;
                      }
                    })(t)}]`;
                  if ("symbol" == typeof t) return `[${String(t)}]`;
                  if ("bigint" == typeof t) return `[BigInt: ${String(t)}]`;
                  let n = (function (e) {
                    let t = Object.getPrototypeOf(e);
                    return t ? t.constructor.name : "null prototype";
                  })(t);
                  if (/^HTML(\w*)Element$/.test(n))
                    return `[HTMLElement: ${n}]`;
                  return `[object ${n}]`;
                } catch (e) {
                  return `**non-serializable** (${e})`;
                }
              })(t, n);
              if (!u.startsWith("[object ")) return u;
              if (n.__sentry_skip_normalization__) return n;
              let l =
                "number" == typeof n.__sentry_override_normalization_depth__
                  ? n.__sentry_override_normalization_depth__
                  : r;
              if (0 === l) return u.replace("object ", "");
              if (o(n)) return "[Circular ~]";
              if (n && "function" == typeof n.toJSON)
                try {
                  let t = n.toJSON();
                  return e("", t, l - 1, i, a);
                } catch (e) {}
              let c = Array.isArray(n) ? [] : {},
                d = 0,
                f = (function (e) {
                  if (
                    (function (e) {
                      switch (ag.call(e)) {
                        case "[object Error]":
                        case "[object Exception]":
                        case "[object DOMException]":
                        case "[object WebAssembly.Exception]":
                          return !0;
                        default:
                          return ax(e, Error);
                      }
                    })(e)
                  )
                    return {
                      message: e.message,
                      name: e.name,
                      stack: e.stack,
                      ...aI(e),
                    };
                  if (!("undefined" != typeof Event && ax(e, Event))) return e;
                  {
                    let t = {
                      type: e.type,
                      target: aO(e.target),
                      currentTarget: aO(e.currentTarget),
                      ...aI(e),
                    };
                    return (
                      "undefined" != typeof CustomEvent &&
                        ax(e, CustomEvent) &&
                        (t.detail = e.detail),
                      t
                    );
                  }
                })(n);
              for (let t in f) {
                if (!Object.prototype.hasOwnProperty.call(f, t)) continue;
                if (d >= i) {
                  c[t] = "[MaxProperties ~]";
                  break;
                }
                let n = f[t];
                (c[t] = e(t, n, l - 1, i, a)), d++;
              }
              return s(n), c;
            })("", e, t, n);
          } catch (e) {
            return { ERROR: `**non-serializable** (${e})` };
          }
        }
        function aB() {
          return Date.now() / 1e3;
        }
        let aM = (function () {
            let { performance: e } = am;
            if (!e || !e.now) return aB;
            let t = Date.now() - e.now(),
              n = void 0 == e.timeOrigin ? t : e.timeOrigin;
            return () => (n + e.now()) / 1e3;
          })(),
          aN = (() => {
            let { performance: e } = am;
            if (!e || !e.now) return;
            let t = e.now(),
              n = Date.now(),
              r = e.timeOrigin ? Math.abs(e.timeOrigin + t - n) : 36e5,
              i = e.timing && e.timing.navigationStart,
              a = "number" == typeof i ? Math.abs(i + t - n) : 36e5;
            return r < 36e5 || a < 36e5 ? (r <= a ? e.timeOrigin : i) : n;
          })();
        function aD() {
          return aR(am), am;
        }
        function aR(e) {
          let t = (e.__SENTRY__ = e.__SENTRY__ || {});
          return (t.version = t.version || ah), (t[ah] = t[ah] || {});
        }
        function aF() {
          let e = am.crypto || am.msCrypto,
            t = () => 16 * Math.random();
          try {
            if (e && e.randomUUID) return e.randomUUID().replace(/-/g, "");
            e &&
              e.getRandomValues &&
              (t = () => {
                let t = new Uint8Array(1);
                return e.getRandomValues(t), t[0];
              });
          } catch (e) {}
          return "10000000100040008000100000000000".replace(/[018]/g, (e) =>
            (e ^ ((15 & t()) >> (e / 4))).toString(16)
          );
        }
        function aL() {
          return aF().substring(16);
        }
        function aU(e, t, n = 2) {
          if (!t || "object" != typeof t || n <= 0) return t;
          if (e && t && 0 === Object.keys(t).length) return e;
          let r = { ...e };
          for (let e in t)
            Object.prototype.hasOwnProperty.call(t, e) &&
              (r[e] = aU(r[e], t[e], n - 1));
          return r;
        }
        let a$ = "_sentrySpan";
        function aq(e, t) {
          t ? aP(e, a$, t) : delete e[a$];
        }
        class aH {
          constructor() {
            (this._notifyingListeners = !1),
              (this._scopeListeners = []),
              (this._eventProcessors = []),
              (this._breadcrumbs = []),
              (this._attachments = []),
              (this._user = {}),
              (this._tags = {}),
              (this._extra = {}),
              (this._contexts = {}),
              (this._sdkProcessingMetadata = {}),
              (this._propagationContext = { traceId: aF(), spanId: aL() });
          }
          clone() {
            let e = new aH();
            return (
              (e._breadcrumbs = [...this._breadcrumbs]),
              (e._tags = { ...this._tags }),
              (e._extra = { ...this._extra }),
              (e._contexts = { ...this._contexts }),
              this._contexts.flags &&
                (e._contexts.flags = {
                  values: [...this._contexts.flags.values],
                }),
              (e._user = this._user),
              (e._level = this._level),
              (e._session = this._session),
              (e._transactionName = this._transactionName),
              (e._fingerprint = this._fingerprint),
              (e._eventProcessors = [...this._eventProcessors]),
              (e._requestSession = this._requestSession),
              (e._attachments = [...this._attachments]),
              (e._sdkProcessingMetadata = { ...this._sdkProcessingMetadata }),
              (e._propagationContext = { ...this._propagationContext }),
              (e._client = this._client),
              (e._lastEventId = this._lastEventId),
              aq(e, this[a$]),
              e
            );
          }
          setClient(e) {
            this._client = e;
          }
          setLastEventId(e) {
            this._lastEventId = e;
          }
          getClient() {
            return this._client;
          }
          lastEventId() {
            return this._lastEventId;
          }
          addScopeListener(e) {
            this._scopeListeners.push(e);
          }
          addEventProcessor(e) {
            return this._eventProcessors.push(e), this;
          }
          setUser(e) {
            return (
              (this._user = e || {
                email: void 0,
                id: void 0,
                ip_address: void 0,
                username: void 0,
              }),
              this._session &&
                (function (e, t = {}) {
                  if (
                    (!t.user ||
                      (!e.ipAddress &&
                        t.user.ip_address &&
                        (e.ipAddress = t.user.ip_address),
                      e.did ||
                        t.did ||
                        (e.did = t.user.id || t.user.email || t.user.username)),
                    (e.timestamp = t.timestamp || aM()),
                    t.abnormal_mechanism &&
                      (e.abnormal_mechanism = t.abnormal_mechanism),
                    t.ignoreDuration && (e.ignoreDuration = t.ignoreDuration),
                    t.sid && (e.sid = 32 === t.sid.length ? t.sid : aF()),
                    void 0 !== t.init && (e.init = t.init),
                    !e.did && t.did && (e.did = `${t.did}`),
                    "number" == typeof t.started && (e.started = t.started),
                    e.ignoreDuration)
                  )
                    e.duration = void 0;
                  else if ("number" == typeof t.duration)
                    e.duration = t.duration;
                  else {
                    let t = e.timestamp - e.started;
                    e.duration = t >= 0 ? t : 0;
                  }
                  t.release && (e.release = t.release),
                    t.environment && (e.environment = t.environment),
                    !e.ipAddress && t.ipAddress && (e.ipAddress = t.ipAddress),
                    !e.userAgent && t.userAgent && (e.userAgent = t.userAgent),
                    "number" == typeof t.errors && (e.errors = t.errors),
                    t.status && (e.status = t.status);
                })(this._session, { user: e }),
              this._notifyScopeListeners(),
              this
            );
          }
          getUser() {
            return this._user;
          }
          getRequestSession() {
            return this._requestSession;
          }
          setRequestSession(e) {
            return (this._requestSession = e), this;
          }
          setTags(e) {
            return (
              (this._tags = { ...this._tags, ...e }),
              this._notifyScopeListeners(),
              this
            );
          }
          setTag(e, t) {
            return (
              (this._tags = { ...this._tags, [e]: t }),
              this._notifyScopeListeners(),
              this
            );
          }
          setExtras(e) {
            return (
              (this._extra = { ...this._extra, ...e }),
              this._notifyScopeListeners(),
              this
            );
          }
          setExtra(e, t) {
            return (
              (this._extra = { ...this._extra, [e]: t }),
              this._notifyScopeListeners(),
              this
            );
          }
          setFingerprint(e) {
            return (this._fingerprint = e), this._notifyScopeListeners(), this;
          }
          setLevel(e) {
            return (this._level = e), this._notifyScopeListeners(), this;
          }
          setTransactionName(e) {
            return (
              (this._transactionName = e), this._notifyScopeListeners(), this
            );
          }
          setContext(e, t) {
            return (
              null === t ? delete this._contexts[e] : (this._contexts[e] = t),
              this._notifyScopeListeners(),
              this
            );
          }
          setSession(e) {
            return (
              e ? (this._session = e) : delete this._session,
              this._notifyScopeListeners(),
              this
            );
          }
          getSession() {
            return this._session;
          }
          update(e) {
            if (!e) return this;
            let t = "function" == typeof e ? e(this) : e,
              [n, r] =
                t instanceof az
                  ? [t.getScopeData(), t.getRequestSession()]
                  : aw(t)
                  ? [e, e.requestSession]
                  : [],
              {
                tags: i,
                extra: a,
                user: o,
                contexts: s,
                level: u,
                fingerprint: l = [],
                propagationContext: c,
              } = n || {};
            return (
              (this._tags = { ...this._tags, ...i }),
              (this._extra = { ...this._extra, ...a }),
              (this._contexts = { ...this._contexts, ...s }),
              o && Object.keys(o).length && (this._user = o),
              u && (this._level = u),
              l.length && (this._fingerprint = l),
              c && (this._propagationContext = c),
              r && (this._requestSession = r),
              this
            );
          }
          clear() {
            return (
              (this._breadcrumbs = []),
              (this._tags = {}),
              (this._extra = {}),
              (this._user = {}),
              (this._contexts = {}),
              (this._level = void 0),
              (this._transactionName = void 0),
              (this._fingerprint = void 0),
              (this._requestSession = void 0),
              (this._session = void 0),
              aq(this, void 0),
              (this._attachments = []),
              this.setPropagationContext({ traceId: aF() }),
              this._notifyScopeListeners(),
              this
            );
          }
          addBreadcrumb(e, t) {
            let n = "number" == typeof t ? t : 100;
            if (n <= 0) return this;
            let r = { timestamp: aB(), ...e },
              i = this._breadcrumbs;
            return (
              i.push(r),
              (this._breadcrumbs = i.length > n ? i.slice(-n) : i),
              this._notifyScopeListeners(),
              this
            );
          }
          getLastBreadcrumb() {
            return this._breadcrumbs[this._breadcrumbs.length - 1];
          }
          clearBreadcrumbs() {
            return (this._breadcrumbs = []), this._notifyScopeListeners(), this;
          }
          addAttachment(e) {
            return this._attachments.push(e), this;
          }
          clearAttachments() {
            return (this._attachments = []), this;
          }
          getScopeData() {
            return {
              breadcrumbs: this._breadcrumbs,
              attachments: this._attachments,
              contexts: this._contexts,
              tags: this._tags,
              extra: this._extra,
              user: this._user,
              level: this._level,
              fingerprint: this._fingerprint || [],
              eventProcessors: this._eventProcessors,
              propagationContext: this._propagationContext,
              sdkProcessingMetadata: this._sdkProcessingMetadata,
              transactionName: this._transactionName,
              span: this[a$],
            };
          }
          setSDKProcessingMetadata(e) {
            return (
              (this._sdkProcessingMetadata = aU(
                this._sdkProcessingMetadata,
                e,
                2
              )),
              this
            );
          }
          setPropagationContext(e) {
            return (this._propagationContext = { spanId: aL(), ...e }), this;
          }
          getPropagationContext() {
            return this._propagationContext;
          }
          captureException(e, t) {
            let n = t && t.event_id ? t.event_id : aF();
            if (!this._client)
              return (
                aS.warn(
                  "No client configured on scope - will not capture exception!"
                ),
                n
              );
            let r = Error("Sentry syntheticException");
            return (
              this._client.captureException(
                e,
                {
                  originalException: e,
                  syntheticException: r,
                  ...t,
                  event_id: n,
                },
                this
              ),
              n
            );
          }
          captureMessage(e, t, n) {
            let r = n && n.event_id ? n.event_id : aF();
            if (!this._client)
              return (
                aS.warn(
                  "No client configured on scope - will not capture message!"
                ),
                r
              );
            let i = Error(e);
            return (
              this._client.captureMessage(
                e,
                t,
                {
                  originalException: e,
                  syntheticException: i,
                  ...n,
                  event_id: r,
                },
                this
              ),
              r
            );
          }
          captureEvent(e, t) {
            let n = t && t.event_id ? t.event_id : aF();
            return (
              this._client
                ? this._client.captureEvent(e, { ...t, event_id: n }, this)
                : aS.warn(
                    "No client configured on scope - will not capture event!"
                  ),
              n
            );
          }
          _notifyScopeListeners() {
            this._notifyingListeners ||
              ((this._notifyingListeners = !0),
              this._scopeListeners.forEach((e) => {
                e(this);
              }),
              (this._notifyingListeners = !1));
          }
        }
        let az = aH;
        class aG {
          constructor(e, t) {
            let n, r;
            (n = e || new az()),
              (r = t || new az()),
              (this._stack = [{ scope: n }]),
              (this._isolationScope = r);
          }
          withScope(e) {
            let t;
            let n = this._pushScope();
            try {
              t = e(n);
            } catch (e) {
              throw (this._popScope(), e);
            }
            return aE(t)
              ? t.then(
                  (e) => (this._popScope(), e),
                  (e) => {
                    throw (this._popScope(), e);
                  }
                )
              : (this._popScope(), t);
          }
          getClient() {
            return this.getStackTop().client;
          }
          getScope() {
            return this.getStackTop().scope;
          }
          getIsolationScope() {
            return this._isolationScope;
          }
          getStackTop() {
            return this._stack[this._stack.length - 1];
          }
          _pushScope() {
            let e = this.getScope().clone();
            return this._stack.push({ client: this.getClient(), scope: e }), e;
          }
          _popScope() {
            return !(this._stack.length <= 1) && !!this._stack.pop();
          }
        }
        function aW() {
          let e = aD(),
            t = aR(e);
          return (t.stack =
            t.stack ||
            new aG(
              ay("defaultCurrentScope", () => new az()),
              ay("defaultIsolationScope", () => new az())
            ));
        }
        function aV(e) {
          return aW().withScope(e);
        }
        function aK(e, t) {
          let n = aW();
          return n.withScope(() => ((n.getStackTop().scope = e), t(e)));
        }
        function aZ(e) {
          return aW().withScope(() => e(aW().getIsolationScope()));
        }
        function aJ(e) {
          let t = aR(e);
          return t.acs
            ? t.acs
            : {
                withIsolationScope: aZ,
                withScope: aV,
                withSetScope: aK,
                withSetIsolationScope: (e, t) => aZ(t),
                getCurrentScope: () => aW().getScope(),
                getIsolationScope: () => aW().getIsolationScope(),
              };
        }
        function aY() {
          let e = aD(),
            t = aJ(e);
          return t.getCurrentScope();
        }
        function aX() {
          let e = aD(),
            t = aJ(e);
          return t.getIsolationScope();
        }
        function aQ() {
          return aY().getClient();
        }
        let a0 = "production";
        function a1(e) {
          return new a2((t) => {
            t(e);
          });
        }
        ((J = ea || (ea = {}))[(J.PENDING = 0)] = "PENDING"),
          (J[(J.RESOLVED = 1)] = "RESOLVED"),
          (J[(J.REJECTED = 2)] = "REJECTED");
        class a2 {
          constructor(e) {
            a2.prototype.__init.call(this),
              a2.prototype.__init2.call(this),
              a2.prototype.__init3.call(this),
              a2.prototype.__init4.call(this),
              (this._state = ea.PENDING),
              (this._handlers = []);
            try {
              e(this._resolve, this._reject);
            } catch (e) {
              this._reject(e);
            }
          }
          then(e, t) {
            return new a2((n, r) => {
              this._handlers.push([
                !1,
                (t) => {
                  if (e)
                    try {
                      n(e(t));
                    } catch (e) {
                      r(e);
                    }
                  else n(t);
                },
                (e) => {
                  if (t)
                    try {
                      n(t(e));
                    } catch (e) {
                      r(e);
                    }
                  else r(e);
                },
              ]),
                this._executeHandlers();
            });
          }
          catch(e) {
            return this.then((e) => e, e);
          }
          finally(e) {
            return new a2((t, n) => {
              let r, i;
              return this.then(
                (t) => {
                  (i = !1), (r = t), e && e();
                },
                (t) => {
                  (i = !0), (r = t), e && e();
                }
              ).then(() => {
                if (i) {
                  n(r);
                  return;
                }
                t(r);
              });
            });
          }
          __init() {
            this._resolve = (e) => {
              this._setResult(ea.RESOLVED, e);
            };
          }
          __init2() {
            this._reject = (e) => {
              this._setResult(ea.REJECTED, e);
            };
          }
          __init3() {
            this._setResult = (e, t) => {
              if (this._state === ea.PENDING) {
                if (aE(t)) {
                  t.then(this._resolve, this._reject);
                  return;
                }
                (this._state = e), (this._value = t), this._executeHandlers();
              }
            };
          }
          __init4() {
            this._executeHandlers = () => {
              if (this._state === ea.PENDING) return;
              let e = this._handlers.slice();
              (this._handlers = []),
                e.forEach((e) => {
                  e[0] ||
                    (this._state === ea.RESOLVED && e[1](this._value),
                    this._state === ea.REJECTED && e[2](this._value),
                    (e[0] = !0));
                });
            };
          }
        }
        function a6(e, t = 0) {
          return "string" != typeof e || 0 === t
            ? e
            : e.length <= t
            ? e
            : `${e.slice(0, t)}...`;
        }
        let a3 = "sentry.source",
          a5 = /^sentry-/;
        function a4(e) {
          return e
            .split(",")
            .map((e) => e.split("=").map((e) => decodeURIComponent(e.trim())))
            .reduce((e, [t, n]) => (t && n && (e[t] = n), e), {});
        }
        function a8(e) {
          return "number" == typeof e
            ? a7(e)
            : Array.isArray(e)
            ? e[0] + e[1] / 1e9
            : e instanceof Date
            ? a7(e.getTime())
            : aM();
        }
        function a7(e) {
          return e > 9999999999 ? e / 1e3 : e;
        }
        function a9(e) {
          if ("function" == typeof e.getSpanJSON) return e.getSpanJSON();
          try {
            let { spanId: t, traceId: n } = e.spanContext();
            if (
              e.attributes &&
              e.startTime &&
              e.name &&
              e.endTime &&
              e.status
            ) {
              let {
                attributes: r,
                startTime: i,
                name: a,
                endTime: o,
                parentSpanId: s,
                status: u,
              } = e;
              return aA({
                span_id: t,
                trace_id: n,
                data: r,
                description: a,
                parent_span_id: s,
                start_timestamp: a8(i),
                timestamp: a8(o) || void 0,
                status:
                  u && 0 !== u.code
                    ? 1 === u.code
                      ? "ok"
                      : u.message || "unknown_error"
                    : void 0,
                op: r["sentry.op"],
                origin: r["sentry.origin"],
                _metrics_summary: (function (e) {
                  let t = e._sentryMetrics;
                  if (!t) return;
                  let n = {};
                  for (let [, [e, r]] of t) {
                    let t = n[e] || (n[e] = []);
                    t.push(aA(r));
                  }
                  return n;
                })(e),
              });
            }
            return { span_id: t, trace_id: n };
          } catch (e) {
            return {};
          }
        }
        function oe(e) {
          return e._sentryRootSpan || e;
        }
        function ot() {
          let e = aD(),
            t = aJ(e);
          return t.getActiveSpan ? t.getActiveSpan() : aY()[a$];
        }
        function on(e) {
          let t = aQ();
          if (!t) return {};
          let n = oe(e),
            r = n._frozenDsc;
          if (r) return r;
          let i = n.spanContext().traceState,
            a = i && i.get("sentry.dsc"),
            o =
              a &&
              (function (e) {
                let t =
                  e && (av(e) || Array.isArray(e))
                    ? Array.isArray(e)
                      ? e.reduce((e, t) => {
                          let n = a4(t);
                          return (
                            Object.entries(n).forEach(([t, n]) => {
                              e[t] = n;
                            }),
                            e
                          );
                        }, {})
                      : a4(e)
                    : void 0;
                if (!t) return;
                let n = Object.entries(t).reduce((e, [t, n]) => {
                  if (t.match(a5)) {
                    let r = t.slice(7);
                    e[r] = n;
                  }
                  return e;
                }, {});
                return Object.keys(n).length > 0 ? n : void 0;
              })(a);
          if (o) return o;
          let s = (function (e, t) {
              let n = t.getOptions(),
                { publicKey: r } = t.getDsn() || {},
                i = aA({
                  environment: n.environment || a0,
                  release: n.release,
                  public_key: r,
                  trace_id: e,
                });
              return t.emit("createDsc", i), i;
            })(e.spanContext().traceId, t),
            u = a9(n),
            l = u.data || {},
            c = l["sentry.sample_rate"];
          null != c && (s.sample_rate = `${c}`);
          let d = l[a3],
            f = u.description;
          return (
            "url" !== d && f && (s.transaction = f),
            (function (e) {
              if ("boolean" == typeof __SENTRY_TRACING__ && !__SENTRY_TRACING__)
                return !1;
              let t = aQ(),
                n = t && t.getOptions();
              return (
                !!n &&
                (n.enableTracing ||
                  "tracesSampleRate" in n ||
                  "tracesSampler" in n)
              );
            })() &&
              (s.sampled = String(
                (function (e) {
                  let { traceFlags: t } = e.spanContext();
                  return 1 === t;
                })(n)
              )),
            t.emit("createDsc", s, n),
            s
          );
        }
        function or(e, t) {
          let {
            extra: n,
            tags: r,
            user: i,
            contexts: a,
            level: o,
            sdkProcessingMetadata: s,
            breadcrumbs: u,
            fingerprint: l,
            eventProcessors: c,
            attachments: d,
            propagationContext: f,
            transactionName: p,
            span: h,
          } = t;
          oi(e, "extra", n),
            oi(e, "tags", r),
            oi(e, "user", i),
            oi(e, "contexts", a),
            (e.sdkProcessingMetadata = aU(e.sdkProcessingMetadata, s, 2)),
            o && (e.level = o),
            p && (e.transactionName = p),
            h && (e.span = h),
            u.length && (e.breadcrumbs = [...e.breadcrumbs, ...u]),
            l.length && (e.fingerprint = [...e.fingerprint, ...l]),
            c.length && (e.eventProcessors = [...e.eventProcessors, ...c]),
            d.length && (e.attachments = [...e.attachments, ...d]),
            (e.propagationContext = { ...e.propagationContext, ...f });
        }
        function oi(e, t, n) {
          e[t] = aU(e[t], n, 1);
        }
        function oa(e) {
          return "/" === e[e.length - 1] ? e.slice(0, -1) : e;
        }
        var oo = n(34155);
        function os() {
          return (
            "undefined" != typeof window &&
            (!(
              !(
                "undefined" != typeof __SENTRY_BROWSER_BUNDLE__ &&
                __SENTRY_BROWSER_BUNDLE__
              ) &&
              "[object process]" ===
                Object.prototype.toString.call(void 0 !== oo ? oo : 0)
            ) ||
              (function () {
                let e = am.process;
                return !!e && "renderer" === e.type;
              })())
          );
        }
        function ou(e) {
          if ("boolean" == typeof e) return Number(e);
          let t = "string" == typeof e ? parseFloat(e) : e;
          if (!("number" != typeof t || isNaN(t)) && !(t < 0) && !(t > 1))
            return t;
        }
        let ol = "sentryReplaySession",
          oc = "Unable to send Replay";
        function od(e, t) {
          return null != e ? e : t();
        }
        function of(e) {
          let t;
          let n = e[0],
            r = 1;
          for (; r < e.length; ) {
            let i = e[r],
              a = e[r + 1];
            if (
              ((r += 2),
              ("optionalAccess" === i || "optionalCall" === i) && null == n)
            )
              return;
            "access" === i || "optionalAccess" === i
              ? ((t = n), (n = a(n)))
              : ("call" === i || "optionalCall" === i) &&
                ((n = a((...e) => n.call(t, ...e))), (t = void 0));
          }
          return n;
        }
        function op(e) {
          let t = of([e, "optionalAccess", (e) => e.host]);
          return of([t, "optionalAccess", (e) => e.shadowRoot]) === e;
        }
        function oh(e) {
          return "[object ShadowRoot]" === Object.prototype.toString.call(e);
        }
        function om(e) {
          try {
            var t;
            let n = e.rules || e.cssRules;
            return n
              ? ((t = Array.from(n, oy).join("")).includes(
                  " background-clip: text;"
                ) &&
                  !t.includes(" -webkit-background-clip: text;") &&
                  (t = t.replace(
                    /\sbackground-clip:\s*text;/g,
                    " -webkit-background-clip: text; background-clip: text;"
                  )),
                t)
              : null;
          } catch (e) {
            return null;
          }
        }
        function oy(e) {
          let t;
          if ("styleSheet" in e)
            try {
              t =
                om(e.styleSheet) ||
                (function (e) {
                  let { cssText: t } = e;
                  if (t.split('"').length < 3) return t;
                  let n = ["@import", `url(${JSON.stringify(e.href)})`];
                  return (
                    "" === e.layerName
                      ? n.push("layer")
                      : e.layerName && n.push(`layer(${e.layerName})`),
                    e.supportsText && n.push(`supports(${e.supportsText})`),
                    e.media.length && n.push(e.media.mediaText),
                    n.join(" ") + ";"
                  );
                })(e);
            } catch (e) {}
          else if ("selectorText" in e) {
            let t = e.cssText,
              n = e.selectorText.includes(":"),
              r = "string" == typeof e.style.all && e.style.all;
            if (
              (r &&
                (t = (function (e) {
                  let t = "";
                  for (let n = 0; n < e.style.length; n++) {
                    let r = e.style,
                      i = r[n],
                      a = r.getPropertyPriority(i);
                    t += `${i}:${r.getPropertyValue(i)}${
                      a ? " !important" : ""
                    };`;
                  }
                  return `${e.selectorText} { ${t} }`;
                })(e)),
              n &&
                (t = t.replace(
                  /(\[(?:[\w-]+)[^\\])(:(?:[\w-]+)\])/gm,
                  "$1\\$2"
                )),
              n || r)
            )
              return t;
          }
          return t || e.cssText;
        }
        ((Y = eo || (eo = {}))[(Y.Document = 0)] = "Document"),
          (Y[(Y.DocumentType = 1)] = "DocumentType"),
          (Y[(Y.Element = 2)] = "Element"),
          (Y[(Y.Text = 3)] = "Text"),
          (Y[(Y.CDATA = 4)] = "CDATA"),
          (Y[(Y.Comment = 5)] = "Comment");
        class og {
          constructor() {
            (this.idNodeMap = new Map()), (this.nodeMetaMap = new WeakMap());
          }
          getId(e) {
            if (!e) return -1;
            let t = of([
              this,
              "access",
              (e) => e.getMeta,
              "call",
              (t) => t(e),
              "optionalAccess",
              (e) => e.id,
            ]);
            return od(t, () => -1);
          }
          getNode(e) {
            return this.idNodeMap.get(e) || null;
          }
          getIds() {
            return Array.from(this.idNodeMap.keys());
          }
          getMeta(e) {
            return this.nodeMetaMap.get(e) || null;
          }
          removeNodeFromMap(e) {
            let t = this.getId(e);
            this.idNodeMap.delete(t),
              e.childNodes &&
                e.childNodes.forEach((e) => this.removeNodeFromMap(e));
          }
          has(e) {
            return this.idNodeMap.has(e);
          }
          hasNode(e) {
            return this.nodeMetaMap.has(e);
          }
          add(e, t) {
            let n = t.id;
            this.idNodeMap.set(n, e), this.nodeMetaMap.set(e, t);
          }
          replace(e, t) {
            let n = this.getNode(e);
            if (n) {
              let e = this.nodeMetaMap.get(n);
              e && this.nodeMetaMap.set(t, e);
            }
            this.idNodeMap.set(e, t);
          }
          reset() {
            (this.idNodeMap = new Map()), (this.nodeMetaMap = new WeakMap());
          }
        }
        function ob({ maskInputOptions: e, tagName: t, type: n }) {
          return (
            "OPTION" === t && (t = "SELECT"),
            !!(
              e[t.toLowerCase()] ||
              (n && e[n]) ||
              "password" === n ||
              ("INPUT" === t && !n && e.text)
            )
          );
        }
        function ov({ isMasked: e, element: t, value: n, maskInputFn: r }) {
          let i = n || "";
          return e ? (r && (i = r(i, t)), "*".repeat(i.length)) : i;
        }
        function ow(e) {
          return e.toLowerCase();
        }
        function oE(e) {
          return e.toUpperCase();
        }
        let ox = "__rrweb_original__";
        function oC(e) {
          let t = e.type;
          return e.hasAttribute("data-rr-is-password")
            ? "password"
            : t
            ? ow(t)
            : null;
        }
        function o_(e, t, n) {
          return "INPUT" === t && ("radio" === n || "checkbox" === n)
            ? e.getAttribute("value") || ""
            : e.value;
        }
        function oT(e, t) {
          let n;
          try {
            n = new URL(
              e,
              od(t, () => window.location.href)
            );
          } catch (e) {
            return null;
          }
          let r = n.pathname.match(/\.([0-9a-z]+)(?:$)/i);
          return od(of([r, "optionalAccess", (e) => e[1]]), () => null);
        }
        let oS = {};
        function oP(e) {
          let t = oS[e];
          if (t) return t;
          let n = window.document,
            r = window[e];
          if (n && "function" == typeof n.createElement)
            try {
              let t = n.createElement("iframe");
              (t.hidden = !0), n.head.appendChild(t);
              let i = t.contentWindow;
              i && i[e] && (r = i[e]), n.head.removeChild(t);
            } catch (e) {}
          return (oS[e] = r.bind(window));
        }
        function oO(...e) {
          return oP("setTimeout")(...e);
        }
        function oI(...e) {
          return oP("clearTimeout")(...e);
        }
        function oA(e) {
          try {
            return e.contentDocument;
          } catch (e) {}
        }
        let ok = 1,
          oj = RegExp("[^a-z0-9-_:]");
        function oB() {
          return ok++;
        }
        let oM = /url\((?:(')([^']*)'|(")(.*?)"|([^)]*))\)/gm,
          oN = /^(?:[a-z+]+:)?\/\//i,
          oD = /^www\..*/i,
          oR = /^(data:)([^,]*),(.*)/i;
        function oF(e, t) {
          return (e || "").replace(oM, (e, n, r, i, a, o) => {
            let s = r || a || o,
              u = n || i || "";
            if (!s) return e;
            if (oN.test(s) || oD.test(s) || oR.test(s))
              return `url(${u}${s}${u})`;
            if ("/" === s[0])
              return `url(${u}${
                (t.indexOf("//") > -1
                  ? t.split("/").slice(0, 3).join("/")
                  : t.split("/")[0]
                ).split("?")[0] + s
              }${u})`;
            let l = t.split("/"),
              c = s.split("/");
            for (let e of (l.pop(), c))
              "." !== e && (".." === e ? l.pop() : l.push(e));
            return `url(${u}${l.join("/")}${u})`;
          });
        }
        let oL = /^[^ \t\n\r\u000c]+/,
          oU = /^[, \t\n\r\u000c]+/,
          o$ = new WeakMap();
        function oq(e, t) {
          return t && "" !== t.trim() ? oH(e, t) : t;
        }
        function oH(e, t) {
          let n = o$.get(e);
          if ((n || ((n = e.createElement("a")), o$.set(e, n)), t)) {
            if (t.startsWith("blob:") || t.startsWith("data:")) return t;
          } else t = "";
          return n.setAttribute("href", t), n.href;
        }
        function oz(e, t, n, r, i, a) {
          return r
            ? "src" !== n &&
              ("href" !== n || ("use" === t && "#" === r[0])) &&
              ("xlink:href" !== n || "#" === r[0]) &&
              ("background" !== n ||
                ("table" !== t && "td" !== t && "th" !== t))
              ? "srcset" === n
                ? (function (e, t) {
                    if ("" === t.trim()) return t;
                    let n = 0;
                    function r(e) {
                      let r;
                      let i = e.exec(t.substring(n));
                      return i ? ((r = i[0]), (n += r.length), r) : "";
                    }
                    let i = [];
                    for (; r(oU), !(n >= t.length); ) {
                      let a = r(oL);
                      if ("," === a.slice(-1))
                        (a = oq(e, a.substring(0, a.length - 1))), i.push(a);
                      else {
                        let r = "";
                        a = oq(e, a);
                        let o = !1;
                        for (;;) {
                          let e = t.charAt(n);
                          if ("" === e) {
                            i.push((a + r).trim());
                            break;
                          }
                          if (o) ")" === e && (o = !1);
                          else {
                            if ("," === e) {
                              (n += 1), i.push((a + r).trim());
                              break;
                            }
                            "(" === e && (o = !0);
                          }
                          (r += e), (n += 1);
                        }
                      }
                    }
                    return i.join(", ");
                  })(e, r)
                : "style" === n
                ? oF(r, oH(e))
                : "object" === t && "data" === n
                ? oq(e, r)
                : "function" == typeof a
                ? a(n, r, i)
                : r
              : oq(e, r)
            : r;
        }
        function oG(e, t, n) {
          return ("video" === e || "audio" === e) && "autoplay" === t;
        }
        function oW(e, t, n = 1 / 0, r = 0) {
          return !e || e.nodeType !== e.ELEMENT_NODE || r > n
            ? -1
            : t(e)
            ? r
            : oW(e.parentNode, t, n, r + 1);
        }
        function oV(e, t) {
          return (n) => {
            if (null === n) return !1;
            try {
              if (e) {
                if ("string" == typeof e) {
                  if (n.matches(`.${e}`)) return !0;
                } else if (
                  (function (e, t) {
                    for (let n = e.classList.length; n--; ) {
                      let r = e.classList[n];
                      if (t.test(r)) return !0;
                    }
                    return !1;
                  })(n, e)
                )
                  return !0;
              }
              if (t && n.matches(t)) return !0;
              return !1;
            } catch (e) {
              return !1;
            }
          };
        }
        function oK(e, t, n, r, i, a) {
          try {
            let o = e.nodeType === e.ELEMENT_NODE ? e : e.parentElement;
            if (null === o) return !1;
            if ("INPUT" === o.tagName) {
              let e = o.getAttribute("autocomplete");
              if (
                [
                  "current-password",
                  "new-password",
                  "cc-number",
                  "cc-exp",
                  "cc-exp-month",
                  "cc-exp-year",
                  "cc-csc",
                ].includes(e)
              )
                return !0;
            }
            let s = -1,
              u = -1;
            if (a) {
              if ((u = oW(o, oV(r, i))) < 0) return !0;
              s = oW(o, oV(t, n), u >= 0 ? u : 1 / 0);
            } else {
              if ((s = oW(o, oV(t, n))) < 0) return !1;
              u = oW(o, oV(r, i), s >= 0 ? s : 1 / 0);
            }
            return s >= 0 ? !(u >= 0) || s <= u : !(u >= 0) && !!a;
          } catch (e) {}
          return !!a;
        }
        function oZ(e) {
          return null == e ? "" : e.toLowerCase();
        }
        function oJ(e, t) {
          let n;
          let {
              doc: r,
              mirror: i,
              blockClass: a,
              blockSelector: o,
              unblockSelector: s,
              maskAllText: u,
              maskTextClass: l,
              unmaskTextClass: c,
              maskTextSelector: d,
              unmaskTextSelector: f,
              skipChild: p = !1,
              inlineStylesheet: h = !0,
              maskInputOptions: m = {},
              maskAttributeFn: y,
              maskTextFn: g,
              maskInputFn: b,
              slimDOMOptions: E,
              dataURLOptions: x = {},
              inlineImages: C = !1,
              recordCanvas: _ = !1,
              onSerialize: T,
              onIframeLoad: S,
              iframeLoadTimeout: P = 5e3,
              onStylesheetLoad: O,
              stylesheetLoadTimeout: I = 5e3,
              keepIframeSrcFn: A = () => !1,
              newlyAddedElement: k = !1,
            } = t,
            { preserveWhiteSpace: j = !0 } = t,
            B = (function (e, t) {
              let {
                  doc: n,
                  mirror: r,
                  blockClass: i,
                  blockSelector: a,
                  unblockSelector: o,
                  maskAllText: s,
                  maskAttributeFn: u,
                  maskTextClass: l,
                  unmaskTextClass: c,
                  maskTextSelector: d,
                  unmaskTextSelector: f,
                  inlineStylesheet: p,
                  maskInputOptions: h = {},
                  maskTextFn: m,
                  maskInputFn: y,
                  dataURLOptions: g = {},
                  inlineImages: b,
                  recordCanvas: E,
                  keepIframeSrcFn: x,
                  newlyAddedElement: C = !1,
                } = t,
                _ = (function (e, t) {
                  if (!t.hasNode(e)) return;
                  let n = t.getId(e);
                  return 1 === n ? void 0 : n;
                })(n, r);
              switch (e.nodeType) {
                case e.DOCUMENT_NODE:
                  if ("CSS1Compat" !== e.compatMode)
                    return {
                      type: eo.Document,
                      childNodes: [],
                      compatMode: e.compatMode,
                    };
                  return { type: eo.Document, childNodes: [] };
                case e.DOCUMENT_TYPE_NODE:
                  return {
                    type: eo.DocumentType,
                    name: e.name,
                    publicId: e.publicId,
                    systemId: e.systemId,
                    rootId: _,
                  };
                case e.ELEMENT_NODE:
                  return (function (e, t) {
                    let n;
                    let {
                        doc: r,
                        blockClass: i,
                        blockSelector: a,
                        unblockSelector: o,
                        inlineStylesheet: s,
                        maskInputOptions: u = {},
                        maskAttributeFn: l,
                        maskInputFn: c,
                        dataURLOptions: d = {},
                        inlineImages: f,
                        recordCanvas: p,
                        keepIframeSrcFn: h,
                        newlyAddedElement: m = !1,
                        rootId: y,
                        maskAllText: g,
                        maskTextClass: b,
                        unmaskTextClass: E,
                        maskTextSelector: x,
                        unmaskTextSelector: C,
                      } = t,
                      _ = (function (e, t, n, r) {
                        try {
                          if (r && e.matches(r)) return !1;
                          if ("string" == typeof t) {
                            if (e.classList.contains(t)) return !0;
                          } else
                            for (let n = e.classList.length; n--; ) {
                              let r = e.classList[n];
                              if (t.test(r)) return !0;
                            }
                          if (n) return e.matches(n);
                        } catch (e) {}
                        return !1;
                      })(e, i, a, o),
                      T = (function (e) {
                        if (e instanceof HTMLFormElement) return "form";
                        let t = ow(e.tagName);
                        return oj.test(t) ? "div" : t;
                      })(e),
                      S = {},
                      P = e.attributes.length;
                    for (let t = 0; t < P; t++) {
                      let n = e.attributes[t];
                      n.name &&
                        !oG(T, n.name, n.value) &&
                        (S[n.name] = oz(r, T, ow(n.name), n.value, e, l));
                    }
                    if ("link" === T && s) {
                      let t = Array.from(r.styleSheets).find(
                          (t) => t.href === e.href
                        ),
                        n = null;
                      t && (n = om(t)),
                        n &&
                          ((S.rel = null),
                          (S.href = null),
                          (S.crossorigin = null),
                          (S._cssText = oF(n, t.href)));
                    }
                    if (
                      "style" === T &&
                      e.sheet &&
                      !(e.innerText || e.textContent || "").trim().length
                    ) {
                      let t = om(e.sheet);
                      t && (S._cssText = oF(t, oH(r)));
                    }
                    if (
                      "input" === T ||
                      "textarea" === T ||
                      "select" === T ||
                      "option" === T
                    ) {
                      let t = oC(e),
                        n = o_(e, oE(T), t),
                        r = e.checked;
                      if ("submit" !== t && "button" !== t && n) {
                        let r = oK(
                          e,
                          b,
                          x,
                          E,
                          C,
                          ob({ type: t, tagName: oE(T), maskInputOptions: u })
                        );
                        S.value = ov({
                          isMasked: r,
                          element: e,
                          value: n,
                          maskInputFn: c,
                        });
                      }
                      r && (S.checked = r);
                    }
                    if (
                      ("option" === T &&
                        (e.selected && !u.select
                          ? (S.selected = !0)
                          : delete S.selected),
                      "canvas" === T && p)
                    ) {
                      if ("2d" === e.__context)
                        !(function (e) {
                          let t = e.getContext("2d");
                          if (!t) return !0;
                          for (let n = 0; n < e.width; n += 50)
                            for (let r = 0; r < e.height; r += 50) {
                              let i = t.getImageData,
                                a = ox in i ? i[ox] : i,
                                o = new Uint32Array(
                                  a.call(
                                    t,
                                    n,
                                    r,
                                    Math.min(50, e.width - n),
                                    Math.min(50, e.height - r)
                                  ).data.buffer
                                );
                              if (o.some((e) => 0 !== e)) return !1;
                            }
                          return !0;
                        })(e) &&
                          (S.rr_dataURL = e.toDataURL(d.type, d.quality));
                      else if (!("__context" in e)) {
                        let t = e.toDataURL(d.type, d.quality),
                          n = r.createElement("canvas");
                        (n.width = e.width), (n.height = e.height);
                        let i = n.toDataURL(d.type, d.quality);
                        t !== i && (S.rr_dataURL = t);
                      }
                    }
                    if ("img" === T && f) {
                      v ||
                        (w = (v = r.createElement("canvas")).getContext("2d"));
                      let t =
                          e.currentSrc ||
                          e.getAttribute("src") ||
                          "<unknown-src>",
                        n = e.crossOrigin,
                        i = () => {
                          e.removeEventListener("load", i);
                          try {
                            (v.width = e.naturalWidth),
                              (v.height = e.naturalHeight),
                              w.drawImage(e, 0, 0),
                              (S.rr_dataURL = v.toDataURL(d.type, d.quality));
                          } catch (n) {
                            if ("anonymous" !== e.crossOrigin) {
                              (e.crossOrigin = "anonymous"),
                                e.complete && 0 !== e.naturalWidth
                                  ? i()
                                  : e.addEventListener("load", i);
                              return;
                            }
                            console.warn(
                              `Cannot inline img src=${t}! Error: ${n}`
                            );
                          }
                          "anonymous" === e.crossOrigin &&
                            (n
                              ? (S.crossOrigin = n)
                              : e.removeAttribute("crossorigin"));
                        };
                      e.complete && 0 !== e.naturalWidth
                        ? i()
                        : e.addEventListener("load", i);
                    }
                    if (
                      (("audio" === T || "video" === T) &&
                        ((S.rr_mediaState = e.paused ? "paused" : "played"),
                        (S.rr_mediaCurrentTime = e.currentTime)),
                      !m &&
                        (e.scrollLeft && (S.rr_scrollLeft = e.scrollLeft),
                        e.scrollTop && (S.rr_scrollTop = e.scrollTop)),
                      _)
                    ) {
                      let { width: t, height: n } = e.getBoundingClientRect();
                      S = {
                        class: S.class,
                        rr_width: `${t}px`,
                        rr_height: `${n}px`,
                      };
                    }
                    "iframe" !== T ||
                      h(S.src) ||
                      (_ || oA(e) || (S.rr_src = S.src), delete S.src);
                    try {
                      customElements.get(T) && (n = !0);
                    } catch (e) {}
                    return {
                      type: eo.Element,
                      tagName: T,
                      attributes: S,
                      childNodes: [],
                      isSVG:
                        !!("svg" === e.tagName || e.ownerSVGElement) || void 0,
                      needBlock: _,
                      rootId: y,
                      isCustom: n,
                    };
                  })(e, {
                    doc: n,
                    blockClass: i,
                    blockSelector: a,
                    unblockSelector: o,
                    inlineStylesheet: p,
                    maskAttributeFn: u,
                    maskInputOptions: h,
                    maskInputFn: y,
                    dataURLOptions: g,
                    inlineImages: b,
                    recordCanvas: E,
                    keepIframeSrcFn: x,
                    newlyAddedElement: C,
                    rootId: _,
                    maskAllText: s,
                    maskTextClass: l,
                    unmaskTextClass: c,
                    maskTextSelector: d,
                    unmaskTextSelector: f,
                  });
                case e.TEXT_NODE:
                  return (function (e, t) {
                    let {
                        maskAllText: n,
                        maskTextClass: r,
                        unmaskTextClass: i,
                        maskTextSelector: a,
                        unmaskTextSelector: o,
                        maskTextFn: s,
                        maskInputOptions: u,
                        maskInputFn: l,
                        rootId: c,
                      } = t,
                      d = e.parentNode && e.parentNode.tagName,
                      f = e.textContent,
                      p = "STYLE" === d || void 0,
                      h = "SCRIPT" === d || void 0,
                      m = "TEXTAREA" === d || void 0;
                    if (p && f) {
                      try {
                        e.nextSibling ||
                          e.previousSibling ||
                          (of([
                            e,
                            "access",
                            (e) => e.parentNode,
                            "access",
                            (e) => e.sheet,
                            "optionalAccess",
                            (e) => e.cssRules,
                          ]) &&
                            (f = om(e.parentNode.sheet)));
                      } catch (t) {
                        console.warn(
                          `Cannot get CSS styles from text's parentNode. Error: ${t}`,
                          e
                        );
                      }
                      f = oF(f, oH(t.doc));
                    }
                    h && (f = "SCRIPT_PLACEHOLDER");
                    let y = oK(e, r, a, i, o, n);
                    if (
                      (p ||
                        h ||
                        m ||
                        !f ||
                        !y ||
                        (f = s
                          ? s(f, e.parentElement)
                          : f.replace(/[\S]/g, "*")),
                      m &&
                        f &&
                        (u.textarea || y) &&
                        (f = l ? l(f, e.parentNode) : f.replace(/[\S]/g, "*")),
                      "OPTION" === d && f)
                    ) {
                      let t = ob({
                        type: null,
                        tagName: d,
                        maskInputOptions: u,
                      });
                      f = ov({
                        isMasked: oK(e, r, a, i, o, t),
                        element: e,
                        value: f,
                        maskInputFn: l,
                      });
                    }
                    return {
                      type: eo.Text,
                      textContent: f || "",
                      isStyle: p,
                      rootId: c,
                    };
                  })(e, {
                    doc: n,
                    maskAllText: s,
                    maskTextClass: l,
                    unmaskTextClass: c,
                    maskTextSelector: d,
                    unmaskTextSelector: f,
                    maskTextFn: m,
                    maskInputOptions: h,
                    maskInputFn: y,
                    rootId: _,
                  });
                case e.CDATA_SECTION_NODE:
                  return { type: eo.CDATA, textContent: "", rootId: _ };
                case e.COMMENT_NODE:
                  return {
                    type: eo.Comment,
                    textContent: e.textContent || "",
                    rootId: _,
                  };
                default:
                  return !1;
              }
            })(e, {
              doc: r,
              mirror: i,
              blockClass: a,
              blockSelector: o,
              maskAllText: u,
              unblockSelector: s,
              maskTextClass: l,
              unmaskTextClass: c,
              maskTextSelector: d,
              unmaskTextSelector: f,
              inlineStylesheet: h,
              maskInputOptions: m,
              maskAttributeFn: y,
              maskTextFn: g,
              maskInputFn: b,
              dataURLOptions: x,
              inlineImages: C,
              recordCanvas: _,
              keepIframeSrcFn: A,
              newlyAddedElement: k,
            });
          if (!B) return console.warn(e, "not serialized"), null;
          n = i.hasNode(e)
            ? i.getId(e)
            : !(function (e, t) {
                if (t.comment && e.type === eo.Comment) return !0;
                if (e.type === eo.Element) {
                  if (
                    (t.script &&
                      ("script" === e.tagName ||
                        ("link" === e.tagName &&
                          ("preload" === e.attributes.rel ||
                            "modulepreload" === e.attributes.rel)) ||
                        ("link" === e.tagName &&
                          "prefetch" === e.attributes.rel &&
                          "string" == typeof e.attributes.href &&
                          "js" === oT(e.attributes.href)))) ||
                    (t.headFavicon &&
                      (("link" === e.tagName &&
                        "shortcut icon" === e.attributes.rel) ||
                        ("meta" === e.tagName &&
                          (oZ(e.attributes.name).match(
                            /^msapplication-tile(image|color)$/
                          ) ||
                            "application-name" === oZ(e.attributes.name) ||
                            "icon" === oZ(e.attributes.rel) ||
                            "apple-touch-icon" === oZ(e.attributes.rel) ||
                            "shortcut icon" === oZ(e.attributes.rel)))))
                  )
                    return !0;
                  if ("meta" === e.tagName) {
                    if (
                      (t.headMetaDescKeywords &&
                        oZ(e.attributes.name).match(
                          /^description|keywords$/
                        )) ||
                      (t.headMetaSocial &&
                        (oZ(e.attributes.property).match(/^(og|twitter|fb):/) ||
                          oZ(e.attributes.name).match(/^(og|twitter):/) ||
                          "pinterest" === oZ(e.attributes.name)))
                    )
                      return !0;
                    if (
                      t.headMetaRobots &&
                      ("robots" === oZ(e.attributes.name) ||
                        "googlebot" === oZ(e.attributes.name) ||
                        "bingbot" === oZ(e.attributes.name))
                    )
                      return !0;
                    if (
                      t.headMetaHttpEquiv &&
                      void 0 !== e.attributes["http-equiv"]
                    )
                      return !0;
                    else if (
                      t.headMetaAuthorship &&
                      ("author" === oZ(e.attributes.name) ||
                        "generator" === oZ(e.attributes.name) ||
                        "framework" === oZ(e.attributes.name) ||
                        "publisher" === oZ(e.attributes.name) ||
                        "progid" === oZ(e.attributes.name) ||
                        oZ(e.attributes.property).match(/^article:/) ||
                        oZ(e.attributes.property).match(/^product:/))
                    )
                      return !0;
                    else if (
                      t.headMetaVerification &&
                      ("google-site-verification" === oZ(e.attributes.name) ||
                        "yandex-verification" === oZ(e.attributes.name) ||
                        "csrf-token" === oZ(e.attributes.name) ||
                        "p:domain_verify" === oZ(e.attributes.name) ||
                        "verify-v1" === oZ(e.attributes.name) ||
                        "verification" === oZ(e.attributes.name) ||
                        "shopify-checkout-api-token" === oZ(e.attributes.name))
                    )
                      return !0;
                  }
                }
                return !1;
              })(B, E) &&
              (j ||
                B.type !== eo.Text ||
                B.isStyle ||
                B.textContent.replace(/^\s+|\s+$/gm, "").length)
            ? oB()
            : -2;
          let M = Object.assign(B, { id: n });
          if ((i.add(e, M), -2 === n)) return null;
          T && T(e);
          let N = !p;
          if (M.type === eo.Element) {
            (N = N && !M.needBlock), delete M.needBlock;
            let t = e.shadowRoot;
            t && oh(t) && (M.isShadowHost = !0);
          }
          if ((M.type === eo.Document || M.type === eo.Element) && N) {
            E.headWhitespace &&
              M.type === eo.Element &&
              "head" === M.tagName &&
              (j = !1);
            let t = {
              doc: r,
              mirror: i,
              blockClass: a,
              blockSelector: o,
              maskAllText: u,
              unblockSelector: s,
              maskTextClass: l,
              unmaskTextClass: c,
              maskTextSelector: d,
              unmaskTextSelector: f,
              skipChild: p,
              inlineStylesheet: h,
              maskInputOptions: m,
              maskAttributeFn: y,
              maskTextFn: g,
              maskInputFn: b,
              slimDOMOptions: E,
              dataURLOptions: x,
              inlineImages: C,
              recordCanvas: _,
              preserveWhiteSpace: j,
              onSerialize: T,
              onIframeLoad: S,
              iframeLoadTimeout: P,
              onStylesheetLoad: O,
              stylesheetLoadTimeout: I,
              keepIframeSrcFn: A,
            };
            for (let n of Array.from(e.childNodes)) {
              let e = oJ(n, t);
              e && M.childNodes.push(e);
            }
            if (e.nodeType === e.ELEMENT_NODE && e.shadowRoot)
              for (let n of Array.from(e.shadowRoot.childNodes)) {
                let r = oJ(n, t);
                r &&
                  (oh(e.shadowRoot) && (r.isShadow = !0), M.childNodes.push(r));
              }
          }
          return (
            e.parentNode &&
              op(e.parentNode) &&
              oh(e.parentNode) &&
              (M.isShadow = !0),
            M.type === eo.Element &&
              "iframe" === M.tagName &&
              (function (e, t, n) {
                let r;
                let i = e.contentWindow;
                if (!i) return;
                let a = !1;
                try {
                  r = i.document.readyState;
                } catch (e) {
                  return;
                }
                if ("complete" !== r) {
                  let r = oO(() => {
                    a || (t(), (a = !0));
                  }, n);
                  e.addEventListener("load", () => {
                    oI(r), (a = !0), t();
                  });
                  return;
                }
                let o = "about:blank";
                if (i.location.href !== o || e.src === o || "" === e.src)
                  return oO(t, 0), e.addEventListener("load", t);
                e.addEventListener("load", t);
              })(
                e,
                () => {
                  let t = oA(e);
                  if (t && S) {
                    let n = oJ(t, {
                      doc: t,
                      mirror: i,
                      blockClass: a,
                      blockSelector: o,
                      unblockSelector: s,
                      maskAllText: u,
                      maskTextClass: l,
                      unmaskTextClass: c,
                      maskTextSelector: d,
                      unmaskTextSelector: f,
                      skipChild: !1,
                      inlineStylesheet: h,
                      maskInputOptions: m,
                      maskAttributeFn: y,
                      maskTextFn: g,
                      maskInputFn: b,
                      slimDOMOptions: E,
                      dataURLOptions: x,
                      inlineImages: C,
                      recordCanvas: _,
                      preserveWhiteSpace: j,
                      onSerialize: T,
                      onIframeLoad: S,
                      iframeLoadTimeout: P,
                      onStylesheetLoad: O,
                      stylesheetLoadTimeout: I,
                      keepIframeSrcFn: A,
                    });
                    n && S(e, n);
                  }
                },
                P
              ),
            M.type === eo.Element &&
              "link" === M.tagName &&
              "string" == typeof M.attributes.rel &&
              ("stylesheet" === M.attributes.rel ||
                ("preload" === M.attributes.rel &&
                  "string" == typeof M.attributes.href &&
                  "css" === oT(M.attributes.href))) &&
              (function (e, t, n) {
                let r,
                  i = !1;
                try {
                  r = e.sheet;
                } catch (e) {
                  return;
                }
                if (r) return;
                let a = oO(() => {
                  i || (t(), (i = !0));
                }, n);
                e.addEventListener("load", () => {
                  oI(a), (i = !0), t();
                });
              })(
                e,
                () => {
                  if (O) {
                    let t = oJ(e, {
                      doc: r,
                      mirror: i,
                      blockClass: a,
                      blockSelector: o,
                      unblockSelector: s,
                      maskAllText: u,
                      maskTextClass: l,
                      unmaskTextClass: c,
                      maskTextSelector: d,
                      unmaskTextSelector: f,
                      skipChild: !1,
                      inlineStylesheet: h,
                      maskInputOptions: m,
                      maskAttributeFn: y,
                      maskTextFn: g,
                      maskInputFn: b,
                      slimDOMOptions: E,
                      dataURLOptions: x,
                      inlineImages: C,
                      recordCanvas: _,
                      preserveWhiteSpace: j,
                      onSerialize: T,
                      onIframeLoad: S,
                      iframeLoadTimeout: P,
                      onStylesheetLoad: O,
                      stylesheetLoadTimeout: I,
                      keepIframeSrcFn: A,
                    });
                    t && O(e, t);
                  }
                },
                I
              ),
            M
          );
        }
        function oY(e) {
          let t;
          let n = e[0],
            r = 1;
          for (; r < e.length; ) {
            let i = e[r],
              a = e[r + 1];
            if (
              ((r += 2),
              ("optionalAccess" === i || "optionalCall" === i) && null == n)
            )
              return;
            "access" === i || "optionalAccess" === i
              ? ((t = n), (n = a(n)))
              : ("call" === i || "optionalCall" === i) &&
                ((n = a((...e) => n.call(t, ...e))), (t = void 0));
          }
          return n;
        }
        function oX(e, t, n = document) {
          let r = { capture: !0, passive: !0 };
          return (
            n.addEventListener(e, t, r), () => n.removeEventListener(e, t, r)
          );
        }
        let oQ =
            "Please stop import mirror directly. Instead of that,\r\nnow you can use replayer.getMirror() to access the mirror instance of a replayer,\r\nor you can use record.mirror to access the mirror instance during recording.",
          o0 = {
            map: {},
            getId: () => (console.error(oQ), -1),
            getNode: () => (console.error(oQ), null),
            removeNodeFromMap() {
              console.error(oQ);
            },
            has: () => (console.error(oQ), !1),
            reset() {
              console.error(oQ);
            },
          };
        function o1(e, t, n = {}) {
          let r = null,
            i = 0;
          return function (...a) {
            let o = Date.now();
            i || !1 !== n.leading || (i = o);
            let s = t - (o - i),
              u = this;
            s <= 0 || s > t
              ? (r &&
                  ((function (...e) {
                    su("clearTimeout")(...e);
                  })(r),
                  (r = null)),
                (i = o),
                e.apply(u, a))
              : r ||
                !1 === n.trailing ||
                (r = sl(() => {
                  (i = !1 === n.leading ? 0 : Date.now()),
                    (r = null),
                    e.apply(u, a);
                }, s));
          };
        }
        function o2(e, t, n) {
          try {
            if (!(t in e)) return () => {};
            let r = e[t],
              i = n(r);
            return (
              "function" == typeof i &&
                ((i.prototype = i.prototype || {}),
                Object.defineProperties(i, {
                  __rrweb_original__: { enumerable: !1, value: r },
                })),
              (e[t] = i),
              () => {
                e[t] = r;
              }
            );
          } catch (e) {
            return () => {};
          }
        }
        "undefined" != typeof window &&
          window.Proxy &&
          window.Reflect &&
          (o0 = new Proxy(o0, {
            get: (e, t, n) => (
              "map" === t && console.error(oQ), Reflect.get(e, t, n)
            ),
          }));
        let o6 = Date.now;
        function o3(e) {
          let t = e.document;
          return {
            left: t.scrollingElement
              ? t.scrollingElement.scrollLeft
              : void 0 !== e.pageXOffset
              ? e.pageXOffset
              : oY([
                  t,
                  "optionalAccess",
                  (e) => e.documentElement,
                  "access",
                  (e) => e.scrollLeft,
                ]) ||
                oY([
                  t,
                  "optionalAccess",
                  (e) => e.body,
                  "optionalAccess",
                  (e) => e.parentElement,
                  "optionalAccess",
                  (e) => e.scrollLeft,
                ]) ||
                oY([
                  t,
                  "optionalAccess",
                  (e) => e.body,
                  "optionalAccess",
                  (e) => e.scrollLeft,
                ]) ||
                0,
            top: t.scrollingElement
              ? t.scrollingElement.scrollTop
              : void 0 !== e.pageYOffset
              ? e.pageYOffset
              : oY([
                  t,
                  "optionalAccess",
                  (e) => e.documentElement,
                  "access",
                  (e) => e.scrollTop,
                ]) ||
                oY([
                  t,
                  "optionalAccess",
                  (e) => e.body,
                  "optionalAccess",
                  (e) => e.parentElement,
                  "optionalAccess",
                  (e) => e.scrollTop,
                ]) ||
                oY([
                  t,
                  "optionalAccess",
                  (e) => e.body,
                  "optionalAccess",
                  (e) => e.scrollTop,
                ]) ||
                0,
          };
        }
        function o5() {
          return (
            window.innerHeight ||
            (document.documentElement &&
              document.documentElement.clientHeight) ||
            (document.body && document.body.clientHeight)
          );
        }
        function o4() {
          return (
            window.innerWidth ||
            (document.documentElement &&
              document.documentElement.clientWidth) ||
            (document.body && document.body.clientWidth)
          );
        }
        function o8(e) {
          if (!e) return null;
          let t = e.nodeType === e.ELEMENT_NODE ? e : e.parentElement;
          return t;
        }
        function o7(e, t, n, r, i) {
          if (!e) return !1;
          let a = o8(e);
          if (!a) return !1;
          let o = oV(t, n);
          if (!i) {
            let e = r && a.matches(r);
            return o(a) && !e;
          }
          let s = oW(a, o),
            u = -1;
          return (
            !(s < 0) &&
            (r && (u = oW(a, oV(null, r))), (s > -1 && u < 0) || s < u)
          );
        }
        function o9(e, t) {
          return -2 === t.getId(e);
        }
        function se(e) {
          return !!e.changedTouches;
        }
        function st(e, t) {
          return !!("IFRAME" === e.nodeName && t.getMeta(e));
        }
        function sn(e, t) {
          return !!(
            "LINK" === e.nodeName &&
            e.nodeType === e.ELEMENT_NODE &&
            e.getAttribute &&
            "stylesheet" === e.getAttribute("rel") &&
            t.getMeta(e)
          );
        }
        function sr(e) {
          return !!oY([e, "optionalAccess", (e) => e.shadowRoot]);
        }
        /[1-9][0-9]{12}/.test(Date.now().toString()) ||
          (o6 = () => new Date().getTime());
        class si {
          constructor() {
            (this.id = 1),
              (this.styleIDMap = new WeakMap()),
              (this.idStyleMap = new Map());
          }
          getId(e) {
            var t;
            return (t = this.styleIDMap.get(e)), null != t ? t : -1;
          }
          has(e) {
            return this.styleIDMap.has(e);
          }
          add(e, t) {
            let n;
            return this.has(e)
              ? this.getId(e)
              : ((n = void 0 === t ? this.id++ : t),
                this.styleIDMap.set(e, n),
                this.idStyleMap.set(n, e),
                n);
          }
          getStyle(e) {
            return this.idStyleMap.get(e) || null;
          }
          reset() {
            (this.styleIDMap = new WeakMap()),
              (this.idStyleMap = new Map()),
              (this.id = 1);
          }
          generateId() {
            return this.id++;
          }
        }
        function sa(e) {
          let t = null;
          return (
            oY([
              e,
              "access",
              (e) => e.getRootNode,
              "optionalCall",
              (e) => e(),
              "optionalAccess",
              (e) => e.nodeType,
            ]) === Node.DOCUMENT_FRAGMENT_NODE &&
              e.getRootNode().host &&
              (t = e.getRootNode().host),
            t
          );
        }
        function so(e) {
          let t = e.ownerDocument;
          return (
            !!t &&
            (t.contains(e) ||
              (function (e) {
                let t = e.ownerDocument;
                if (!t) return !1;
                let n = (function (e) {
                  let t,
                    n = e;
                  for (; (t = sa(n)); ) n = t;
                  return n;
                })(e);
                return t.contains(n);
              })(e))
          );
        }
        let ss = {};
        function su(e) {
          let t = ss[e];
          if (t) return t;
          let n = window.document,
            r = window[e];
          if (n && "function" == typeof n.createElement)
            try {
              let t = n.createElement("iframe");
              (t.hidden = !0), n.head.appendChild(t);
              let i = t.contentWindow;
              i && i[e] && (r = i[e]), n.head.removeChild(t);
            } catch (e) {}
          return (ss[e] = r.bind(window));
        }
        function sl(...e) {
          return su("setTimeout")(...e);
        }
        var sc =
            (((X = sc || {})[(X.DomContentLoaded = 0)] = "DomContentLoaded"),
            (X[(X.Load = 1)] = "Load"),
            (X[(X.FullSnapshot = 2)] = "FullSnapshot"),
            (X[(X.IncrementalSnapshot = 3)] = "IncrementalSnapshot"),
            (X[(X.Meta = 4)] = "Meta"),
            (X[(X.Custom = 5)] = "Custom"),
            (X[(X.Plugin = 6)] = "Plugin"),
            X),
          sd =
            (((Q = sd || {})[(Q.Mutation = 0)] = "Mutation"),
            (Q[(Q.MouseMove = 1)] = "MouseMove"),
            (Q[(Q.MouseInteraction = 2)] = "MouseInteraction"),
            (Q[(Q.Scroll = 3)] = "Scroll"),
            (Q[(Q.ViewportResize = 4)] = "ViewportResize"),
            (Q[(Q.Input = 5)] = "Input"),
            (Q[(Q.TouchMove = 6)] = "TouchMove"),
            (Q[(Q.MediaInteraction = 7)] = "MediaInteraction"),
            (Q[(Q.StyleSheetRule = 8)] = "StyleSheetRule"),
            (Q[(Q.CanvasMutation = 9)] = "CanvasMutation"),
            (Q[(Q.Font = 10)] = "Font"),
            (Q[(Q.Log = 11)] = "Log"),
            (Q[(Q.Drag = 12)] = "Drag"),
            (Q[(Q.StyleDeclaration = 13)] = "StyleDeclaration"),
            (Q[(Q.Selection = 14)] = "Selection"),
            (Q[(Q.AdoptedStyleSheet = 15)] = "AdoptedStyleSheet"),
            (Q[(Q.CustomElement = 16)] = "CustomElement"),
            Q),
          sf =
            (((ee = sf || {})[(ee.MouseUp = 0)] = "MouseUp"),
            (ee[(ee.MouseDown = 1)] = "MouseDown"),
            (ee[(ee.Click = 2)] = "Click"),
            (ee[(ee.ContextMenu = 3)] = "ContextMenu"),
            (ee[(ee.DblClick = 4)] = "DblClick"),
            (ee[(ee.Focus = 5)] = "Focus"),
            (ee[(ee.Blur = 6)] = "Blur"),
            (ee[(ee.TouchStart = 7)] = "TouchStart"),
            (ee[(ee.TouchMove_Departed = 8)] = "TouchMove_Departed"),
            (ee[(ee.TouchEnd = 9)] = "TouchEnd"),
            (ee[(ee.TouchCancel = 10)] = "TouchCancel"),
            ee),
          sp =
            (((et = sp || {})[(et.Mouse = 0)] = "Mouse"),
            (et[(et.Pen = 1)] = "Pen"),
            (et[(et.Touch = 2)] = "Touch"),
            et);
        function sh(e) {
          try {
            return e.contentDocument;
          } catch (e) {}
        }
        ((en = es || (es = {}))[(en.Document = 0)] = "Document"),
          (en[(en.DocumentType = 1)] = "DocumentType"),
          (en[(en.Element = 2)] = "Element"),
          (en[(en.Text = 3)] = "Text"),
          (en[(en.CDATA = 4)] = "CDATA"),
          (en[(en.Comment = 5)] = "Comment"),
          ((er = eu || (eu = {}))[(er.PLACEHOLDER = 0)] = "PLACEHOLDER"),
          (er[(er.ELEMENT_NODE = 1)] = "ELEMENT_NODE"),
          (er[(er.ATTRIBUTE_NODE = 2)] = "ATTRIBUTE_NODE"),
          (er[(er.TEXT_NODE = 3)] = "TEXT_NODE"),
          (er[(er.CDATA_SECTION_NODE = 4)] = "CDATA_SECTION_NODE"),
          (er[(er.ENTITY_REFERENCE_NODE = 5)] = "ENTITY_REFERENCE_NODE"),
          (er[(er.ENTITY_NODE = 6)] = "ENTITY_NODE"),
          (er[(er.PROCESSING_INSTRUCTION_NODE = 7)] =
            "PROCESSING_INSTRUCTION_NODE"),
          (er[(er.COMMENT_NODE = 8)] = "COMMENT_NODE"),
          (er[(er.DOCUMENT_NODE = 9)] = "DOCUMENT_NODE"),
          (er[(er.DOCUMENT_TYPE_NODE = 10)] = "DOCUMENT_TYPE_NODE"),
          (er[(er.DOCUMENT_FRAGMENT_NODE = 11)] = "DOCUMENT_FRAGMENT_NODE");
        class sm {
          constructor() {
            (this.length = 0), (this.head = null), (this.tail = null);
          }
          get(e) {
            if (e >= this.length) throw Error("Position outside of list range");
            let t = this.head;
            for (let n = 0; n < e; n++)
              t =
                (function (e) {
                  let t;
                  let n = e[0],
                    r = 1;
                  for (; r < e.length; ) {
                    let i = e[r],
                      a = e[r + 1];
                    if (
                      ((r += 2),
                      ("optionalAccess" === i || "optionalCall" === i) &&
                        null == n)
                    )
                      return;
                    "access" === i || "optionalAccess" === i
                      ? ((t = n), (n = a(n)))
                      : ("call" === i || "optionalCall" === i) &&
                        ((n = a((...e) => n.call(t, ...e))), (t = void 0));
                  }
                  return n;
                })([t, "optionalAccess", (e) => e.next]) || null;
            return t;
          }
          addNode(e) {
            let t = { value: e, previous: null, next: null };
            if (
              ((e.__ln = t), e.previousSibling && "__ln" in e.previousSibling)
            ) {
              let n = e.previousSibling.__ln.next;
              (t.next = n),
                (t.previous = e.previousSibling.__ln),
                (e.previousSibling.__ln.next = t),
                n && (n.previous = t);
            } else if (
              e.nextSibling &&
              "__ln" in e.nextSibling &&
              e.nextSibling.__ln.previous
            ) {
              let n = e.nextSibling.__ln.previous;
              (t.previous = n),
                (t.next = e.nextSibling.__ln),
                (e.nextSibling.__ln.previous = t),
                n && (n.next = t);
            } else
              this.head && (this.head.previous = t),
                (t.next = this.head),
                (this.head = t);
            null === t.next && (this.tail = t), this.length++;
          }
          removeNode(e) {
            let t = e.__ln;
            this.head &&
              (t.previous
                ? ((t.previous.next = t.next),
                  t.next
                    ? (t.next.previous = t.previous)
                    : (this.tail = t.previous))
                : ((this.head = t.next),
                  this.head ? (this.head.previous = null) : (this.tail = null)),
              e.__ln && delete e.__ln,
              this.length--);
          }
        }
        let sy = (e, t) => `${e}@${t}`;
        class sg {
          constructor() {
            (this.frozen = !1),
              (this.locked = !1),
              (this.texts = []),
              (this.attributes = []),
              (this.attributeMap = new WeakMap()),
              (this.removes = []),
              (this.mapRemoves = []),
              (this.movedMap = {}),
              (this.addedSet = new Set()),
              (this.movedSet = new Set()),
              (this.droppedSet = new Set()),
              (this.processMutations = (e) => {
                e.forEach(this.processMutation), this.emit();
              }),
              (this.emit = () => {
                if (this.frozen || this.locked) return;
                let e = [],
                  t = new Set(),
                  n = new sm(),
                  r = (e) => {
                    let t = e,
                      n = -2;
                    for (; -2 === n; )
                      n = (t = t && t.nextSibling) && this.mirror.getId(t);
                    return n;
                  },
                  i = (i) => {
                    if (!i.parentNode || !so(i)) return;
                    let a = op(i.parentNode)
                        ? this.mirror.getId(sa(i))
                        : this.mirror.getId(i.parentNode),
                      o = r(i);
                    if (-1 === a || -1 === o) return n.addNode(i);
                    let s = oJ(i, {
                      doc: this.doc,
                      mirror: this.mirror,
                      blockClass: this.blockClass,
                      blockSelector: this.blockSelector,
                      maskAllText: this.maskAllText,
                      unblockSelector: this.unblockSelector,
                      maskTextClass: this.maskTextClass,
                      unmaskTextClass: this.unmaskTextClass,
                      maskTextSelector: this.maskTextSelector,
                      unmaskTextSelector: this.unmaskTextSelector,
                      skipChild: !0,
                      newlyAddedElement: !0,
                      inlineStylesheet: this.inlineStylesheet,
                      maskInputOptions: this.maskInputOptions,
                      maskAttributeFn: this.maskAttributeFn,
                      maskTextFn: this.maskTextFn,
                      maskInputFn: this.maskInputFn,
                      slimDOMOptions: this.slimDOMOptions,
                      dataURLOptions: this.dataURLOptions,
                      recordCanvas: this.recordCanvas,
                      inlineImages: this.inlineImages,
                      onSerialize: (e) => {
                        st(e, this.mirror) &&
                          !o7(
                            e,
                            this.blockClass,
                            this.blockSelector,
                            this.unblockSelector,
                            !1
                          ) &&
                          this.iframeManager.addIframe(e),
                          sn(e, this.mirror) &&
                            this.stylesheetManager.trackLinkElement(e),
                          sr(i) &&
                            this.shadowDomManager.addShadowRoot(
                              i.shadowRoot,
                              this.doc
                            );
                      },
                      onIframeLoad: (e, t) => {
                        o7(
                          e,
                          this.blockClass,
                          this.blockSelector,
                          this.unblockSelector,
                          !1
                        ) ||
                          (this.iframeManager.attachIframe(e, t),
                          e.contentWindow &&
                            this.canvasManager.addWindow(e.contentWindow),
                          this.shadowDomManager.observeAttachShadow(e));
                      },
                      onStylesheetLoad: (e, t) => {
                        this.stylesheetManager.attachLinkElement(e, t);
                      },
                    });
                    s &&
                      (e.push({ parentId: a, nextId: o, node: s }),
                      t.add(s.id));
                  };
                for (; this.mapRemoves.length; )
                  this.mirror.removeNodeFromMap(this.mapRemoves.shift());
                for (let e of this.movedSet)
                  (!sv(this.removes, e, this.mirror) ||
                    this.movedSet.has(e.parentNode)) &&
                    i(e);
                for (let e of this.addedSet)
                  sw(this.droppedSet, e) || sv(this.removes, e, this.mirror)
                    ? sw(this.movedSet, e)
                      ? i(e)
                      : this.droppedSet.add(e)
                    : i(e);
                let a = null;
                for (; n.length; ) {
                  let e = null;
                  if (a) {
                    let t = this.mirror.getId(a.value.parentNode),
                      n = r(a.value);
                    -1 !== t && -1 !== n && (e = a);
                  }
                  if (!e) {
                    let t = n.tail;
                    for (; t; ) {
                      let n = t;
                      if (((t = t.previous), n)) {
                        let t = this.mirror.getId(n.value.parentNode),
                          i = r(n.value);
                        if (-1 === i) continue;
                        if (-1 !== t) {
                          e = n;
                          break;
                        }
                        {
                          let t = n.value;
                          if (
                            t.parentNode &&
                            t.parentNode.nodeType ===
                              Node.DOCUMENT_FRAGMENT_NODE
                          ) {
                            let r = t.parentNode.host,
                              i = this.mirror.getId(r);
                            if (-1 !== i) {
                              e = n;
                              break;
                            }
                          }
                        }
                      }
                    }
                  }
                  if (!e) {
                    for (; n.head; ) n.removeNode(n.head.value);
                    break;
                  }
                  (a = e.previous), n.removeNode(e.value), i(e.value);
                }
                let o = {
                  texts: this.texts
                    .map((e) => ({
                      id: this.mirror.getId(e.node),
                      value: e.value,
                    }))
                    .filter((e) => !t.has(e.id))
                    .filter((e) => this.mirror.has(e.id)),
                  attributes: this.attributes
                    .map((e) => {
                      let { attributes: t } = e;
                      if ("string" == typeof t.style) {
                        let n = JSON.stringify(e.styleDiff),
                          r = JSON.stringify(e._unchangedStyles);
                        n.length < t.style.length &&
                          (n + r).split("var(").length ===
                            t.style.split("var(").length &&
                          (t.style = e.styleDiff);
                      }
                      return { id: this.mirror.getId(e.node), attributes: t };
                    })
                    .filter((e) => !t.has(e.id))
                    .filter((e) => this.mirror.has(e.id)),
                  removes: this.removes,
                  adds: e,
                };
                (o.texts.length ||
                  o.attributes.length ||
                  o.removes.length ||
                  o.adds.length) &&
                  ((this.texts = []),
                  (this.attributes = []),
                  (this.attributeMap = new WeakMap()),
                  (this.removes = []),
                  (this.addedSet = new Set()),
                  (this.movedSet = new Set()),
                  (this.droppedSet = new Set()),
                  (this.movedMap = {}),
                  this.mutationCb(o));
              }),
              (this.processMutation = (e) => {
                if (!o9(e.target, this.mirror))
                  switch (e.type) {
                    case "characterData": {
                      let t = e.target.textContent;
                      o7(
                        e.target,
                        this.blockClass,
                        this.blockSelector,
                        this.unblockSelector,
                        !1
                      ) ||
                        t === e.oldValue ||
                        this.texts.push({
                          value:
                            oK(
                              e.target,
                              this.maskTextClass,
                              this.maskTextSelector,
                              this.unmaskTextClass,
                              this.unmaskTextSelector,
                              this.maskAllText
                            ) && t
                              ? this.maskTextFn
                                ? this.maskTextFn(t, o8(e.target))
                                : t.replace(/[\S]/g, "*")
                              : t,
                          node: e.target,
                        });
                      break;
                    }
                    case "attributes": {
                      let t = e.target,
                        n = e.attributeName,
                        r = e.target.getAttribute(n);
                      if ("value" === n) {
                        let n = oC(t),
                          i = t.tagName;
                        r = o_(t, i, n);
                        let a = ob({
                            maskInputOptions: this.maskInputOptions,
                            tagName: i,
                            type: n,
                          }),
                          o = oK(
                            e.target,
                            this.maskTextClass,
                            this.maskTextSelector,
                            this.unmaskTextClass,
                            this.unmaskTextSelector,
                            a
                          );
                        r = ov({
                          isMasked: o,
                          element: t,
                          value: r,
                          maskInputFn: this.maskInputFn,
                        });
                      }
                      if (
                        o7(
                          e.target,
                          this.blockClass,
                          this.blockSelector,
                          this.unblockSelector,
                          !1
                        ) ||
                        r === e.oldValue
                      )
                        return;
                      let i = this.attributeMap.get(e.target);
                      if (
                        "IFRAME" === t.tagName &&
                        "src" === n &&
                        !this.keepIframeSrcFn(r)
                      ) {
                        let e = sh(t);
                        if (e) return;
                        n = "rr_src";
                      }
                      if (
                        (i ||
                          ((i = {
                            node: e.target,
                            attributes: {},
                            styleDiff: {},
                            _unchangedStyles: {},
                          }),
                          this.attributes.push(i),
                          this.attributeMap.set(e.target, i)),
                        "type" === n &&
                          "INPUT" === t.tagName &&
                          "password" === (e.oldValue || "").toLowerCase() &&
                          t.setAttribute("data-rr-is-password", "true"),
                        !oG(t.tagName, n) &&
                          ((i.attributes[n] = oz(
                            this.doc,
                            ow(t.tagName),
                            ow(n),
                            r,
                            t,
                            this.maskAttributeFn
                          )),
                          "style" === n))
                      ) {
                        if (!this.unattachedDoc)
                          try {
                            this.unattachedDoc =
                              document.implementation.createHTMLDocument();
                          } catch (e) {
                            this.unattachedDoc = this.doc;
                          }
                        let n = this.unattachedDoc.createElement("span");
                        for (let r of (e.oldValue &&
                          n.setAttribute("style", e.oldValue),
                        Array.from(t.style))) {
                          let e = t.style.getPropertyValue(r),
                            a = t.style.getPropertyPriority(r);
                          e !== n.style.getPropertyValue(r) ||
                          a !== n.style.getPropertyPriority(r)
                            ? "" === a
                              ? (i.styleDiff[r] = e)
                              : (i.styleDiff[r] = [e, a])
                            : (i._unchangedStyles[r] = [e, a]);
                        }
                        for (let e of Array.from(n.style))
                          "" === t.style.getPropertyValue(e) &&
                            (i.styleDiff[e] = !1);
                      }
                      break;
                    }
                    case "childList":
                      if (
                        o7(
                          e.target,
                          this.blockClass,
                          this.blockSelector,
                          this.unblockSelector,
                          !0
                        )
                      )
                        return;
                      e.addedNodes.forEach((t) => this.genAdds(t, e.target)),
                        e.removedNodes.forEach((t) => {
                          let n = this.mirror.getId(t),
                            r = op(e.target)
                              ? this.mirror.getId(e.target.host)
                              : this.mirror.getId(e.target);
                          o7(
                            e.target,
                            this.blockClass,
                            this.blockSelector,
                            this.unblockSelector,
                            !1
                          ) ||
                            o9(t, this.mirror) ||
                            -1 === this.mirror.getId(t) ||
                            (this.addedSet.has(t)
                              ? (sb(this.addedSet, t), this.droppedSet.add(t))
                              : (this.addedSet.has(e.target) && -1 === n) ||
                                (function e(t, n) {
                                  if (op(t)) return !1;
                                  let r = n.getId(t);
                                  return (
                                    !n.has(r) ||
                                    ((!t.parentNode ||
                                      t.parentNode.nodeType !==
                                        t.DOCUMENT_NODE) &&
                                      (!t.parentNode || e(t.parentNode, n)))
                                  );
                                })(e.target, this.mirror) ||
                                (this.movedSet.has(t) && this.movedMap[sy(n, r)]
                                  ? sb(this.movedSet, t)
                                  : this.removes.push({
                                      parentId: r,
                                      id: n,
                                      isShadow:
                                        !!(op(e.target) && oh(e.target)) ||
                                        void 0,
                                    })),
                            this.mapRemoves.push(t));
                        });
                  }
              }),
              (this.genAdds = (e, t) => {
                if (
                  !this.processedNodeManager.inOtherBuffer(e, this) &&
                  !(this.addedSet.has(e) || this.movedSet.has(e))
                ) {
                  if (this.mirror.hasNode(e)) {
                    if (o9(e, this.mirror)) return;
                    this.movedSet.add(e);
                    let n = null;
                    t && this.mirror.hasNode(t) && (n = this.mirror.getId(t)),
                      n &&
                        -1 !== n &&
                        (this.movedMap[sy(this.mirror.getId(e), n)] = !0);
                  } else this.addedSet.add(e), this.droppedSet.delete(e);
                  !o7(
                    e,
                    this.blockClass,
                    this.blockSelector,
                    this.unblockSelector,
                    !1
                  ) &&
                    (e.childNodes.forEach((e) => this.genAdds(e)),
                    sr(e) &&
                      e.shadowRoot.childNodes.forEach((t) => {
                        this.processedNodeManager.add(t, this),
                          this.genAdds(t, e);
                      }));
                }
              });
          }
          init(e) {
            [
              "mutationCb",
              "blockClass",
              "blockSelector",
              "unblockSelector",
              "maskAllText",
              "maskTextClass",
              "unmaskTextClass",
              "maskTextSelector",
              "unmaskTextSelector",
              "inlineStylesheet",
              "maskInputOptions",
              "maskAttributeFn",
              "maskTextFn",
              "maskInputFn",
              "keepIframeSrcFn",
              "recordCanvas",
              "inlineImages",
              "slimDOMOptions",
              "dataURLOptions",
              "doc",
              "mirror",
              "iframeManager",
              "stylesheetManager",
              "shadowDomManager",
              "canvasManager",
              "processedNodeManager",
            ].forEach((t) => {
              this[t] = e[t];
            });
          }
          freeze() {
            (this.frozen = !0), this.canvasManager.freeze();
          }
          unfreeze() {
            (this.frozen = !1), this.canvasManager.unfreeze(), this.emit();
          }
          isFrozen() {
            return this.frozen;
          }
          lock() {
            (this.locked = !0), this.canvasManager.lock();
          }
          unlock() {
            (this.locked = !1), this.canvasManager.unlock(), this.emit();
          }
          reset() {
            this.shadowDomManager.reset(), this.canvasManager.reset();
          }
        }
        function sb(e, t) {
          e.delete(t), t.childNodes.forEach((t) => sb(e, t));
        }
        function sv(e, t, n) {
          return (
            0 !== e.length &&
            (function (e, t, n) {
              let r = t.parentNode;
              for (; r; ) {
                let t = n.getId(r);
                if (e.some((e) => e.id === t)) return !0;
                r = r.parentNode;
              }
              return !1;
            })(e, t, n)
          );
        }
        function sw(e, t) {
          return (
            0 !== e.size &&
            (function e(t, n) {
              let { parentNode: r } = n;
              return !!r && (!!t.has(r) || e(t, r));
            })(e, t)
          );
        }
        let sE = (e) =>
          E
            ? (...t) => {
                try {
                  return e(...t);
                } catch (e) {
                  if (E && !0 === E(e)) return () => {};
                  throw e;
                }
              }
            : e;
        function sx(e) {
          let t;
          let n = e[0],
            r = 1;
          for (; r < e.length; ) {
            let i = e[r],
              a = e[r + 1];
            if (
              ((r += 2),
              ("optionalAccess" === i || "optionalCall" === i) && null == n)
            )
              return;
            "access" === i || "optionalAccess" === i
              ? ((t = n), (n = a(n)))
              : ("call" === i || "optionalCall" === i) &&
                ((n = a((...e) => n.call(t, ...e))), (t = void 0));
          }
          return n;
        }
        let sC = [];
        function s_(e) {
          try {
            if ("composedPath" in e) {
              let t = e.composedPath();
              if (t.length) return t[0];
            } else if ("path" in e && e.path.length) return e.path[0];
          } catch (e) {}
          return e && e.target;
        }
        function sT(e, t) {
          let n = new sg();
          sC.push(n), n.init(e);
          let r = window.MutationObserver || window.__rrMutationObserver,
            i = sx([
              window,
              "optionalAccess",
              (e) => e.Zone,
              "optionalAccess",
              (e) => e.__symbol__,
              "optionalCall",
              (e) => e("MutationObserver"),
            ]);
          i && window[i] && (r = window[i]);
          let a = new r(
            sE((t) => {
              (e.onMutation && !1 === e.onMutation(t)) ||
                n.processMutations.bind(n)(t);
            })
          );
          return (
            a.observe(t, {
              attributes: !0,
              attributeOldValue: !0,
              characterData: !0,
              characterDataOldValue: !0,
              childList: !0,
              subtree: !0,
            }),
            a
          );
        }
        function sS({
          scrollCb: e,
          doc: t,
          mirror: n,
          blockClass: r,
          blockSelector: i,
          unblockSelector: a,
          sampling: o,
        }) {
          let s = sE(
            o1(
              sE((o) => {
                let s = s_(o);
                if (!s || o7(s, r, i, a, !0)) return;
                let u = n.getId(s);
                if (s === t && t.defaultView) {
                  let n = o3(t.defaultView);
                  e({ id: u, x: n.left, y: n.top });
                } else e({ id: u, x: s.scrollLeft, y: s.scrollTop });
              }),
              o.scroll || 100
            )
          );
          return oX("scroll", s, t);
        }
        let sP = ["INPUT", "TEXTAREA", "SELECT"],
          sO = new WeakMap();
        function sI(e) {
          return (function (e, t) {
            if (
              (sB("CSSGroupingRule") &&
                e.parentRule instanceof CSSGroupingRule) ||
              (sB("CSSMediaRule") && e.parentRule instanceof CSSMediaRule) ||
              (sB("CSSSupportsRule") &&
                e.parentRule instanceof CSSSupportsRule) ||
              (sB("CSSConditionRule") &&
                e.parentRule instanceof CSSConditionRule)
            ) {
              let n = Array.from(e.parentRule.cssRules),
                r = n.indexOf(e);
              t.unshift(r);
            } else if (e.parentStyleSheet) {
              let n = Array.from(e.parentStyleSheet.cssRules),
                r = n.indexOf(e);
              t.unshift(r);
            }
            return t;
          })(e, []);
        }
        function sA(e, t, n) {
          let r, i;
          return e
            ? (e.ownerNode ? (r = t.getId(e.ownerNode)) : (i = n.getId(e)),
              { styleId: i, id: r })
            : {};
        }
        function sk({ mirror: e, stylesheetManager: t }, n) {
          let r = null;
          r = "#document" === n.nodeName ? e.getId(n) : e.getId(n.host);
          let i =
              "#document" === n.nodeName
                ? sx([
                    n,
                    "access",
                    (e) => e.defaultView,
                    "optionalAccess",
                    (e) => e.Document,
                  ])
                : sx([
                    n,
                    "access",
                    (e) => e.ownerDocument,
                    "optionalAccess",
                    (e) => e.defaultView,
                    "optionalAccess",
                    (e) => e.ShadowRoot,
                  ]),
            a = sx([i, "optionalAccess", (e) => e.prototype])
              ? Object.getOwnPropertyDescriptor(
                  sx([i, "optionalAccess", (e) => e.prototype]),
                  "adoptedStyleSheets"
                )
              : void 0;
          return null !== r && -1 !== r && i && a
            ? (Object.defineProperty(n, "adoptedStyleSheets", {
                configurable: a.configurable,
                enumerable: a.enumerable,
                get() {
                  return sx([
                    a,
                    "access",
                    (e) => e.get,
                    "optionalAccess",
                    (e) => e.call,
                    "call",
                    (e) => e(this),
                  ]);
                },
                set(e) {
                  let n = sx([
                    a,
                    "access",
                    (e) => e.set,
                    "optionalAccess",
                    (e) => e.call,
                    "call",
                    (t) => t(this, e),
                  ]);
                  if (null !== r && -1 !== r)
                    try {
                      t.adoptStyleSheets(e, r);
                    } catch (e) {}
                  return n;
                },
              }),
              sE(() => {
                Object.defineProperty(n, "adoptedStyleSheets", {
                  configurable: a.configurable,
                  enumerable: a.enumerable,
                  get: a.get,
                  set: a.set,
                });
              }))
            : () => {};
        }
        function sj(e, t = {}) {
          let n;
          let r = e.doc.defaultView;
          if (!r) return () => {};
          e.recordDOM && (n = sT(e, e.doc));
          let i = (function ({
              mousemoveCb: e,
              sampling: t,
              doc: n,
              mirror: r,
            }) {
              let i;
              if (!1 === t.mousemove) return () => {};
              let a = "number" == typeof t.mousemove ? t.mousemove : 50,
                o =
                  "number" == typeof t.mousemoveCallback
                    ? t.mousemoveCallback
                    : 500,
                s = [],
                u = o1(
                  sE((t) => {
                    let n = Date.now() - i;
                    e(
                      s.map((e) => ((e.timeOffset -= n), e)),
                      t
                    ),
                      (s = []),
                      (i = null);
                  }),
                  o
                ),
                l = sE(
                  o1(
                    sE((e) => {
                      let t = s_(e),
                        { clientX: n, clientY: a } = se(e)
                          ? e.changedTouches[0]
                          : e;
                      i || (i = o6()),
                        s.push({
                          x: n,
                          y: a,
                          id: r.getId(t),
                          timeOffset: o6() - i,
                        }),
                        u(
                          "undefined" != typeof DragEvent &&
                            e instanceof DragEvent
                            ? sd.Drag
                            : e instanceof MouseEvent
                            ? sd.MouseMove
                            : sd.TouchMove
                        );
                    }),
                    a,
                    { trailing: !1 }
                  )
                ),
                c = [
                  oX("mousemove", l, n),
                  oX("touchmove", l, n),
                  oX("drag", l, n),
                ];
              return sE(() => {
                c.forEach((e) => e());
              });
            })(e),
            a = (function ({
              mouseInteractionCb: e,
              doc: t,
              mirror: n,
              blockClass: r,
              blockSelector: i,
              unblockSelector: a,
              sampling: o,
            }) {
              if (!1 === o.mouseInteraction) return () => {};
              let s =
                  !0 === o.mouseInteraction || void 0 === o.mouseInteraction
                    ? {}
                    : o.mouseInteraction,
                u = [],
                l = null,
                c = (t) => (o) => {
                  let s = s_(o);
                  if (o7(s, r, i, a, !0)) return;
                  let u = null,
                    c = t;
                  if ("pointerType" in o) {
                    switch (o.pointerType) {
                      case "mouse":
                        u = sp.Mouse;
                        break;
                      case "touch":
                        u = sp.Touch;
                        break;
                      case "pen":
                        u = sp.Pen;
                    }
                    u === sp.Touch
                      ? sf[t] === sf.MouseDown
                        ? (c = "TouchStart")
                        : sf[t] === sf.MouseUp && (c = "TouchEnd")
                      : sp.Pen;
                  } else se(o) && (u = sp.Touch);
                  null !== u
                    ? ((l = u),
                      ((c.startsWith("Touch") && u === sp.Touch) ||
                        (c.startsWith("Mouse") && u === sp.Mouse)) &&
                        (u = null))
                    : sf[t] === sf.Click && ((u = l), (l = null));
                  let d = se(o) ? o.changedTouches[0] : o;
                  if (!d) return;
                  let f = n.getId(s),
                    { clientX: p, clientY: h } = d;
                  sE(e)({
                    type: sf[c],
                    id: f,
                    x: p,
                    y: h,
                    ...(null !== u && { pointerType: u }),
                  });
                };
              return (
                Object.keys(sf)
                  .filter(
                    (e) =>
                      Number.isNaN(Number(e)) &&
                      !e.endsWith("_Departed") &&
                      !1 !== s[e]
                  )
                  .forEach((e) => {
                    let n = ow(e),
                      r = c(e);
                    if (window.PointerEvent)
                      switch (sf[e]) {
                        case sf.MouseDown:
                        case sf.MouseUp:
                          n = n.replace("mouse", "pointer");
                          break;
                        case sf.TouchStart:
                        case sf.TouchEnd:
                          return;
                      }
                    u.push(oX(n, r, t));
                  }),
                sE(() => {
                  u.forEach((e) => e());
                })
              );
            })(e),
            o = sS(e),
            s = (function ({ viewportResizeCb: e }, { win: t }) {
              let n = -1,
                r = -1,
                i = sE(
                  o1(
                    sE(() => {
                      let t = o5(),
                        i = o4();
                      (n !== t || r !== i) &&
                        (e({ width: Number(i), height: Number(t) }),
                        (n = t),
                        (r = i));
                    }),
                    200
                  )
                );
              return oX("resize", i, t);
            })(e, { win: r }),
            u = (function ({
              inputCb: e,
              doc: t,
              mirror: n,
              blockClass: r,
              blockSelector: i,
              unblockSelector: a,
              ignoreClass: o,
              ignoreSelector: s,
              maskInputOptions: u,
              maskInputFn: l,
              sampling: c,
              userTriggeredOnInput: d,
              maskTextClass: f,
              unmaskTextClass: p,
              maskTextSelector: h,
              unmaskTextSelector: m,
            }) {
              function y(e) {
                let n = s_(e),
                  c = e.isTrusted,
                  y = n && oE(n.tagName);
                if (
                  ("OPTION" === y && (n = n.parentElement),
                  !n || !y || 0 > sP.indexOf(y) || o7(n, r, i, a, !0))
                )
                  return;
                let b = n;
                if (b.classList.contains(o) || (s && b.matches(s))) return;
                let v = oC(n),
                  w = o_(b, y, v),
                  E = !1,
                  x = ob({ maskInputOptions: u, tagName: y, type: v }),
                  C = oK(n, f, h, p, m, x);
                ("radio" === v || "checkbox" === v) && (E = n.checked),
                  (w = ov({
                    isMasked: C,
                    element: n,
                    value: w,
                    maskInputFn: l,
                  })),
                  g(
                    n,
                    d
                      ? { text: w, isChecked: E, userTriggered: c }
                      : { text: w, isChecked: E }
                  );
                let _ = n.name;
                "radio" === v &&
                  _ &&
                  E &&
                  t
                    .querySelectorAll(`input[type="radio"][name="${_}"]`)
                    .forEach((e) => {
                      if (e !== n) {
                        let t = ov({
                          isMasked: C,
                          element: e,
                          value: o_(e, y, v),
                          maskInputFn: l,
                        });
                        g(
                          e,
                          d
                            ? { text: t, isChecked: !E, userTriggered: !1 }
                            : { text: t, isChecked: !E }
                        );
                      }
                    });
              }
              function g(t, r) {
                let i = sO.get(t);
                if (!i || i.text !== r.text || i.isChecked !== r.isChecked) {
                  sO.set(t, r);
                  let i = n.getId(t);
                  sE(e)({ ...r, id: i });
                }
              }
              let b = "last" === c.input ? ["change"] : ["input", "change"],
                v = b.map((e) => oX(e, sE(y), t)),
                w = t.defaultView;
              if (!w)
                return () => {
                  v.forEach((e) => e());
                };
              let E = w.Object.getOwnPropertyDescriptor(
                  w.HTMLInputElement.prototype,
                  "value"
                ),
                x = [
                  [w.HTMLInputElement.prototype, "value"],
                  [w.HTMLInputElement.prototype, "checked"],
                  [w.HTMLSelectElement.prototype, "value"],
                  [w.HTMLTextAreaElement.prototype, "value"],
                  [w.HTMLSelectElement.prototype, "selectedIndex"],
                  [w.HTMLOptionElement.prototype, "selected"],
                ];
              return (
                E &&
                  E.set &&
                  v.push(
                    ...x.map((e) =>
                      (function e(t, n, r, i, a = window) {
                        let o = a.Object.getOwnPropertyDescriptor(t, n);
                        return (
                          a.Object.defineProperty(
                            t,
                            n,
                            i
                              ? r
                              : {
                                  set(e) {
                                    sl(() => {
                                      r.set.call(this, e);
                                    }, 0),
                                      o && o.set && o.set.call(this, e);
                                  },
                                }
                          ),
                          () => e(t, n, o || {}, !0)
                        );
                      })(
                        e[0],
                        e[1],
                        {
                          set() {
                            sE(y)({ target: this, isTrusted: !1 });
                          },
                        },
                        !1,
                        w
                      )
                    )
                  ),
                sE(() => {
                  v.forEach((e) => e());
                })
              );
            })(e),
            l = (function ({
              mediaInteractionCb: e,
              blockClass: t,
              blockSelector: n,
              unblockSelector: r,
              mirror: i,
              sampling: a,
              doc: o,
            }) {
              let s = sE((o) =>
                  o1(
                    sE((a) => {
                      let s = s_(a);
                      if (!s || o7(s, t, n, r, !0)) return;
                      let {
                        currentTime: u,
                        volume: l,
                        muted: c,
                        playbackRate: d,
                      } = s;
                      e({
                        type: o,
                        id: i.getId(s),
                        currentTime: u,
                        volume: l,
                        muted: c,
                        playbackRate: d,
                      });
                    }),
                    a.media || 500
                  )
                ),
                u = [
                  oX("play", s(0), o),
                  oX("pause", s(1), o),
                  oX("seeked", s(2), o),
                  oX("volumechange", s(3), o),
                  oX("ratechange", s(4), o),
                ];
              return sE(() => {
                u.forEach((e) => e());
              });
            })(e),
            c = () => {},
            d = () => {},
            f = () => {},
            p = () => {};
          e.recordDOM &&
            ((c = (function (
              { styleSheetRuleCb: e, mirror: t, stylesheetManager: n },
              { win: r }
            ) {
              let i, a;
              if (!r.CSSStyleSheet || !r.CSSStyleSheet.prototype)
                return () => {};
              let o = r.CSSStyleSheet.prototype.insertRule;
              r.CSSStyleSheet.prototype.insertRule = new Proxy(o, {
                apply: sE((r, i, a) => {
                  let [o, s] = a,
                    { id: u, styleId: l } = sA(i, t, n.styleMirror);
                  return (
                    ((u && -1 !== u) || (l && -1 !== l)) &&
                      e({ id: u, styleId: l, adds: [{ rule: o, index: s }] }),
                    r.apply(i, a)
                  );
                }),
              });
              let s = r.CSSStyleSheet.prototype.deleteRule;
              (r.CSSStyleSheet.prototype.deleteRule = new Proxy(s, {
                apply: sE((r, i, a) => {
                  let [o] = a,
                    { id: s, styleId: u } = sA(i, t, n.styleMirror);
                  return (
                    ((s && -1 !== s) || (u && -1 !== u)) &&
                      e({ id: s, styleId: u, removes: [{ index: o }] }),
                    r.apply(i, a)
                  );
                }),
              })),
                r.CSSStyleSheet.prototype.replace &&
                  ((i = r.CSSStyleSheet.prototype.replace),
                  (r.CSSStyleSheet.prototype.replace = new Proxy(i, {
                    apply: sE((r, i, a) => {
                      let [o] = a,
                        { id: s, styleId: u } = sA(i, t, n.styleMirror);
                      return (
                        ((s && -1 !== s) || (u && -1 !== u)) &&
                          e({ id: s, styleId: u, replace: o }),
                        r.apply(i, a)
                      );
                    }),
                  }))),
                r.CSSStyleSheet.prototype.replaceSync &&
                  ((a = r.CSSStyleSheet.prototype.replaceSync),
                  (r.CSSStyleSheet.prototype.replaceSync = new Proxy(a, {
                    apply: sE((r, i, a) => {
                      let [o] = a,
                        { id: s, styleId: u } = sA(i, t, n.styleMirror);
                      return (
                        ((s && -1 !== s) || (u && -1 !== u)) &&
                          e({ id: s, styleId: u, replaceSync: o }),
                        r.apply(i, a)
                      );
                    }),
                  })));
              let u = {};
              sM("CSSGroupingRule")
                ? (u.CSSGroupingRule = r.CSSGroupingRule)
                : (sM("CSSMediaRule") && (u.CSSMediaRule = r.CSSMediaRule),
                  sM("CSSConditionRule") &&
                    (u.CSSConditionRule = r.CSSConditionRule),
                  sM("CSSSupportsRule") &&
                    (u.CSSSupportsRule = r.CSSSupportsRule));
              let l = {};
              return (
                Object.entries(u).forEach(([r, i]) => {
                  (l[r] = {
                    insertRule: i.prototype.insertRule,
                    deleteRule: i.prototype.deleteRule,
                  }),
                    (i.prototype.insertRule = new Proxy(l[r].insertRule, {
                      apply: sE((r, i, a) => {
                        let [o, s] = a,
                          { id: u, styleId: l } = sA(
                            i.parentStyleSheet,
                            t,
                            n.styleMirror
                          );
                        return (
                          ((u && -1 !== u) || (l && -1 !== l)) &&
                            e({
                              id: u,
                              styleId: l,
                              adds: [{ rule: o, index: [...sI(i), s || 0] }],
                            }),
                          r.apply(i, a)
                        );
                      }),
                    })),
                    (i.prototype.deleteRule = new Proxy(l[r].deleteRule, {
                      apply: sE((r, i, a) => {
                        let [o] = a,
                          { id: s, styleId: u } = sA(
                            i.parentStyleSheet,
                            t,
                            n.styleMirror
                          );
                        return (
                          ((s && -1 !== s) || (u && -1 !== u)) &&
                            e({
                              id: s,
                              styleId: u,
                              removes: [{ index: [...sI(i), o] }],
                            }),
                          r.apply(i, a)
                        );
                      }),
                    }));
                }),
                sE(() => {
                  (r.CSSStyleSheet.prototype.insertRule = o),
                    (r.CSSStyleSheet.prototype.deleteRule = s),
                    i && (r.CSSStyleSheet.prototype.replace = i),
                    a && (r.CSSStyleSheet.prototype.replaceSync = a),
                    Object.entries(u).forEach(([e, t]) => {
                      (t.prototype.insertRule = l[e].insertRule),
                        (t.prototype.deleteRule = l[e].deleteRule);
                    });
                })
              );
            })(e, { win: r })),
            (d = sk(e, e.doc)),
            (f = (function (
              {
                styleDeclarationCb: e,
                mirror: t,
                ignoreCSSAttributes: n,
                stylesheetManager: r,
              },
              { win: i }
            ) {
              let a = i.CSSStyleDeclaration.prototype.setProperty;
              i.CSSStyleDeclaration.prototype.setProperty = new Proxy(a, {
                apply: sE((i, o, s) => {
                  let [u, l, c] = s;
                  if (n.has(u)) return a.apply(o, [u, l, c]);
                  let { id: d, styleId: f } = sA(
                    sx([
                      o,
                      "access",
                      (e) => e.parentRule,
                      "optionalAccess",
                      (e) => e.parentStyleSheet,
                    ]),
                    t,
                    r.styleMirror
                  );
                  return (
                    ((d && -1 !== d) || (f && -1 !== f)) &&
                      e({
                        id: d,
                        styleId: f,
                        set: { property: u, value: l, priority: c },
                        index: sI(o.parentRule),
                      }),
                    i.apply(o, s)
                  );
                }),
              });
              let o = i.CSSStyleDeclaration.prototype.removeProperty;
              return (
                (i.CSSStyleDeclaration.prototype.removeProperty = new Proxy(o, {
                  apply: sE((i, a, s) => {
                    let [u] = s;
                    if (n.has(u)) return o.apply(a, [u]);
                    let { id: l, styleId: c } = sA(
                      sx([
                        a,
                        "access",
                        (e) => e.parentRule,
                        "optionalAccess",
                        (e) => e.parentStyleSheet,
                      ]),
                      t,
                      r.styleMirror
                    );
                    return (
                      ((l && -1 !== l) || (c && -1 !== c)) &&
                        e({
                          id: l,
                          styleId: c,
                          remove: { property: u },
                          index: sI(a.parentRule),
                        }),
                      i.apply(a, s)
                    );
                  }),
                })),
                sE(() => {
                  (i.CSSStyleDeclaration.prototype.setProperty = a),
                    (i.CSSStyleDeclaration.prototype.removeProperty = o);
                })
              );
            })(e, { win: r })),
            e.collectFonts &&
              (p = (function ({ fontCb: e, doc: t }) {
                let n = t.defaultView;
                if (!n) return () => {};
                let r = [],
                  i = new WeakMap(),
                  a = n.FontFace;
                n.FontFace = function (e, t, n) {
                  let r = new a(e, t, n);
                  return (
                    i.set(r, {
                      family: e,
                      buffer: "string" != typeof t,
                      descriptors: n,
                      fontSource:
                        "string" == typeof t
                          ? t
                          : JSON.stringify(Array.from(new Uint8Array(t))),
                    }),
                    r
                  );
                };
                let o = o2(t.fonts, "add", function (t) {
                  return function (n) {
                    return (
                      sl(
                        sE(() => {
                          let t = i.get(n);
                          t && (e(t), i.delete(n));
                        }),
                        0
                      ),
                      t.apply(this, [n])
                    );
                  };
                });
                return (
                  r.push(() => {
                    n.FontFace = a;
                  }),
                  r.push(o),
                  sE(() => {
                    r.forEach((e) => e());
                  })
                );
              })(e)));
          let h = (function (e) {
              let {
                  doc: t,
                  mirror: n,
                  blockClass: r,
                  blockSelector: i,
                  unblockSelector: a,
                  selectionCb: o,
                } = e,
                s = !0,
                u = sE(() => {
                  let e = t.getSelection();
                  if (
                    !e ||
                    (s && sx([e, "optionalAccess", (e) => e.isCollapsed]))
                  )
                    return;
                  s = e.isCollapsed || !1;
                  let u = [],
                    l = e.rangeCount || 0;
                  for (let t = 0; t < l; t++) {
                    let o = e.getRangeAt(t),
                      {
                        startContainer: s,
                        startOffset: l,
                        endContainer: c,
                        endOffset: d,
                      } = o,
                      f = o7(s, r, i, a, !0) || o7(c, r, i, a, !0);
                    f ||
                      u.push({
                        start: n.getId(s),
                        startOffset: l,
                        end: n.getId(c),
                        endOffset: d,
                      });
                  }
                  o({ ranges: u });
                });
              return u(), oX("selectionchange", u);
            })(e),
            m = (function ({ doc: e, customElementCb: t }) {
              let n = e.defaultView;
              if (!n || !n.customElements) return () => {};
              let r = o2(n.customElements, "define", function (e) {
                return function (n, r, i) {
                  try {
                    t({ define: { name: n } });
                  } catch (e) {}
                  return e.apply(this, [n, r, i]);
                };
              });
              return r;
            })(e),
            y = [];
          for (let t of e.plugins) y.push(t.observer(t.callback, r, t.options));
          return sE(() => {
            sC.forEach((e) => e.reset()),
              sx([
                n,
                "optionalAccess",
                (e) => e.disconnect,
                "call",
                (e) => e(),
              ]),
              i(),
              a(),
              o(),
              s(),
              u(),
              l(),
              c(),
              d(),
              f(),
              p(),
              h(),
              m(),
              y.forEach((e) => e());
          });
        }
        function sB(e) {
          return void 0 !== window[e];
        }
        function sM(e) {
          return !!(
            void 0 !== window[e] &&
            window[e].prototype &&
            "insertRule" in window[e].prototype &&
            "deleteRule" in window[e].prototype
          );
        }
        class sN {
          constructor(e) {
            (this.generateIdFn = e),
              (this.iframeIdToRemoteIdMap = new WeakMap()),
              (this.iframeRemoteIdToIdMap = new WeakMap());
          }
          getId(e, t, n, r) {
            let i = n || this.getIdToRemoteIdMap(e),
              a = r || this.getRemoteIdToIdMap(e),
              o = i.get(t);
            return (
              o || ((o = this.generateIdFn()), i.set(t, o), a.set(o, t)), o
            );
          }
          getIds(e, t) {
            let n = this.getIdToRemoteIdMap(e),
              r = this.getRemoteIdToIdMap(e);
            return t.map((t) => this.getId(e, t, n, r));
          }
          getRemoteId(e, t, n) {
            let r = n || this.getRemoteIdToIdMap(e);
            if ("number" != typeof t) return t;
            let i = r.get(t);
            return i || -1;
          }
          getRemoteIds(e, t) {
            let n = this.getRemoteIdToIdMap(e);
            return t.map((t) => this.getRemoteId(e, t, n));
          }
          reset(e) {
            if (!e) {
              (this.iframeIdToRemoteIdMap = new WeakMap()),
                (this.iframeRemoteIdToIdMap = new WeakMap());
              return;
            }
            this.iframeIdToRemoteIdMap.delete(e),
              this.iframeRemoteIdToIdMap.delete(e);
          }
          getIdToRemoteIdMap(e) {
            let t = this.iframeIdToRemoteIdMap.get(e);
            return (
              t || ((t = new Map()), this.iframeIdToRemoteIdMap.set(e, t)), t
            );
          }
          getRemoteIdToIdMap(e) {
            let t = this.iframeRemoteIdToIdMap.get(e);
            return (
              t || ((t = new Map()), this.iframeRemoteIdToIdMap.set(e, t)), t
            );
          }
        }
        function sD(e) {
          let t;
          let n = e[0],
            r = 1;
          for (; r < e.length; ) {
            let i = e[r],
              a = e[r + 1];
            if (
              ((r += 2),
              ("optionalAccess" === i || "optionalCall" === i) && null == n)
            )
              return;
            "access" === i || "optionalAccess" === i
              ? ((t = n), (n = a(n)))
              : ("call" === i || "optionalCall" === i) &&
                ((n = a((...e) => n.call(t, ...e))), (t = void 0));
          }
          return n;
        }
        class sR {
          constructor() {
            (this.crossOriginIframeMirror = new sN(oB)),
              (this.crossOriginIframeRootIdMap = new WeakMap());
          }
          addIframe() {}
          addLoadListener() {}
          attachIframe() {}
        }
        class sF {
          constructor(e) {
            (this.iframes = new WeakMap()),
              (this.crossOriginIframeMap = new WeakMap()),
              (this.crossOriginIframeMirror = new sN(oB)),
              (this.crossOriginIframeRootIdMap = new WeakMap()),
              (this.mutationCb = e.mutationCb),
              (this.wrappedEmit = e.wrappedEmit),
              (this.stylesheetManager = e.stylesheetManager),
              (this.recordCrossOriginIframes = e.recordCrossOriginIframes),
              (this.crossOriginIframeStyleMirror = new sN(
                this.stylesheetManager.styleMirror.generateId.bind(
                  this.stylesheetManager.styleMirror
                )
              )),
              (this.mirror = e.mirror),
              this.recordCrossOriginIframes &&
                window.addEventListener(
                  "message",
                  this.handleMessage.bind(this)
                );
          }
          addIframe(e) {
            this.iframes.set(e, !0),
              e.contentWindow &&
                this.crossOriginIframeMap.set(e.contentWindow, e);
          }
          addLoadListener(e) {
            this.loadListener = e;
          }
          attachIframe(e, t) {
            this.mutationCb({
              adds: [{ parentId: this.mirror.getId(e), nextId: null, node: t }],
              removes: [],
              texts: [],
              attributes: [],
              isAttachIframe: !0,
            }),
              sD([
                this,
                "access",
                (e) => e.loadListener,
                "optionalCall",
                (t) => t(e),
              ]);
            let n = sh(e);
            n &&
              n.adoptedStyleSheets &&
              n.adoptedStyleSheets.length > 0 &&
              this.stylesheetManager.adoptStyleSheets(
                n.adoptedStyleSheets,
                this.mirror.getId(n)
              );
          }
          handleMessage(e) {
            if ("rrweb" !== e.data.type || e.origin !== e.data.origin) return;
            let t = e.source;
            if (!t) return;
            let n = this.crossOriginIframeMap.get(e.source);
            if (!n) return;
            let r = this.transformCrossOriginEvent(n, e.data.event);
            r && this.wrappedEmit(r, e.data.isCheckout);
          }
          transformCrossOriginEvent(e, t) {
            switch (t.type) {
              case sc.FullSnapshot: {
                this.crossOriginIframeMirror.reset(e),
                  this.crossOriginIframeStyleMirror.reset(e),
                  this.replaceIdOnNode(t.data.node, e);
                let n = t.data.node.id;
                return (
                  this.crossOriginIframeRootIdMap.set(e, n),
                  this.patchRootIdOnNode(t.data.node, n),
                  {
                    timestamp: t.timestamp,
                    type: sc.IncrementalSnapshot,
                    data: {
                      source: sd.Mutation,
                      adds: [
                        {
                          parentId: this.mirror.getId(e),
                          nextId: null,
                          node: t.data.node,
                        },
                      ],
                      removes: [],
                      texts: [],
                      attributes: [],
                      isAttachIframe: !0,
                    },
                  }
                );
              }
              case sc.Meta:
              case sc.Load:
              case sc.DomContentLoaded:
                break;
              case sc.Plugin:
                return t;
              case sc.Custom:
                return (
                  this.replaceIds(t.data.payload, e, [
                    "id",
                    "parentId",
                    "previousId",
                    "nextId",
                  ]),
                  t
                );
              case sc.IncrementalSnapshot:
                switch (t.data.source) {
                  case sd.Mutation:
                    return (
                      t.data.adds.forEach((t) => {
                        this.replaceIds(t, e, [
                          "parentId",
                          "nextId",
                          "previousId",
                        ]),
                          this.replaceIdOnNode(t.node, e);
                        let n = this.crossOriginIframeRootIdMap.get(e);
                        n && this.patchRootIdOnNode(t.node, n);
                      }),
                      t.data.removes.forEach((t) => {
                        this.replaceIds(t, e, ["parentId", "id"]);
                      }),
                      t.data.attributes.forEach((t) => {
                        this.replaceIds(t, e, ["id"]);
                      }),
                      t.data.texts.forEach((t) => {
                        this.replaceIds(t, e, ["id"]);
                      }),
                      t
                    );
                  case sd.Drag:
                  case sd.TouchMove:
                  case sd.MouseMove:
                    return (
                      t.data.positions.forEach((t) => {
                        this.replaceIds(t, e, ["id"]);
                      }),
                      t
                    );
                  case sd.ViewportResize:
                    return !1;
                  case sd.MediaInteraction:
                  case sd.MouseInteraction:
                  case sd.Scroll:
                  case sd.CanvasMutation:
                  case sd.Input:
                    return this.replaceIds(t.data, e, ["id"]), t;
                  case sd.StyleSheetRule:
                  case sd.StyleDeclaration:
                    return (
                      this.replaceIds(t.data, e, ["id"]),
                      this.replaceStyleIds(t.data, e, ["styleId"]),
                      t
                    );
                  case sd.Font:
                    return t;
                  case sd.Selection:
                    return (
                      t.data.ranges.forEach((t) => {
                        this.replaceIds(t, e, ["start", "end"]);
                      }),
                      t
                    );
                  case sd.AdoptedStyleSheet:
                    return (
                      this.replaceIds(t.data, e, ["id"]),
                      this.replaceStyleIds(t.data, e, ["styleIds"]),
                      sD([
                        t,
                        "access",
                        (e) => e.data,
                        "access",
                        (e) => e.styles,
                        "optionalAccess",
                        (e) => e.forEach,
                        "call",
                        (t) =>
                          t((t) => {
                            this.replaceStyleIds(t, e, ["styleId"]);
                          }),
                      ]),
                      t
                    );
                }
            }
            return !1;
          }
          replace(e, t, n, r) {
            for (let i of r)
              (Array.isArray(t[i]) || "number" == typeof t[i]) &&
                (Array.isArray(t[i])
                  ? (t[i] = e.getIds(n, t[i]))
                  : (t[i] = e.getId(n, t[i])));
            return t;
          }
          replaceIds(e, t, n) {
            return this.replace(this.crossOriginIframeMirror, e, t, n);
          }
          replaceStyleIds(e, t, n) {
            return this.replace(this.crossOriginIframeStyleMirror, e, t, n);
          }
          replaceIdOnNode(e, t) {
            this.replaceIds(e, t, ["id", "rootId"]),
              "childNodes" in e &&
                e.childNodes.forEach((e) => {
                  this.replaceIdOnNode(e, t);
                });
          }
          patchRootIdOnNode(e, t) {
            e.type === eo.Document || e.rootId || (e.rootId = t),
              "childNodes" in e &&
                e.childNodes.forEach((e) => {
                  this.patchRootIdOnNode(e, t);
                });
          }
        }
        class sL {
          init() {}
          addShadowRoot() {}
          observeAttachShadow() {}
          reset() {}
        }
        class sU {
          constructor(e) {
            (this.shadowDoms = new WeakSet()),
              (this.restoreHandlers = []),
              (this.mutationCb = e.mutationCb),
              (this.scrollCb = e.scrollCb),
              (this.bypassOptions = e.bypassOptions),
              (this.mirror = e.mirror),
              this.init();
          }
          init() {
            this.reset(), this.patchAttachShadow(Element, document);
          }
          addShadowRoot(e, t) {
            if (!oh(e) || this.shadowDoms.has(e)) return;
            this.shadowDoms.add(e),
              this.bypassOptions.canvasManager.addShadowRoot(e);
            let n = sT(
              {
                ...this.bypassOptions,
                doc: t,
                mutationCb: this.mutationCb,
                mirror: this.mirror,
                shadowDomManager: this,
              },
              e
            );
            this.restoreHandlers.push(() => n.disconnect()),
              this.restoreHandlers.push(
                sS({
                  ...this.bypassOptions,
                  scrollCb: this.scrollCb,
                  doc: e,
                  mirror: this.mirror,
                })
              ),
              sl(() => {
                e.adoptedStyleSheets &&
                  e.adoptedStyleSheets.length > 0 &&
                  this.bypassOptions.stylesheetManager.adoptStyleSheets(
                    e.adoptedStyleSheets,
                    this.mirror.getId(e.host)
                  ),
                  this.restoreHandlers.push(
                    sk(
                      {
                        mirror: this.mirror,
                        stylesheetManager: this.bypassOptions.stylesheetManager,
                      },
                      e
                    )
                  );
              }, 0);
          }
          observeAttachShadow(e) {
            let t = sh(e),
              n = (function (e) {
                try {
                  return e.contentWindow;
                } catch (e) {}
              })(e);
            t && n && this.patchAttachShadow(n.Element, t);
          }
          patchAttachShadow(e, t) {
            let n = this;
            this.restoreHandlers.push(
              o2(e.prototype, "attachShadow", function (e) {
                return function (r) {
                  let i = e.call(this, r);
                  return (
                    this.shadowRoot &&
                      so(this) &&
                      n.addShadowRoot(this.shadowRoot, t),
                    i
                  );
                };
              })
            );
          }
          reset() {
            this.restoreHandlers.forEach((e) => {
              try {
                e();
              } catch (e) {}
            }),
              (this.restoreHandlers = []),
              (this.shadowDoms = new WeakSet()),
              this.bypassOptions.canvasManager.resetShadowRoots();
          }
        }
        class s$ {
          reset() {}
          freeze() {}
          unfreeze() {}
          lock() {}
          unlock() {}
          snapshot() {}
          addWindow() {}
          addShadowRoot() {}
          resetShadowRoots() {}
        }
        class sq {
          constructor(e) {
            (this.trackedLinkElements = new WeakSet()),
              (this.styleMirror = new si()),
              (this.mutationCb = e.mutationCb),
              (this.adoptedStyleSheetCb = e.adoptedStyleSheetCb);
          }
          attachLinkElement(e, t) {
            "_cssText" in t.attributes &&
              this.mutationCb({
                adds: [],
                removes: [],
                texts: [],
                attributes: [{ id: t.id, attributes: t.attributes }],
              }),
              this.trackLinkElement(e);
          }
          trackLinkElement(e) {
            this.trackedLinkElements.has(e) ||
              (this.trackedLinkElements.add(e),
              this.trackStylesheetInLinkElement(e));
          }
          adoptStyleSheets(e, t) {
            if (0 === e.length) return;
            let n = { id: t, styleIds: [] },
              r = [];
            for (let t of e) {
              let e;
              this.styleMirror.has(t)
                ? (e = this.styleMirror.getId(t))
                : ((e = this.styleMirror.add(t)),
                  r.push({
                    styleId: e,
                    rules: Array.from(t.rules || CSSRule, (e, t) => ({
                      rule: oy(e),
                      index: t,
                    })),
                  })),
                n.styleIds.push(e);
            }
            r.length > 0 && (n.styles = r), this.adoptedStyleSheetCb(n);
          }
          reset() {
            this.styleMirror.reset(),
              (this.trackedLinkElements = new WeakSet());
          }
          trackStylesheetInLinkElement(e) {}
        }
        class sH {
          constructor() {
            (this.nodeMap = new WeakMap()), (this.active = !1);
          }
          inOtherBuffer(e, t) {
            let n = this.nodeMap.get(e);
            return n && Array.from(n).some((e) => e !== t);
          }
          add(e, t) {
            this.active ||
              ((this.active = !0),
              (function (...e) {
                su("requestAnimationFrame")(...e);
              })(() => {
                (this.nodeMap = new WeakMap()), (this.active = !1);
              })),
              this.nodeMap.set(e, (this.nodeMap.get(e) || new Set()).add(t));
          }
          destroy() {}
        }
        try {
          if (2 !== Array.from([1], (e) => 2 * e)[0]) {
            let e = document.createElement("iframe");
            document.body.appendChild(e),
              (Array.from =
                ap([
                  e,
                  "access",
                  (e) => e.contentWindow,
                  "optionalAccess",
                  (e) => e.Array,
                  "access",
                  (e) => e.from,
                ]) || Array.from),
              document.body.removeChild(e);
          }
        } catch (e) {
          console.debug("Unable to override Array.from", e);
        }
        let sz = new og();
        function sG(e = {}) {
          let t;
          let {
            emit: n,
            checkoutEveryNms: r,
            checkoutEveryNth: i,
            blockClass: a = "rr-block",
            blockSelector: o = null,
            unblockSelector: s = null,
            ignoreClass: u = "rr-ignore",
            ignoreSelector: l = null,
            maskAllText: c = !1,
            maskTextClass: d = "rr-mask",
            unmaskTextClass: f = null,
            maskTextSelector: p = null,
            unmaskTextSelector: h = null,
            inlineStylesheet: m = !0,
            maskAllInputs: y,
            maskInputOptions: g,
            slimDOMOptions: b,
            maskAttributeFn: v,
            maskInputFn: w,
            maskTextFn: _,
            maxCanvasSize: T = null,
            packFn: S,
            sampling: P = {},
            dataURLOptions: O = {},
            mousemoveWait: I,
            recordDOM: A = !0,
            recordCanvas: k = !1,
            recordCrossOriginIframes: j = !1,
            recordAfter: B = "DOMContentLoaded" === e.recordAfter
              ? e.recordAfter
              : "load",
            userTriggeredOnInput: M = !1,
            collectFonts: N = !1,
            inlineImages: D = !1,
            plugins: R,
            keepIframeSrcFn: F = () => !1,
            ignoreCSSAttributes: L = new Set([]),
            errorHandler: U,
            onMutation: $,
            getCanvasManager: q,
          } = e;
          E = U;
          let H = !j || window.parent === window,
            z = !1;
          if (!H)
            try {
              window.parent.document && (z = !1);
            } catch (e) {
              z = !0;
            }
          if (H && !n) throw Error("emit function is required");
          if (!H && !z) return () => {};
          void 0 !== I && void 0 === P.mousemove && (P.mousemove = I),
            sz.reset();
          let G =
              !0 === y
                ? {
                    color: !0,
                    date: !0,
                    "datetime-local": !0,
                    email: !0,
                    month: !0,
                    number: !0,
                    range: !0,
                    search: !0,
                    tel: !0,
                    text: !0,
                    time: !0,
                    url: !0,
                    week: !0,
                    textarea: !0,
                    select: !0,
                    radio: !0,
                    checkbox: !0,
                  }
                : void 0 !== g
                ? g
                : {},
            W =
              !0 === b || "all" === b
                ? {
                    script: !0,
                    comment: !0,
                    headFavicon: !0,
                    headWhitespace: !0,
                    headMetaSocial: !0,
                    headMetaRobots: !0,
                    headMetaHttpEquiv: !0,
                    headMetaVerification: !0,
                    headMetaAuthorship: "all" === b,
                    headMetaDescKeywords: "all" === b,
                  }
                : b || {};
          !(function (e = window) {
            "NodeList" in e &&
              !e.NodeList.prototype.forEach &&
              (e.NodeList.prototype.forEach = Array.prototype.forEach),
              "DOMTokenList" in e &&
                !e.DOMTokenList.prototype.forEach &&
                (e.DOMTokenList.prototype.forEach = Array.prototype.forEach),
              Node.prototype.contains ||
                (Node.prototype.contains = (...e) => {
                  let t = e[0];
                  if (!(0 in e)) throw TypeError("1 argument is required");
                  do if (this === t) return !0;
                  while ((t = t && t.parentNode));
                  return !1;
                });
          })();
          let V = 0,
            K = (e) => {
              for (let t of R || [])
                t.eventProcessor && (e = t.eventProcessor(e));
              return S && !z && (e = S(e)), e;
            };
          x = (e, a) => {
            if (
              ((e.timestamp = o6()),
              ap([
                sC,
                "access",
                (e) => e[0],
                "optionalAccess",
                (e) => e.isFrozen,
                "call",
                (e) => e(),
              ]) &&
                e.type !== sc.FullSnapshot &&
                !(
                  e.type === sc.IncrementalSnapshot &&
                  e.data.source === sd.Mutation
                ) &&
                sC.forEach((e) => e.unfreeze()),
              H)
            )
              ap([n, "optionalCall", (t) => t(K(e), a)]);
            else if (z) {
              let t = {
                type: "rrweb",
                event: K(e),
                origin: window.location.origin,
                isCheckout: a,
              };
              window.parent.postMessage(t, "*");
            }
            if (e.type === sc.FullSnapshot) (t = e), (V = 0);
            else if (e.type === sc.IncrementalSnapshot) {
              if (e.data.source === sd.Mutation && e.data.isAttachIframe)
                return;
              V++;
              let n = i && V >= i,
                a = r && t && e.timestamp - t.timestamp > r;
              (n || a) && er(!0);
            }
          };
          let Z = (e) => {
              x({
                type: sc.IncrementalSnapshot,
                data: { source: sd.Mutation, ...e },
              });
            },
            J = (e) =>
              x({
                type: sc.IncrementalSnapshot,
                data: { source: sd.Scroll, ...e },
              }),
            Y = (e) =>
              x({
                type: sc.IncrementalSnapshot,
                data: { source: sd.CanvasMutation, ...e },
              }),
            X = new sq({
              mutationCb: Z,
              adoptedStyleSheetCb: (e) =>
                x({
                  type: sc.IncrementalSnapshot,
                  data: { source: sd.AdoptedStyleSheet, ...e },
                }),
            }),
            Q =
              "boolean" == typeof __RRWEB_EXCLUDE_IFRAME__ &&
              __RRWEB_EXCLUDE_IFRAME__
                ? new sR()
                : new sF({
                    mirror: sz,
                    mutationCb: Z,
                    stylesheetManager: X,
                    recordCrossOriginIframes: j,
                    wrappedEmit: x,
                  });
          for (let e of R || [])
            e.getMirror &&
              e.getMirror({
                nodeMirror: sz,
                crossOriginIframeMirror: Q.crossOriginIframeMirror,
                crossOriginIframeStyleMirror: Q.crossOriginIframeStyleMirror,
              });
          let ee = new sH(),
            et = (function (e, t) {
              try {
                return e ? e(t) : new s$();
              } catch (e) {
                return (
                  console.warn("Unable to initialize CanvasManager"), new s$()
                );
              }
            })(q, {
              mirror: sz,
              win: window,
              mutationCb: (e) =>
                x({
                  type: sc.IncrementalSnapshot,
                  data: { source: sd.CanvasMutation, ...e },
                }),
              recordCanvas: k,
              blockClass: a,
              blockSelector: o,
              unblockSelector: s,
              maxCanvasSize: T,
              sampling: P.canvas,
              dataURLOptions: O,
              errorHandler: U,
            }),
            en =
              "boolean" == typeof __RRWEB_EXCLUDE_SHADOW_DOM__ &&
              __RRWEB_EXCLUDE_SHADOW_DOM__
                ? new sL()
                : new sU({
                    mutationCb: Z,
                    scrollCb: J,
                    bypassOptions: {
                      onMutation: $,
                      blockClass: a,
                      blockSelector: o,
                      unblockSelector: s,
                      maskAllText: c,
                      maskTextClass: d,
                      unmaskTextClass: f,
                      maskTextSelector: p,
                      unmaskTextSelector: h,
                      inlineStylesheet: m,
                      maskInputOptions: G,
                      dataURLOptions: O,
                      maskAttributeFn: v,
                      maskTextFn: _,
                      maskInputFn: w,
                      recordCanvas: k,
                      inlineImages: D,
                      sampling: P,
                      slimDOMOptions: W,
                      iframeManager: Q,
                      stylesheetManager: X,
                      canvasManager: et,
                      keepIframeSrcFn: F,
                      processedNodeManager: ee,
                    },
                    mirror: sz,
                  }),
            er = (e = !1) => {
              if (!A) return;
              x(
                {
                  type: sc.Meta,
                  data: {
                    href: window.location.href,
                    width: o4(),
                    height: o5(),
                  },
                },
                e
              ),
                X.reset(),
                en.init(),
                sC.forEach((e) => e.lock());
              let t = (function (e, t) {
                let {
                    mirror: n = new og(),
                    blockClass: r = "rr-block",
                    blockSelector: i = null,
                    unblockSelector: a = null,
                    maskAllText: o = !1,
                    maskTextClass: s = "rr-mask",
                    unmaskTextClass: u = null,
                    maskTextSelector: l = null,
                    unmaskTextSelector: c = null,
                    inlineStylesheet: d = !0,
                    inlineImages: f = !1,
                    recordCanvas: p = !1,
                    maskAllInputs: h = !1,
                    maskAttributeFn: m,
                    maskTextFn: y,
                    maskInputFn: g,
                    slimDOM: b = !1,
                    dataURLOptions: v,
                    preserveWhiteSpace: w,
                    onSerialize: E,
                    onIframeLoad: x,
                    iframeLoadTimeout: C,
                    onStylesheetLoad: _,
                    stylesheetLoadTimeout: T,
                    keepIframeSrcFn: S = () => !1,
                  } = t || {},
                  P =
                    !0 === h
                      ? {
                          color: !0,
                          date: !0,
                          "datetime-local": !0,
                          email: !0,
                          month: !0,
                          number: !0,
                          range: !0,
                          search: !0,
                          tel: !0,
                          text: !0,
                          time: !0,
                          url: !0,
                          week: !0,
                          textarea: !0,
                          select: !0,
                        }
                      : !1 === h
                      ? {}
                      : h,
                  O =
                    !0 === b || "all" === b
                      ? {
                          script: !0,
                          comment: !0,
                          headFavicon: !0,
                          headWhitespace: !0,
                          headMetaDescKeywords: "all" === b,
                          headMetaSocial: !0,
                          headMetaRobots: !0,
                          headMetaHttpEquiv: !0,
                          headMetaAuthorship: !0,
                          headMetaVerification: !0,
                        }
                      : !1 === b
                      ? {}
                      : b;
                return oJ(e, {
                  doc: e,
                  mirror: n,
                  blockClass: r,
                  blockSelector: i,
                  unblockSelector: a,
                  maskAllText: o,
                  maskTextClass: s,
                  unmaskTextClass: u,
                  maskTextSelector: l,
                  unmaskTextSelector: c,
                  skipChild: !1,
                  inlineStylesheet: d,
                  maskInputOptions: P,
                  maskAttributeFn: m,
                  maskTextFn: y,
                  maskInputFn: g,
                  slimDOMOptions: O,
                  dataURLOptions: v,
                  inlineImages: f,
                  recordCanvas: p,
                  preserveWhiteSpace: w,
                  onSerialize: E,
                  onIframeLoad: x,
                  iframeLoadTimeout: C,
                  onStylesheetLoad: _,
                  stylesheetLoadTimeout: T,
                  keepIframeSrcFn: S,
                  newlyAddedElement: !1,
                });
              })(document, {
                mirror: sz,
                blockClass: a,
                blockSelector: o,
                unblockSelector: s,
                maskAllText: c,
                maskTextClass: d,
                unmaskTextClass: f,
                maskTextSelector: p,
                unmaskTextSelector: h,
                inlineStylesheet: m,
                maskAllInputs: G,
                maskAttributeFn: v,
                maskInputFn: w,
                maskTextFn: _,
                slimDOM: W,
                dataURLOptions: O,
                recordCanvas: k,
                inlineImages: D,
                onSerialize: (e) => {
                  st(e, sz) && Q.addIframe(e),
                    sn(e, sz) && X.trackLinkElement(e),
                    sr(e) && en.addShadowRoot(e.shadowRoot, document);
                },
                onIframeLoad: (e, t) => {
                  Q.attachIframe(e, t),
                    e.contentWindow && et.addWindow(e.contentWindow),
                    en.observeAttachShadow(e);
                },
                onStylesheetLoad: (e, t) => {
                  X.attachLinkElement(e, t);
                },
                keepIframeSrcFn: F,
              });
              if (!t) return console.warn("Failed to snapshot the document");
              x({
                type: sc.FullSnapshot,
                data: { node: t, initialOffset: o3(window) },
              }),
                sC.forEach((e) => e.unlock()),
                document.adoptedStyleSheets &&
                  document.adoptedStyleSheets.length > 0 &&
                  X.adoptStyleSheets(
                    document.adoptedStyleSheets,
                    sz.getId(document)
                  );
            };
          C = er;
          try {
            let e = [],
              t = (e) =>
                sE(sj)(
                  {
                    onMutation: $,
                    mutationCb: Z,
                    mousemoveCb: (e, t) =>
                      x({
                        type: sc.IncrementalSnapshot,
                        data: { source: t, positions: e },
                      }),
                    mouseInteractionCb: (e) =>
                      x({
                        type: sc.IncrementalSnapshot,
                        data: { source: sd.MouseInteraction, ...e },
                      }),
                    scrollCb: J,
                    viewportResizeCb: (e) =>
                      x({
                        type: sc.IncrementalSnapshot,
                        data: { source: sd.ViewportResize, ...e },
                      }),
                    inputCb: (e) =>
                      x({
                        type: sc.IncrementalSnapshot,
                        data: { source: sd.Input, ...e },
                      }),
                    mediaInteractionCb: (e) =>
                      x({
                        type: sc.IncrementalSnapshot,
                        data: { source: sd.MediaInteraction, ...e },
                      }),
                    styleSheetRuleCb: (e) =>
                      x({
                        type: sc.IncrementalSnapshot,
                        data: { source: sd.StyleSheetRule, ...e },
                      }),
                    styleDeclarationCb: (e) =>
                      x({
                        type: sc.IncrementalSnapshot,
                        data: { source: sd.StyleDeclaration, ...e },
                      }),
                    canvasMutationCb: Y,
                    fontCb: (e) =>
                      x({
                        type: sc.IncrementalSnapshot,
                        data: { source: sd.Font, ...e },
                      }),
                    selectionCb: (e) => {
                      x({
                        type: sc.IncrementalSnapshot,
                        data: { source: sd.Selection, ...e },
                      });
                    },
                    customElementCb: (e) => {
                      x({
                        type: sc.IncrementalSnapshot,
                        data: { source: sd.CustomElement, ...e },
                      });
                    },
                    blockClass: a,
                    ignoreClass: u,
                    ignoreSelector: l,
                    maskAllText: c,
                    maskTextClass: d,
                    unmaskTextClass: f,
                    maskTextSelector: p,
                    unmaskTextSelector: h,
                    maskInputOptions: G,
                    inlineStylesheet: m,
                    sampling: P,
                    recordDOM: A,
                    recordCanvas: k,
                    inlineImages: D,
                    userTriggeredOnInput: M,
                    collectFonts: N,
                    doc: e,
                    maskAttributeFn: v,
                    maskInputFn: w,
                    maskTextFn: _,
                    keepIframeSrcFn: F,
                    blockSelector: o,
                    unblockSelector: s,
                    slimDOMOptions: W,
                    dataURLOptions: O,
                    mirror: sz,
                    iframeManager: Q,
                    stylesheetManager: X,
                    shadowDomManager: en,
                    processedNodeManager: ee,
                    canvasManager: et,
                    ignoreCSSAttributes: L,
                    plugins:
                      ap([
                        R,
                        "optionalAccess",
                        (e) => e.filter,
                        "call",
                        (e) => e((e) => e.observer),
                        "optionalAccess",
                        (e) => e.map,
                        "call",
                        (e) =>
                          e((e) => ({
                            observer: e.observer,
                            options: e.options,
                            callback: (t) =>
                              x({
                                type: sc.Plugin,
                                data: { plugin: e.name, payload: t },
                              }),
                          })),
                      ]) || [],
                  },
                  {}
                );
            Q.addLoadListener((n) => {
              try {
                e.push(t(n.contentDocument));
              } catch (e) {
                console.warn(e);
              }
            });
            let n = () => {
              er(), e.push(t(document));
            };
            return (
              "interactive" === document.readyState ||
              "complete" === document.readyState
                ? n()
                : (e.push(
                    oX("DOMContentLoaded", () => {
                      x({ type: sc.DomContentLoaded, data: {} }),
                        "DOMContentLoaded" === B && n();
                    })
                  ),
                  e.push(
                    oX(
                      "load",
                      () => {
                        x({ type: sc.Load, data: {} }), "load" === B && n();
                      },
                      window
                    )
                  )),
              () => {
                e.forEach((e) => e()), ee.destroy(), (C = void 0), (E = void 0);
              }
            );
          } catch (e) {
            console.warn(e);
          }
        }
        function sW(e) {
          return e > 9999999999 ? e : 1e3 * e;
        }
        function sV(e) {
          return e > 9999999999 ? e / 1e3 : e;
        }
        function sK(e, t) {
          "sentry.transaction" !== t.category &&
            (["ui.click", "ui.input"].includes(t.category)
              ? e.triggerUserActivity()
              : e.checkAndHandleExpiredSession(),
            e.addUpdate(
              () => (
                e.throttledAddEvent({
                  type: sc.Custom,
                  timestamp: 1e3 * (t.timestamp || 0),
                  data: { tag: "breadcrumb", payload: aj(t, 10, 1e3) },
                }),
                "console" === t.category
              )
            ));
        }
        function sZ(e) {
          let t = e.closest("button,a");
          return t || e;
        }
        function sJ(e) {
          let t = sY(e);
          return t && t instanceof Element ? sZ(t) : t;
        }
        function sY(e) {
          return "object" == typeof e && e && "target" in e ? e.target : e;
        }
        (sG.mirror = sz),
          (sG.takeFullSnapshot = function (e) {
            if (!C)
              throw Error("please take full snapshot after start recording");
            C(e);
          });
        let sX = new Set([
          sd.Mutation,
          sd.StyleSheetRule,
          sd.StyleDeclaration,
          sd.AdoptedStyleSheet,
          sd.CanvasMutation,
          sd.Selection,
          sd.MediaInteraction,
        ]);
        class sQ {
          constructor(e, t, n = sK) {
            (this._lastMutation = 0),
              (this._lastScroll = 0),
              (this._clicks = []),
              (this._timeout = t.timeout / 1e3),
              (this._threshold = t.threshold / 1e3),
              (this._scrollTimeout = t.scrollTimeout / 1e3),
              (this._replay = e),
              (this._ignoreSelector = t.ignoreSelector),
              (this._addBreadcrumbEvent = n);
          }
          addListeners() {
            var e;
            let t =
              ((e = () => {
                this._lastMutation = s1();
              }),
              _ ||
                ((_ = []),
                (function (e, t, n) {
                  if (!(t in e)) return;
                  let r = e[t],
                    i = n(r);
                  "function" == typeof i &&
                    (function (e, t) {
                      try {
                        let n = t.prototype || {};
                        (e.prototype = t.prototype = n),
                          aP(e, "__sentry_original__", t);
                      } catch (e) {}
                    })(i, r);
                  try {
                    e[t] = i;
                  } catch (e) {}
                })(am, "open", function (e) {
                  return function (...t) {
                    if (_)
                      try {
                        _.forEach((e) => e());
                      } catch (e) {}
                    return e.apply(am, t);
                  };
                })),
              _.push(e),
              () => {
                let t = _ ? _.indexOf(e) : -1;
                t > -1 && _.splice(t, 1);
              });
            this._teardown = () => {
              t(),
                (this._clicks = []),
                (this._lastMutation = 0),
                (this._lastScroll = 0);
            };
          }
          removeListeners() {
            this._teardown && this._teardown(),
              this._checkClickTimeout && clearTimeout(this._checkClickTimeout);
          }
          handleClick(e, t) {
            var n;
            if (
              ((n = this._ignoreSelector),
              !s0.includes(t.tagName) ||
                ("INPUT" === t.tagName &&
                  !["submit", "button"].includes(
                    t.getAttribute("type") || ""
                  )) ||
                ("A" === t.tagName &&
                  (t.hasAttribute("download") ||
                    (t.hasAttribute("target") &&
                      "_self" !== t.getAttribute("target")))) ||
                (n && t.matches(n)) ||
                !(e.data && "number" == typeof e.data.nodeId && e.timestamp))
            )
              return;
            let r = {
              timestamp: sV(e.timestamp),
              clickBreadcrumb: e,
              clickCount: 0,
              node: t,
            };
            this._clicks.some(
              (e) =>
                e.node === r.node && 1 > Math.abs(e.timestamp - r.timestamp)
            ) ||
              (this._clicks.push(r),
              1 === this._clicks.length && this._scheduleCheckClicks());
          }
          registerMutation(e = Date.now()) {
            this._lastMutation = sV(e);
          }
          registerScroll(e = Date.now()) {
            this._lastScroll = sV(e);
          }
          registerClick(e) {
            let t = sZ(e);
            this._handleMultiClick(t);
          }
          _handleMultiClick(e) {
            this._getClicks(e).forEach((e) => {
              e.clickCount++;
            });
          }
          _getClicks(e) {
            return this._clicks.filter((t) => t.node === e);
          }
          _checkClicks() {
            let e = [],
              t = s1();
            for (let n of (this._clicks.forEach((n) => {
              !n.mutationAfter &&
                this._lastMutation &&
                (n.mutationAfter =
                  n.timestamp <= this._lastMutation
                    ? this._lastMutation - n.timestamp
                    : void 0),
                !n.scrollAfter &&
                  this._lastScroll &&
                  (n.scrollAfter =
                    n.timestamp <= this._lastScroll
                      ? this._lastScroll - n.timestamp
                      : void 0),
                n.timestamp + this._timeout <= t && e.push(n);
            }),
            e)) {
              let e = this._clicks.indexOf(n);
              e > -1 &&
                (this._generateBreadcrumbs(n), this._clicks.splice(e, 1));
            }
            this._clicks.length && this._scheduleCheckClicks();
          }
          _generateBreadcrumbs(e) {
            let t = this._replay,
              n = e.scrollAfter && e.scrollAfter <= this._scrollTimeout,
              r = e.mutationAfter && e.mutationAfter <= this._threshold,
              { clickCount: i, clickBreadcrumb: a } = e;
            if (!n && !r) {
              let n =
                  1e3 *
                  Math.min(e.mutationAfter || this._timeout, this._timeout),
                r = n < 1e3 * this._timeout ? "mutation" : "timeout",
                o = {
                  type: "default",
                  message: a.message,
                  timestamp: a.timestamp,
                  category: "ui.slowClickDetected",
                  data: {
                    ...a.data,
                    url: am.location.href,
                    route: t.getCurrentRoute(),
                    timeAfterClickMs: n,
                    endReason: r,
                    clickCount: i || 1,
                  },
                };
              this._addBreadcrumbEvent(t, o);
              return;
            }
            if (i > 1) {
              let e = {
                type: "default",
                message: a.message,
                timestamp: a.timestamp,
                category: "ui.multiClick",
                data: {
                  ...a.data,
                  url: am.location.href,
                  route: t.getCurrentRoute(),
                  clickCount: i,
                  metric: !0,
                },
              };
              this._addBreadcrumbEvent(t, e);
            }
          }
          _scheduleCheckClicks() {
            this._checkClickTimeout && clearTimeout(this._checkClickTimeout),
              (this._checkClickTimeout = nb(() => this._checkClicks(), 1e3));
          }
        }
        let s0 = ["A", "BUTTON", "INPUT"];
        function s1() {
          return Date.now() / 1e3;
        }
        function s2(e) {
          return { timestamp: Date.now() / 1e3, type: "default", ...e };
        }
        ((ei = el || (el = {}))[(ei.Document = 0)] = "Document"),
          (ei[(ei.DocumentType = 1)] = "DocumentType"),
          (ei[(ei.Element = 2)] = "Element"),
          (ei[(ei.Text = 3)] = "Text"),
          (ei[(ei.CDATA = 4)] = "CDATA"),
          (ei[(ei.Comment = 5)] = "Comment");
        let s6 = new Set([
            "id",
            "class",
            "aria-label",
            "role",
            "name",
            "alt",
            "title",
            "data-test-id",
            "data-testid",
            "disabled",
            "aria-disabled",
            "data-sentry-component",
          ]),
          s3 = (e) => (t) => {
            if (!e.isEnabled()) return;
            let n = (function (e) {
              let { target: t, message: n } = (function (e) {
                let t;
                let n = "click" === e.name,
                  r = null;
                try {
                  (r = n ? sJ(e.event) : sY(e.event)),
                    (t = aC(r, { maxStringLength: 200 }) || "<unknown>");
                } catch (e) {
                  t = "<unknown>";
                }
                return { target: r, message: t };
              })(e);
              return s2({ category: `ui.${e.name}`, ...s5(t, n) });
            })(t);
            if (!n) return;
            let r = "click" === t.name,
              i = r ? t.event : void 0;
            r &&
              e.clickDetector &&
              i &&
              i.target &&
              !i.altKey &&
              !i.metaKey &&
              !i.ctrlKey &&
              !i.shiftKey &&
              (function (e, t, n) {
                e.handleClick(t, n);
              })(e.clickDetector, n, sJ(t.event)),
              sK(e, n);
          };
        function s5(e, t) {
          let n = sG.mirror.getId(e),
            r = n && sG.mirror.getNode(n),
            i = r && sG.mirror.getMeta(r),
            a = i && i.type === el.Element ? i : null;
          return {
            message: t,
            data: a
              ? {
                  nodeId: n,
                  node: {
                    id: n,
                    tagName: a.tagName,
                    textContent: Array.from(a.childNodes)
                      .map((e) => e.type === el.Text && e.textContent)
                      .filter(Boolean)
                      .map((e) => e.trim())
                      .join(""),
                    attributes: (function (e) {
                      let t = {};
                      for (let n in (!e["data-sentry-component"] &&
                        e["data-sentry-element"] &&
                        (e["data-sentry-component"] = e["data-sentry-element"]),
                      e))
                        if (s6.has(n)) {
                          let r = n;
                          ("data-testid" === n || "data-test-id" === n) &&
                            (r = "testId"),
                            (t[r] = e[n]);
                        }
                      return t;
                    })(a.attributes),
                  },
                }
              : {},
          };
        }
        let s4 = {
          resource: function (e) {
            let {
              entryType: t,
              initiatorType: n,
              name: r,
              responseEnd: i,
              startTime: a,
              decodedBodySize: o,
              encodedBodySize: s,
              responseStatus: u,
              transferSize: l,
            } = e;
            return ["fetch", "xmlhttprequest"].includes(n)
              ? null
              : {
                  type: `${t}.${n}`,
                  start: s9(a),
                  end: s9(i),
                  name: r,
                  data: {
                    size: l,
                    statusCode: u,
                    decodedBodySize: o,
                    encodedBodySize: s,
                  },
                };
          },
          paint: function (e) {
            let { duration: t, entryType: n, name: r, startTime: i } = e,
              a = s9(i);
            return { type: n, name: r, start: a, end: a + t, data: void 0 };
          },
          navigation: function (e) {
            let {
              entryType: t,
              name: n,
              decodedBodySize: r,
              duration: i,
              domComplete: a,
              encodedBodySize: o,
              domContentLoadedEventStart: s,
              domContentLoadedEventEnd: u,
              domInteractive: l,
              loadEventStart: c,
              loadEventEnd: d,
              redirectCount: f,
              startTime: p,
              transferSize: h,
              type: m,
            } = e;
            return 0 === i
              ? null
              : {
                  type: `${t}.${m}`,
                  start: s9(p),
                  end: s9(a),
                  name: n,
                  data: {
                    size: h,
                    decodedBodySize: r,
                    encodedBodySize: o,
                    duration: i,
                    domInteractive: l,
                    domContentLoadedEventStart: s,
                    domContentLoadedEventEnd: u,
                    loadEventStart: c,
                    loadEventEnd: d,
                    domComplete: a,
                    redirectCount: f,
                  },
                };
          },
        };
        function s8(e, t) {
          return ({ metric: n }) => void t.replayPerformanceEntries.push(e(n));
        }
        function s7(e) {
          let t = s4[e.entryType];
          return t ? t(e) : null;
        }
        function s9(e) {
          return ((aN || am.performance.timeOrigin) + e) / 1e3;
        }
        function ue(e) {
          let t = e.entries[e.entries.length - 1],
            n = t && t.element ? [t.element] : void 0;
          return ui(e, "largest-contentful-paint", n);
        }
        function ut(e) {
          let t = [],
            n = [];
          for (let r of e.entries)
            if (void 0 !== r.sources) {
              let e = [];
              for (let t of r.sources)
                if (t.node) {
                  n.push(t.node);
                  let r = sG.mirror.getId(t.node);
                  r && e.push(r);
                }
              t.push({ value: r.value, nodeIds: e.length ? e : void 0 });
            }
          return ui(e, "cumulative-layout-shift", n, t);
        }
        function un(e) {
          let t = e.entries[e.entries.length - 1],
            n = t && t.target ? [t.target] : void 0;
          return ui(e, "first-input-delay", n);
        }
        function ur(e) {
          let t = e.entries[e.entries.length - 1],
            n = t && t.target ? [t.target] : void 0;
          return ui(e, "interaction-to-next-paint", n);
        }
        function ui(e, t, n, r) {
          let i = e.value,
            a = e.rating,
            o = s9(i);
          return {
            type: "web-vital",
            name: t,
            start: o,
            end: o,
            data: {
              value: i,
              size: i,
              rating: a,
              nodeIds: n ? n.map((e) => sG.mirror.getId(e)) : void 0,
              attributions: r,
            },
          };
        }
        let ua = ["info", "warn", "error", "log"];
        (function () {
          let e = {
            exception: () => void 0,
            infoTick: () => void 0,
            setConfig: (e) => {
              e.captureExceptions, e.traceInternals;
            },
          };
          ua.forEach((t) => {
            e[t] = () => void 0;
          });
        })();
        class uo extends Error {
          constructor() {
            super("Event buffer exceeded maximum size of 20000000.");
          }
        }
        class us {
          constructor() {
            (this.events = []),
              (this._totalSize = 0),
              (this.hasCheckout = !1),
              (this.waitForCheckout = !1);
          }
          get hasEvents() {
            return this.events.length > 0;
          }
          get type() {
            return "sync";
          }
          destroy() {
            this.events = [];
          }
          async addEvent(e) {
            let t = JSON.stringify(e).length;
            if (((this._totalSize += t), this._totalSize > 2e7)) throw new uo();
            this.events.push(e);
          }
          finish() {
            return new Promise((e) => {
              let t = this.events;
              this.clear(), e(JSON.stringify(t));
            });
          }
          clear() {
            (this.events = []), (this._totalSize = 0), (this.hasCheckout = !1);
          }
          getEarliestTimestamp() {
            let e = this.events.map((e) => e.timestamp).sort()[0];
            return e ? sW(e) : null;
          }
        }
        class uu {
          constructor(e) {
            (this._worker = e), (this._id = 0);
          }
          ensureReady() {
            return (
              this._ensureReadyPromise ||
                (this._ensureReadyPromise = new Promise((e, t) => {
                  this._worker.addEventListener(
                    "message",
                    ({ data: n }) => {
                      n.success ? e() : t();
                    },
                    { once: !0 }
                  ),
                    this._worker.addEventListener(
                      "error",
                      (e) => {
                        t(e);
                      },
                      { once: !0 }
                    );
                })),
              this._ensureReadyPromise
            );
          }
          destroy() {
            this._worker.terminate();
          }
          postMessage(e, t) {
            let n = this._getAndIncrementId();
            return new Promise((r, i) => {
              let a = ({ data: t }) => {
                if (t.method === e && t.id === n) {
                  if (
                    (this._worker.removeEventListener("message", a), !t.success)
                  ) {
                    i(Error("Error in compression worker"));
                    return;
                  }
                  r(t.response);
                }
              };
              this._worker.addEventListener("message", a),
                this._worker.postMessage({ id: n, method: e, arg: t });
            });
          }
          _getAndIncrementId() {
            return this._id++;
          }
        }
        class ul {
          constructor(e) {
            (this._worker = new uu(e)),
              (this._earliestTimestamp = null),
              (this._totalSize = 0),
              (this.hasCheckout = !1),
              (this.waitForCheckout = !1);
          }
          get hasEvents() {
            return !!this._earliestTimestamp;
          }
          get type() {
            return "worker";
          }
          ensureReady() {
            return this._worker.ensureReady();
          }
          destroy() {
            this._worker.destroy();
          }
          addEvent(e) {
            let t = sW(e.timestamp);
            (!this._earliestTimestamp || t < this._earliestTimestamp) &&
              (this._earliestTimestamp = t);
            let n = JSON.stringify(e);
            return ((this._totalSize += n.length), this._totalSize > 2e7)
              ? Promise.reject(new uo())
              : this._sendEventToWorker(n);
          }
          finish() {
            return this._finishRequest();
          }
          clear() {
            (this._earliestTimestamp = null),
              (this._totalSize = 0),
              (this.hasCheckout = !1),
              this._worker.postMessage("clear").then(null, (e) => {});
          }
          getEarliestTimestamp() {
            return this._earliestTimestamp;
          }
          _sendEventToWorker(e) {
            return this._worker.postMessage("addEvent", e);
          }
          async _finishRequest() {
            let e = await this._worker.postMessage("finish");
            return (this._earliestTimestamp = null), (this._totalSize = 0), e;
          }
        }
        class uc {
          constructor(e) {
            (this._fallback = new us()),
              (this._compression = new ul(e)),
              (this._used = this._fallback),
              (this._ensureWorkerIsLoadedPromise =
                this._ensureWorkerIsLoaded());
          }
          get waitForCheckout() {
            return this._used.waitForCheckout;
          }
          get type() {
            return this._used.type;
          }
          get hasEvents() {
            return this._used.hasEvents;
          }
          get hasCheckout() {
            return this._used.hasCheckout;
          }
          set hasCheckout(e) {
            this._used.hasCheckout = e;
          }
          set waitForCheckout(e) {
            this._used.waitForCheckout = e;
          }
          destroy() {
            this._fallback.destroy(), this._compression.destroy();
          }
          clear() {
            return this._used.clear();
          }
          getEarliestTimestamp() {
            return this._used.getEarliestTimestamp();
          }
          addEvent(e) {
            return this._used.addEvent(e);
          }
          async finish() {
            return await this.ensureWorkerIsLoaded(), this._used.finish();
          }
          ensureWorkerIsLoaded() {
            return this._ensureWorkerIsLoadedPromise;
          }
          async _ensureWorkerIsLoaded() {
            try {
              await this._compression.ensureReady();
            } catch (e) {
              return;
            }
            await this._switchToCompressionWorker();
          }
          async _switchToCompressionWorker() {
            let {
                events: e,
                hasCheckout: t,
                waitForCheckout: n,
              } = this._fallback,
              r = [];
            for (let t of e) r.push(this._compression.addEvent(t));
            (this._compression.hasCheckout = t),
              (this._compression.waitForCheckout = n),
              (this._used = this._compression);
            try {
              await Promise.all(r), this._fallback.clear();
            } catch (e) {}
          }
        }
        function ud() {
          try {
            return "sessionStorage" in am && !!am.sessionStorage;
          } catch (e) {
            return !1;
          }
        }
        function uf(e) {
          return void 0 !== e && Math.random() < e;
        }
        function up(e) {
          let t = Date.now(),
            n = e.id || aF(),
            r = e.started || t,
            i = e.lastActivity || t,
            a = e.segmentId || 0,
            o = e.sampled,
            s = e.previousSessionId;
          return {
            id: n,
            started: r,
            lastActivity: i,
            segmentId: a,
            sampled: o,
            previousSessionId: s,
          };
        }
        function uh(e) {
          if (ud())
            try {
              am.sessionStorage.setItem(ol, JSON.stringify(e));
            } catch (e) {}
        }
        function um(
          { sessionSampleRate: e, allowBuffering: t, stickySession: n = !1 },
          { previousSessionId: r } = {}
        ) {
          let i = uf(e) ? "session" : !!t && "buffer",
            a = up({ sampled: i, previousSessionId: r });
          return n && uh(a), a;
        }
        function uy(e, t, n = +new Date()) {
          return null === e || void 0 === t || t < 0 || (0 !== t && e + t <= n);
        }
        function ug(
          e,
          {
            maxReplayDuration: t,
            sessionIdleExpire: n,
            targetTime: r = Date.now(),
          }
        ) {
          return uy(e.started, t, r) || uy(e.lastActivity, n, r);
        }
        function ub(e, { sessionIdleExpire: t, maxReplayDuration: n }) {
          return (
            !!ug(e, { sessionIdleExpire: t, maxReplayDuration: n }) &&
            ("buffer" !== e.sampled || 0 !== e.segmentId)
          );
        }
        function uv(
          { sessionIdleExpire: e, maxReplayDuration: t, previousSessionId: n },
          r
        ) {
          let i =
            r.stickySession &&
            (function () {
              if (!ud()) return null;
              try {
                let e = am.sessionStorage.getItem(ol);
                if (!e) return null;
                let t = JSON.parse(e);
                return up(t);
              } catch (e) {
                return null;
              }
            })();
          return i
            ? ub(i, { sessionIdleExpire: e, maxReplayDuration: t })
              ? um(r, { previousSessionId: i.id })
              : i
            : um(r, { previousSessionId: n });
        }
        function uw(e, t, n) {
          return !!ux(e, t) && (uE(e, t, n), !0);
        }
        async function uE(e, t, n) {
          let { eventBuffer: r } = e;
          if (!r || (r.waitForCheckout && !n)) return null;
          let i = "buffer" === e.recordingMode;
          try {
            n && i && r.clear(),
              n && ((r.hasCheckout = !0), (r.waitForCheckout = !1));
            let a = e.getOptions(),
              o = (function (e, t) {
                try {
                  if ("function" == typeof t && e.type === sc.Custom)
                    return t(e);
                } catch (e) {
                  return null;
                }
                return e;
              })(t, a.beforeAddRecordingEvent);
            if (!o) return;
            return await r.addEvent(o);
          } catch (a) {
            let t = a && a instanceof uo;
            if (t && i) return r.clear(), (r.waitForCheckout = !0), null;
            e.handleException(a),
              await e.stop({ reason: t ? "addEventSizeExceeded" : "addEvent" });
            let n = aQ();
            n && n.recordDroppedEvent("internal_sdk_error", "replay");
          }
        }
        function ux(e, t) {
          if (!e.eventBuffer || e.isPaused() || !e.isEnabled()) return !1;
          let n = sW(t.timestamp);
          return (
            !(n + e.timeouts.sessionIdlePause < Date.now()) &&
            !(
              n >
              e.getContext().initialTimestamp + e.getOptions().maxReplayDuration
            )
          );
        }
        function uC(e) {
          return "transaction" === e.type;
        }
        function u_(e) {
          return "feedback" === e.type;
        }
        function uT(e) {
          return !!e.category;
        }
        function uS() {
          let e = aY().getPropagationContext().dsc;
          e && delete e.replay_id;
          let t = ot();
          if (t) {
            let e = on(t);
            delete e.replay_id;
          }
        }
        function uP(e, t) {
          return t.map(({ type: t, start: n, end: r, name: i, data: a }) => {
            let o = e.throttledAddEvent({
              type: sc.Custom,
              timestamp: n,
              data: {
                tag: "performanceSpan",
                payload: {
                  op: t,
                  description: i,
                  startTimestamp: n,
                  endTimestamp: r,
                  data: a,
                },
              },
            });
            return "string" == typeof o ? Promise.resolve(null) : o;
          });
        }
        function uO(e, t) {
          e.isEnabled() &&
            null !== t &&
            !(function (e, t) {
              let n = t && t.getDsn(),
                r = t && t.getOptions().tunnel;
              return (!!n && e.includes(n.host)) || (!!r && oa(e) === oa(r));
            })(t.name, aQ()) &&
            e.addUpdate(() => (uP(e, [t]), !0));
        }
        function uI(e) {
          if (!e) return;
          let t = new TextEncoder();
          try {
            if ("string" == typeof e) return t.encode(e).length;
            if (e instanceof URLSearchParams)
              return t.encode(e.toString()).length;
            if (e instanceof FormData) {
              let n = uR(e);
              return t.encode(n).length;
            }
            if (e instanceof Blob) return e.size;
            if (e instanceof ArrayBuffer) return e.byteLength;
          } catch (e) {}
        }
        function uA(e) {
          if (!e) return;
          let t = parseInt(e, 10);
          return isNaN(t) ? void 0 : t;
        }
        function uk(e) {
          try {
            if ("string" == typeof e) return [e];
            if (e instanceof URLSearchParams) return [e.toString()];
            if (e instanceof FormData) return [uR(e)];
            if (!e) return [void 0];
          } catch (e) {
            return [void 0, "BODY_PARSE_ERROR"];
          }
          return [void 0, "UNPARSEABLE_BODY_TYPE"];
        }
        function uj(e, t) {
          if (!e)
            return { headers: {}, size: void 0, _meta: { warnings: [t] } };
          let n = { ...e._meta },
            r = n.warnings || [];
          return (n.warnings = [...r, t]), (e._meta = n), e;
        }
        function uB(e, t) {
          if (!t) return null;
          let {
              startTimestamp: n,
              endTimestamp: r,
              url: i,
              method: a,
              statusCode: o,
              request: s,
              response: u,
            } = t,
            l = {
              type: e,
              start: n / 1e3,
              end: r / 1e3,
              name: i,
              data: aA({ method: a, statusCode: o, request: s, response: u }),
            };
          return l;
        }
        function uM(e) {
          return { headers: {}, size: e, _meta: { warnings: ["URL_SKIPPED"] } };
        }
        function uN(e, t, n) {
          if (!t && 0 === Object.keys(e).length) return;
          if (!t) return { headers: e };
          if (!n) return { headers: e, size: t };
          let r = { headers: e, size: t },
            { body: i, warnings: a } = (function (e) {
              if (!e || "string" != typeof e) return { body: e };
              let t = e.length > 15e4,
                n = (function (e) {
                  let t = e[0],
                    n = e[e.length - 1];
                  return ("[" === t && "]" === n) || ("{" === t && "}" === n);
                })(e);
              if (t) {
                let t = e.slice(0, 15e4);
                return n
                  ? { body: t, warnings: ["MAYBE_JSON_TRUNCATED"] }
                  : { body: `${t}…`, warnings: ["TEXT_TRUNCATED"] };
              }
              if (n)
                try {
                  let t = JSON.parse(e);
                  return { body: t };
                } catch (e) {}
              return { body: e };
            })(n);
          return (
            (r.body = i), a && a.length > 0 && (r._meta = { warnings: a }), r
          );
        }
        function uD(e, t) {
          return Object.entries(e).reduce((n, [r, i]) => {
            let a = r.toLowerCase();
            return t.includes(a) && e[r] && (n[a] = i), n;
          }, {});
        }
        function uR(e) {
          return new URLSearchParams(e).toString();
        }
        function uF(e, t) {
          let n = (function (e, t = am.document.baseURI) {
            if (
              e.startsWith("http://") ||
              e.startsWith("https://") ||
              e.startsWith(am.location.origin)
            )
              return e;
            let n = new URL(e, t);
            if (n.origin !== new URL(t).origin) return e;
            let r = n.href;
            return !e.endsWith("/") && r.endsWith("/") ? r.slice(0, -1) : r;
          })(e);
          return (function (e, t = [], n = !1) {
            return t.some((t) =>
              (function (e, t, n = !1) {
                return (
                  !!av(e) &&
                  (ab(t, "RegExp")
                    ? t.test(e)
                    : !!av(t) && (n ? e === t : e.includes(t)))
                );
              })(e, t, n)
            );
          })(n, t);
        }
        async function uL(e, t, n) {
          try {
            let r = await uU(e, t, n),
              i = uB("resource.fetch", r);
            uO(n.replay, i);
          } catch (e) {}
        }
        async function uU(e, t, n) {
          let r = Date.now(),
            { startTimestamp: i = r, endTimestamp: a = r } = t,
            {
              url: o,
              method: s,
              status_code: u = 0,
              request_body_size: l,
              response_body_size: c,
            } = e.data,
            d =
              uF(o, n.networkDetailAllowUrls) &&
              !uF(o, n.networkDetailDenyUrls),
            f = d
              ? (function (
                  { networkCaptureBodies: e, networkRequestHeaders: t },
                  n,
                  r
                ) {
                  let i = n
                    ? 1 === n.length && "string" != typeof n[0]
                      ? uG(n[0], t)
                      : 2 === n.length
                      ? uG(n[1], t)
                      : {}
                    : {};
                  if (!e) return uN(i, r, void 0);
                  let a = uH(n),
                    [o, s] = uk(a),
                    u = uN(i, r, o);
                  return s ? uj(u, s) : u;
                })(n, t.input, l)
              : uM(l),
            p = await u$(d, n, t.response, c);
          return {
            startTimestamp: i,
            endTimestamp: a,
            url: o,
            method: s,
            statusCode: u,
            request: f,
            response: p,
          };
        }
        async function u$(
          e,
          { networkCaptureBodies: t, networkResponseHeaders: n },
          r,
          i
        ) {
          if (!e && void 0 !== i) return uM(i);
          let a = r ? uz(r.headers, n) : {};
          if (!r || (!t && void 0 !== i)) return uN(a, i, void 0);
          let [o, s] = await uq(r),
            u = (function (
              e,
              {
                networkCaptureBodies: t,
                responseBodySize: n,
                captureDetails: r,
                headers: i,
              }
            ) {
              try {
                let a = e && e.length && void 0 === n ? uI(e) : n;
                if (!r) return uM(a);
                if (t) return uN(i, a, e);
                return uN(i, a, void 0);
              } catch (e) {
                return uN(i, n, void 0);
              }
            })(o, {
              networkCaptureBodies: t,
              responseBodySize: i,
              captureDetails: e,
              headers: a,
            });
          return s ? uj(u, s) : u;
        }
        async function uq(e) {
          let t = (function (e) {
            try {
              return e.clone();
            } catch (e) {}
          })(e);
          if (!t) return [void 0, "BODY_PARSE_ERROR"];
          try {
            let e = await new Promise((e, n) => {
              let r = nb(
                () => n(Error("Timeout while trying to read response body")),
                500
              );
              uW(t)
                .then(
                  (t) => e(t),
                  (e) => n(e)
                )
                .finally(() => clearTimeout(r));
            });
            return [e];
          } catch (e) {
            if (e instanceof Error && e.message.indexOf("Timeout") > -1)
              return [void 0, "BODY_PARSE_TIMEOUT"];
            return [void 0, "BODY_PARSE_ERROR"];
          }
        }
        function uH(e = []) {
          if (2 === e.length && "object" == typeof e[1]) return e[1].body;
        }
        function uz(e, t) {
          let n = {};
          return (
            t.forEach((t) => {
              e.get(t) && (n[t] = e.get(t));
            }),
            n
          );
        }
        function uG(e, t) {
          if (!e) return {};
          let n = e.headers;
          return n
            ? n instanceof Headers
              ? uz(n, t)
              : Array.isArray(n)
              ? {}
              : uD(n, t)
            : {};
        }
        async function uW(e) {
          return await e.text();
        }
        async function uV(e, t, n) {
          try {
            let r = (function (e, t, n) {
                let r = Date.now(),
                  {
                    startTimestamp: i = r,
                    endTimestamp: a = r,
                    input: o,
                    xhr: s,
                  } = t,
                  {
                    url: u,
                    method: l,
                    status_code: c = 0,
                    request_body_size: d,
                    response_body_size: f,
                  } = e.data;
                if (!u) return null;
                if (
                  !s ||
                  !uF(u, n.networkDetailAllowUrls) ||
                  uF(u, n.networkDetailDenyUrls)
                ) {
                  let e = uM(d),
                    t = uM(f);
                  return {
                    startTimestamp: i,
                    endTimestamp: a,
                    url: u,
                    method: l,
                    statusCode: c,
                    request: e,
                    response: t,
                  };
                }
                let p = s[tI],
                  h = p ? uD(p.request_headers, n.networkRequestHeaders) : {},
                  m = uD(
                    (function (e) {
                      let t = e.getAllResponseHeaders();
                      return t
                        ? t.split("\r\n").reduce((e, t) => {
                            let [n, r] = t.split(": ");
                            return r && (e[n.toLowerCase()] = r), e;
                          }, {})
                        : {};
                    })(s),
                    n.networkResponseHeaders
                  ),
                  [y, g] = n.networkCaptureBodies ? uk(o) : [void 0],
                  [b, v] = n.networkCaptureBodies
                    ? (function (e) {
                        let t = [];
                        try {
                          return [e.responseText];
                        } catch (e) {
                          t.push(e);
                        }
                        try {
                          return (function (e, t) {
                            try {
                              if ("string" == typeof e) return [e];
                              if (e instanceof Document)
                                return [e.body.outerHTML];
                              if ("json" === t && e && "object" == typeof e)
                                return [JSON.stringify(e)];
                              if (!e) return [void 0];
                            } catch (e) {
                              return [void 0, "BODY_PARSE_ERROR"];
                            }
                            return [void 0, "UNPARSEABLE_BODY_TYPE"];
                          })(e.response, e.responseType);
                        } catch (e) {
                          t.push(e);
                        }
                        return [void 0];
                      })(s)
                    : [void 0],
                  w = uN(h, d, y),
                  E = uN(m, f, b);
                return {
                  startTimestamp: i,
                  endTimestamp: a,
                  url: u,
                  method: l,
                  statusCode: c,
                  request: g ? uj(w, g) : w,
                  response: v ? uj(E, v) : E,
                };
              })(e, t, n),
              i = uB("resource.xhr", r);
            uO(n.replay, i);
          } catch (e) {}
        }
        async function uK(e) {
          try {
            return Promise.all(
              uP(e, [
                (function (e) {
                  let {
                      jsHeapSizeLimit: t,
                      totalJSHeapSize: n,
                      usedJSHeapSize: r,
                    } = e,
                    i = Date.now() / 1e3;
                  return {
                    type: "memory",
                    name: "memory",
                    start: i,
                    end: i,
                    data: {
                      memory: {
                        jsHeapSizeLimit: t,
                        totalJSHeapSize: n,
                        usedJSHeapSize: r,
                      },
                    },
                  };
                })(am.performance.memory),
              ])
            );
          } catch (e) {
            return [];
          }
        }
        async function uZ({ client: e, scope: t, replayId: n, event: r }) {
          let i =
              "object" != typeof e._integrations ||
              null === e._integrations ||
              Array.isArray(e._integrations)
                ? void 0
                : Object.keys(e._integrations),
            a = { event_id: n, integrations: i };
          e.emit("preprocessEvent", r, a);
          let o = await (function (e, t, n, r, i, a) {
            let { normalizeDepth: o = 3, normalizeMaxBreadth: s = 1e3 } = e,
              u = {
                ...t,
                event_id: t.event_id || n.event_id || aF(),
                timestamp: t.timestamp || aB(),
              },
              l = n.integrations || e.integrations.map((e) => e.name);
            (function (e, t) {
              let {
                environment: n,
                release: r,
                dist: i,
                maxValueLength: a = 250,
              } = t;
              (e.environment = e.environment || n || a0),
                !e.release && r && (e.release = r),
                !e.dist && i && (e.dist = i),
                e.message && (e.message = a6(e.message, a));
              let o =
                e.exception && e.exception.values && e.exception.values[0];
              o && o.value && (o.value = a6(o.value, a));
              let s = e.request;
              s && s.url && (s.url = a6(s.url, a));
            })(u, e),
              l.length > 0 &&
                ((u.sdk = u.sdk || {}),
                (u.sdk.integrations = [...(u.sdk.integrations || []), ...l])),
              i && i.emit("applyFrameMetadata", t),
              void 0 === t.type &&
                (function (e, t) {
                  let n = (function (e) {
                    let t = am._sentryDebugIds;
                    if (!t) return {};
                    let n = Object.keys(t);
                    return b && n.length === g
                      ? b
                      : ((g = n.length),
                        (b = n.reduce((n, r) => {
                          y || (y = {});
                          let i = y[r];
                          if (i) n[i[0]] = i[1];
                          else {
                            let i = e(r);
                            for (let e = i.length - 1; e >= 0; e--) {
                              let a = i[e],
                                o = a && a.filename,
                                s = t[r];
                              if (o && s) {
                                (n[o] = s), (y[r] = [o, s]);
                                break;
                              }
                            }
                          }
                          return n;
                        }, {})));
                  })(t);
                  try {
                    e.exception.values.forEach((e) => {
                      e.stacktrace.frames.forEach((e) => {
                        n && e.filename && (e.debug_id = n[e.filename]);
                      });
                    });
                  } catch (e) {}
                })(u, e.stackParser);
            let c = (function (e, t) {
              if (!t) return e;
              let n = e ? e.clone() : new az();
              return n.update(t), n;
            })(r, n.captureContext);
            n.mechanism &&
              (function (e, t) {
                let n =
                  e.exception && e.exception.values
                    ? e.exception.values[0]
                    : void 0;
                if (!n) return;
                let r = n.mechanism;
                if (
                  ((n.mechanism = { type: "generic", handled: !0, ...r, ...t }),
                  t && "data" in t)
                ) {
                  let e = { ...(r && r.data), ...t.data };
                  n.mechanism.data = e;
                }
              })(u, n.mechanism);
            let d = i ? i.getEventProcessors() : [],
              f = ay("globalScope", () => new az()).getScopeData();
            if (a) {
              let e = a.getScopeData();
              or(f, e);
            }
            if (c) {
              let e = c.getScopeData();
              or(f, e);
            }
            let p = [...(n.attachments || []), ...f.attachments];
            p.length && (n.attachments = p),
              (function (e, t) {
                let {
                  fingerprint: n,
                  span: r,
                  breadcrumbs: i,
                  sdkProcessingMetadata: a,
                } = t;
                (function (e, t) {
                  let {
                      extra: n,
                      tags: r,
                      user: i,
                      contexts: a,
                      level: o,
                      transactionName: s,
                    } = t,
                    u = aA(n);
                  u &&
                    Object.keys(u).length &&
                    (e.extra = { ...u, ...e.extra });
                  let l = aA(r);
                  l && Object.keys(l).length && (e.tags = { ...l, ...e.tags });
                  let c = aA(i);
                  c && Object.keys(c).length && (e.user = { ...c, ...e.user });
                  let d = aA(a);
                  d &&
                    Object.keys(d).length &&
                    (e.contexts = { ...d, ...e.contexts }),
                    o && (e.level = o),
                    s && "transaction" !== e.type && (e.transaction = s);
                })(e, t),
                  r &&
                    (function (e, t) {
                      (e.contexts = {
                        trace: (function (e) {
                          let {
                              spanId: t,
                              traceId: n,
                              isRemote: r,
                            } = e.spanContext(),
                            i = r ? t : a9(e).parent_span_id,
                            a = r ? aL() : t;
                          return aA({
                            parent_span_id: i,
                            span_id: a,
                            trace_id: n,
                          });
                        })(t),
                        ...e.contexts,
                      }),
                        (e.sdkProcessingMetadata = {
                          dynamicSamplingContext: on(t),
                          ...e.sdkProcessingMetadata,
                        });
                      let n = oe(t),
                        r = a9(n).description;
                      r &&
                        !e.transaction &&
                        "transaction" === e.type &&
                        (e.transaction = r);
                    })(e, r),
                  (e.fingerprint = e.fingerprint
                    ? Array.isArray(e.fingerprint)
                      ? e.fingerprint
                      : [e.fingerprint]
                    : []),
                  n && (e.fingerprint = e.fingerprint.concat(n)),
                  e.fingerprint &&
                    !e.fingerprint.length &&
                    delete e.fingerprint,
                  (function (e, t) {
                    let n = [...(e.breadcrumbs || []), ...t];
                    e.breadcrumbs = n.length ? n : void 0;
                  })(e, i),
                  (e.sdkProcessingMetadata = {
                    ...e.sdkProcessingMetadata,
                    ...a,
                  });
              })(u, f);
            let h = [...d, ...f.eventProcessors],
              m = (function e(t, n, r, i = 0) {
                return new a2((a, o) => {
                  let s = t[i];
                  if (null === n || "function" != typeof s) a(n);
                  else {
                    let u = s({ ...n }, r);
                    aE(u)
                      ? u.then((n) => e(t, n, r, i + 1).then(a)).then(null, o)
                      : e(t, u, r, i + 1)
                          .then(a)
                          .then(null, o);
                  }
                });
              })(h, u, n);
            return m.then((e) =>
              (e &&
                (function (e) {
                  let t = {};
                  try {
                    e.exception.values.forEach((e) => {
                      e.stacktrace.frames.forEach((e) => {
                        e.debug_id &&
                          (e.abs_path
                            ? (t[e.abs_path] = e.debug_id)
                            : e.filename && (t[e.filename] = e.debug_id),
                          delete e.debug_id);
                      });
                    });
                  } catch (e) {}
                  if (0 === Object.keys(t).length) return;
                  (e.debug_meta = e.debug_meta || {}),
                    (e.debug_meta.images = e.debug_meta.images || []);
                  let n = e.debug_meta.images;
                  Object.entries(t).forEach(([e, t]) => {
                    n.push({ type: "sourcemap", code_file: e, debug_id: t });
                  });
                })(e),
              "number" == typeof o && o > 0)
                ? (function (e, t, n) {
                    if (!e) return null;
                    let r = {
                      ...e,
                      ...(e.breadcrumbs && {
                        breadcrumbs: e.breadcrumbs.map((e) => ({
                          ...e,
                          ...(e.data && { data: aj(e.data, t, n) }),
                        })),
                      }),
                      ...(e.user && { user: aj(e.user, t, n) }),
                      ...(e.contexts && { contexts: aj(e.contexts, t, n) }),
                      ...(e.extra && { extra: aj(e.extra, t, n) }),
                    };
                    return (
                      e.contexts &&
                        e.contexts.trace &&
                        r.contexts &&
                        ((r.contexts.trace = e.contexts.trace),
                        e.contexts.trace.data &&
                          (r.contexts.trace.data = aj(
                            e.contexts.trace.data,
                            t,
                            n
                          ))),
                      e.spans &&
                        (r.spans = e.spans.map((e) => ({
                          ...e,
                          ...(e.data && { data: aj(e.data, t, n) }),
                        }))),
                      e.contexts &&
                        e.contexts.flags &&
                        r.contexts &&
                        (r.contexts.flags = aj(e.contexts.flags, 3, n)),
                      r
                    );
                  })(e, o, s)
                : e
            );
          })(e.getOptions(), r, a, t, e, aX());
          if (!o) return null;
          o.platform = o.platform || "javascript";
          let s = e.getSdkMetadata(),
            { name: u, version: l } = (s && s.sdk) || {};
          return (
            (o.sdk = {
              ...o.sdk,
              name: u || "sentry.javascript.unknown",
              version: l || "0.0.0",
            }),
            o
          );
        }
        async function uJ({
          recordingData: e,
          replayId: t,
          segmentId: n,
          eventContext: r,
          timestamp: i,
          session: a,
        }) {
          var o;
          let s;
          let u = (function ({ recordingData: e, headers: t }) {
              let n;
              let r = `${JSON.stringify(t)}
`;
              if ("string" == typeof e) n = `${r}${e}`;
              else {
                let t = new TextEncoder(),
                  i = t.encode(r);
                (n = new Uint8Array(i.length + e.length)).set(i),
                  n.set(e, i.length);
              }
              return n;
            })({ recordingData: e, headers: { segment_id: n } }),
            { urls: l, errorIds: c, traceIds: d, initialTimestamp: f } = r,
            p = aQ(),
            h = aY(),
            m = p && p.getTransport(),
            y = p && p.getDsn();
          if (!p || !m || !y || !a.sampled) return a1({});
          let g = {
              type: "replay_event",
              replay_start_timestamp: f / 1e3,
              timestamp: i / 1e3,
              error_ids: c,
              trace_ids: d,
              urls: l,
              replay_id: t,
              segment_id: n,
              replay_type: a.sampled,
            },
            b = await uZ({ scope: h, client: p, replayId: t, event: g });
          if (!b)
            return p.recordDroppedEvent("event_processor", "replay", g), a1({});
          delete b.sdkProcessingMetadata;
          let v =
            ((o = p.getOptions().tunnel),
            (function (e, t = []) {
              return [e, t];
            })(
              (function (e, t, n, r) {
                let i =
                  e.sdkProcessingMetadata &&
                  e.sdkProcessingMetadata.dynamicSamplingContext;
                return {
                  event_id: e.event_id,
                  sent_at: new Date().toISOString(),
                  ...(t && { sdk: t }),
                  ...(!!n &&
                    r && {
                      dsn: (function (e, t = !1) {
                        let {
                          host: n,
                          path: r,
                          pass: i,
                          port: a,
                          projectId: o,
                          protocol: s,
                          publicKey: u,
                        } = e;
                        return `${s}://${u}${t && i ? `:${i}` : ""}@${n}${
                          a ? `:${a}` : ""
                        }/${r ? `${r}/` : r}${o}`;
                      })(r),
                    }),
                  ...(i && { trace: aA({ ...i }) }),
                };
              })(
                b,
                (function (e) {
                  if (!e || !e.sdk) return;
                  let { name: t, version: n } = e.sdk;
                  return { name: t, version: n };
                })(b),
                o,
                y
              ),
              [
                [{ type: "replay_event" }, b],
                [
                  {
                    type: "replay_recording",
                    length:
                      "string" == typeof u
                        ? new TextEncoder().encode(u).length
                        : u.length,
                  },
                  u,
                ],
              ]
            ));
          try {
            s = await m.send(v);
          } catch (t) {
            let e = Error(oc);
            try {
              e.cause = t;
            } catch (e) {}
            throw e;
          }
          if (
            "number" == typeof s.statusCode &&
            (s.statusCode < 200 || s.statusCode >= 300)
          )
            throw new uY(s.statusCode);
          let w = (function (e, { statusCode: t, headers: n }, r = Date.now()) {
            let i = { ...e },
              a = n && n["x-sentry-rate-limits"],
              o = n && n["retry-after"];
            if (a)
              for (let e of a.trim().split(",")) {
                let [t, n, , , a] = e.split(":", 5),
                  o = parseInt(t, 10),
                  s = (isNaN(o) ? 60 : o) * 1e3;
                if (n)
                  for (let e of n.split(";"))
                    "metric_bucket" === e
                      ? (!a || a.split(";").includes("custom")) &&
                        (i[e] = r + s)
                      : (i[e] = r + s);
                else i.all = r + s;
              }
            else
              o
                ? (i.all =
                    r +
                    (function (e, t = Date.now()) {
                      let n = parseInt(`${e}`, 10);
                      if (!isNaN(n)) return 1e3 * n;
                      let r = Date.parse(`${e}`);
                      return isNaN(r) ? 6e4 : r - t;
                    })(o, r))
                : 429 === t && (i.all = r + 6e4);
            return i;
          })({}, s);
          if (
            (function (e, t, n = Date.now()) {
              return (e[t] || e.all || 0) > n;
            })(w, "replay")
          )
            throw new uX(w);
          return s;
        }
        class uY extends Error {
          constructor(e) {
            super(`Transport returned status code ${e}`);
          }
        }
        class uX extends Error {
          constructor(e) {
            super("Rate limit hit"), (this.rateLimits = e);
          }
        }
        async function uQ(e, t = { count: 0, interval: 5e3 }) {
          let { recordingData: n, onError: r } = e;
          if (n.length)
            try {
              return await uJ(e), !0;
            } catch (n) {
              var i;
              if (n instanceof uY || n instanceof uX) throw n;
              if (
                ((i = { _retryCount: t.count }),
                aX().setContext("Replays", i),
                r && r(n),
                t.count >= 3)
              ) {
                let e = Error(`${oc} - max retries exceeded`);
                try {
                  e.cause = n;
                } catch (e) {}
                throw e;
              }
              return (
                (t.interval *= ++t.count),
                new Promise((n, r) => {
                  nb(async () => {
                    try {
                      await uQ(e, t), n(!0);
                    } catch (e) {
                      r(e);
                    }
                  }, t.interval);
                })
              );
            }
        }
        let u0 = "__THROTTLED";
        class u1 {
          constructor({ options: e, recordingOptions: t }) {
            u1.prototype.__init.call(this),
              u1.prototype.__init2.call(this),
              u1.prototype.__init3.call(this),
              u1.prototype.__init4.call(this),
              u1.prototype.__init5.call(this),
              u1.prototype.__init6.call(this),
              (this.eventBuffer = null),
              (this.performanceEntries = []),
              (this.replayPerformanceEntries = []),
              (this.recordingMode = "session"),
              (this.timeouts = {
                sessionIdlePause: 3e5,
                sessionIdleExpire: 9e5,
              }),
              (this._lastActivity = Date.now()),
              (this._isEnabled = !1),
              (this._isPaused = !1),
              (this._requiresManualStart = !1),
              (this._hasInitializedCoreListeners = !1),
              (this._context = {
                errorIds: new Set(),
                traceIds: new Set(),
                urls: [],
                initialTimestamp: Date.now(),
                initialUrl: "",
              }),
              (this._recordingOptions = t),
              (this._options = e),
              (this._debouncedFlush = (function (e, t, n) {
                let r, i, a;
                let o = n && n.maxWait ? Math.max(n.maxWait, t) : 0;
                function s() {
                  return u(), (r = e());
                }
                function u() {
                  void 0 !== i && clearTimeout(i),
                    void 0 !== a && clearTimeout(a),
                    (i = a = void 0);
                }
                function l() {
                  return (
                    i && clearTimeout(i),
                    (i = nb(s, t)),
                    o && void 0 === a && (a = nb(s, o)),
                    r
                  );
                }
                return (
                  (l.cancel = u),
                  (l.flush = function () {
                    return void 0 !== i || void 0 !== a ? s() : r;
                  }),
                  l
                );
              })(() => this._flush(), this._options.flushMinDelay, {
                maxWait: this._options.flushMaxDelay,
              })),
              (this._throttledAddEvent = (function (e, t, n) {
                let r = new Map(),
                  i = (e) => {
                    let t = e - 5;
                    r.forEach((e, n) => {
                      n < t && r.delete(n);
                    });
                  },
                  a = () => [...r.values()].reduce((e, t) => e + t, 0),
                  o = !1;
                return (...t) => {
                  let n = Math.floor(Date.now() / 1e3);
                  if ((i(n), a() >= 300)) {
                    let e = o;
                    return (o = !0), e ? "__SKIPPED" : u0;
                  }
                  o = !1;
                  let s = r.get(n) || 0;
                  return r.set(n, s + 1), e(...t);
                };
              })(
                (e, t) =>
                  ux(this, e) ? uE(this, e, t) : Promise.resolve(null),
                0,
                0
              ));
            let { slowClickTimeout: n, slowClickIgnoreSelectors: r } =
                this.getOptions(),
              i = n
                ? {
                    threshold: Math.min(3e3, n),
                    timeout: n,
                    scrollTimeout: 300,
                    ignoreSelector: r ? r.join(",") : "",
                  }
                : void 0;
            i && (this.clickDetector = new sQ(this, i));
          }
          getContext() {
            return this._context;
          }
          isEnabled() {
            return this._isEnabled;
          }
          isPaused() {
            return this._isPaused;
          }
          isRecordingCanvas() {
            return !!this._canvas;
          }
          getOptions() {
            return this._options;
          }
          handleException(e) {
            this._options.onError && this._options.onError(e);
          }
          initializeSampling(e) {
            let { errorSampleRate: t, sessionSampleRate: n } = this._options,
              r = t <= 0 && n <= 0;
            (this._requiresManualStart = r),
              !r &&
                (this._initializeSessionForSampling(e), this.session) &&
                !1 !== this.session.sampled &&
                ((this.recordingMode =
                  "buffer" === this.session.sampled &&
                  0 === this.session.segmentId
                    ? "buffer"
                    : "session"),
                this._initializeRecording());
          }
          start() {
            if (
              (this._isEnabled && "session" === this.recordingMode) ||
              (this._isEnabled && "buffer" === this.recordingMode)
            )
              return;
            this._updateUserActivity();
            let e = uv(
              {
                maxReplayDuration: this._options.maxReplayDuration,
                sessionIdleExpire: this.timeouts.sessionIdleExpire,
              },
              {
                stickySession: this._options.stickySession,
                sessionSampleRate: 1,
                allowBuffering: !1,
              }
            );
            (this.session = e), this._initializeRecording();
          }
          startBuffering() {
            if (this._isEnabled) return;
            let e = uv(
              {
                sessionIdleExpire: this.timeouts.sessionIdleExpire,
                maxReplayDuration: this._options.maxReplayDuration,
              },
              {
                stickySession: this._options.stickySession,
                sessionSampleRate: 0,
                allowBuffering: !0,
              }
            );
            (this.session = e),
              (this.recordingMode = "buffer"),
              this._initializeRecording();
          }
          startRecording() {
            try {
              var e;
              let t;
              let n = this._canvas;
              this._stopRecording = sG({
                ...this._recordingOptions,
                ...("buffer" === this.recordingMode
                  ? { checkoutEveryNms: 6e4 }
                  : this._options._experiments.continuousCheckout && {
                      checkoutEveryNms: Math.max(
                        36e4,
                        this._options._experiments.continuousCheckout
                      ),
                    }),
                emit:
                  ((e = this),
                  (t = !1),
                  (n, r) => {
                    if (!e.checkAndHandleExpiredSession()) return;
                    let i = r || !t;
                    (t = !0),
                      e.clickDetector &&
                        (function (e, t) {
                          try {
                            if (3 !== t.type) return;
                            let { source: n } = t.data;
                            if (
                              (sX.has(n) && e.registerMutation(t.timestamp),
                              n === sd.Scroll && e.registerScroll(t.timestamp),
                              t.data.source === sd.MouseInteraction)
                            ) {
                              let { type: n, id: r } = t.data,
                                i = sG.mirror.getNode(r);
                              i instanceof HTMLElement &&
                                n === sf.Click &&
                                e.registerClick(i);
                            }
                          } catch (e) {}
                        })(e.clickDetector, n),
                      e.addUpdate(() => {
                        if (
                          ("buffer" === e.recordingMode &&
                            i &&
                            e.setInitialState(),
                          !uw(e, n, i))
                        )
                          return !0;
                        if (!i) return !1;
                        let t = e.session;
                        if (
                          (i &&
                            e.session &&
                            0 === e.session.segmentId &&
                            uw(
                              e,
                              (function (e) {
                                let t = e.getOptions();
                                return {
                                  type: sc.Custom,
                                  timestamp: Date.now(),
                                  data: {
                                    tag: "options",
                                    payload: {
                                      shouldRecordCanvas: e.isRecordingCanvas(),
                                      sessionSampleRate: t.sessionSampleRate,
                                      errorSampleRate: t.errorSampleRate,
                                      useCompressionOption: t.useCompression,
                                      blockAllMedia: t.blockAllMedia,
                                      maskAllText: t.maskAllText,
                                      maskAllInputs: t.maskAllInputs,
                                      useCompression:
                                        !!e.eventBuffer &&
                                        "worker" === e.eventBuffer.type,
                                      networkDetailHasUrls:
                                        t.networkDetailAllowUrls.length > 0,
                                      networkCaptureBodies:
                                        t.networkCaptureBodies,
                                      networkRequestHasHeaders:
                                        t.networkRequestHeaders.length > 0,
                                      networkResponseHasHeaders:
                                        t.networkResponseHeaders.length > 0,
                                    },
                                  },
                                };
                              })(e),
                              !1
                            ),
                          "buffer" === e.recordingMode && t && e.eventBuffer)
                        ) {
                          let n = e.eventBuffer.getEarliestTimestamp();
                          n &&
                            ((t.started = n),
                            e.getOptions().stickySession && uh(t));
                        }
                        return (
                          (!!t && !!t.previousSessionId) ||
                          ("session" === e.recordingMode && e.flush(), !0)
                        );
                      });
                  }),
                onMutation: this._onMutationHandler,
                ...(n
                  ? {
                      recordCanvas: n.recordCanvas,
                      getCanvasManager: n.getCanvasManager,
                      sampling: n.sampling,
                      dataURLOptions: n.dataURLOptions,
                    }
                  : {}),
              });
            } catch (e) {
              this.handleException(e);
            }
          }
          stopRecording() {
            try {
              return (
                this._stopRecording &&
                  (this._stopRecording(), (this._stopRecording = void 0)),
                !0
              );
            } catch (e) {
              return this.handleException(e), !1;
            }
          }
          async stop({ forceFlush: e = !1, reason: t } = {}) {
            if (this._isEnabled) {
              this._isEnabled = !1;
              try {
                uS(),
                  this._removeListeners(),
                  this.stopRecording(),
                  this._debouncedFlush.cancel(),
                  e && (await this._flush({ force: !0 })),
                  this.eventBuffer && this.eventBuffer.destroy(),
                  (this.eventBuffer = null),
                  (function () {
                    if (ud())
                      try {
                        am.sessionStorage.removeItem(ol);
                      } catch (e) {}
                  })(),
                  (this.session = void 0);
              } catch (e) {
                this.handleException(e);
              }
            }
          }
          pause() {
            this._isPaused || ((this._isPaused = !0), this.stopRecording());
          }
          resume() {
            this._isPaused &&
              this._checkSession() &&
              ((this._isPaused = !1), this.startRecording());
          }
          async sendBufferedReplayOrFlush({ continueRecording: e = !0 } = {}) {
            if ("session" === this.recordingMode) return this.flushImmediate();
            let t = Date.now();
            await this.flushImmediate();
            let n = this.stopRecording();
            e &&
              n &&
              "session" !== this.recordingMode &&
              ((this.recordingMode = "session"),
              this.session &&
                (this._updateUserActivity(t),
                this._updateSessionActivity(t),
                this._maybeSaveSession()),
              this.startRecording());
          }
          addUpdate(e) {
            let t = e();
            "buffer" !== this.recordingMode &&
              !0 !== t &&
              this._debouncedFlush();
          }
          triggerUserActivity() {
            if ((this._updateUserActivity(), !this._stopRecording)) {
              if (!this._checkSession()) return;
              this.resume();
              return;
            }
            this.checkAndHandleExpiredSession(), this._updateSessionActivity();
          }
          updateUserActivity() {
            this._updateUserActivity(), this._updateSessionActivity();
          }
          conditionalFlush() {
            return "buffer" === this.recordingMode
              ? Promise.resolve()
              : this.flushImmediate();
          }
          flush() {
            return this._debouncedFlush();
          }
          flushImmediate() {
            return this._debouncedFlush(), this._debouncedFlush.flush();
          }
          cancelFlush() {
            this._debouncedFlush.cancel();
          }
          getSessionId() {
            return this.session && this.session.id;
          }
          checkAndHandleExpiredSession() {
            if (
              this._lastActivity &&
              uy(this._lastActivity, this.timeouts.sessionIdlePause) &&
              this.session &&
              "session" === this.session.sampled
            ) {
              this.pause();
              return;
            }
            return !!this._checkSession();
          }
          setInitialState() {
            let e = `${am.location.pathname}${am.location.hash}${am.location.search}`,
              t = `${am.location.origin}${e}`;
            (this.performanceEntries = []),
              (this.replayPerformanceEntries = []),
              this._clearContext(),
              (this._context.initialUrl = t),
              (this._context.initialTimestamp = Date.now()),
              this._context.urls.push(t);
          }
          throttledAddEvent(e, t) {
            let n = this._throttledAddEvent(e, t);
            if (n === u0) {
              let e = s2({ category: "replay.throttled" });
              this.addUpdate(
                () =>
                  !uw(this, {
                    type: 5,
                    timestamp: e.timestamp || 0,
                    data: { tag: "breadcrumb", payload: e, metric: !0 },
                  })
              );
            }
            return n;
          }
          getCurrentRoute() {
            let e = this.lastActiveSpan || ot(),
              t = e && oe(e),
              n = (t && a9(t).data) || {},
              r = n[a3];
            if (t && r && ["route", "custom"].includes(r))
              return a9(t).description;
          }
          _initializeRecording() {
            this.setInitialState(),
              this._updateSessionActivity(),
              (this.eventBuffer = (function ({
                useCompression: e,
                workerUrl: t,
              }) {
                if (e && window.Worker) {
                  let e = (function (e) {
                    try {
                      let t =
                        e ||
                        ("undefined" !=
                          typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ &&
                        __SENTRY_EXCLUDE_REPLAY_WORKER__
                          ? ""
                          : (function () {
                              let e = new Blob([
                                'var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},_=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},x=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=A(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},A=function(t,n,r){return-1==t.s?Math.max(A(t.l,n,r+1),A(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},U=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=x(f,15),M=b.t,E=b.l,A=x(h,15),U=A.t,C=A.l,F=D(M),I=F.c,S=F.n,L=D(U),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=x(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,U)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(U,C,0),R=U;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){_(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;_(r,m,Q[et]),m+=R[et],et>3&&(_(r,m,rt>>5&8191),m+=i[et])}else _(r,m,N[rt]),m+=P[rt]}return _(r,m,N[256]),m+P[256]},C=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}},L=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},O=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=C[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,_=c.p||new n(32768),x=c.h||new n(z+1),A=Math.ceil(o/3),D=2*A,T=function(t){return(a[t]^a[t+1]<<A^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=x[H];if(_[J]=K,x[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=U(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-_[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=_[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=U(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=x,c.p=_,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},j=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},q=function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&j(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}},B=function(t){return 10+(t.filename?t.filename.length+1:0)},G=function(){function n(n,r){if("function"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(O(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();var H=function(){function t(t,n){this.c=L(),this.v=1,G.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),G.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=O(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=L();i.p(n.dictionary),j(t,2,i.d())}}(r,this.o),this.v=0),n&&j(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),J="undefined"!=typeof TextEncoder&&new TextEncoder,K="undefined"!=typeof TextDecoder&&new TextDecoder;try{K.decode(F,{stream:!0})}catch(t){}var N=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(P(t),this.d=n||!1)},t}();function P(n,r){if(J)return J.encode(n);for(var e=n.length,i=new t(n.length+(n.length>>1)),a=0,s=function(t){i[a++]=t},o=0;o<e;++o){if(a+5>i.length){var f=new t(a+8+(e-o<<1));f.set(i),i=f}var h=n.charCodeAt(o);h<128||r?s(h):h<2048?(s(192|h>>6),s(128|63&h)):h>55295&&h<57344?(s(240|(h=65536+(1047552&h)|1023&n.charCodeAt(++o))>>18),s(128|h>>12&63),s(128|h>>6&63),s(128|63&h)):(s(224|h>>12),s(128|h>>6&63),s(128|63&h))}return b(i,0,a)}function Q(t){return function(t,n){n||(n={});var r=S(),e=t.length;r.p(t);var i=O(t,n,B(n),8),a=i.length;return q(i,n),j(i,a-8,r.d()),j(i,a-4,e),i}(P(t))}const R=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error("Adding invalid event");const n=this._hasEvents?",":"";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push("]",!0);const t=function(t){let n=0;for(const r of t)n+=r.length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new H,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new N(((t,n)=>{this.deflate.push(t,n)})),this.stream.push("[")}},V={clear:()=>{R.clear()},addEvent:t=>R.addEvent(t),finish:()=>R.finish(),compress:t=>Q(t)};addEventListener("message",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in V&&"function"==typeof V[n])try{const t=V[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:"init",success:!0,response:void 0});',
                              ]);
                              return URL.createObjectURL(e);
                            })());
                      if (!t) return;
                      let n = new Worker(t);
                      return new uc(n);
                    } catch (e) {}
                  })(t);
                  if (e) return e;
                }
                return new us();
              })({
                useCompression: this._options.useCompression,
                workerUrl: this._options.workerUrl,
              })),
              this._removeListeners(),
              this._addListeners(),
              (this._isEnabled = !0),
              (this._isPaused = !1),
              this.startRecording();
          }
          _initializeSessionForSampling(e) {
            let t = this._options.errorSampleRate > 0,
              n = uv(
                {
                  sessionIdleExpire: this.timeouts.sessionIdleExpire,
                  maxReplayDuration: this._options.maxReplayDuration,
                  previousSessionId: e,
                },
                {
                  stickySession: this._options.stickySession,
                  sessionSampleRate: this._options.sessionSampleRate,
                  allowBuffering: t,
                }
              );
            this.session = n;
          }
          _checkSession() {
            if (!this.session) return !1;
            let e = this.session;
            return (
              !ub(e, {
                sessionIdleExpire: this.timeouts.sessionIdleExpire,
                maxReplayDuration: this._options.maxReplayDuration,
              }) || (this._refreshSession(e), !1)
            );
          }
          async _refreshSession(e) {
            this._isEnabled &&
              (await this.stop({ reason: "refresh session" }),
              this.initializeSampling(e.id));
          }
          _addListeners() {
            try {
              am.document.addEventListener(
                "visibilitychange",
                this._handleVisibilityChange
              ),
                am.addEventListener("blur", this._handleWindowBlur),
                am.addEventListener("focus", this._handleWindowFocus),
                am.addEventListener("keydown", this._handleKeyboardEvent),
                this.clickDetector && this.clickDetector.addListeners(),
                this._hasInitializedCoreListeners ||
                  ((function (e) {
                    let t = aQ();
                    tC(s3(e)),
                      tj((t) => {
                        if (!e.isEnabled()) return;
                        let n = (function (e) {
                          let { from: t, to: n } = e,
                            r = Date.now() / 1e3;
                          return {
                            type: "navigation.push",
                            start: r,
                            end: r,
                            name: n,
                            data: { previous: t },
                          };
                        })(t);
                        null !== n &&
                          (e.getContext().urls.push(n.name),
                          e.triggerUserActivity(),
                          e.addUpdate(() => (uP(e, [n]), !1)));
                      }),
                      (function (e) {
                        let t = aQ();
                        t &&
                          t.on("beforeAddBreadcrumb", (t) =>
                            (function (e, t) {
                              if (!e.isEnabled() || !uT(t)) return;
                              let n =
                                !uT(t) ||
                                [
                                  "fetch",
                                  "xhr",
                                  "sentry.event",
                                  "sentry.transaction",
                                ].includes(t.category) ||
                                t.category.startsWith("ui.")
                                  ? null
                                  : "console" === t.category
                                  ? (function (e) {
                                      let t = e.data && e.data.arguments;
                                      if (!Array.isArray(t) || 0 === t.length)
                                        return s2(e);
                                      let n = !1,
                                        r = t.map((e) => {
                                          if (!e) return e;
                                          if ("string" == typeof e)
                                            return e.length > 5e3
                                              ? ((n = !0),
                                                `${e.slice(0, 5e3)}…`)
                                              : e;
                                          if ("object" == typeof e)
                                            try {
                                              let t = aj(e, 7),
                                                r = JSON.stringify(t);
                                              if (r.length > 5e3)
                                                return (
                                                  (n = !0),
                                                  `${JSON.stringify(
                                                    t,
                                                    null,
                                                    2
                                                  ).slice(0, 5e3)}…`
                                                );
                                              return t;
                                            } catch (e) {}
                                          return e;
                                        });
                                      return s2({
                                        ...e,
                                        data: {
                                          ...e.data,
                                          arguments: r,
                                          ...(n
                                            ? {
                                                _meta: {
                                                  warnings: [
                                                    "CONSOLE_ARG_TRUNCATED",
                                                  ],
                                                },
                                              }
                                            : {}),
                                        },
                                      });
                                    })(t)
                                  : s2(t);
                              n && sK(e, n);
                            })(e, t)
                          );
                      })(e),
                      (function (e) {
                        let t = aQ();
                        try {
                          let {
                              networkDetailAllowUrls: n,
                              networkDetailDenyUrls: r,
                              networkCaptureBodies: i,
                              networkRequestHeaders: a,
                              networkResponseHeaders: o,
                            } = e.getOptions(),
                            s = {
                              replay: e,
                              networkDetailAllowUrls: n,
                              networkDetailDenyUrls: r,
                              networkCaptureBodies: i,
                              networkRequestHeaders: a,
                              networkResponseHeaders: o,
                            };
                          t &&
                            t.on("beforeAddBreadcrumb", (e, t) =>
                              (function (e, t, n) {
                                if (t.data)
                                  try {
                                    var r, i;
                                    "xhr" === t.category &&
                                      (r = n) &&
                                      r.xhr &&
                                      ((function (e, t) {
                                        let { xhr: n, input: r } = t;
                                        if (!n) return;
                                        let i = uI(r),
                                          a = n.getResponseHeader(
                                            "content-length"
                                          )
                                            ? uA(
                                                n.getResponseHeader(
                                                  "content-length"
                                                )
                                              )
                                            : (function (e, t) {
                                                try {
                                                  let n =
                                                    "json" === t &&
                                                    e &&
                                                    "object" == typeof e
                                                      ? JSON.stringify(e)
                                                      : e;
                                                  return uI(n);
                                                } catch (e) {
                                                  return;
                                                }
                                              })(n.response, n.responseType);
                                        void 0 !== i &&
                                          (e.data.request_body_size = i),
                                          void 0 !== a &&
                                            (e.data.response_body_size = a);
                                      })(t, n),
                                      uV(t, n, e)),
                                      "fetch" === t.category &&
                                        (i = n) &&
                                        i.response &&
                                        ((function (e, t) {
                                          let { input: n, response: r } = t,
                                            i = n ? uH(n) : void 0,
                                            a = uI(i),
                                            o = r
                                              ? uA(
                                                  r.headers.get(
                                                    "content-length"
                                                  )
                                                )
                                              : void 0;
                                          void 0 !== a &&
                                            (e.data.request_body_size = a),
                                            void 0 !== o &&
                                              (e.data.response_body_size = o);
                                        })(t, n),
                                        uL(t, n, e));
                                  } catch (e) {}
                              })(s, e, t)
                            );
                        } catch (e) {}
                      })(e);
                    let n = Object.assign(
                      (t, n) => {
                        if (!e.isEnabled() || e.isPaused()) return t;
                        if ("replay_event" === t.type)
                          return delete t.breadcrumbs, t;
                        if (t.type && !uC(t) && !u_(t)) return t;
                        let r = e.checkAndHandleExpiredSession();
                        if (!r) return uS(), t;
                        if (u_(t))
                          return (
                            e.flush(),
                            (t.contexts.feedback.replay_id = e.getSessionId()),
                            e.triggerUserActivity(),
                            e.addUpdate(
                              () =>
                                !t.timestamp ||
                                (e.throttledAddEvent({
                                  type: sc.Custom,
                                  timestamp: 1e3 * t.timestamp,
                                  data: {
                                    tag: "breadcrumb",
                                    payload: {
                                      timestamp: t.timestamp,
                                      type: "default",
                                      category: "sentry.feedback",
                                      data: { feedbackId: t.event_id },
                                    },
                                  },
                                }),
                                !1)
                            ),
                            t
                          );
                        if (
                          !t.type &&
                          t.exception &&
                          t.exception.values &&
                          t.exception.values.length &&
                          n.originalException &&
                          n.originalException.__rrweb__ &&
                          !e.getOptions()._experiments.captureExceptions
                        )
                          return null;
                        let i =
                            "buffer" === e.recordingMode &&
                            t.message !== oc &&
                            !!t.exception &&
                            !t.type &&
                            uf(e.getOptions().errorSampleRate),
                          a = i || "session" === e.recordingMode;
                        return (
                          a &&
                            (t.tags = {
                              ...t.tags,
                              replayId: e.getSessionId(),
                            }),
                          t
                        );
                      },
                      { id: "Replay" }
                    );
                    aX().addEventProcessor(n),
                      t &&
                        (t.on("beforeSendEvent", (t) => {
                          e.isEnabled() &&
                            !t.type &&
                            (function (e, t) {
                              let n =
                                t.exception &&
                                t.exception.values &&
                                t.exception.values[0] &&
                                t.exception.values[0].value;
                              if (
                                "string" == typeof n &&
                                (n.match(
                                  /(reactjs\.org\/docs\/error-decoder\.html\?invariant=|react\.dev\/errors\/)(418|419|422|423|425)/
                                ) ||
                                  n.match(
                                    /(does not match server-rendered HTML|Hydration failed because)/i
                                  ))
                              ) {
                                let t = s2({
                                  category: "replay.hydrate-error",
                                  data: {
                                    url: (function () {
                                      try {
                                        return am.document.location.href;
                                      } catch (e) {
                                        return "";
                                      }
                                    })(),
                                  },
                                });
                                sK(e, t);
                              }
                            })(e, t);
                        }),
                        t.on("afterSendEvent", (t, n) => {
                          if (!e.isEnabled() || (t.type && !uC(t))) return;
                          let r = n && n.statusCode;
                          if (r && !(r < 200) && !(r >= 300)) {
                            if (uC(t)) {
                              (function (e, t) {
                                let n = e.getContext();
                                t.contexts &&
                                  t.contexts.trace &&
                                  t.contexts.trace.trace_id &&
                                  n.traceIds.size < 100 &&
                                  n.traceIds.add(t.contexts.trace.trace_id);
                              })(e, t);
                              return;
                            }
                            (function (e, t) {
                              let n = e.getContext();
                              if (
                                (t.event_id &&
                                  n.errorIds.size < 100 &&
                                  n.errorIds.add(t.event_id),
                                "buffer" !== e.recordingMode ||
                                  !t.tags ||
                                  !t.tags.replayId)
                              )
                                return;
                              let { beforeErrorSampling: r } = e.getOptions();
                              ("function" != typeof r || r(t)) &&
                                nb(async () => {
                                  try {
                                    await e.sendBufferedReplayOrFlush();
                                  } catch (t) {
                                    e.handleException(t);
                                  }
                                });
                            })(e, t);
                          }
                        }),
                        t.on("createDsc", (t) => {
                          let n = e.getSessionId();
                          if (
                            n &&
                            e.isEnabled() &&
                            "session" === e.recordingMode
                          ) {
                            let r = e.checkAndHandleExpiredSession();
                            r && (t.replay_id = n);
                          }
                        }),
                        t.on("spanStart", (t) => {
                          e.lastActiveSpan = t;
                        }),
                        t.on("spanEnd", (t) => {
                          e.lastActiveSpan = t;
                        }),
                        t.on("beforeSendFeedback", (t, n) => {
                          let r = e.getSessionId();
                          n &&
                            n.includeReplay &&
                            e.isEnabled() &&
                            r &&
                            t.contexts &&
                            t.contexts.feedback &&
                            (t.contexts.feedback.replay_id = r);
                        }));
                  })(this),
                  (this._hasInitializedCoreListeners = !0));
            } catch (e) {
              this.handleException(e);
            }
            this._performanceCleanupCallback = (function (e) {
              function t(t) {
                e.performanceEntries.includes(t) ||
                  e.performanceEntries.push(t);
              }
              function n({ entries: e }) {
                e.forEach(t);
              }
              let r = [];
              return (
                ["navigation", "paint", "resource"].forEach((e) => {
                  r.push(rV(e, n));
                }),
                r.push(
                  rz(s8(ue, e)),
                  rH(s8(ut, e)),
                  rG(s8(un, e)),
                  rW(s8(ur, e))
                ),
                () => {
                  r.forEach((e) => e());
                }
              );
            })(this);
          }
          _removeListeners() {
            try {
              am.document.removeEventListener(
                "visibilitychange",
                this._handleVisibilityChange
              ),
                am.removeEventListener("blur", this._handleWindowBlur),
                am.removeEventListener("focus", this._handleWindowFocus),
                am.removeEventListener("keydown", this._handleKeyboardEvent),
                this.clickDetector && this.clickDetector.removeListeners(),
                this._performanceCleanupCallback &&
                  this._performanceCleanupCallback();
            } catch (e) {
              this.handleException(e);
            }
          }
          __init() {
            this._handleVisibilityChange = () => {
              "visible" === am.document.visibilityState
                ? this._doChangeToForegroundTasks()
                : this._doChangeToBackgroundTasks();
            };
          }
          __init2() {
            this._handleWindowBlur = () => {
              let e = s2({ category: "ui.blur" });
              this._doChangeToBackgroundTasks(e);
            };
          }
          __init3() {
            this._handleWindowFocus = () => {
              let e = s2({ category: "ui.focus" });
              this._doChangeToForegroundTasks(e);
            };
          }
          __init4() {
            this._handleKeyboardEvent = (e) => {
              !(function (e, t) {
                if (!e.isEnabled()) return;
                e.updateUserActivity();
                let n = (function (e) {
                  var t;
                  let {
                    metaKey: n,
                    shiftKey: r,
                    ctrlKey: i,
                    altKey: a,
                    key: o,
                    target: s,
                  } = e;
                  if (
                    !s ||
                    "INPUT" === (t = s).tagName ||
                    "TEXTAREA" === t.tagName ||
                    t.isContentEditable ||
                    !o
                  )
                    return null;
                  let u = 1 === o.length;
                  if (!(n || i || a) && u) return null;
                  let l = aC(s, { maxStringLength: 200 }) || "<unknown>",
                    c = s5(s, l);
                  return s2({
                    category: "ui.keyDown",
                    message: l,
                    data: {
                      ...c.data,
                      metaKey: n,
                      shiftKey: r,
                      ctrlKey: i,
                      altKey: a,
                      key: o,
                    },
                  });
                })(t);
                n && sK(e, n);
              })(this, e);
            };
          }
          _doChangeToBackgroundTasks(e) {
            if (!this.session) return;
            let t = ug(this.session, {
              maxReplayDuration: this._options.maxReplayDuration,
              sessionIdleExpire: this.timeouts.sessionIdleExpire,
            });
            t ||
              (e && this._createCustomBreadcrumb(e), this.conditionalFlush());
          }
          _doChangeToForegroundTasks(e) {
            if (!this.session) return;
            let t = this.checkAndHandleExpiredSession();
            t && e && this._createCustomBreadcrumb(e);
          }
          _updateUserActivity(e = Date.now()) {
            this._lastActivity = e;
          }
          _updateSessionActivity(e = Date.now()) {
            this.session &&
              ((this.session.lastActivity = e), this._maybeSaveSession());
          }
          _createCustomBreadcrumb(e) {
            this.addUpdate(() => {
              this.throttledAddEvent({
                type: sc.Custom,
                timestamp: e.timestamp || 0,
                data: { tag: "breadcrumb", payload: e },
              });
            });
          }
          _addPerformanceEntries() {
            let e = this.performanceEntries
              .map(s7)
              .filter(Boolean)
              .concat(this.replayPerformanceEntries);
            if (
              ((this.performanceEntries = []),
              (this.replayPerformanceEntries = []),
              this._requiresManualStart)
            ) {
              let t = this._context.initialTimestamp / 1e3;
              e = e.filter((e) => e.start >= t);
            }
            return Promise.all(uP(this, e));
          }
          _clearContext() {
            this._context.errorIds.clear(),
              this._context.traceIds.clear(),
              (this._context.urls = []);
          }
          _updateInitialTimestampFromEventBuffer() {
            let { session: e, eventBuffer: t } = this;
            if (!e || !t || this._requiresManualStart || e.segmentId) return;
            let n = t.getEarliestTimestamp();
            n &&
              n < this._context.initialTimestamp &&
              (this._context.initialTimestamp = n);
          }
          _popEventContext() {
            let e = {
              initialTimestamp: this._context.initialTimestamp,
              initialUrl: this._context.initialUrl,
              errorIds: Array.from(this._context.errorIds),
              traceIds: Array.from(this._context.traceIds),
              urls: this._context.urls,
            };
            return this._clearContext(), e;
          }
          async _runFlush() {
            let e = this.getSessionId();
            if (
              this.session &&
              this.eventBuffer &&
              e &&
              (await this._addPerformanceEntries(),
              this.eventBuffer && this.eventBuffer.hasEvents) &&
              (await uK(this), this.eventBuffer && e === this.getSessionId())
            )
              try {
                this._updateInitialTimestampFromEventBuffer();
                let t = Date.now();
                if (
                  t - this._context.initialTimestamp >
                  this._options.maxReplayDuration + 3e4
                )
                  throw Error("Session is too long, not sending replay");
                let n = this._popEventContext(),
                  r = this.session.segmentId++;
                this._maybeSaveSession();
                let i = await this.eventBuffer.finish();
                await uQ({
                  replayId: e,
                  recordingData: i,
                  segmentId: r,
                  eventContext: n,
                  session: this.session,
                  timestamp: t,
                  onError: (e) => this.handleException(e),
                });
              } catch (t) {
                this.handleException(t), this.stop({ reason: "sendReplay" });
                let e = aQ();
                if (e) {
                  let n = t instanceof uX ? "ratelimit_backoff" : "send_error";
                  e.recordDroppedEvent(n, "replay");
                }
              }
          }
          __init5() {
            this._flush = async ({ force: e = !1 } = {}) => {
              if (
                (!this._isEnabled && !e) ||
                !this.checkAndHandleExpiredSession() ||
                !this.session
              )
                return;
              let t = this.session.started,
                n = Date.now(),
                r = n - t;
              this._debouncedFlush.cancel();
              let i = r < this._options.minReplayDuration,
                a = r > this._options.maxReplayDuration + 5e3;
              if (i || a) {
                i && this._debouncedFlush();
                return;
              }
              let o = this.eventBuffer;
              o && 0 === this.session.segmentId && o.hasCheckout;
              let s = !!this._flushLock;
              this._flushLock || (this._flushLock = this._runFlush());
              try {
                await this._flushLock;
              } catch (e) {
                this.handleException(e);
              } finally {
                (this._flushLock = void 0), s && this._debouncedFlush();
              }
            };
          }
          _maybeSaveSession() {
            this.session && this._options.stickySession && uh(this.session);
          }
          __init6() {
            this._onMutationHandler = (e) => {
              let t = e.length,
                n = this._options.mutationLimit,
                r = this._options.mutationBreadcrumbLimit,
                i = n && t > n;
              if (t > r || i) {
                let e = s2({
                  category: "replay.mutations",
                  data: { count: t, limit: i },
                });
                this._createCustomBreadcrumb(e);
              }
              return (
                !i ||
                (this.stop({
                  reason: "mutationLimit",
                  forceFlush: "session" === this.recordingMode,
                }),
                !1)
              );
            };
          }
        }
        function u2(e, t) {
          return [...e, ...t].join(",");
        }
        let u6 =
            'img,image,svg,video,object,picture,embed,map,audio,link[rel="icon"],link[rel="apple-touch-icon"]',
          u3 = ["content-length", "content-type", "accept"],
          u5 = !1;
        class u4 {
          static __initStatic() {
            this.id = "Replay";
          }
          constructor({
            flushMinDelay: e = 5e3,
            flushMaxDelay: t = 5500,
            minReplayDuration: n = 4999,
            maxReplayDuration: r = 36e5,
            stickySession: i = !0,
            useCompression: a = !0,
            workerUrl: o,
            _experiments: s = {},
            maskAllText: u = !0,
            maskAllInputs: l = !0,
            blockAllMedia: c = !0,
            mutationBreadcrumbLimit: d = 750,
            mutationLimit: f = 1e4,
            slowClickTimeout: p = 7e3,
            slowClickIgnoreSelectors: h = [],
            networkDetailAllowUrls: m = [],
            networkDetailDenyUrls: y = [],
            networkCaptureBodies: g = !0,
            networkRequestHeaders: b = [],
            networkResponseHeaders: v = [],
            mask: w = [],
            maskAttributes: E = ["title", "placeholder"],
            unmask: x = [],
            block: C = [],
            unblock: _ = [],
            ignore: T = [],
            maskFn: S,
            beforeAddRecordingEvent: P,
            beforeErrorSampling: O,
            onError: I,
          } = {}) {
            this.name = u4.id;
            let A = (function ({
              mask: e,
              unmask: t,
              block: n,
              unblock: r,
              ignore: i,
            }) {
              let a = u2(e, [".sentry-mask", "[data-sentry-mask]"]),
                o = u2(t, []),
                s = {
                  maskTextSelector: a,
                  unmaskTextSelector: o,
                  blockSelector: u2(n, [
                    ".sentry-block",
                    "[data-sentry-block]",
                    'base[href="/"]',
                  ]),
                  unblockSelector: u2(r, []),
                  ignoreSelector: u2(i, [
                    ".sentry-ignore",
                    "[data-sentry-ignore]",
                    'input[type="file"]',
                  ]),
                };
              return s;
            })({ mask: w, unmask: x, block: C, unblock: _, ignore: T });
            if (
              ((this._recordingOptions = {
                maskAllInputs: l,
                maskAllText: u,
                maskInputOptions: { password: !0 },
                maskTextFn: S,
                maskInputFn: S,
                maskAttributeFn: (e, t, n) =>
                  (function ({
                    el: e,
                    key: t,
                    maskAttributes: n,
                    maskAllText: r,
                    privacyOptions: i,
                    value: a,
                  }) {
                    return !r ||
                      (i.unmaskTextSelector && e.matches(i.unmaskTextSelector))
                      ? a
                      : n.includes(t) ||
                        ("value" === t &&
                          "INPUT" === e.tagName &&
                          ["submit", "button"].includes(
                            e.getAttribute("type") || ""
                          ))
                      ? a.replace(/[\S]/g, "*")
                      : a;
                  })({
                    maskAttributes: E,
                    maskAllText: u,
                    privacyOptions: A,
                    key: e,
                    value: t,
                    el: n,
                  }),
                ...A,
                slimDOMOptions: "all",
                inlineStylesheet: !0,
                inlineImages: !1,
                collectFonts: !0,
                errorHandler: (e) => {
                  try {
                    e.__rrweb__ = !0;
                  } catch (e) {}
                },
              }),
              (this._initialOptions = {
                flushMinDelay: e,
                flushMaxDelay: t,
                minReplayDuration: Math.min(n, 15e3),
                maxReplayDuration: Math.min(r, 36e5),
                stickySession: i,
                useCompression: a,
                workerUrl: o,
                blockAllMedia: c,
                maskAllInputs: l,
                maskAllText: u,
                mutationBreadcrumbLimit: d,
                mutationLimit: f,
                slowClickTimeout: p,
                slowClickIgnoreSelectors: h,
                networkDetailAllowUrls: m,
                networkDetailDenyUrls: y,
                networkCaptureBodies: g,
                networkRequestHeaders: u8(b),
                networkResponseHeaders: u8(v),
                beforeAddRecordingEvent: P,
                beforeErrorSampling: O,
                onError: I,
                _experiments: s,
              }),
              this._initialOptions.blockAllMedia &&
                (this._recordingOptions.blockSelector = this._recordingOptions
                  .blockSelector
                  ? `${this._recordingOptions.blockSelector},${u6}`
                  : u6),
              this._isInitialized && os())
            )
              throw Error(
                "Multiple Sentry Session Replay instances are not supported"
              );
            this._isInitialized = !0;
          }
          get _isInitialized() {
            return u5;
          }
          set _isInitialized(e) {
            u5 = e;
          }
          afterAllSetup(e) {
            os() && !this._replay && (this._setup(e), this._initialize(e));
          }
          start() {
            this._replay && this._replay.start();
          }
          startBuffering() {
            this._replay && this._replay.startBuffering();
          }
          stop() {
            return this._replay
              ? this._replay.stop({
                  forceFlush: "session" === this._replay.recordingMode,
                })
              : Promise.resolve();
          }
          flush(e) {
            return this._replay
              ? this._replay.isEnabled()
                ? this._replay.sendBufferedReplayOrFlush(e)
                : (this._replay.start(), Promise.resolve())
              : Promise.resolve();
          }
          getReplayId() {
            if (this._replay && this._replay.isEnabled())
              return this._replay.getSessionId();
          }
          getRecordingMode() {
            if (this._replay && this._replay.isEnabled())
              return this._replay.recordingMode;
          }
          _initialize(e) {
            this._replay &&
              (this._maybeLoadFromReplayCanvasIntegration(e),
              this._replay.initializeSampling());
          }
          _setup(e) {
            let t = (function (e, t) {
              let n = t.getOptions(),
                r = { sessionSampleRate: 0, errorSampleRate: 0, ...aA(e) },
                i = ou(n.replaysSessionSampleRate),
                a = ou(n.replaysOnErrorSampleRate);
              return (
                null == i &&
                  null == a &&
                  (function (e) {
                    if (!("console" in am)) return e();
                    let t = am.console,
                      n = {},
                      r = Object.keys(aT);
                    r.forEach((e) => {
                      let r = aT[e];
                      (n[e] = t[e]), (t[e] = r);
                    });
                    try {
                      return e();
                    } finally {
                      r.forEach((e) => {
                        t[e] = n[e];
                      });
                    }
                  })(() => {
                    console.warn(
                      "Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set."
                    );
                  }),
                null != i && (r.sessionSampleRate = i),
                null != a && (r.errorSampleRate = a),
                r
              );
            })(this._initialOptions, e);
            this._replay = new u1({
              options: t,
              recordingOptions: this._recordingOptions,
            });
          }
          _maybeLoadFromReplayCanvasIntegration(e) {
            try {
              let t = e.getIntegrationByName("ReplayCanvas");
              if (!t) return;
              this._replay._canvas = t.getOptions();
            } catch (e) {}
          }
        }
        function u8(e) {
          return [...u3, ...e.map((e) => e.toLowerCase())];
        }
        u4.__initStatic(),
          (globalThis._sentryRewritesTunnelPath = "/monitoring"),
          (globalThis.SENTRY_RELEASE = {
            id: "6e593cacbf5bc4c4ef4210062c719bd2a300bebe",
          }),
          (globalThis._sentryBasePath = void 0),
          (globalThis._sentryRewriteFramesAssetPrefixPath = ""),
          (function (e) {
            let t = {
              environment:
                (function (e) {
                  let t = e ? "production" : n_.env.VERCEL_ENV;
                  return t ? `vercel-${t}` : void 0;
                })(!0) || "production",
              defaultIntegrations: (function (e) {
                let t = nE(e);
                ("undefined" == typeof __SENTRY_TRACING__ ||
                  __SENTRY_TRACING__) &&
                  t.push(
                    (function (e = {}) {
                      let t = i5({
                          ...e,
                          instrumentNavigation: !1,
                          instrumentPageLoad: !1,
                        }),
                        {
                          instrumentPageLoad: n = !0,
                          instrumentNavigation: r = !0,
                        } = e;
                      return {
                        ...t,
                        afterAllSetup(e) {
                          r &&
                            (function (e) {
                              let t =
                                !te.document.getElementById("__NEXT_DATA__");
                              t
                                ? !(function (e) {
                                    let t;
                                    te.addEventListener("popstate", () => {
                                      t && t.isRecording()
                                        ? (t.updateName(te.location.pathname),
                                          t.setAttribute(i9, "url"))
                                        : (t = i8(e, {
                                            name: te.location.pathname,
                                            attributes: {
                                              [ae]: "navigation",
                                              [at]: "auto.navigation.nextjs.app_router_instrumentation",
                                              [i9]: "url",
                                              "navigation.type":
                                                "browser.popstate",
                                            },
                                          }));
                                    });
                                    let n = !1,
                                      r = 0,
                                      i = setInterval(() => {
                                        var a;
                                        r++;
                                        let o =
                                          null !=
                                          (a = T([
                                            P,
                                            "optionalAccess",
                                            (e) => e.next,
                                            "optionalAccess",
                                            (e) => e.router,
                                          ]))
                                            ? a
                                            : T([
                                                P,
                                                "optionalAccess",
                                                (e) => e.nd,
                                                "optionalAccess",
                                                (e) => e.router,
                                              ]);
                                        n || r > 500
                                          ? clearInterval(i)
                                          : o &&
                                            (clearInterval(i),
                                            (n = !0),
                                            [
                                              "back",
                                              "forward",
                                              "push",
                                              "replace",
                                            ].forEach((n) => {
                                              T([
                                                o,
                                                "optionalAccess",
                                                (e) => e[n],
                                              ]) &&
                                                (o[n] = new Proxy(o[n], {
                                                  apply(r, i, a) {
                                                    let o = i8(e, {
                                                      name: an,
                                                      attributes: {
                                                        [ae]: "navigation",
                                                        [at]: "auto.navigation.nextjs.app_router_instrumentation",
                                                        [i9]: "url",
                                                      },
                                                    });
                                                    return (
                                                      (t = o),
                                                      "push" === n
                                                        ? (T([
                                                            o,
                                                            "optionalAccess",
                                                            (e) => e.updateName,
                                                            "call",
                                                            (e) => e(ar(a[0])),
                                                          ]),
                                                          T([
                                                            o,
                                                            "optionalAccess",
                                                            (e) =>
                                                              e.setAttribute,
                                                            "call",
                                                            (e) => e(i9, "url"),
                                                          ]),
                                                          T([
                                                            o,
                                                            "optionalAccess",
                                                            (e) =>
                                                              e.setAttribute,
                                                            "call",
                                                            (e) =>
                                                              e(
                                                                "navigation.type",
                                                                "router.push"
                                                              ),
                                                          ]))
                                                        : "replace" === n
                                                        ? (T([
                                                            o,
                                                            "optionalAccess",
                                                            (e) => e.updateName,
                                                            "call",
                                                            (e) => e(ar(a[0])),
                                                          ]),
                                                          T([
                                                            o,
                                                            "optionalAccess",
                                                            (e) =>
                                                              e.setAttribute,
                                                            "call",
                                                            (e) => e(i9, "url"),
                                                          ]),
                                                          T([
                                                            o,
                                                            "optionalAccess",
                                                            (e) =>
                                                              e.setAttribute,
                                                            "call",
                                                            (e) =>
                                                              e(
                                                                "navigation.type",
                                                                "router.replace"
                                                              ),
                                                          ]))
                                                        : "back" === n
                                                        ? T([
                                                            o,
                                                            "optionalAccess",
                                                            (e) =>
                                                              e.setAttribute,
                                                            "call",
                                                            (e) =>
                                                              e(
                                                                "navigation.type",
                                                                "router.back"
                                                              ),
                                                          ])
                                                        : "forward" === n &&
                                                          T([
                                                            o,
                                                            "optionalAccess",
                                                            (e) =>
                                                              e.setAttribute,
                                                            "call",
                                                            (e) =>
                                                              e(
                                                                "navigation.type",
                                                                "router.forward"
                                                              ),
                                                          ]),
                                                      r.apply(i, a)
                                                    );
                                                  },
                                                }));
                                            }));
                                      }, 20);
                                  })(e)
                                : ao.events.on("routeChangeStart", (t) => {
                                    let n, r;
                                    let i = t.split(/[?#]/, 1)[0],
                                      a = (function (e) {
                                        let t = (te.__BUILD_MANIFEST || {})
                                          .sortedPages;
                                        if (t)
                                          return t.find((t) => {
                                            let n = (function (e) {
                                              let t = e.split("/"),
                                                n = "";
                                              T([
                                                t,
                                                "access",
                                                (e) => e[t.length - 1],
                                                "optionalAccess",
                                                (e) => e.match,
                                                "call",
                                                (e) => e(/^\[\[\.\.\..+\]\]$/),
                                              ]) &&
                                                (t.pop(), (n = "(?:/(.+?))?"));
                                              let r = t
                                                .map((e) =>
                                                  e
                                                    .replace(
                                                      /^\[\.\.\..+\]$/,
                                                      "(.+?)"
                                                    )
                                                    .replace(
                                                      /^\[.*\]$/,
                                                      "([^/]+?)"
                                                    )
                                                )
                                                .join("/");
                                              return RegExp(`^${r}${n}(?:/)?$`);
                                            })(t);
                                            return e.match(n);
                                          });
                                      })(i);
                                    a
                                      ? ((n = a), (r = "route"))
                                      : ((n = i), (r = "url")),
                                      i8(e, {
                                        name: n,
                                        attributes: {
                                          [ae]: "navigation",
                                          [at]: "auto.navigation.nextjs.pages_router_instrumentation",
                                          [i9]: r,
                                        },
                                      });
                                  });
                            })(e),
                            t.afterAllSetup(e),
                            n &&
                              (function (e) {
                                let t =
                                  !te.document.getElementById("__NEXT_DATA__");
                                t
                                  ? i4(e, {
                                      name: te.location.pathname,
                                      startTime: j ? j / 1e3 : void 0,
                                      attributes: {
                                        [ae]: "pageload",
                                        [at]: "auto.pageload.nextjs.app_router_instrumentation",
                                        [i9]: "url",
                                      },
                                    })
                                  : (function (e) {
                                      let {
                                          route: t,
                                          params: n,
                                          sentryTrace: r,
                                          baggage: i,
                                        } = (function () {
                                          let e;
                                          let t =
                                            te.document.getElementById(
                                              "__NEXT_DATA__"
                                            );
                                          if (t && t.innerHTML)
                                            try {
                                              e = JSON.parse(t.innerHTML);
                                            } catch (e) {}
                                          if (!e) return {};
                                          let n = {},
                                            { page: r, query: i, props: a } = e;
                                          return (
                                            (n.route = r),
                                            (n.params = i),
                                            a &&
                                              a.pageProps &&
                                              ((n.sentryTrace =
                                                a.pageProps._sentryTraceData),
                                              (n.baggage =
                                                a.pageProps._sentryBaggage)),
                                            n
                                          );
                                        })(),
                                        a =
                                          i &&
                                          (N(i, "String") || Array.isArray(i))
                                            ? Array.isArray(i)
                                              ? i.reduce((e, t) => {
                                                  let n = ai(t);
                                                  return (
                                                    Object.entries(n).forEach(
                                                      ([t, n]) => {
                                                        e[t] = n;
                                                      }
                                                    ),
                                                    e
                                                  );
                                                }, {})
                                              : ai(i)
                                            : void 0,
                                        o = t || te.location.pathname;
                                      a &&
                                        a["sentry-transaction"] &&
                                        "/_error" === o &&
                                        (o = (o =
                                          a["sentry-transaction"]).replace(
                                          /^(GET|POST|PUT|DELETE|PATCH|HEAD|OPTIONS|TRACE|CONNECT)\s+/i,
                                          ""
                                        )),
                                        i4(
                                          e,
                                          {
                                            name: o,
                                            startTime: j ? j / 1e3 : void 0,
                                            attributes: {
                                              [ae]: "pageload",
                                              [at]: "auto.pageload.nextjs.pages_router_instrumentation",
                                              [i9]: t ? "route" : "url",
                                              ...(n &&
                                                e.getOptions()
                                                  .sendDefaultPii && { ...n }),
                                            },
                                          },
                                          { sentryTrace: r, baggage: i }
                                        );
                                    })(e);
                              })(e);
                        },
                      };
                    })()
                  );
                let n = P._sentryRewriteFramesAssetPrefixPath || "";
                return t.push(ad({ assetPrefixPath: n })), t;
              })(e),
              ...e,
            };
            (function (e) {
              let t = "/monitoring";
              if (t && e.dsn) {
                let n = (function (e) {
                  var t;
                  let n = af.exec(e);
                  if (!n) {
                    (function (e) {
                      if (!("console" in P)) return e();
                      let t = P.console,
                        n = {},
                        r = Object.keys(R);
                      r.forEach((e) => {
                        let r = R[e];
                        (n[e] = t[e]), (t[e] = r);
                      });
                      try {
                        return e();
                      } finally {
                        r.forEach((e) => {
                          t[e] = n[e];
                        });
                      }
                    })(() => {
                      console.error(`Invalid Sentry Dsn: ${e}`);
                    });
                    return;
                  }
                  let [r, i, a = "", o = "", s = "", u = ""] = n.slice(1),
                    l = "",
                    c = u,
                    d = c.split("/");
                  if (
                    (d.length > 1 &&
                      ((l = d.slice(0, -1).join("/")), (c = d.pop())),
                    c)
                  ) {
                    let e = c.match(/^\d+/);
                    e && (c = e[0]);
                  }
                  return {
                    protocol: (t = {
                      host: o,
                      pass: a,
                      path: l,
                      projectId: c,
                      port: s,
                      protocol: r,
                      publicKey: i,
                    }).protocol,
                    publicKey: t.publicKey || "",
                    pass: t.pass || "",
                    host: t.host,
                    port: t.port || "",
                    path: t.path || "",
                    projectId: t.projectId,
                  };
                })(e.dsn);
                if (!n) return;
                let r = n.host.match(
                  /^o(\d+)\.ingest(?:\.([a-z]{2}))?\.sentry\.io$/
                );
                if (r) {
                  let i = r[1],
                    a = r[2],
                    o = `${t}?o=${i}&p=${n.projectId}`;
                  a && (o += `&r=${a}`), (e.tunnel = o);
                }
              }
            })(t),
              (function (e, t, n = [t], r = "npm") {
                let i = e._metadata || {};
                i.sdk ||
                  (i.sdk = {
                    name: `sentry.javascript.${t}`,
                    packages: n.map((e) => ({
                      name: `${r}:@sentry/${e}`,
                      version: S,
                    })),
                    version: S,
                  }),
                  (e._metadata = i);
              })(t, "nextjs", ["nextjs", "react"]),
              (function (e) {
                let t = { ...e };
                (function (e, t, n = [t], r = "npm") {
                  let i = e._metadata || {};
                  i.sdk ||
                    (i.sdk = {
                      name: `sentry.javascript.${t}`,
                      packages: n.map((e) => ({
                        name: `${r}:@sentry/${e}`,
                        version: nx,
                      })),
                      version: nx,
                    }),
                    (e._metadata = i);
                })(t, "react"),
                  (0, ec.v)("react", { version: nC.version }),
                  (function (e = {}) {
                    let t = (function (e = {}) {
                      let t = {
                        defaultIntegrations: nE(e),
                        release:
                          "string" == typeof __SENTRY_RELEASE__
                            ? __SENTRY_RELEASE__
                            : te.SENTRY_RELEASE && te.SENTRY_RELEASE.id
                            ? te.SENTRY_RELEASE.id
                            : void 0,
                        autoSessionTracking: !0,
                        sendClientReports: !0,
                      };
                      return (
                        null == e.defaultIntegrations &&
                          delete e.defaultIntegrations,
                        { ...t, ...e }
                      );
                    })(e);
                    if (
                      !t.skipBrowserExtensionCheck &&
                      (function () {
                        let e = void 0 !== te.window && te;
                        if (!e) return !1;
                        let t = e.chrome ? "chrome" : "browser",
                          n = e[t],
                          r = n && n.runtime && n.runtime.id,
                          i = (te.location && te.location.href) || "",
                          a =
                            !!r &&
                            te === te.top &&
                            [
                              "chrome-extension:",
                              "moz-extension:",
                              "ms-browser-extension:",
                              "safari-web-extension:",
                            ].some((e) => i.startsWith(`${e}//`)),
                          o = void 0 !== e.nw;
                        return !!r && !a && !o;
                      })()
                    ) {
                      (0, ef.Cf)(() => {
                        console.error(
                          "[Sentry] You cannot run Sentry this way in a browser extension, check: https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/"
                        );
                      });
                      return;
                    }
                    let n = {
                      ...t,
                      stackParser: (0, eT.Sq)(t.stackParser || nh),
                      integrations: (function (e) {
                        let t;
                        let n = e.defaultIntegrations || [],
                          r = e.integrations;
                        if (
                          (n.forEach((e) => {
                            e.isDefaultInstance = !0;
                          }),
                          Array.isArray(r))
                        )
                          t = [...n, ...r];
                        else if ("function" == typeof r) {
                          let e = r(n);
                          t = Array.isArray(e) ? e : [e];
                        } else t = n;
                        let i = (function (e) {
                            let t = {};
                            return (
                              e.forEach((e) => {
                                let { name: n } = e,
                                  r = t[n];
                                (r &&
                                  !r.isDefaultInstance &&
                                  e.isDefaultInstance) ||
                                  (t[n] = e);
                              }),
                              Object.values(t)
                            );
                          })(t),
                          a = i.findIndex((e) => "Debug" === e.name);
                        if (a > -1) {
                          let [e] = i.splice(a, 1);
                          i.push(e);
                        }
                        return i;
                      })(t),
                      transport: t.transport || nw,
                    };
                    (function (e, t) {
                      !0 === t.debug &&
                        (ed.X
                          ? ef.kg.enable()
                          : (0, ef.Cf)(() => {
                              console.warn(
                                "[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle."
                              );
                            }));
                      let n = (0, eE.nZ)();
                      n.update(t.initialScope);
                      let r = new e(t);
                      (0, eE.nZ)().setClient(r), r.init();
                    })(tr, n);
                  })(t);
              })(t);
            let n = (e) =>
              "transaction" === e.type && "/404" === e.transaction ? null : e;
            (n.id = "NextClient404Filter"), Z(n);
            let r = (e) =>
              "transaction" === e.type && e.transaction === an ? null : e;
            (r.id = "IncompleteTransactionFilter"), Z(r);
            let i = (e, t) => {
              var n;
              return (function (e) {
                switch (M.call(e)) {
                  case "[object Error]":
                  case "[object Exception]":
                  case "[object DOMException]":
                  case "[object WebAssembly.Exception]":
                    return !0;
                  default:
                    return (function (e, t) {
                      try {
                        return e instanceof t;
                      } catch (e) {
                        return !1;
                      }
                    })(e, Error);
                }
              })((n = T([t, "optionalAccess", (e) => e.originalException]))) &&
                "string" == typeof n.digest &&
                n.digest.startsWith("NEXT_REDIRECT;")
                ? null
                : e;
            };
            (i.id = "NextRedirectErrorFilter"), Z(i);
          })({
            dsn: "https://f4f1f3edc69918fb73e3481cbdf35d1c@o4506861950992384.ingest.us.sentry.io/4507469027344384",
            integrations: [new u4(void 0)],
            tracesSampleRate: 1,
            replaysSessionSampleRate: 0.1,
            replaysOnErrorSampleRate: 1,
            debug: !1,
          });
      },
      18916: function (e, t) {
        "use strict";
        var n, r;
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (function (e, t) {
            for (var n in t)
              Object.defineProperty(e, n, { enumerable: !0, get: t[n] });
          })(t, {
            PrefetchKind: function () {
              return n;
            },
            ACTION_REFRESH: function () {
              return i;
            },
            ACTION_NAVIGATE: function () {
              return a;
            },
            ACTION_RESTORE: function () {
              return o;
            },
            ACTION_SERVER_PATCH: function () {
              return s;
            },
            ACTION_PREFETCH: function () {
              return u;
            },
            ACTION_FAST_REFRESH: function () {
              return l;
            },
            ACTION_SERVER_ACTION: function () {
              return c;
            },
          });
        let i = "refresh",
          a = "navigate",
          o = "restore",
          s = "server-patch",
          u = "prefetch",
          l = "fast-refresh",
          c = "server-action";
        ((r = n || (n = {})).AUTO = "auto"),
          (r.FULL = "full"),
          (r.TEMPORARY = "temporary"),
          ("function" == typeof t.default ||
            ("object" == typeof t.default && null !== t.default)) &&
            void 0 === t.default.__esModule &&
            (Object.defineProperty(t.default, "__esModule", { value: !0 }),
            Object.assign(t.default, t),
            (e.exports = t.default));
      },
      71210: function (e, t, n) {
        "use strict";
        function r(e, t, n, r) {
          return !1;
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "getDomainLocale", {
            enumerable: !0,
            get: function () {
              return r;
            },
          }),
          n(82392),
          ("function" == typeof t.default ||
            ("object" == typeof t.default && null !== t.default)) &&
            void 0 === t.default.__esModule &&
            (Object.defineProperty(t.default, "__esModule", { value: !0 }),
            Object.assign(t.default, t),
            (e.exports = t.default));
      },
      70543: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "Image", {
            enumerable: !0,
            get: function () {
              return b;
            },
          });
        let r = n(38754),
          i = n(61757),
          a = i._(n(67294)),
          o = n(73935),
          s = r._(n(5443)),
          u = n(18780),
          l = n(99309),
          c = n(59977);
        n(35086);
        let d = n(63462),
          f = r._(n(61479)),
          p = {
            deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
            imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
            path: "/_next/image",
            loader: "default",
            dangerouslyAllowSVG: !1,
            unoptimized: !1,
          };
        function h(e, t, n, r, i, a) {
          let o = null == e ? void 0 : e.src;
          if (!e || e["data-loaded-src"] === o) return;
          e["data-loaded-src"] = o;
          let s = "decode" in e ? e.decode() : Promise.resolve();
          s.catch(() => {}).then(() => {
            if (e.parentElement && e.isConnected) {
              if (("empty" !== t && i(!0), null == n ? void 0 : n.current)) {
                let t = new Event("load");
                Object.defineProperty(t, "target", { writable: !1, value: e });
                let r = !1,
                  i = !1;
                n.current({
                  ...t,
                  nativeEvent: t,
                  currentTarget: e,
                  target: e,
                  isDefaultPrevented: () => r,
                  isPropagationStopped: () => i,
                  persist: () => {},
                  preventDefault: () => {
                    (r = !0), t.preventDefault();
                  },
                  stopPropagation: () => {
                    (i = !0), t.stopPropagation();
                  },
                });
              }
              (null == r ? void 0 : r.current) && r.current(e);
            }
          });
        }
        function m(e) {
          let [t, n] = a.version.split("."),
            r = parseInt(t, 10),
            i = parseInt(n, 10);
          return r > 18 || (18 === r && i >= 3)
            ? { fetchPriority: e }
            : { fetchpriority: e };
        }
        let y = (0, a.forwardRef)((e, t) => {
          let {
            src: n,
            srcSet: r,
            sizes: i,
            height: o,
            width: s,
            decoding: u,
            className: l,
            style: c,
            fetchPriority: d,
            placeholder: f,
            loading: p,
            unoptimized: y,
            fill: g,
            onLoadRef: b,
            onLoadingCompleteRef: v,
            setBlurComplete: w,
            setShowAltText: E,
            onLoad: x,
            onError: C,
            ..._
          } = e;
          return a.default.createElement("img", {
            ..._,
            ...m(d),
            loading: p,
            width: s,
            height: o,
            decoding: u,
            "data-nimg": g ? "fill" : "1",
            className: l,
            style: c,
            sizes: i,
            srcSet: r,
            src: n,
            ref: (0, a.useCallback)(
              (e) => {
                t &&
                  ("function" == typeof t
                    ? t(e)
                    : "object" == typeof t && (t.current = e)),
                  e &&
                    (C && (e.src = e.src), e.complete && h(e, f, b, v, w, y));
              },
              [n, f, b, v, w, C, y, t]
            ),
            onLoad: (e) => {
              let t = e.currentTarget;
              h(t, f, b, v, w, y);
            },
            onError: (e) => {
              E(!0), "empty" !== f && w(!0), C && C(e);
            },
          });
        });
        function g(e) {
          let { isAppRouter: t, imgAttributes: n } = e,
            r = {
              as: "image",
              imageSrcSet: n.srcSet,
              imageSizes: n.sizes,
              crossOrigin: n.crossOrigin,
              referrerPolicy: n.referrerPolicy,
              ...m(n.fetchPriority),
            };
          return t && o.preload
            ? ((0, o.preload)(n.src, r), null)
            : a.default.createElement(
                s.default,
                null,
                a.default.createElement("link", {
                  key: "__nimg-" + n.src + n.srcSet + n.sizes,
                  rel: "preload",
                  href: n.srcSet ? void 0 : n.src,
                  ...r,
                })
              );
        }
        let b = (0, a.forwardRef)((e, t) => {
          let n = (0, a.useContext)(d.RouterContext),
            r = (0, a.useContext)(c.ImageConfigContext),
            i = (0, a.useMemo)(() => {
              let e = p || r || l.imageConfigDefault,
                t = [...e.deviceSizes, ...e.imageSizes].sort((e, t) => e - t),
                n = e.deviceSizes.sort((e, t) => e - t);
              return { ...e, allSizes: t, deviceSizes: n };
            }, [r]),
            { onLoad: o, onLoadingComplete: s } = e,
            h = (0, a.useRef)(o);
          (0, a.useEffect)(() => {
            h.current = o;
          }, [o]);
          let m = (0, a.useRef)(s);
          (0, a.useEffect)(() => {
            m.current = s;
          }, [s]);
          let [b, v] = (0, a.useState)(!1),
            [w, E] = (0, a.useState)(!1),
            { props: x, meta: C } = (0, u.getImgProps)(e, {
              defaultLoader: f.default,
              imgConf: i,
              blurComplete: b,
              showAltText: w,
            });
          return a.default.createElement(
            a.default.Fragment,
            null,
            a.default.createElement(y, {
              ...x,
              unoptimized: C.unoptimized,
              placeholder: C.placeholder,
              fill: C.fill,
              onLoadRef: h,
              onLoadingCompleteRef: m,
              setBlurComplete: v,
              setShowAltText: E,
              ref: t,
            }),
            C.priority
              ? a.default.createElement(g, {
                  isAppRouter: !n,
                  imgAttributes: x,
                })
              : null
          );
        });
        ("function" == typeof t.default ||
          ("object" == typeof t.default && null !== t.default)) &&
          void 0 === t.default.__esModule &&
          (Object.defineProperty(t.default, "__esModule", { value: !0 }),
          Object.assign(t.default, t),
          (e.exports = t.default));
      },
      48418: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "default", {
            enumerable: !0,
            get: function () {
              return w;
            },
          });
        let r = n(38754),
          i = r._(n(67294)),
          a = n(63297),
          o = n(4634),
          s = n(4611),
          u = n(63794),
          l = n(22725),
          c = n(63462),
          d = n(21018),
          f = n(57190),
          p = n(71210),
          h = n(98684),
          m = n(18916),
          y = new Set();
        function g(e, t, n, r, i, a) {
          if (!a && !(0, o.isLocalURL)(t)) return;
          if (!r.bypassPrefetchedCheck) {
            let i =
                void 0 !== r.locale
                  ? r.locale
                  : "locale" in e
                  ? e.locale
                  : void 0,
              a = t + "%" + n + "%" + i;
            if (y.has(a)) return;
            y.add(a);
          }
          let s = a ? e.prefetch(t, i) : e.prefetch(t, n, r);
          Promise.resolve(s).catch((e) => {});
        }
        function b(e) {
          return "string" == typeof e ? e : (0, s.formatUrl)(e);
        }
        let v = i.default.forwardRef(function (e, t) {
            let n, r;
            let {
              href: s,
              as: y,
              children: v,
              prefetch: w = null,
              passHref: E,
              replace: x,
              shallow: C,
              scroll: _,
              locale: T,
              onClick: S,
              onMouseEnter: P,
              onTouchStart: O,
              legacyBehavior: I = !1,
              ...A
            } = e;
            (n = v),
              I &&
                ("string" == typeof n || "number" == typeof n) &&
                (n = i.default.createElement("a", null, n));
            let k = i.default.useContext(c.RouterContext),
              j = i.default.useContext(d.AppRouterContext),
              B = null != k ? k : j,
              M = !k,
              N = !1 !== w,
              D = null === w ? m.PrefetchKind.AUTO : m.PrefetchKind.FULL,
              { href: R, as: F } = i.default.useMemo(() => {
                if (!k) {
                  let e = b(s);
                  return { href: e, as: y ? b(y) : e };
                }
                let [e, t] = (0, a.resolveHref)(k, s, !0);
                return { href: e, as: y ? (0, a.resolveHref)(k, y) : t || e };
              }, [k, s, y]),
              L = i.default.useRef(R),
              U = i.default.useRef(F);
            I && (r = i.default.Children.only(n));
            let $ = I ? r && "object" == typeof r && r.ref : t,
              [q, H, z] = (0, f.useIntersection)({ rootMargin: "200px" }),
              G = i.default.useCallback(
                (e) => {
                  (U.current !== F || L.current !== R) &&
                    (z(), (U.current = F), (L.current = R)),
                    q(e),
                    $ &&
                      ("function" == typeof $
                        ? $(e)
                        : "object" == typeof $ && ($.current = e));
                },
                [F, $, R, z, q]
              );
            i.default.useEffect(() => {
              B && H && N && g(B, R, F, { locale: T }, { kind: D }, M);
            }, [F, R, H, T, N, null == k ? void 0 : k.locale, B, M, D]);
            let W = {
              ref: G,
              onClick(e) {
                I || "function" != typeof S || S(e),
                  I &&
                    r.props &&
                    "function" == typeof r.props.onClick &&
                    r.props.onClick(e),
                  B &&
                    !e.defaultPrevented &&
                    (function (e, t, n, r, a, s, u, l, c, d) {
                      let { nodeName: f } = e.currentTarget,
                        p = "A" === f.toUpperCase();
                      if (
                        p &&
                        ((function (e) {
                          let t = e.currentTarget,
                            n = t.getAttribute("target");
                          return (
                            (n && "_self" !== n) ||
                            e.metaKey ||
                            e.ctrlKey ||
                            e.shiftKey ||
                            e.altKey ||
                            (e.nativeEvent && 2 === e.nativeEvent.which)
                          );
                        })(e) ||
                          (!c && !(0, o.isLocalURL)(n)))
                      )
                        return;
                      e.preventDefault();
                      let h = () => {
                        let e = null == u || u;
                        "beforePopState" in t
                          ? t[a ? "replace" : "push"](n, r, {
                              shallow: s,
                              locale: l,
                              scroll: e,
                            })
                          : t[a ? "replace" : "push"](r || n, {
                              forceOptimisticNavigation: !d,
                              scroll: e,
                            });
                      };
                      c ? i.default.startTransition(h) : h();
                    })(e, B, R, F, x, C, _, T, M, N);
              },
              onMouseEnter(e) {
                I || "function" != typeof P || P(e),
                  I &&
                    r.props &&
                    "function" == typeof r.props.onMouseEnter &&
                    r.props.onMouseEnter(e),
                  B &&
                    (N || !M) &&
                    g(
                      B,
                      R,
                      F,
                      { locale: T, priority: !0, bypassPrefetchedCheck: !0 },
                      { kind: D },
                      M
                    );
              },
              onTouchStart(e) {
                I || "function" != typeof O || O(e),
                  I &&
                    r.props &&
                    "function" == typeof r.props.onTouchStart &&
                    r.props.onTouchStart(e),
                  B &&
                    (N || !M) &&
                    g(
                      B,
                      R,
                      F,
                      { locale: T, priority: !0, bypassPrefetchedCheck: !0 },
                      { kind: D },
                      M
                    );
              },
            };
            if ((0, u.isAbsoluteUrl)(F)) W.href = F;
            else if (!I || E || ("a" === r.type && !("href" in r.props))) {
              let e = void 0 !== T ? T : null == k ? void 0 : k.locale,
                t =
                  (null == k ? void 0 : k.isLocaleDomain) &&
                  (0, p.getDomainLocale)(
                    F,
                    e,
                    null == k ? void 0 : k.locales,
                    null == k ? void 0 : k.domainLocales
                  );
              W.href =
                t ||
                (0, h.addBasePath)(
                  (0, l.addLocale)(F, e, null == k ? void 0 : k.defaultLocale)
                );
            }
            return I
              ? i.default.cloneElement(r, W)
              : i.default.createElement("a", { ...A, ...W }, n);
          }),
          w = v;
        ("function" == typeof t.default ||
          ("object" == typeof t.default && null !== t.default)) &&
          void 0 === t.default.__esModule &&
          (Object.defineProperty(t.default, "__esModule", { value: !0 }),
          Object.assign(t.default, t),
          (e.exports = t.default));
      },
      57190: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "useIntersection", {
            enumerable: !0,
            get: function () {
              return u;
            },
          });
        let r = n(67294),
          i = n(9311),
          a = "function" == typeof IntersectionObserver,
          o = new Map(),
          s = [];
        function u(e) {
          let { rootRef: t, rootMargin: n, disabled: u } = e,
            l = u || !a,
            [c, d] = (0, r.useState)(!1),
            f = (0, r.useRef)(null),
            p = (0, r.useCallback)((e) => {
              f.current = e;
            }, []);
          (0, r.useEffect)(() => {
            if (a) {
              if (l || c) return;
              let e = f.current;
              if (e && e.tagName) {
                let r = (function (e, t, n) {
                  let {
                    id: r,
                    observer: i,
                    elements: a,
                  } = (function (e) {
                    let t;
                    let n = {
                        root: e.root || null,
                        margin: e.rootMargin || "",
                      },
                      r = s.find(
                        (e) => e.root === n.root && e.margin === n.margin
                      );
                    if (r && (t = o.get(r))) return t;
                    let i = new Map(),
                      a = new IntersectionObserver((e) => {
                        e.forEach((e) => {
                          let t = i.get(e.target),
                            n = e.isIntersecting || e.intersectionRatio > 0;
                          t && n && t(n);
                        });
                      }, e);
                    return (
                      (t = { id: n, observer: a, elements: i }),
                      s.push(n),
                      o.set(n, t),
                      t
                    );
                  })(n);
                  return (
                    a.set(e, t),
                    i.observe(e),
                    function () {
                      if ((a.delete(e), i.unobserve(e), 0 === a.size)) {
                        i.disconnect(), o.delete(r);
                        let e = s.findIndex(
                          (e) => e.root === r.root && e.margin === r.margin
                        );
                        e > -1 && s.splice(e, 1);
                      }
                    }
                  );
                })(e, (e) => e && d(e), {
                  root: null == t ? void 0 : t.current,
                  rootMargin: n,
                });
                return r;
              }
            } else if (!c) {
              let e = (0, i.requestIdleCallback)(() => d(!0));
              return () => (0, i.cancelIdleCallback)(e);
            }
          }, [l, n, t, c, f.current]);
          let h = (0, r.useCallback)(() => {
            d(!1);
          }, []);
          return [p, c, h];
        }
        ("function" == typeof t.default ||
          ("object" == typeof t.default && null !== t.default)) &&
          void 0 === t.default.__esModule &&
          (Object.defineProperty(t.default, "__esModule", { value: !0 }),
          Object.assign(t.default, t),
          (e.exports = t.default));
      },
      90638: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (function (e, t) {
            for (var n in t)
              Object.defineProperty(e, n, { enumerable: !0, get: t[n] });
          })(t, {
            noSSR: function () {
              return o;
            },
            default: function () {
              return s;
            },
          });
        let r = n(38754),
          i = (n(67294), r._(n(14302)));
        function a(e) {
          return { default: (null == e ? void 0 : e.default) || e };
        }
        function o(e, t) {
          return delete t.webpack, delete t.modules, e(t);
        }
        function s(e, t) {
          let n = i.default,
            r = {
              loading: (e) => {
                let { error: t, isLoading: n, pastDelay: r } = e;
                return null;
              },
            };
          e instanceof Promise
            ? (r.loader = () => e)
            : "function" == typeof e
            ? (r.loader = e)
            : "object" == typeof e && (r = { ...r, ...e }),
            (r = { ...r, ...t });
          let s = r.loader;
          return (r.loadableGenerated &&
            ((r = { ...r, ...r.loadableGenerated }),
            delete r.loadableGenerated),
          "boolean" != typeof r.ssr || r.ssr)
            ? n({
                ...r,
                loader: () =>
                  null != s ? s().then(a) : Promise.resolve(a(() => null)),
              })
            : (delete r.webpack, delete r.modules, o(n, r));
        }
        ("function" == typeof t.default ||
          ("object" == typeof t.default && null !== t.default)) &&
          void 0 === t.default.__esModule &&
          (Object.defineProperty(t.default, "__esModule", { value: !0 }),
          Object.assign(t.default, t),
          (e.exports = t.default));
      },
      18780: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "getImgProps", {
            enumerable: !0,
            get: function () {
              return s;
            },
          }),
          n(35086);
        let r = n(42730),
          i = n(99309);
        function a(e) {
          return void 0 !== e.default;
        }
        function o(e) {
          return void 0 === e
            ? e
            : "number" == typeof e
            ? Number.isFinite(e)
              ? e
              : NaN
            : "string" == typeof e && /^[0-9]+$/.test(e)
            ? parseInt(e, 10)
            : NaN;
        }
        function s(e, t) {
          var n;
          let s,
            u,
            l,
            {
              src: c,
              sizes: d,
              unoptimized: f = !1,
              priority: p = !1,
              loading: h,
              className: m,
              quality: y,
              width: g,
              height: b,
              fill: v = !1,
              style: w,
              onLoad: E,
              onLoadingComplete: x,
              placeholder: C = "empty",
              blurDataURL: _,
              fetchPriority: T,
              layout: S,
              objectFit: P,
              objectPosition: O,
              lazyBoundary: I,
              lazyRoot: A,
              ...k
            } = e,
            {
              imgConf: j,
              showAltText: B,
              blurComplete: M,
              defaultLoader: N,
            } = t,
            D = j || i.imageConfigDefault;
          if ("allSizes" in D) s = D;
          else {
            let e = [...D.deviceSizes, ...D.imageSizes].sort((e, t) => e - t),
              t = D.deviceSizes.sort((e, t) => e - t);
            s = { ...D, allSizes: e, deviceSizes: t };
          }
          let R = k.loader || N;
          delete k.loader, delete k.srcSet;
          let F = "__next_img_default" in R;
          if (F) {
            if ("custom" === s.loader)
              throw Error(
                'Image with src "' +
                  c +
                  '" is missing "loader" prop.\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader'
              );
          } else {
            let e = R;
            R = (t) => {
              let { config: n, ...r } = t;
              return e(r);
            };
          }
          if (S) {
            "fill" === S && (v = !0);
            let e = {
              intrinsic: { maxWidth: "100%", height: "auto" },
              responsive: { width: "100%", height: "auto" },
            }[S];
            e && (w = { ...w, ...e });
            let t = { responsive: "100vw", fill: "100vw" }[S];
            t && !d && (d = t);
          }
          let L = "",
            U = o(g),
            $ = o(b);
          if ("object" == typeof (n = c) && (a(n) || void 0 !== n.src)) {
            let e = a(c) ? c.default : c;
            if (!e.src)
              throw Error(
                "An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received " +
                  JSON.stringify(e)
              );
            if (!e.height || !e.width)
              throw Error(
                "An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received " +
                  JSON.stringify(e)
              );
            if (
              ((u = e.blurWidth),
              (l = e.blurHeight),
              (_ = _ || e.blurDataURL),
              (L = e.src),
              !v)
            ) {
              if (U || $) {
                if (U && !$) {
                  let t = U / e.width;
                  $ = Math.round(e.height * t);
                } else if (!U && $) {
                  let t = $ / e.height;
                  U = Math.round(e.width * t);
                }
              } else (U = e.width), ($ = e.height);
            }
          }
          let q = !p && ("lazy" === h || void 0 === h);
          (!(c = "string" == typeof c ? c : L) ||
            c.startsWith("data:") ||
            c.startsWith("blob:")) &&
            ((f = !0), (q = !1)),
            s.unoptimized && (f = !0),
            F && c.endsWith(".svg") && !s.dangerouslyAllowSVG && (f = !0),
            p && (T = "high");
          let H = o(y),
            z = Object.assign(
              v
                ? {
                    position: "absolute",
                    height: "100%",
                    width: "100%",
                    left: 0,
                    top: 0,
                    right: 0,
                    bottom: 0,
                    objectFit: P,
                    objectPosition: O,
                  }
                : {},
              B ? {} : { color: "transparent" },
              w
            ),
            G =
              M || "empty" === C
                ? null
                : "blur" === C
                ? 'url("data:image/svg+xml;charset=utf-8,' +
                  (0, r.getImageBlurSvg)({
                    widthInt: U,
                    heightInt: $,
                    blurWidth: u,
                    blurHeight: l,
                    blurDataURL: _ || "",
                    objectFit: z.objectFit,
                  }) +
                  '")'
                : 'url("' + C + '")',
            W = G
              ? {
                  backgroundSize: z.objectFit || "cover",
                  backgroundPosition: z.objectPosition || "50% 50%",
                  backgroundRepeat: "no-repeat",
                  backgroundImage: G,
                }
              : {},
            V = (function (e) {
              let {
                config: t,
                src: n,
                unoptimized: r,
                width: i,
                quality: a,
                sizes: o,
                loader: s,
              } = e;
              if (r) return { src: n, srcSet: void 0, sizes: void 0 };
              let { widths: u, kind: l } = (function (e, t, n) {
                  let { deviceSizes: r, allSizes: i } = e;
                  if (n) {
                    let e = /(^|\s)(1?\d?\d)vw/g,
                      t = [];
                    for (let r; (r = e.exec(n)); r) t.push(parseInt(r[2]));
                    if (t.length) {
                      let e = 0.01 * Math.min(...t);
                      return {
                        widths: i.filter((t) => t >= r[0] * e),
                        kind: "w",
                      };
                    }
                    return { widths: i, kind: "w" };
                  }
                  if ("number" != typeof t) return { widths: r, kind: "w" };
                  let a = [
                    ...new Set(
                      [t, 2 * t].map(
                        (e) => i.find((t) => t >= e) || i[i.length - 1]
                      )
                    ),
                  ];
                  return { widths: a, kind: "x" };
                })(t, i, o),
                c = u.length - 1;
              return {
                sizes: o || "w" !== l ? o : "100vw",
                srcSet: u
                  .map(
                    (e, r) =>
                      s({ config: t, src: n, quality: a, width: e }) +
                      " " +
                      ("w" === l ? e : r + 1) +
                      l
                  )
                  .join(", "),
                src: s({ config: t, src: n, quality: a, width: u[c] }),
              };
            })({
              config: s,
              src: c,
              unoptimized: f,
              width: U,
              quality: H,
              sizes: d,
              loader: R,
            }),
            K = {
              ...k,
              loading: q ? "lazy" : h,
              fetchPriority: T,
              width: U,
              height: $,
              decoding: "async",
              className: m,
              style: { ...z, ...W },
              sizes: V.sizes,
              srcSet: V.srcSet,
              src: V.src,
            },
            Z = { unoptimized: f, priority: p, placeholder: C, fill: v };
          return { props: K, meta: Z };
        }
      },
      42730: function (e, t) {
        "use strict";
        function n(e) {
          let {
              widthInt: t,
              heightInt: n,
              blurWidth: r,
              blurHeight: i,
              blurDataURL: a,
              objectFit: o,
            } = e,
            s = r ? 40 * r : t,
            u = i ? 40 * i : n,
            l = s && u ? "viewBox='0 0 " + s + " " + u + "'" : "";
          return (
            "%3Csvg xmlns='http://www.w3.org/2000/svg' " +
            l +
            "%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='" +
            (l
              ? "none"
              : "contain" === o
              ? "xMidYMid"
              : "cover" === o
              ? "xMidYMid slice"
              : "none") +
            "' style='filter: url(%23b);' href='" +
            a +
            "'/%3E%3C/svg%3E"
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "getImageBlurSvg", {
            enumerable: !0,
            get: function () {
              return n;
            },
          });
      },
      50: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (function (e, t) {
            for (var n in t)
              Object.defineProperty(e, n, { enumerable: !0, get: t[n] });
          })(t, {
            default: function () {
              return l;
            },
            unstable_getImgProps: function () {
              return u;
            },
          });
        let r = n(38754),
          i = n(18780),
          a = n(35086),
          o = n(70543),
          s = r._(n(61479)),
          u = (e) => {
            (0, a.warnOnce)(
              "Warning: unstable_getImgProps() is experimental and may change or be removed at any time. Use at your own risk."
            );
            let { props: t } = (0, i.getImgProps)(e, {
              defaultLoader: s.default,
              imgConf: {
                deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
                imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
                path: "/_next/image",
                loader: "default",
                dangerouslyAllowSVG: !1,
                unoptimized: !1,
              },
            });
            for (let [e, n] of Object.entries(t)) void 0 === n && delete t[e];
            return { props: t };
          },
          l = o.Image;
      },
      61479: function (e, t) {
        "use strict";
        function n(e) {
          let { config: t, src: n, width: r, quality: i } = e;
          return n;
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "default", {
            enumerable: !0,
            get: function () {
              return r;
            },
          }),
          (n.__next_img_default = !0);
        let r = n;
      },
      16319: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "LoadableContext", {
            enumerable: !0,
            get: function () {
              return a;
            },
          });
        let r = n(38754),
          i = r._(n(67294)),
          a = i.default.createContext(null);
      },
      14302: function (e, t, n) {
        "use strict";
        /**
@copyright (c) 2017-present James Kyle <me@thejameskyle.com>
 MIT License
 Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:
 The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE
*/ Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "default", {
            enumerable: !0,
            get: function () {
              return p;
            },
          });
        let r = n(38754),
          i = r._(n(67294)),
          a = n(16319),
          o = [],
          s = [],
          u = !1;
        function l(e) {
          let t = e(),
            n = { loading: !0, loaded: null, error: null };
          return (
            (n.promise = t
              .then((e) => ((n.loading = !1), (n.loaded = e), e))
              .catch((e) => {
                throw ((n.loading = !1), (n.error = e), e);
              })),
            n
          );
        }
        class c {
          promise() {
            return this._res.promise;
          }
          retry() {
            this._clearTimeouts(),
              (this._res = this._loadFn(this._opts.loader)),
              (this._state = { pastDelay: !1, timedOut: !1 });
            let { _res: e, _opts: t } = this;
            e.loading &&
              ("number" == typeof t.delay &&
                (0 === t.delay
                  ? (this._state.pastDelay = !0)
                  : (this._delay = setTimeout(() => {
                      this._update({ pastDelay: !0 });
                    }, t.delay))),
              "number" == typeof t.timeout &&
                (this._timeout = setTimeout(() => {
                  this._update({ timedOut: !0 });
                }, t.timeout))),
              this._res.promise
                .then(() => {
                  this._update({}), this._clearTimeouts();
                })
                .catch((e) => {
                  this._update({}), this._clearTimeouts();
                }),
              this._update({});
          }
          _update(e) {
            (this._state = {
              ...this._state,
              error: this._res.error,
              loaded: this._res.loaded,
              loading: this._res.loading,
              ...e,
            }),
              this._callbacks.forEach((e) => e());
          }
          _clearTimeouts() {
            clearTimeout(this._delay), clearTimeout(this._timeout);
          }
          getCurrentValue() {
            return this._state;
          }
          subscribe(e) {
            return (
              this._callbacks.add(e),
              () => {
                this._callbacks.delete(e);
              }
            );
          }
          constructor(e, t) {
            (this._loadFn = e),
              (this._opts = t),
              (this._callbacks = new Set()),
              (this._delay = null),
              (this._timeout = null),
              this.retry();
          }
        }
        function d(e) {
          return (function (e, t) {
            let n = Object.assign(
                {
                  loader: null,
                  loading: null,
                  delay: 200,
                  timeout: null,
                  webpack: null,
                  modules: null,
                },
                t
              ),
              r = null;
            function o() {
              if (!r) {
                let t = new c(e, n);
                r = {
                  getCurrentValue: t.getCurrentValue.bind(t),
                  subscribe: t.subscribe.bind(t),
                  retry: t.retry.bind(t),
                  promise: t.promise.bind(t),
                };
              }
              return r.promise();
            }
            if (!u) {
              let e = n.webpack ? n.webpack() : n.modules;
              e &&
                s.push((t) => {
                  for (let n of e) if (t.includes(n)) return o();
                });
            }
            function l(e, t) {
              !(function () {
                o();
                let e = i.default.useContext(a.LoadableContext);
                e &&
                  Array.isArray(n.modules) &&
                  n.modules.forEach((t) => {
                    e(t);
                  });
              })();
              let s = i.default.useSyncExternalStore(
                r.subscribe,
                r.getCurrentValue,
                r.getCurrentValue
              );
              return (
                i.default.useImperativeHandle(
                  t,
                  () => ({ retry: r.retry }),
                  []
                ),
                i.default.useMemo(() => {
                  var t;
                  return s.loading || s.error
                    ? i.default.createElement(n.loading, {
                        isLoading: s.loading,
                        pastDelay: s.pastDelay,
                        timedOut: s.timedOut,
                        error: s.error,
                        retry: r.retry,
                      })
                    : s.loaded
                    ? i.default.createElement(
                        (t = s.loaded) && t.default ? t.default : t,
                        e
                      )
                    : null;
                }, [e, s])
              );
            }
            return (
              (l.preload = () => o()),
              (l.displayName = "LoadableComponent"),
              i.default.forwardRef(l)
            );
          })(l, e);
        }
        function f(e, t) {
          let n = [];
          for (; e.length; ) {
            let r = e.pop();
            n.push(r(t));
          }
          return Promise.all(n).then(() => {
            if (e.length) return f(e, t);
          });
        }
        (d.preloadAll = () =>
          new Promise((e, t) => {
            f(o).then(e, t);
          })),
          (d.preloadReady = (e) => (
            void 0 === e && (e = []),
            new Promise((t) => {
              let n = () => ((u = !0), t());
              f(s, e).then(n, n);
            })
          )),
          (window.__NEXT_PRELOADREADY = d.preloadReady);
        let p = d;
      },
      59537: function (e, t, n) {
        "use strict";
        n.d(t, {
          s: function () {
            return r;
          },
        });
        let r = {
          body2:
            "text-[16px] leading-[22px] font-medium font-sans not-italic -tracking-[-0.005em]",
          body2Bold:
            "text-[16px] leading-[22px] font-semibold font-sans not-italic -tracking-[-0.005em]",
          body3:
            "text-[14px] leading-[20px] font-medium font-sans not-italic -tracking-[-0.005em]",
          body3Bold:
            "text-[14px] leading-[20px] font-semibold font-sans not-italic -tracking-[-0.005em]",
          body3_5:
            "text-[13px] leading-[18px] font-medium font-sans not-italic -tracking-[-0.005em]",
          body4:
            "text-[12px] leading-[16px] font-medium font-sans not-italic -tracking-[-0.005em]",
          body5:
            "text-[10px] leading-[14px] font-medium font-sans not-italic -tracking-[-0.01em]",
        };
      },
      82615: function (e, t, n) {
        "use strict";
        n.d(t, {
          u: function () {
            return s;
          },
        });
        var r = n(84178),
          i = n(71506),
          a = n(48164),
          o = n(56559);
        let s = async (e, t, n) => {
          if (!e) return;
          let s = (0, r.v)({
              chain: a.FP.find((t) => t.id === e.chain.id),
              transport: (0, i.d)(),
            }),
            u = await e.writeContract({
              address: t.address,
              abi: o.z,
              functionName: "approve",
              args: [n, 2n ** 256n - 1n],
              account: e.account,
            });
          return await s.waitForTransactionReceipt({ hash: u }), u;
        };
      },
      71015: function (e, t, n) {
        "use strict";
        n.d(t, {
          HR: function () {
            return u;
          },
          bM: function () {
            return l;
          },
        });
        var r = n(70794),
          i = n(15229),
          a = n(41816),
          o = n(60632);
        let s = (e, t, n) =>
            n ? new r.Z(e.toString()).times(n).div(10 ** t) : new r.Z(0),
          u = (e, t, n) => "$".concat(s(e, t, n).toFixed(2)),
          l = (e, t, n) => {
            let s = (0, i.b)(e, t);
            if (!n) {
              let e = (0, a.SN)(s) + o.I;
              return new r.Z(s).toFixed(e, r.Z.ROUND_FLOOR);
            }
            let u = new r.Z(s).toFixed(
              2 * Math.floor(Math.max(-Math.log10(0.005 / n), 0) / 2)
            );
            return 0 == +u ? s : u;
          };
      },
      41816: function (e, t, n) {
        "use strict";
        n.d(t, {
          SN: function () {
            return a;
          },
          lv: function () {
            return s;
          },
          uD: function () {
            return o;
          },
        });
        var r = n(70794),
          i = n(60632);
        let a = (e) => {
            let t = new r.Z(e),
              n = t.minus(t.integerValue());
            if (n.isZero()) return 0;
            let i = 0;
            for (
              ;
              n
                .times(10 ** i)
                .integerValue()
                .isZero();

            )
              i += 1;
            return i;
          },
          o = function (e) {
            let t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 4,
              n =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : r.Z.ROUND_FLOOR,
              o = new r.Z(e).toFixed(t, n);
            if (!new r.Z(o).isZero()) return o;
            {
              let t = a(e);
              return new r.Z(e).toFixed(t + i.I, n);
            }
          },
          s = (e, t) => {
            if (!t) {
              let t = a(e);
              return new r.Z(e).toFixed(t + i.I, r.Z.ROUND_FLOOR);
            }
            return new r.Z(e).toFixed(
              2 * Math.floor(Math.max(-Math.log10(0.005 / t), 0) / 2)
            );
          };
      },
      95e3: function (e, t, n) {
        "use strict";
        n.d(t, {
          AD: function () {
            return E;
          },
          Co: function () {
            return T;
          },
          D7: function () {
            return C;
          },
          QP: function () {
            return v;
          },
          er: function () {
            return p;
          },
          ib: function () {
            return _;
          },
          kn: function () {
            return w;
          },
          tz: function () {
            return f;
          },
        });
        var r = n(61228),
          i = n(1958),
          a = n(84178),
          o = n(71506),
          s = n(45775),
          u = n(48164),
          l = n(56559),
          c = n(20459),
          d = n(17461);
        let f = (e, t) => "".concat(t.id, "-inputCurrency-").concat(e),
          p = (e, t) => "".concat(t.id, "-outputCurrency-").concat(e),
          h = {},
          m = (e, t) => "".concat(e, "-").concat(t.toLowerCase()),
          y = null,
          g = [],
          b = 0,
          v = (e) =>
            e
              .sort((e, t) => (t.isVerified ? 1 : 0) - (e.isVerified ? 1 : 0))
              .filter(
                (e, t, n) =>
                  n.findIndex((t) => (0, r.E)(t.address, e.address)) === t
              ),
          w = async (e, t) => {
            if ((0, r.E)(t, i.D)) return c.hB;
            let n = (0, a.v)({
                chain: u.FP.find((t) => t.id === e),
                transport: (0, o.d)(),
              }),
              [{ result: s }, { result: d }, { result: f }] = await n.multicall(
                {
                  contracts: [
                    { address: t, abi: l.z, functionName: "name" },
                    { address: t, abi: l.z, functionName: "symbol" },
                    { address: t, abi: l.z, functionName: "decimals" },
                  ],
                }
              );
            if (s && d && f)
              return { address: t, name: s, symbol: d, decimals: f };
          },
          E = async (e, t) => {
            y && (clearTimeout(y), (y = null));
            let n = b;
            for (
              y = setTimeout(async () => {
                (g = await x(e, t)), (b = Math.random());
              }, 500);
              b === n;

            )
              await new Promise((e) => setTimeout(e, 10));
            return g;
          },
          x = async (e, t) => {
            let n = (0, u.Mq)(e);
            if (!n) return [];
            let r = m(e, t);
            if (void 0 !== h[r]) return h[r];
            try {
              var i, a;
              let o = await (0, d.a)(
                  "https://api.dexscreener.com",
                  "latest/dex/search?q=".concat(t)
                ),
                s = null !== (i = o.pairs) && void 0 !== i ? i : [],
                u = {};
              for (let e of s) {
                let r = e.chainId.split("-")[0];
                if (r !== n.network) continue;
                let i = e.baseToken,
                  o = e.quoteToken;
                for (let n of [i, o])
                  (n.symbol.toLowerCase().includes(t.toLowerCase()) ||
                    n.name.toLowerCase().includes(t.toLowerCase())) &&
                    (u[n.address] =
                      (null !== (a = u[n.address]) && void 0 !== a ? a : 0) +
                      e.volume.h24);
              }
              let l = Object.keys(u).sort((e, t) => u[t] - u[e]),
                c = (await Promise.all(l.map((t) => w(e, t)))).filter(
                  (e) => void 0 !== e
                );
              return (h[r] = c), c;
            } catch (e) {
              return [];
            }
          },
          C = (e, t) =>
            (0, r.E)(e.address, t.address) &&
            e.decimals === t.decimals &&
            e.name === t.name &&
            e.symbol === t.symbol,
          _ = (e, t) =>
            e.find((e) => (0, r.E)(e.address, (0, s.K)(c.VN[t.id].address))) &&
            e.find((e) => (0, r.E)(e.address, (0, s.K)(c.g$[t.id].address))),
          T = (e, t) => {
            let n = new URLSearchParams(window.location.search),
              r = n.get("inputCurrency"),
              i = n.get("outputCurrency"),
              a = localStorage.getItem(f(e, t)),
              o = localStorage.getItem(p(e, t));
            return {
              inputCurrencyAddress: r || a || void 0,
              outputCurrencyAddress: i || o || void 0,
            };
          };
      },
      60632: function (e, t, n) {
        "use strict";
        n.d(t, {
          H: function () {
            return i;
          },
          I: function () {
            return r;
          },
        });
        let r = 4,
          i = (e) => {
            let t = e.split("."),
              n = t[0],
              r = t[1],
              i =
                (n.startsWith("-") ? "-" : "") +
                n.replace("-", "").replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            return r ? "".concat(i, ".").concat(r) : i;
          };
      },
      49577: function (e, t, n) {
        "use strict";
        n.d(t, {
          z: function () {
            return a;
          },
        });
        var r = n(70794),
          i = n(41816);
        let a = function (e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 1.0001,
            n = new r.Z(e),
            a = new r.Z(t).multipliedBy(n).minus(n);
          return (0, i.SN)(a) + 1;
        };
      },
      97863: function (e, t, n) {
        "use strict";
        n.d(t, {
          T: function () {
            return o;
          },
          x: function () {
            return s;
          },
        });
        var r = n(84178),
          i = n(71506),
          a = n(48164);
        async function o(e, t) {
          if (!e) return;
          let n = (0, r.v)({
            chain: a.FP.find((t) => t.id === e.chain.id),
            transport: (0, i.d)(),
          });
          try {
            let r = await e.sendTransaction(
              t.gas > 0n
                ? {
                    data: t.data,
                    to: t.to,
                    value: t.value,
                    gas: (3n * t.gas) / 2n,
                  }
                : { data: t.data, to: t.to, value: t.value }
            );
            return await n.waitForTransactionReceipt({ hash: r }), r;
          } catch (e) {
            throw (console.log("transaction error", e), e);
          }
        }
        async function s(e, t) {
          let n = (0, r.v)({
            chain: a.FP.find((t) => t.id === e),
            transport: (0, i.d)(),
          });
          await n.waitForTransactionReceipt({ hash: t });
        }
      },
      26111: function (e, t, n) {
        "use strict";
        n.d(t, {
          t: function () {
            return i;
          },
          v: function () {
            return r;
          },
        });
        let r = () => {
            let e = new URL(window.location.href),
              t = {};
            return (
              e.searchParams.forEach((e, n) => {
                t[n] = e;
              }),
              t
            );
          },
          i = (e, t) => (e.length <= t ? e : "".concat(e.slice(0, t), "..."));
      },
      94169: function () {},
      82488: function () {},
      5152: function (e, t, n) {
        e.exports = n(90638);
      },
      9008: function (e, t, n) {
        e.exports = n(5443);
      },
      25675: function (e, t, n) {
        e.exports = n(50);
      },
      41664: function (e, t, n) {
        e.exports = n(48418);
      },
      11163: function (e, t, n) {
        e.exports = n(90387);
      },
      34155: function (e) {
        var t,
          n,
          r,
          i = (e.exports = {});
        function a() {
          throw Error("setTimeout has not been defined");
        }
        function o() {
          throw Error("clearTimeout has not been defined");
        }
        function s(e) {
          if (t === setTimeout) return setTimeout(e, 0);
          if ((t === a || !t) && setTimeout)
            return (t = setTimeout), setTimeout(e, 0);
          try {
            return t(e, 0);
          } catch (n) {
            try {
              return t.call(null, e, 0);
            } catch (n) {
              return t.call(this, e, 0);
            }
          }
        }
        !(function () {
          try {
            t = "function" == typeof setTimeout ? setTimeout : a;
          } catch (e) {
            t = a;
          }
          try {
            n = "function" == typeof clearTimeout ? clearTimeout : o;
          } catch (e) {
            n = o;
          }
        })();
        var u = [],
          l = !1,
          c = -1;
        function d() {
          l &&
            r &&
            ((l = !1),
            r.length ? (u = r.concat(u)) : (c = -1),
            u.length && f());
        }
        function f() {
          if (!l) {
            var e = s(d);
            l = !0;
            for (var t = u.length; t; ) {
              for (r = u, u = []; ++c < t; ) r && r[c].run();
              (c = -1), (t = u.length);
            }
            (r = null),
              (l = !1),
              (function (e) {
                if (n === clearTimeout) return clearTimeout(e);
                if ((n === o || !n) && clearTimeout)
                  return (n = clearTimeout), clearTimeout(e);
                try {
                  n(e);
                } catch (t) {
                  try {
                    return n.call(null, e);
                  } catch (t) {
                    return n.call(this, e);
                  }
                }
              })(e);
          }
        }
        function p(e, t) {
          (this.fun = e), (this.array = t);
        }
        function h() {}
        (i.nextTick = function (e) {
          var t = Array(arguments.length - 1);
          if (arguments.length > 1)
            for (var n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
          u.push(new p(e, t)), 1 !== u.length || l || s(f);
        }),
          (p.prototype.run = function () {
            this.fun.apply(null, this.array);
          }),
          (i.title = "browser"),
          (i.browser = !0),
          (i.env = {}),
          (i.argv = []),
          (i.version = ""),
          (i.versions = {}),
          (i.on = h),
          (i.addListener = h),
          (i.once = h),
          (i.off = h),
          (i.removeListener = h),
          (i.removeAllListeners = h),
          (i.emit = h),
          (i.prependListener = h),
          (i.prependOnceListener = h),
          (i.listeners = function (e) {
            return [];
          }),
          (i.binding = function (e) {
            throw Error("process.binding is not supported");
          }),
          (i.cwd = function () {
            return "/";
          }),
          (i.chdir = function (e) {
            throw Error("process.chdir is not supported");
          }),
          (i.umask = function () {
            return 0;
          });
      },
      92592: function (e, t, n) {
        let r = n(47138),
          i = n(95115),
          a = n(6907),
          o = n(93776);
        function s(e, t, n, a, o) {
          let s = [].slice.call(arguments, 1),
            u = s.length,
            l = "function" == typeof s[u - 1];
          if (!l && !r()) throw Error("Callback required as last argument");
          if (l) {
            if (u < 2) throw Error("Too few arguments provided");
            2 === u
              ? ((o = n), (n = t), (t = a = void 0))
              : 3 === u &&
                (t.getContext && void 0 === o
                  ? ((o = a), (a = void 0))
                  : ((o = a), (a = n), (n = t), (t = void 0)));
          } else {
            if (u < 1) throw Error("Too few arguments provided");
            return (
              1 === u
                ? ((n = t), (t = a = void 0))
                : 2 !== u || t.getContext || ((a = n), (n = t), (t = void 0)),
              new Promise(function (r, o) {
                try {
                  let o = i.create(n, a);
                  r(e(o, t, a));
                } catch (e) {
                  o(e);
                }
              })
            );
          }
          try {
            let r = i.create(n, a);
            o(null, e(r, t, a));
          } catch (e) {
            o(e);
          }
        }
        (t.create = i.create),
          (t.toCanvas = s.bind(null, a.render)),
          (t.toDataURL = s.bind(null, a.renderToDataURL)),
          (t.toString = s.bind(null, function (e, t, n) {
            return o.render(e, n);
          }));
      },
      47138: function (e) {
        e.exports = function () {
          return (
            "function" == typeof Promise &&
            Promise.prototype &&
            Promise.prototype.then
          );
        };
      },
      21845: function (e, t, n) {
        let r = n(10242).getSymbolSize;
        (t.getRowColCoords = function (e) {
          if (1 === e) return [];
          let t = Math.floor(e / 7) + 2,
            n = r(e),
            i = 145 === n ? 26 : 2 * Math.ceil((n - 13) / (2 * t - 2)),
            a = [n - 7];
          for (let e = 1; e < t - 1; e++) a[e] = a[e - 1] - i;
          return a.push(6), a.reverse();
        }),
          (t.getPositions = function (e) {
            let n = [],
              r = t.getRowColCoords(e),
              i = r.length;
            for (let e = 0; e < i; e++)
              for (let t = 0; t < i; t++)
                (0 !== e || 0 !== t) &&
                  (0 !== e || t !== i - 1) &&
                  (e !== i - 1 || 0 !== t) &&
                  n.push([r[e], r[t]]);
            return n;
          });
      },
      8260: function (e, t, n) {
        let r = n(76910),
          i = [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "A",
            "B",
            "C",
            "D",
            "E",
            "F",
            "G",
            "H",
            "I",
            "J",
            "K",
            "L",
            "M",
            "N",
            "O",
            "P",
            "Q",
            "R",
            "S",
            "T",
            "U",
            "V",
            "W",
            "X",
            "Y",
            "Z",
            " ",
            "$",
            "%",
            "*",
            "+",
            "-",
            ".",
            "/",
            ":",
          ];
        function a(e) {
          (this.mode = r.ALPHANUMERIC), (this.data = e);
        }
        (a.getBitsLength = function (e) {
          return 11 * Math.floor(e / 2) + 6 * (e % 2);
        }),
          (a.prototype.getLength = function () {
            return this.data.length;
          }),
          (a.prototype.getBitsLength = function () {
            return a.getBitsLength(this.data.length);
          }),
          (a.prototype.write = function (e) {
            let t;
            for (t = 0; t + 2 <= this.data.length; t += 2) {
              let n = 45 * i.indexOf(this.data[t]);
              (n += i.indexOf(this.data[t + 1])), e.put(n, 11);
            }
            this.data.length % 2 && e.put(i.indexOf(this.data[t]), 6);
          }),
          (e.exports = a);
      },
      97245: function (e) {
        function t() {
          (this.buffer = []), (this.length = 0);
        }
        (t.prototype = {
          get: function (e) {
            return (
              ((this.buffer[Math.floor(e / 8)] >>> (7 - (e % 8))) & 1) == 1
            );
          },
          put: function (e, t) {
            for (let n = 0; n < t; n++)
              this.putBit(((e >>> (t - n - 1)) & 1) == 1);
          },
          getLengthInBits: function () {
            return this.length;
          },
          putBit: function (e) {
            let t = Math.floor(this.length / 8);
            this.buffer.length <= t && this.buffer.push(0),
              e && (this.buffer[t] |= 128 >>> this.length % 8),
              this.length++;
          },
        }),
          (e.exports = t);
      },
      73280: function (e) {
        function t(e) {
          if (!e || e < 1)
            throw Error("BitMatrix size must be defined and greater than 0");
          (this.size = e),
            (this.data = new Uint8Array(e * e)),
            (this.reservedBit = new Uint8Array(e * e));
        }
        (t.prototype.set = function (e, t, n, r) {
          let i = e * this.size + t;
          (this.data[i] = n), r && (this.reservedBit[i] = !0);
        }),
          (t.prototype.get = function (e, t) {
            return this.data[e * this.size + t];
          }),
          (t.prototype.xor = function (e, t, n) {
            this.data[e * this.size + t] ^= n;
          }),
          (t.prototype.isReserved = function (e, t) {
            return this.reservedBit[e * this.size + t];
          }),
          (e.exports = t);
      },
      43424: function (e, t, n) {
        let r = n(62378),
          i = n(76910);
        function a(e) {
          (this.mode = i.BYTE), (this.data = new Uint8Array(r(e)));
        }
        (a.getBitsLength = function (e) {
          return 8 * e;
        }),
          (a.prototype.getLength = function () {
            return this.data.length;
          }),
          (a.prototype.getBitsLength = function () {
            return a.getBitsLength(this.data.length);
          }),
          (a.prototype.write = function (e) {
            for (let t = 0, n = this.data.length; t < n; t++)
              e.put(this.data[t], 8);
          }),
          (e.exports = a);
      },
      35393: function (e, t, n) {
        let r = n(64908),
          i = [
            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 4, 1, 2, 4, 4, 2, 4, 4,
            4, 2, 4, 6, 5, 2, 4, 6, 6, 2, 5, 8, 8, 4, 5, 8, 8, 4, 5, 8, 11, 4,
            8, 10, 11, 4, 9, 12, 16, 4, 9, 16, 16, 6, 10, 12, 18, 6, 10, 17, 16,
            6, 11, 16, 19, 6, 13, 18, 21, 7, 14, 21, 25, 8, 16, 20, 25, 8, 17,
            23, 25, 9, 17, 23, 34, 9, 18, 25, 30, 10, 20, 27, 32, 12, 21, 29,
            35, 12, 23, 34, 37, 12, 25, 34, 40, 13, 26, 35, 42, 14, 28, 38, 45,
            15, 29, 40, 48, 16, 31, 43, 51, 17, 33, 45, 54, 18, 35, 48, 57, 19,
            37, 51, 60, 19, 38, 53, 63, 20, 40, 56, 66, 21, 43, 59, 70, 22, 45,
            62, 74, 24, 47, 65, 77, 25, 49, 68, 81,
          ],
          a = [
            7, 10, 13, 17, 10, 16, 22, 28, 15, 26, 36, 44, 20, 36, 52, 64, 26,
            48, 72, 88, 36, 64, 96, 112, 40, 72, 108, 130, 48, 88, 132, 156, 60,
            110, 160, 192, 72, 130, 192, 224, 80, 150, 224, 264, 96, 176, 260,
            308, 104, 198, 288, 352, 120, 216, 320, 384, 132, 240, 360, 432,
            144, 280, 408, 480, 168, 308, 448, 532, 180, 338, 504, 588, 196,
            364, 546, 650, 224, 416, 600, 700, 224, 442, 644, 750, 252, 476,
            690, 816, 270, 504, 750, 900, 300, 560, 810, 960, 312, 588, 870,
            1050, 336, 644, 952, 1110, 360, 700, 1020, 1200, 390, 728, 1050,
            1260, 420, 784, 1140, 1350, 450, 812, 1200, 1440, 480, 868, 1290,
            1530, 510, 924, 1350, 1620, 540, 980, 1440, 1710, 570, 1036, 1530,
            1800, 570, 1064, 1590, 1890, 600, 1120, 1680, 1980, 630, 1204, 1770,
            2100, 660, 1260, 1860, 2220, 720, 1316, 1950, 2310, 750, 1372, 2040,
            2430,
          ];
        (t.getBlocksCount = function (e, t) {
          switch (t) {
            case r.L:
              return i[(e - 1) * 4 + 0];
            case r.M:
              return i[(e - 1) * 4 + 1];
            case r.Q:
              return i[(e - 1) * 4 + 2];
            case r.H:
              return i[(e - 1) * 4 + 3];
            default:
              return;
          }
        }),
          (t.getTotalCodewordsCount = function (e, t) {
            switch (t) {
              case r.L:
                return a[(e - 1) * 4 + 0];
              case r.M:
                return a[(e - 1) * 4 + 1];
              case r.Q:
                return a[(e - 1) * 4 + 2];
              case r.H:
                return a[(e - 1) * 4 + 3];
              default:
                return;
            }
          });
      },
      64908: function (e, t) {
        (t.L = { bit: 1 }),
          (t.M = { bit: 0 }),
          (t.Q = { bit: 3 }),
          (t.H = { bit: 2 }),
          (t.isValid = function (e) {
            return e && void 0 !== e.bit && e.bit >= 0 && e.bit < 4;
          }),
          (t.from = function (e, n) {
            if (t.isValid(e)) return e;
            try {
              return (function (e) {
                if ("string" != typeof e) throw Error("Param is not a string");
                let n = e.toLowerCase();
                switch (n) {
                  case "l":
                  case "low":
                    return t.L;
                  case "m":
                  case "medium":
                    return t.M;
                  case "q":
                  case "quartile":
                    return t.Q;
                  case "h":
                  case "high":
                    return t.H;
                  default:
                    throw Error("Unknown EC Level: " + e);
                }
              })(e);
            } catch (e) {
              return n;
            }
          });
      },
      76526: function (e, t, n) {
        let r = n(10242).getSymbolSize;
        t.getPositions = function (e) {
          let t = r(e);
          return [
            [0, 0],
            [t - 7, 0],
            [0, t - 7],
          ];
        };
      },
      61642: function (e, t, n) {
        let r = n(10242),
          i = r.getBCHDigit(1335);
        t.getEncodedBits = function (e, t) {
          let n = (e.bit << 3) | t,
            a = n << 10;
          for (; r.getBCHDigit(a) - i >= 0; )
            a ^= 1335 << (r.getBCHDigit(a) - i);
          return ((n << 10) | a) ^ 21522;
        };
      },
      69729: function (e, t) {
        let n = new Uint8Array(512),
          r = new Uint8Array(256);
        (function () {
          let e = 1;
          for (let t = 0; t < 255; t++)
            (n[t] = e), (r[e] = t), 256 & (e <<= 1) && (e ^= 285);
          for (let e = 255; e < 512; e++) n[e] = n[e - 255];
        })(),
          (t.log = function (e) {
            if (e < 1) throw Error("log(" + e + ")");
            return r[e];
          }),
          (t.exp = function (e) {
            return n[e];
          }),
          (t.mul = function (e, t) {
            return 0 === e || 0 === t ? 0 : n[r[e] + r[t]];
          });
      },
      35442: function (e, t, n) {
        let r = n(76910),
          i = n(10242);
        function a(e) {
          (this.mode = r.KANJI), (this.data = e);
        }
        (a.getBitsLength = function (e) {
          return 13 * e;
        }),
          (a.prototype.getLength = function () {
            return this.data.length;
          }),
          (a.prototype.getBitsLength = function () {
            return a.getBitsLength(this.data.length);
          }),
          (a.prototype.write = function (e) {
            let t;
            for (t = 0; t < this.data.length; t++) {
              let n = i.toSJIS(this.data[t]);
              if (n >= 33088 && n <= 40956) n -= 33088;
              else if (n >= 57408 && n <= 60351) n -= 49472;
              else
                throw Error(
                  "Invalid SJIS character: " +
                    this.data[t] +
                    "\nMake sure your charset is UTF-8"
                );
              (n = ((n >>> 8) & 255) * 192 + (255 & n)), e.put(n, 13);
            }
          }),
          (e.exports = a);
      },
      27126: function (e, t) {
        t.Patterns = {
          PATTERN000: 0,
          PATTERN001: 1,
          PATTERN010: 2,
          PATTERN011: 3,
          PATTERN100: 4,
          PATTERN101: 5,
          PATTERN110: 6,
          PATTERN111: 7,
        };
        let n = { N1: 3, N2: 3, N3: 40, N4: 10 };
        (t.isValid = function (e) {
          return null != e && "" !== e && !isNaN(e) && e >= 0 && e <= 7;
        }),
          (t.from = function (e) {
            return t.isValid(e) ? parseInt(e, 10) : void 0;
          }),
          (t.getPenaltyN1 = function (e) {
            let t = e.size,
              r = 0,
              i = 0,
              a = 0,
              o = null,
              s = null;
            for (let u = 0; u < t; u++) {
              (i = a = 0), (o = s = null);
              for (let l = 0; l < t; l++) {
                let t = e.get(u, l);
                t === o
                  ? i++
                  : (i >= 5 && (r += n.N1 + (i - 5)), (o = t), (i = 1)),
                  (t = e.get(l, u)) === s
                    ? a++
                    : (a >= 5 && (r += n.N1 + (a - 5)), (s = t), (a = 1));
              }
              i >= 5 && (r += n.N1 + (i - 5)), a >= 5 && (r += n.N1 + (a - 5));
            }
            return r;
          }),
          (t.getPenaltyN2 = function (e) {
            let t = e.size,
              r = 0;
            for (let n = 0; n < t - 1; n++)
              for (let i = 0; i < t - 1; i++) {
                let t =
                  e.get(n, i) +
                  e.get(n, i + 1) +
                  e.get(n + 1, i) +
                  e.get(n + 1, i + 1);
                (4 === t || 0 === t) && r++;
              }
            return r * n.N2;
          }),
          (t.getPenaltyN3 = function (e) {
            let t = e.size,
              r = 0,
              i = 0,
              a = 0;
            for (let n = 0; n < t; n++) {
              i = a = 0;
              for (let o = 0; o < t; o++)
                (i = ((i << 1) & 2047) | e.get(n, o)),
                  o >= 10 && (1488 === i || 93 === i) && r++,
                  (a = ((a << 1) & 2047) | e.get(o, n)),
                  o >= 10 && (1488 === a || 93 === a) && r++;
            }
            return r * n.N3;
          }),
          (t.getPenaltyN4 = function (e) {
            let t = 0,
              r = e.data.length;
            for (let n = 0; n < r; n++) t += e.data[n];
            let i = Math.abs(Math.ceil((100 * t) / r / 5) - 10);
            return i * n.N4;
          }),
          (t.applyMask = function (e, n) {
            let r = n.size;
            for (let i = 0; i < r; i++)
              for (let a = 0; a < r; a++)
                n.isReserved(a, i) ||
                  n.xor(
                    a,
                    i,
                    (function (e, n, r) {
                      switch (e) {
                        case t.Patterns.PATTERN000:
                          return (n + r) % 2 == 0;
                        case t.Patterns.PATTERN001:
                          return n % 2 == 0;
                        case t.Patterns.PATTERN010:
                          return r % 3 == 0;
                        case t.Patterns.PATTERN011:
                          return (n + r) % 3 == 0;
                        case t.Patterns.PATTERN100:
                          return (
                            (Math.floor(n / 2) + Math.floor(r / 3)) % 2 == 0
                          );
                        case t.Patterns.PATTERN101:
                          return ((n * r) % 2) + ((n * r) % 3) == 0;
                        case t.Patterns.PATTERN110:
                          return (((n * r) % 2) + ((n * r) % 3)) % 2 == 0;
                        case t.Patterns.PATTERN111:
                          return (((n * r) % 3) + ((n + r) % 2)) % 2 == 0;
                        default:
                          throw Error("bad maskPattern:" + e);
                      }
                    })(e, a, i)
                  );
          }),
          (t.getBestMask = function (e, n) {
            let r = Object.keys(t.Patterns).length,
              i = 0,
              a = 1 / 0;
            for (let o = 0; o < r; o++) {
              n(o), t.applyMask(o, e);
              let r =
                t.getPenaltyN1(e) +
                t.getPenaltyN2(e) +
                t.getPenaltyN3(e) +
                t.getPenaltyN4(e);
              t.applyMask(o, e), r < a && ((a = r), (i = o));
            }
            return i;
          });
      },
      76910: function (e, t, n) {
        let r = n(43114),
          i = n(7007);
        (t.NUMERIC = { id: "Numeric", bit: 1, ccBits: [10, 12, 14] }),
          (t.ALPHANUMERIC = {
            id: "Alphanumeric",
            bit: 2,
            ccBits: [9, 11, 13],
          }),
          (t.BYTE = { id: "Byte", bit: 4, ccBits: [8, 16, 16] }),
          (t.KANJI = { id: "Kanji", bit: 8, ccBits: [8, 10, 12] }),
          (t.MIXED = { bit: -1 }),
          (t.getCharCountIndicator = function (e, t) {
            if (!e.ccBits) throw Error("Invalid mode: " + e);
            if (!r.isValid(t)) throw Error("Invalid version: " + t);
            return t >= 1 && t < 10
              ? e.ccBits[0]
              : t < 27
              ? e.ccBits[1]
              : e.ccBits[2];
          }),
          (t.getBestModeForData = function (e) {
            return i.testNumeric(e)
              ? t.NUMERIC
              : i.testAlphanumeric(e)
              ? t.ALPHANUMERIC
              : i.testKanji(e)
              ? t.KANJI
              : t.BYTE;
          }),
          (t.toString = function (e) {
            if (e && e.id) return e.id;
            throw Error("Invalid mode");
          }),
          (t.isValid = function (e) {
            return e && e.bit && e.ccBits;
          }),
          (t.from = function (e, n) {
            if (t.isValid(e)) return e;
            try {
              return (function (e) {
                if ("string" != typeof e) throw Error("Param is not a string");
                let n = e.toLowerCase();
                switch (n) {
                  case "numeric":
                    return t.NUMERIC;
                  case "alphanumeric":
                    return t.ALPHANUMERIC;
                  case "kanji":
                    return t.KANJI;
                  case "byte":
                    return t.BYTE;
                  default:
                    throw Error("Unknown mode: " + e);
                }
              })(e);
            } catch (e) {
              return n;
            }
          });
      },
      41085: function (e, t, n) {
        let r = n(76910);
        function i(e) {
          (this.mode = r.NUMERIC), (this.data = e.toString());
        }
        (i.getBitsLength = function (e) {
          return 10 * Math.floor(e / 3) + (e % 3 ? (e % 3) * 3 + 1 : 0);
        }),
          (i.prototype.getLength = function () {
            return this.data.length;
          }),
          (i.prototype.getBitsLength = function () {
            return i.getBitsLength(this.data.length);
          }),
          (i.prototype.write = function (e) {
            let t, n;
            for (t = 0; t + 3 <= this.data.length; t += 3)
              (n = parseInt(this.data.substr(t, 3), 10)), e.put(n, 10);
            let r = this.data.length - t;
            r > 0 &&
              ((n = parseInt(this.data.substr(t), 10)), e.put(n, 3 * r + 1));
          }),
          (e.exports = i);
      },
      26143: function (e, t, n) {
        let r = n(69729);
        (t.mul = function (e, t) {
          let n = new Uint8Array(e.length + t.length - 1);
          for (let i = 0; i < e.length; i++)
            for (let a = 0; a < t.length; a++) n[i + a] ^= r.mul(e[i], t[a]);
          return n;
        }),
          (t.mod = function (e, t) {
            let n = new Uint8Array(e);
            for (; n.length - t.length >= 0; ) {
              let e = n[0];
              for (let i = 0; i < t.length; i++) n[i] ^= r.mul(t[i], e);
              let i = 0;
              for (; i < n.length && 0 === n[i]; ) i++;
              n = n.slice(i);
            }
            return n;
          }),
          (t.generateECPolynomial = function (e) {
            let n = new Uint8Array([1]);
            for (let i = 0; i < e; i++)
              n = t.mul(n, new Uint8Array([1, r.exp(i)]));
            return n;
          });
      },
      95115: function (e, t, n) {
        let r = n(10242),
          i = n(64908),
          a = n(97245),
          o = n(73280),
          s = n(21845),
          u = n(76526),
          l = n(27126),
          c = n(35393),
          d = n(52882),
          f = n(23103),
          p = n(61642),
          h = n(76910),
          m = n(16130);
        function y(e, t, n) {
          let r, i;
          let a = e.size,
            o = p.getEncodedBits(t, n);
          for (r = 0; r < 15; r++)
            (i = ((o >> r) & 1) == 1),
              r < 6
                ? e.set(r, 8, i, !0)
                : r < 8
                ? e.set(r + 1, 8, i, !0)
                : e.set(a - 15 + r, 8, i, !0),
              r < 8
                ? e.set(8, a - r - 1, i, !0)
                : r < 9
                ? e.set(8, 15 - r - 1 + 1, i, !0)
                : e.set(8, 15 - r - 1, i, !0);
          e.set(a - 8, 8, 1, !0);
        }
        t.create = function (e, t) {
          let n, p;
          if (void 0 === e || "" === e) throw Error("No input text");
          let g = i.M;
          return (
            void 0 !== t &&
              ((g = i.from(t.errorCorrectionLevel, i.M)),
              (n = f.from(t.version)),
              (p = l.from(t.maskPattern)),
              t.toSJISFunc && r.setToSJISFunction(t.toSJISFunc)),
            (function (e, t, n, i) {
              let p;
              if (Array.isArray(e)) p = m.fromArray(e);
              else if ("string" == typeof e) {
                let r = t;
                if (!r) {
                  let t = m.rawSplit(e);
                  r = f.getBestVersionForData(t, n);
                }
                p = m.fromString(e, r || 40);
              } else throw Error("Invalid data");
              let g = f.getBestVersionForData(p, n);
              if (!g)
                throw Error(
                  "The amount of data is too big to be stored in a QR Code"
                );
              if (t) {
                if (t < g)
                  throw Error(
                    "\nThe chosen QR Code version cannot contain this amount of data.\nMinimum version required to store current data is: " +
                      g +
                      ".\n"
                  );
              } else t = g;
              let b = (function (e, t, n) {
                  let i = new a();
                  n.forEach(function (t) {
                    i.put(t.mode.bit, 4),
                      i.put(t.getLength(), h.getCharCountIndicator(t.mode, e)),
                      t.write(i);
                  });
                  let o = r.getSymbolTotalCodewords(e),
                    s = c.getTotalCodewordsCount(e, t),
                    u = (o - s) * 8;
                  for (
                    i.getLengthInBits() + 4 <= u && i.put(0, 4);
                    i.getLengthInBits() % 8 != 0;

                  )
                    i.putBit(0);
                  let l = (u - i.getLengthInBits()) / 8;
                  for (let e = 0; e < l; e++) i.put(e % 2 ? 17 : 236, 8);
                  return (function (e, t, n) {
                    let i, a;
                    let o = r.getSymbolTotalCodewords(t),
                      s = c.getTotalCodewordsCount(t, n),
                      u = o - s,
                      l = c.getBlocksCount(t, n),
                      f = o % l,
                      p = l - f,
                      h = Math.floor(o / l),
                      m = Math.floor(u / l),
                      y = m + 1,
                      g = h - m,
                      b = new d(g),
                      v = 0,
                      w = Array(l),
                      E = Array(l),
                      x = 0,
                      C = new Uint8Array(e.buffer);
                    for (let e = 0; e < l; e++) {
                      let t = e < p ? m : y;
                      (w[e] = C.slice(v, v + t)),
                        (E[e] = b.encode(w[e])),
                        (v += t),
                        (x = Math.max(x, t));
                    }
                    let _ = new Uint8Array(o),
                      T = 0;
                    for (i = 0; i < x; i++)
                      for (a = 0; a < l; a++)
                        i < w[a].length && (_[T++] = w[a][i]);
                    for (i = 0; i < g; i++)
                      for (a = 0; a < l; a++) _[T++] = E[a][i];
                    return _;
                  })(i, e, t);
                })(t, n, p),
                v = r.getSymbolSize(t),
                w = new o(v);
              return (
                (function (e, t) {
                  let n = e.size,
                    r = u.getPositions(t);
                  for (let t = 0; t < r.length; t++) {
                    let i = r[t][0],
                      a = r[t][1];
                    for (let t = -1; t <= 7; t++)
                      if (!(i + t <= -1) && !(n <= i + t))
                        for (let r = -1; r <= 7; r++)
                          a + r <= -1 ||
                            n <= a + r ||
                            ((t >= 0 && t <= 6 && (0 === r || 6 === r)) ||
                            (r >= 0 && r <= 6 && (0 === t || 6 === t)) ||
                            (t >= 2 && t <= 4 && r >= 2 && r <= 4)
                              ? e.set(i + t, a + r, !0, !0)
                              : e.set(i + t, a + r, !1, !0));
                  }
                })(w, t),
                (function (e) {
                  let t = e.size;
                  for (let n = 8; n < t - 8; n++) {
                    let t = n % 2 == 0;
                    e.set(n, 6, t, !0), e.set(6, n, t, !0);
                  }
                })(w),
                (function (e, t) {
                  let n = s.getPositions(t);
                  for (let t = 0; t < n.length; t++) {
                    let r = n[t][0],
                      i = n[t][1];
                    for (let t = -2; t <= 2; t++)
                      for (let n = -2; n <= 2; n++)
                        -2 === t ||
                        2 === t ||
                        -2 === n ||
                        2 === n ||
                        (0 === t && 0 === n)
                          ? e.set(r + t, i + n, !0, !0)
                          : e.set(r + t, i + n, !1, !0);
                  }
                })(w, t),
                y(w, n, 0),
                t >= 7 &&
                  (function (e, t) {
                    let n, r, i;
                    let a = e.size,
                      o = f.getEncodedBits(t);
                    for (let t = 0; t < 18; t++)
                      (n = Math.floor(t / 3)),
                        (r = (t % 3) + a - 8 - 3),
                        (i = ((o >> t) & 1) == 1),
                        e.set(n, r, i, !0),
                        e.set(r, n, i, !0);
                  })(w, t),
                (function (e, t) {
                  let n = e.size,
                    r = -1,
                    i = n - 1,
                    a = 7,
                    o = 0;
                  for (let s = n - 1; s > 0; s -= 2)
                    for (6 === s && s--; ; ) {
                      for (let n = 0; n < 2; n++)
                        if (!e.isReserved(i, s - n)) {
                          let r = !1;
                          o < t.length && (r = ((t[o] >>> a) & 1) == 1),
                            e.set(i, s - n, r),
                            -1 == --a && (o++, (a = 7));
                        }
                      if ((i += r) < 0 || n <= i) {
                        (i -= r), (r = -r);
                        break;
                      }
                    }
                })(w, b),
                isNaN(i) && (i = l.getBestMask(w, y.bind(null, w, n))),
                l.applyMask(i, w),
                y(w, n, i),
                {
                  modules: w,
                  version: t,
                  errorCorrectionLevel: n,
                  maskPattern: i,
                  segments: p,
                }
              );
            })(e, n, g, p)
          );
        };
      },
      52882: function (e, t, n) {
        let r = n(26143);
        function i(e) {
          (this.genPoly = void 0),
            (this.degree = e),
            this.degree && this.initialize(this.degree);
        }
        (i.prototype.initialize = function (e) {
          (this.degree = e),
            (this.genPoly = r.generateECPolynomial(this.degree));
        }),
          (i.prototype.encode = function (e) {
            if (!this.genPoly) throw Error("Encoder not initialized");
            let t = new Uint8Array(e.length + this.degree);
            t.set(e);
            let n = r.mod(t, this.genPoly),
              i = this.degree - n.length;
            if (i > 0) {
              let e = new Uint8Array(this.degree);
              return e.set(n, i), e;
            }
            return n;
          }),
          (e.exports = i);
      },
      7007: function (e, t) {
        let n = "[0-9]+",
          r =
            "(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+";
        r = r.replace(/u/g, "\\u");
        let i = "(?:(?![A-Z0-9 $%*+\\-./:]|" + r + ")(?:.|[\r\n]))+";
        (t.KANJI = RegExp(r, "g")),
          (t.BYTE_KANJI = RegExp("[^A-Z0-9 $%*+\\-./:]+", "g")),
          (t.BYTE = RegExp(i, "g")),
          (t.NUMERIC = RegExp(n, "g")),
          (t.ALPHANUMERIC = RegExp("[A-Z $%*+\\-./:]+", "g"));
        let a = RegExp("^" + r + "$"),
          o = RegExp("^" + n + "$"),
          s = RegExp("^[A-Z0-9 $%*+\\-./:]+$");
        (t.testKanji = function (e) {
          return a.test(e);
        }),
          (t.testNumeric = function (e) {
            return o.test(e);
          }),
          (t.testAlphanumeric = function (e) {
            return s.test(e);
          });
      },
      16130: function (e, t, n) {
        let r = n(76910),
          i = n(41085),
          a = n(8260),
          o = n(43424),
          s = n(35442),
          u = n(7007),
          l = n(10242),
          c = n(65987);
        function d(e) {
          return unescape(encodeURIComponent(e)).length;
        }
        function f(e, t, n) {
          let r;
          let i = [];
          for (; null !== (r = e.exec(n)); )
            i.push({
              data: r[0],
              index: r.index,
              mode: t,
              length: r[0].length,
            });
          return i;
        }
        function p(e) {
          let t, n;
          let i = f(u.NUMERIC, r.NUMERIC, e),
            a = f(u.ALPHANUMERIC, r.ALPHANUMERIC, e);
          l.isKanjiModeEnabled()
            ? ((t = f(u.BYTE, r.BYTE, e)), (n = f(u.KANJI, r.KANJI, e)))
            : ((t = f(u.BYTE_KANJI, r.BYTE, e)), (n = []));
          let o = i.concat(a, t, n);
          return o
            .sort(function (e, t) {
              return e.index - t.index;
            })
            .map(function (e) {
              return { data: e.data, mode: e.mode, length: e.length };
            });
        }
        function h(e, t) {
          switch (t) {
            case r.NUMERIC:
              return i.getBitsLength(e);
            case r.ALPHANUMERIC:
              return a.getBitsLength(e);
            case r.KANJI:
              return s.getBitsLength(e);
            case r.BYTE:
              return o.getBitsLength(e);
          }
        }
        function m(e, t) {
          let n;
          let u = r.getBestModeForData(e);
          if ((n = r.from(t, u)) !== r.BYTE && n.bit < u.bit)
            throw Error(
              '"' +
                e +
                '" cannot be encoded with mode ' +
                r.toString(n) +
                ".\n Suggested mode is: " +
                r.toString(u)
            );
          switch (
            (n !== r.KANJI || l.isKanjiModeEnabled() || (n = r.BYTE), n)
          ) {
            case r.NUMERIC:
              return new i(e);
            case r.ALPHANUMERIC:
              return new a(e);
            case r.KANJI:
              return new s(e);
            case r.BYTE:
              return new o(e);
          }
        }
        (t.fromArray = function (e) {
          return e.reduce(function (e, t) {
            return (
              "string" == typeof t
                ? e.push(m(t, null))
                : t.data && e.push(m(t.data, t.mode)),
              e
            );
          }, []);
        }),
          (t.fromString = function (e, n) {
            let i = p(e, l.isKanjiModeEnabled()),
              a = (function (e) {
                let t = [];
                for (let n = 0; n < e.length; n++) {
                  let i = e[n];
                  switch (i.mode) {
                    case r.NUMERIC:
                      t.push([
                        i,
                        {
                          data: i.data,
                          mode: r.ALPHANUMERIC,
                          length: i.length,
                        },
                        { data: i.data, mode: r.BYTE, length: i.length },
                      ]);
                      break;
                    case r.ALPHANUMERIC:
                      t.push([
                        i,
                        { data: i.data, mode: r.BYTE, length: i.length },
                      ]);
                      break;
                    case r.KANJI:
                      t.push([
                        i,
                        { data: i.data, mode: r.BYTE, length: d(i.data) },
                      ]);
                      break;
                    case r.BYTE:
                      t.push([
                        { data: i.data, mode: r.BYTE, length: d(i.data) },
                      ]);
                  }
                }
                return t;
              })(i),
              o = (function (e, t) {
                let n = {},
                  i = { start: {} },
                  a = ["start"];
                for (let o = 0; o < e.length; o++) {
                  let s = e[o],
                    u = [];
                  for (let e = 0; e < s.length; e++) {
                    let l = s[e],
                      c = "" + o + e;
                    u.push(c), (n[c] = { node: l, lastCount: 0 }), (i[c] = {});
                    for (let e = 0; e < a.length; e++) {
                      let o = a[e];
                      n[o] && n[o].node.mode === l.mode
                        ? ((i[o][c] =
                            h(n[o].lastCount + l.length, l.mode) -
                            h(n[o].lastCount, l.mode)),
                          (n[o].lastCount += l.length))
                        : (n[o] && (n[o].lastCount = l.length),
                          (i[o][c] =
                            h(l.length, l.mode) +
                            4 +
                            r.getCharCountIndicator(l.mode, t)));
                    }
                  }
                  a = u;
                }
                for (let e = 0; e < a.length; e++) i[a[e]].end = 0;
                return { map: i, table: n };
              })(a, n),
              s = c.find_path(o.map, "start", "end"),
              u = [];
            for (let e = 1; e < s.length - 1; e++) u.push(o.table[s[e]].node);
            return t.fromArray(
              u.reduce(function (e, t) {
                let n = e.length - 1 >= 0 ? e[e.length - 1] : null;
                return (
                  n && n.mode === t.mode
                    ? (e[e.length - 1].data += t.data)
                    : e.push(t),
                  e
                );
              }, [])
            );
          }),
          (t.rawSplit = function (e) {
            return t.fromArray(p(e, l.isKanjiModeEnabled()));
          });
      },
      10242: function (e, t) {
        let n;
        let r = [
          0, 26, 44, 70, 100, 134, 172, 196, 242, 292, 346, 404, 466, 532, 581,
          655, 733, 815, 901, 991, 1085, 1156, 1258, 1364, 1474, 1588, 1706,
          1828, 1921, 2051, 2185, 2323, 2465, 2611, 2761, 2876, 3034, 3196,
          3362, 3532, 3706,
        ];
        (t.getSymbolSize = function (e) {
          if (!e) throw Error('"version" cannot be null or undefined');
          if (e < 1 || e > 40)
            throw Error('"version" should be in range from 1 to 40');
          return 4 * e + 17;
        }),
          (t.getSymbolTotalCodewords = function (e) {
            return r[e];
          }),
          (t.getBCHDigit = function (e) {
            let t = 0;
            for (; 0 !== e; ) t++, (e >>>= 1);
            return t;
          }),
          (t.setToSJISFunction = function (e) {
            if ("function" != typeof e)
              throw Error('"toSJISFunc" is not a valid function.');
            n = e;
          }),
          (t.isKanjiModeEnabled = function () {
            return void 0 !== n;
          }),
          (t.toSJIS = function (e) {
            return n(e);
          });
      },
      43114: function (e, t) {
        t.isValid = function (e) {
          return !isNaN(e) && e >= 1 && e <= 40;
        };
      },
      23103: function (e, t, n) {
        let r = n(10242),
          i = n(35393),
          a = n(64908),
          o = n(76910),
          s = n(43114),
          u = r.getBCHDigit(7973);
        function l(e, t) {
          return o.getCharCountIndicator(e, t) + 4;
        }
        (t.from = function (e, t) {
          return s.isValid(e) ? parseInt(e, 10) : t;
        }),
          (t.getCapacity = function (e, t, n) {
            if (!s.isValid(e)) throw Error("Invalid QR Code version");
            void 0 === n && (n = o.BYTE);
            let a = r.getSymbolTotalCodewords(e),
              u = i.getTotalCodewordsCount(e, t),
              c = (a - u) * 8;
            if (n === o.MIXED) return c;
            let d = c - l(n, e);
            switch (n) {
              case o.NUMERIC:
                return Math.floor((d / 10) * 3);
              case o.ALPHANUMERIC:
                return Math.floor((d / 11) * 2);
              case o.KANJI:
                return Math.floor(d / 13);
              case o.BYTE:
              default:
                return Math.floor(d / 8);
            }
          }),
          (t.getBestVersionForData = function (e, n) {
            let r;
            let i = a.from(n, a.M);
            if (Array.isArray(e)) {
              if (e.length > 1)
                return (function (e, n) {
                  for (let r = 1; r <= 40; r++) {
                    let i = (function (e, t) {
                      let n = 0;
                      return (
                        e.forEach(function (e) {
                          let r = l(e.mode, t);
                          n += r + e.getBitsLength();
                        }),
                        n
                      );
                    })(e, r);
                    if (i <= t.getCapacity(r, n, o.MIXED)) return r;
                  }
                })(e, i);
              if (0 === e.length) return 1;
              r = e[0];
            } else r = e;
            return (function (e, n, r) {
              for (let i = 1; i <= 40; i++)
                if (n <= t.getCapacity(i, r, e)) return i;
            })(r.mode, r.getLength(), i);
          }),
          (t.getEncodedBits = function (e) {
            if (!s.isValid(e) || e < 7) throw Error("Invalid QR Code version");
            let t = e << 12;
            for (; r.getBCHDigit(t) - u >= 0; )
              t ^= 7973 << (r.getBCHDigit(t) - u);
            return (e << 12) | t;
          });
      },
      6907: function (e, t, n) {
        let r = n(89653);
        (t.render = function (e, t, n) {
          var i;
          let a = n,
            o = t;
          void 0 !== a || (t && t.getContext) || ((a = t), (t = void 0)),
            t ||
              (o = (function () {
                try {
                  return document.createElement("canvas");
                } catch (e) {
                  throw Error("You need to specify a canvas element");
                }
              })()),
            (a = r.getOptions(a));
          let s = r.getImageWidth(e.modules.size, a),
            u = o.getContext("2d"),
            l = u.createImageData(s, s);
          return (
            r.qrToImageData(l.data, e, a),
            (i = o),
            u.clearRect(0, 0, i.width, i.height),
            i.style || (i.style = {}),
            (i.height = s),
            (i.width = s),
            (i.style.height = s + "px"),
            (i.style.width = s + "px"),
            u.putImageData(l, 0, 0),
            o
          );
        }),
          (t.renderToDataURL = function (e, n, r) {
            let i = r;
            void 0 !== i || (n && n.getContext) || ((i = n), (n = void 0)),
              i || (i = {});
            let a = t.render(e, n, i),
              o = i.type || "image/png",
              s = i.rendererOpts || {};
            return a.toDataURL(o, s.quality);
          });
      },
      93776: function (e, t, n) {
        let r = n(89653);
        function i(e, t) {
          let n = e.a / 255,
            r = t + '="' + e.hex + '"';
          return n < 1
            ? r + " " + t + '-opacity="' + n.toFixed(2).slice(1) + '"'
            : r;
        }
        function a(e, t, n) {
          let r = e + t;
          return void 0 !== n && (r += " " + n), r;
        }
        t.render = function (e, t, n) {
          let o = r.getOptions(t),
            s = e.modules.size,
            u = e.modules.data,
            l = s + 2 * o.margin,
            c = o.color.light.a
              ? "<path " +
                i(o.color.light, "fill") +
                ' d="M0 0h' +
                l +
                "v" +
                l +
                'H0z"/>'
              : "",
            d =
              "<path " +
              i(o.color.dark, "stroke") +
              ' d="' +
              (function (e, t, n) {
                let r = "",
                  i = 0,
                  o = !1,
                  s = 0;
                for (let u = 0; u < e.length; u++) {
                  let l = Math.floor(u % t),
                    c = Math.floor(u / t);
                  l || o || (o = !0),
                    e[u]
                      ? (s++,
                        (u > 0 && l > 0 && e[u - 1]) ||
                          ((r += o ? a("M", l + n, 0.5 + c + n) : a("m", i, 0)),
                          (i = 0),
                          (o = !1)),
                        (l + 1 < t && e[u + 1]) || ((r += a("h", s)), (s = 0)))
                      : i++;
                }
                return r;
              })(u, s, o.margin) +
              '"/>',
            f = o.width
              ? 'width="' + o.width + '" height="' + o.width + '" '
              : "",
            p =
              '<svg xmlns="http://www.w3.org/2000/svg" ' +
              f +
              ('viewBox="0 0 ' + l) +
              " " +
              l +
              '" shape-rendering="crispEdges">' +
              c +
              d +
              "</svg>\n";
          return "function" == typeof n && n(null, p), p;
        };
      },
      89653: function (e, t) {
        function n(e) {
          if (
            ("number" == typeof e && (e = e.toString()), "string" != typeof e)
          )
            throw Error("Color should be defined as hex string");
          let t = e.slice().replace("#", "").split("");
          if (t.length < 3 || 5 === t.length || t.length > 8)
            throw Error("Invalid hex color: " + e);
          (3 === t.length || 4 === t.length) &&
            (t = Array.prototype.concat.apply(
              [],
              t.map(function (e) {
                return [e, e];
              })
            )),
            6 === t.length && t.push("F", "F");
          let n = parseInt(t.join(""), 16);
          return {
            r: (n >> 24) & 255,
            g: (n >> 16) & 255,
            b: (n >> 8) & 255,
            a: 255 & n,
            hex: "#" + t.slice(0, 6).join(""),
          };
        }
        (t.getOptions = function (e) {
          e || (e = {}), e.color || (e.color = {});
          let t =
              void 0 === e.margin || null === e.margin || e.margin < 0
                ? 4
                : e.margin,
            r = e.width && e.width >= 21 ? e.width : void 0,
            i = e.scale || 4;
          return {
            width: r,
            scale: r ? 4 : i,
            margin: t,
            color: {
              dark: n(e.color.dark || "#000000ff"),
              light: n(e.color.light || "#ffffffff"),
            },
            type: e.type,
            rendererOpts: e.rendererOpts || {},
          };
        }),
          (t.getScale = function (e, t) {
            return t.width && t.width >= e + 2 * t.margin
              ? t.width / (e + 2 * t.margin)
              : t.scale;
          }),
          (t.getImageWidth = function (e, n) {
            let r = t.getScale(e, n);
            return Math.floor((e + 2 * n.margin) * r);
          }),
          (t.qrToImageData = function (e, n, r) {
            let i = n.modules.size,
              a = n.modules.data,
              o = t.getScale(i, r),
              s = Math.floor((i + 2 * r.margin) * o),
              u = r.margin * o,
              l = [r.color.light, r.color.dark];
            for (let t = 0; t < s; t++)
              for (let n = 0; n < s; n++) {
                let c = (t * s + n) * 4,
                  d = r.color.light;
                if (t >= u && n >= u && t < s - u && n < s - u) {
                  let e = Math.floor((t - u) / o),
                    r = Math.floor((n - u) / o);
                  d = l[a[e * i + r] ? 1 : 0];
                }
                (e[c++] = d.r), (e[c++] = d.g), (e[c++] = d.b), (e[c] = d.a);
              }
          });
      },
      80500: function (e) {
        "use strict";
        e.exports = (e, t) => {
          if (!("string" == typeof e && "string" == typeof t))
            throw TypeError("Expected the arguments to be of type `string`");
          if ("" === t) return [e];
          let n = e.indexOf(t);
          return -1 === n ? [e] : [e.slice(0, n), e.slice(n + t.length)];
        };
      },
      70610: function (e) {
        "use strict";
        e.exports = (e) =>
          encodeURIComponent(e).replace(
            /[!'()*]/g,
            (e) => `%${e.charCodeAt(0).toString(16).toUpperCase()}`
          );
      },
      53250: function (e, t, n) {
        "use strict";
        /**
         * @license React
         * use-sync-external-store-shim.production.min.js
         *
         * Copyright (c) Facebook, Inc. and its affiliates.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */ var r = n(67294),
          i =
            "function" == typeof Object.is
              ? Object.is
              : function (e, t) {
                  return (
                    (e === t && (0 !== e || 1 / e == 1 / t)) ||
                    (e != e && t != t)
                  );
                },
          a = r.useState,
          o = r.useEffect,
          s = r.useLayoutEffect,
          u = r.useDebugValue;
        function l(e) {
          var t = e.getSnapshot;
          e = e.value;
          try {
            var n = t();
            return !i(e, n);
          } catch (e) {
            return !0;
          }
        }
        var c =
          "undefined" == typeof window ||
          void 0 === window.document ||
          void 0 === window.document.createElement
            ? function (e, t) {
                return t();
              }
            : function (e, t) {
                var n = t(),
                  r = a({ inst: { value: n, getSnapshot: t } }),
                  i = r[0].inst,
                  c = r[1];
                return (
                  s(
                    function () {
                      (i.value = n),
                        (i.getSnapshot = t),
                        l(i) && c({ inst: i });
                    },
                    [e, n, t]
                  ),
                  o(
                    function () {
                      return (
                        l(i) && c({ inst: i }),
                        e(function () {
                          l(i) && c({ inst: i });
                        })
                      );
                    },
                    [e]
                  ),
                  u(n),
                  n
                );
              };
        t.useSyncExternalStore =
          void 0 !== r.useSyncExternalStore ? r.useSyncExternalStore : c;
      },
      50139: function (e, t, n) {
        "use strict";
        /**
         * @license React
         * use-sync-external-store-shim/with-selector.production.min.js
         *
         * Copyright (c) Facebook, Inc. and its affiliates.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */ var r = n(67294),
          i = n(61688),
          a =
            "function" == typeof Object.is
              ? Object.is
              : function (e, t) {
                  return (
                    (e === t && (0 !== e || 1 / e == 1 / t)) ||
                    (e != e && t != t)
                  );
                },
          o = i.useSyncExternalStore,
          s = r.useRef,
          u = r.useEffect,
          l = r.useMemo,
          c = r.useDebugValue;
        t.useSyncExternalStoreWithSelector = function (e, t, n, r, i) {
          var d = s(null);
          if (null === d.current) {
            var f = { hasValue: !1, value: null };
            d.current = f;
          } else f = d.current;
          d = l(
            function () {
              function e(e) {
                if (!u) {
                  if (
                    ((u = !0), (o = e), (e = r(e)), void 0 !== i && f.hasValue)
                  ) {
                    var t = f.value;
                    if (i(t, e)) return (s = t);
                  }
                  return (s = e);
                }
                if (((t = s), a(o, e))) return t;
                var n = r(e);
                return void 0 !== i && i(t, n) ? t : ((o = e), (s = n));
              }
              var o,
                s,
                u = !1,
                l = void 0 === n ? null : n;
              return [
                function () {
                  return e(t());
                },
                null === l
                  ? void 0
                  : function () {
                      return e(l());
                    },
              ];
            },
            [t, n, r, i]
          );
          var p = o(e, d[0], d[1]);
          return (
            u(
              function () {
                (f.hasValue = !0), (f.value = p);
              },
              [p]
            ),
            c(p),
            p
          );
        };
      },
      61688: function (e, t, n) {
        "use strict";
        e.exports = n(53250);
      },
      52798: function (e, t, n) {
        "use strict";
        e.exports = n(50139);
      },
      71427: function (e, t) {
        "use strict";
        function n(e) {
          if (!Number.isSafeInteger(e) || e < 0)
            throw Error(`Wrong positive integer: ${e}`);
        }
        function r(e) {
          if ("boolean" != typeof e) throw Error(`Expected boolean, not ${e}`);
        }
        function i(e, ...t) {
          if (!(e instanceof Uint8Array)) throw Error("Expected Uint8Array");
          if (t.length > 0 && !t.includes(e.length))
            throw Error(
              `Expected Uint8Array of length ${t}, not of length=${e.length}`
            );
        }
        function a(e) {
          if ("function" != typeof e || "function" != typeof e.create)
            throw Error("Hash should be wrapped by utils.wrapConstructor");
          n(e.outputLen), n(e.blockLen);
        }
        function o(e, t = !0) {
          if (e.destroyed) throw Error("Hash instance has been destroyed");
          if (t && e.finished)
            throw Error("Hash#digest() has already been called");
        }
        function s(e, t) {
          i(e);
          let n = t.outputLen;
          if (e.length < n)
            throw Error(
              `digestInto() expects output buffer of length at least ${n}`
            );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.output = t.exists = t.hash = t.bytes = t.bool = t.number = void 0),
          (t.number = n),
          (t.bool = r),
          (t.bytes = i),
          (t.hash = a),
          (t.exists = o),
          (t.output = s),
          (t.default = {
            number: n,
            bool: r,
            bytes: i,
            hash: a,
            exists: o,
            output: s,
          });
      },
      84762: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.SHA2 = void 0);
        let r = n(71427),
          i = n(74574);
        class a extends i.Hash {
          constructor(e, t, n, r) {
            super(),
              (this.blockLen = e),
              (this.outputLen = t),
              (this.padOffset = n),
              (this.isLE = r),
              (this.finished = !1),
              (this.length = 0),
              (this.pos = 0),
              (this.destroyed = !1),
              (this.buffer = new Uint8Array(e)),
              (this.view = (0, i.createView)(this.buffer));
          }
          update(e) {
            (0, r.exists)(this);
            let { view: t, buffer: n, blockLen: a } = this;
            e = (0, i.toBytes)(e);
            let o = e.length;
            for (let r = 0; r < o; ) {
              let s = Math.min(a - this.pos, o - r);
              if (s === a) {
                let t = (0, i.createView)(e);
                for (; a <= o - r; r += a) this.process(t, r);
                continue;
              }
              n.set(e.subarray(r, r + s), this.pos),
                (this.pos += s),
                (r += s),
                this.pos === a && (this.process(t, 0), (this.pos = 0));
            }
            return (this.length += e.length), this.roundClean(), this;
          }
          digestInto(e) {
            (0, r.exists)(this), (0, r.output)(e, this), (this.finished = !0);
            let { buffer: t, view: n, blockLen: a, isLE: o } = this,
              { pos: s } = this;
            (t[s++] = 128),
              this.buffer.subarray(s).fill(0),
              this.padOffset > a - s && (this.process(n, 0), (s = 0));
            for (let e = s; e < a; e++) t[e] = 0;
            (function (e, t, n, r) {
              if ("function" == typeof e.setBigUint64)
                return e.setBigUint64(t, n, r);
              let i = BigInt(32),
                a = BigInt(4294967295),
                o = Number((n >> i) & a),
                s = Number(n & a),
                u = r ? 4 : 0,
                l = r ? 0 : 4;
              e.setUint32(t + u, o, r), e.setUint32(t + l, s, r);
            })(n, a - 8, BigInt(8 * this.length), o),
              this.process(n, 0);
            let u = (0, i.createView)(e),
              l = this.outputLen;
            if (l % 4)
              throw Error("_sha2: outputLen should be aligned to 32bit");
            let c = l / 4,
              d = this.get();
            if (c > d.length) throw Error("_sha2: outputLen bigger than state");
            for (let e = 0; e < c; e++) u.setUint32(4 * e, d[e], o);
          }
          digest() {
            let { buffer: e, outputLen: t } = this;
            this.digestInto(e);
            let n = e.slice(0, t);
            return this.destroy(), n;
          }
          _cloneInto(e) {
            e || (e = new this.constructor()), e.set(...this.get());
            let {
              blockLen: t,
              buffer: n,
              length: r,
              finished: i,
              destroyed: a,
              pos: o,
            } = this;
            return (
              (e.length = r),
              (e.pos = o),
              (e.finished = i),
              (e.destroyed = a),
              r % t && e.buffer.set(n),
              e
            );
          }
        }
        t.SHA2 = a;
      },
      30066: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.add5L =
            t.add5H =
            t.add4H =
            t.add4L =
            t.add3H =
            t.add3L =
            t.add =
            t.rotlBL =
            t.rotlBH =
            t.rotlSL =
            t.rotlSH =
            t.rotr32L =
            t.rotr32H =
            t.rotrBL =
            t.rotrBH =
            t.rotrSL =
            t.rotrSH =
            t.shrSL =
            t.shrSH =
            t.toBig =
            t.split =
            t.fromBig =
              void 0);
        let n = BigInt(4294967296 - 1),
          r = BigInt(32);
        function i(e, t = !1) {
          return t
            ? { h: Number(e & n), l: Number((e >> r) & n) }
            : { h: 0 | Number((e >> r) & n), l: 0 | Number(e & n) };
        }
        function a(e, t = !1) {
          let n = new Uint32Array(e.length),
            r = new Uint32Array(e.length);
          for (let a = 0; a < e.length; a++) {
            let { h: o, l: s } = i(e[a], t);
            [n[a], r[a]] = [o, s];
          }
          return [n, r];
        }
        (t.fromBig = i), (t.split = a);
        let o = (e, t) => (BigInt(e >>> 0) << r) | BigInt(t >>> 0);
        t.toBig = o;
        let s = (e, t, n) => e >>> n;
        t.shrSH = s;
        let u = (e, t, n) => (e << (32 - n)) | (t >>> n);
        t.shrSL = u;
        let l = (e, t, n) => (e >>> n) | (t << (32 - n));
        t.rotrSH = l;
        let c = (e, t, n) => (e << (32 - n)) | (t >>> n);
        t.rotrSL = c;
        let d = (e, t, n) => (e << (64 - n)) | (t >>> (n - 32));
        t.rotrBH = d;
        let f = (e, t, n) => (e >>> (n - 32)) | (t << (64 - n));
        t.rotrBL = f;
        let p = (e, t) => t;
        t.rotr32H = p;
        let h = (e, t) => e;
        t.rotr32L = h;
        let m = (e, t, n) => (e << n) | (t >>> (32 - n));
        t.rotlSH = m;
        let y = (e, t, n) => (t << n) | (e >>> (32 - n));
        t.rotlSL = y;
        let g = (e, t, n) => (t << (n - 32)) | (e >>> (64 - n));
        t.rotlBH = g;
        let b = (e, t, n) => (e << (n - 32)) | (t >>> (64 - n));
        function v(e, t, n, r) {
          let i = (t >>> 0) + (r >>> 0);
          return { h: (e + n + ((i / 4294967296) | 0)) | 0, l: 0 | i };
        }
        (t.rotlBL = b), (t.add = v);
        let w = (e, t, n) => (e >>> 0) + (t >>> 0) + (n >>> 0);
        t.add3L = w;
        let E = (e, t, n, r) => (t + n + r + ((e / 4294967296) | 0)) | 0;
        t.add3H = E;
        let x = (e, t, n, r) => (e >>> 0) + (t >>> 0) + (n >>> 0) + (r >>> 0);
        t.add4L = x;
        let C = (e, t, n, r, i) => (t + n + r + i + ((e / 4294967296) | 0)) | 0;
        t.add4H = C;
        let _ = (e, t, n, r, i) =>
          (e >>> 0) + (t >>> 0) + (n >>> 0) + (r >>> 0) + (i >>> 0);
        t.add5L = _;
        let T = (e, t, n, r, i, a) =>
          (t + n + r + i + a + ((e / 4294967296) | 0)) | 0;
        (t.add5H = T),
          (t.default = {
            fromBig: i,
            split: a,
            toBig: o,
            shrSH: s,
            shrSL: u,
            rotrSH: l,
            rotrSL: c,
            rotrBH: d,
            rotrBL: f,
            rotr32H: p,
            rotr32L: h,
            rotlSH: m,
            rotlSL: y,
            rotlBH: g,
            rotlBL: b,
            add: v,
            add3L: w,
            add3H: E,
            add4L: x,
            add4H: C,
            add5H: T,
            add5L: _,
          });
      },
      922: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.crypto = void 0),
          (t.crypto =
            "object" == typeof globalThis && "crypto" in globalThis
              ? globalThis.crypto
              : void 0);
      },
      67266: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ripemd160 = t.RIPEMD160 = void 0);
        let r = n(84762),
          i = n(74574),
          a = new Uint8Array([
            7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
          ]),
          o = Uint8Array.from({ length: 16 }, (e, t) => t),
          s = o.map((e) => (9 * e + 5) % 16),
          u = [o],
          l = [s];
        for (let e = 0; e < 4; e++)
          for (let t of [u, l]) t.push(t[e].map((e) => a[e]));
        let c = [
            [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
            [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
            [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
            [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
            [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],
          ].map((e) => new Uint8Array(e)),
          d = u.map((e, t) => e.map((e) => c[t][e])),
          f = l.map((e, t) => e.map((e) => c[t][e])),
          p = new Uint32Array([
            0, 1518500249, 1859775393, 2400959708, 2840853838,
          ]),
          h = new Uint32Array([
            1352829926, 1548603684, 1836072691, 2053994217, 0,
          ]),
          m = (e, t) => (e << t) | (e >>> (32 - t));
        function y(e, t, n, r) {
          return 0 === e
            ? t ^ n ^ r
            : 1 === e
            ? (t & n) | (~t & r)
            : 2 === e
            ? (t | ~n) ^ r
            : 3 === e
            ? (t & r) | (n & ~r)
            : t ^ (n | ~r);
        }
        let g = new Uint32Array(16);
        class b extends r.SHA2 {
          constructor() {
            super(64, 20, 8, !0),
              (this.h0 = 1732584193),
              (this.h1 = -271733879),
              (this.h2 = -1732584194),
              (this.h3 = 271733878),
              (this.h4 = -1009589776);
          }
          get() {
            let { h0: e, h1: t, h2: n, h3: r, h4: i } = this;
            return [e, t, n, r, i];
          }
          set(e, t, n, r, i) {
            (this.h0 = 0 | e),
              (this.h1 = 0 | t),
              (this.h2 = 0 | n),
              (this.h3 = 0 | r),
              (this.h4 = 0 | i);
          }
          process(e, t) {
            for (let n = 0; n < 16; n++, t += 4) g[n] = e.getUint32(t, !0);
            let n = 0 | this.h0,
              r = n,
              i = 0 | this.h1,
              a = i,
              o = 0 | this.h2,
              s = o,
              c = 0 | this.h3,
              b = c,
              v = 0 | this.h4,
              w = v;
            for (let e = 0; e < 5; e++) {
              let t = 4 - e,
                E = p[e],
                x = h[e],
                C = u[e],
                _ = l[e],
                T = d[e],
                S = f[e];
              for (let t = 0; t < 16; t++) {
                let r = (m(n + y(e, i, o, c) + g[C[t]] + E, T[t]) + v) | 0;
                (n = v), (v = c), (c = 0 | m(o, 10)), (o = i), (i = r);
              }
              for (let e = 0; e < 16; e++) {
                let n = (m(r + y(t, a, s, b) + g[_[e]] + x, S[e]) + w) | 0;
                (r = w), (w = b), (b = 0 | m(s, 10)), (s = a), (a = n);
              }
            }
            this.set(
              (this.h1 + o + b) | 0,
              (this.h2 + c + w) | 0,
              (this.h3 + v + r) | 0,
              (this.h4 + n + a) | 0,
              (this.h0 + i + s) | 0
            );
          }
          roundClean() {
            g.fill(0);
          }
          destroy() {
            (this.destroyed = !0), this.buffer.fill(0), this.set(0, 0, 0, 0, 0);
          }
        }
        (t.RIPEMD160 = b),
          (t.ripemd160 = (0, i.wrapConstructor)(() => new b()));
      },
      81205: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.sha224 = t.sha256 = void 0);
        let r = n(84762),
          i = n(74574),
          a = (e, t, n) => (e & t) ^ (~e & n),
          o = (e, t, n) => (e & t) ^ (e & n) ^ (t & n),
          s = new Uint32Array([
            1116352408, 1899447441, 3049323471, 3921009573, 961987163,
            1508970993, 2453635748, 2870763221, 3624381080, 310598401,
            607225278, 1426881987, 1925078388, 2162078206, 2614888103,
            3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983,
            1249150122, 1555081692, 1996064986, 2554220882, 2821834349,
            2952996808, 3210313671, 3336571891, 3584528711, 113926993,
            338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700,
            1986661051, 2177026350, 2456956037, 2730485921, 2820302411,
            3259730800, 3345764771, 3516065817, 3600352804, 4094571909,
            275423344, 430227734, 506948616, 659060556, 883997877, 958139571,
            1322822218, 1537002063, 1747873779, 1955562222, 2024104815,
            2227730452, 2361852424, 2428436474, 2756734187, 3204031479,
            3329325298,
          ]),
          u = new Uint32Array([
            1779033703, 3144134277, 1013904242, 2773480762, 1359893119,
            2600822924, 528734635, 1541459225,
          ]),
          l = new Uint32Array(64);
        class c extends r.SHA2 {
          constructor() {
            super(64, 32, 8, !1),
              (this.A = 0 | u[0]),
              (this.B = 0 | u[1]),
              (this.C = 0 | u[2]),
              (this.D = 0 | u[3]),
              (this.E = 0 | u[4]),
              (this.F = 0 | u[5]),
              (this.G = 0 | u[6]),
              (this.H = 0 | u[7]);
          }
          get() {
            let { A: e, B: t, C: n, D: r, E: i, F: a, G: o, H: s } = this;
            return [e, t, n, r, i, a, o, s];
          }
          set(e, t, n, r, i, a, o, s) {
            (this.A = 0 | e),
              (this.B = 0 | t),
              (this.C = 0 | n),
              (this.D = 0 | r),
              (this.E = 0 | i),
              (this.F = 0 | a),
              (this.G = 0 | o),
              (this.H = 0 | s);
          }
          process(e, t) {
            for (let n = 0; n < 16; n++, t += 4) l[n] = e.getUint32(t, !1);
            for (let e = 16; e < 64; e++) {
              let t = l[e - 15],
                n = l[e - 2],
                r = (0, i.rotr)(t, 7) ^ (0, i.rotr)(t, 18) ^ (t >>> 3),
                a = (0, i.rotr)(n, 17) ^ (0, i.rotr)(n, 19) ^ (n >>> 10);
              l[e] = (a + l[e - 7] + r + l[e - 16]) | 0;
            }
            let { A: n, B: r, C: u, D: c, E: d, F: f, G: p, H: h } = this;
            for (let e = 0; e < 64; e++) {
              let t =
                  (0, i.rotr)(d, 6) ^ (0, i.rotr)(d, 11) ^ (0, i.rotr)(d, 25),
                m = (h + t + a(d, f, p) + s[e] + l[e]) | 0,
                y = (0, i.rotr)(n, 2) ^ (0, i.rotr)(n, 13) ^ (0, i.rotr)(n, 22),
                g = (y + o(n, r, u)) | 0;
              (h = p),
                (p = f),
                (f = d),
                (d = (c + m) | 0),
                (c = u),
                (u = r),
                (r = n),
                (n = (m + g) | 0);
            }
            (n = (n + this.A) | 0),
              (r = (r + this.B) | 0),
              (u = (u + this.C) | 0),
              (c = (c + this.D) | 0),
              (d = (d + this.E) | 0),
              (f = (f + this.F) | 0),
              (p = (p + this.G) | 0),
              (h = (h + this.H) | 0),
              this.set(n, r, u, c, d, f, p, h);
          }
          roundClean() {
            l.fill(0);
          }
          destroy() {
            this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
          }
        }
        class d extends c {
          constructor() {
            super(),
              (this.A = -1056596264),
              (this.B = 914150663),
              (this.C = 812702999),
              (this.D = -150054599),
              (this.E = -4191439),
              (this.F = 1750603025),
              (this.G = 1694076839),
              (this.H = -1090891868),
              (this.outputLen = 28);
          }
        }
        (t.sha256 = (0, i.wrapConstructor)(() => new c())),
          (t.sha224 = (0, i.wrapConstructor)(() => new d()));
      },
      7217: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.shake256 =
            t.shake128 =
            t.keccak_512 =
            t.keccak_384 =
            t.keccak_256 =
            t.keccak_224 =
            t.sha3_512 =
            t.sha3_384 =
            t.sha3_256 =
            t.sha3_224 =
            t.Keccak =
            t.keccakP =
              void 0);
        let r = n(71427),
          i = n(30066),
          a = n(74574),
          [o, s, u] = [[], [], []],
          l = BigInt(0),
          c = BigInt(1),
          d = BigInt(2),
          f = BigInt(7),
          p = BigInt(256),
          h = BigInt(113);
        for (let e = 0, t = c, n = 1, r = 0; e < 24; e++) {
          ([n, r] = [r, (2 * n + 3 * r) % 5]),
            o.push(2 * (5 * r + n)),
            s.push((((e + 1) * (e + 2)) / 2) % 64);
          let i = l;
          for (let e = 0; e < 7; e++)
            (t = ((t << c) ^ ((t >> f) * h)) % p) & d &&
              (i ^= c << ((c << BigInt(e)) - c));
          u.push(i);
        }
        let [m, y] = (0, i.split)(u, !0),
          g = (e, t, n) =>
            n > 32 ? (0, i.rotlBH)(e, t, n) : (0, i.rotlSH)(e, t, n),
          b = (e, t, n) =>
            n > 32 ? (0, i.rotlBL)(e, t, n) : (0, i.rotlSL)(e, t, n);
        function v(e, t = 24) {
          let n = new Uint32Array(10);
          for (let r = 24 - t; r < 24; r++) {
            for (let t = 0; t < 10; t++)
              n[t] = e[t] ^ e[t + 10] ^ e[t + 20] ^ e[t + 30] ^ e[t + 40];
            for (let t = 0; t < 10; t += 2) {
              let r = (t + 8) % 10,
                i = (t + 2) % 10,
                a = n[i],
                o = n[i + 1],
                s = g(a, o, 1) ^ n[r],
                u = b(a, o, 1) ^ n[r + 1];
              for (let n = 0; n < 50; n += 10)
                (e[t + n] ^= s), (e[t + n + 1] ^= u);
            }
            let t = e[2],
              i = e[3];
            for (let n = 0; n < 24; n++) {
              let r = s[n],
                a = g(t, i, r),
                u = b(t, i, r),
                l = o[n];
              (t = e[l]), (i = e[l + 1]), (e[l] = a), (e[l + 1] = u);
            }
            for (let t = 0; t < 50; t += 10) {
              for (let r = 0; r < 10; r++) n[r] = e[t + r];
              for (let r = 0; r < 10; r++)
                e[t + r] ^= ~n[(r + 2) % 10] & n[(r + 4) % 10];
            }
            (e[0] ^= m[r]), (e[1] ^= y[r]);
          }
          n.fill(0);
        }
        t.keccakP = v;
        class w extends a.Hash {
          constructor(e, t, n, i = !1, o = 24) {
            if (
              (super(),
              (this.blockLen = e),
              (this.suffix = t),
              (this.outputLen = n),
              (this.enableXOF = i),
              (this.rounds = o),
              (this.pos = 0),
              (this.posOut = 0),
              (this.finished = !1),
              (this.destroyed = !1),
              (0, r.number)(n),
              0 >= this.blockLen || this.blockLen >= 200)
            )
              throw Error("Sha3 supports only keccak-f1600 function");
            (this.state = new Uint8Array(200)),
              (this.state32 = (0, a.u32)(this.state));
          }
          keccak() {
            v(this.state32, this.rounds), (this.posOut = 0), (this.pos = 0);
          }
          update(e) {
            (0, r.exists)(this);
            let { blockLen: t, state: n } = this;
            e = (0, a.toBytes)(e);
            let i = e.length;
            for (let r = 0; r < i; ) {
              let a = Math.min(t - this.pos, i - r);
              for (let t = 0; t < a; t++) n[this.pos++] ^= e[r++];
              this.pos === t && this.keccak();
            }
            return this;
          }
          finish() {
            if (this.finished) return;
            this.finished = !0;
            let { state: e, suffix: t, pos: n, blockLen: r } = this;
            (e[n] ^= t),
              (128 & t) != 0 && n === r - 1 && this.keccak(),
              (e[r - 1] ^= 128),
              this.keccak();
          }
          writeInto(e) {
            (0, r.exists)(this, !1), (0, r.bytes)(e), this.finish();
            let t = this.state,
              { blockLen: n } = this;
            for (let r = 0, i = e.length; r < i; ) {
              this.posOut >= n && this.keccak();
              let a = Math.min(n - this.posOut, i - r);
              e.set(t.subarray(this.posOut, this.posOut + a), r),
                (this.posOut += a),
                (r += a);
            }
            return e;
          }
          xofInto(e) {
            if (!this.enableXOF)
              throw Error("XOF is not possible for this instance");
            return this.writeInto(e);
          }
          xof(e) {
            return (0, r.number)(e), this.xofInto(new Uint8Array(e));
          }
          digestInto(e) {
            if (((0, r.output)(e, this), this.finished))
              throw Error("digest() was already called");
            return this.writeInto(e), this.destroy(), e;
          }
          digest() {
            return this.digestInto(new Uint8Array(this.outputLen));
          }
          destroy() {
            (this.destroyed = !0), this.state.fill(0);
          }
          _cloneInto(e) {
            let {
              blockLen: t,
              suffix: n,
              outputLen: r,
              rounds: i,
              enableXOF: a,
            } = this;
            return (
              e || (e = new w(t, n, r, a, i)),
              e.state32.set(this.state32),
              (e.pos = this.pos),
              (e.posOut = this.posOut),
              (e.finished = this.finished),
              (e.rounds = i),
              (e.suffix = n),
              (e.outputLen = r),
              (e.enableXOF = a),
              (e.destroyed = this.destroyed),
              e
            );
          }
        }
        t.Keccak = w;
        let E = (e, t, n) => (0, a.wrapConstructor)(() => new w(t, e, n));
        (t.sha3_224 = E(6, 144, 28)),
          (t.sha3_256 = E(6, 136, 32)),
          (t.sha3_384 = E(6, 104, 48)),
          (t.sha3_512 = E(6, 72, 64)),
          (t.keccak_224 = E(1, 144, 28)),
          (t.keccak_256 = E(1, 136, 32)),
          (t.keccak_384 = E(1, 104, 48)),
          (t.keccak_512 = E(1, 72, 64));
        let x = (e, t, n) =>
          (0, a.wrapXOFConstructorWithOpts)(
            (r = {}) => new w(t, e, void 0 === r.dkLen ? n : r.dkLen, !0)
          );
        (t.shake128 = x(31, 168, 16)), (t.shake256 = x(31, 136, 32));
      },
      74574: function (e, t, n) {
        "use strict";
        /*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */ Object.defineProperty(
          t,
          "__esModule",
          { value: !0 }
        ),
          (t.randomBytes =
            t.wrapXOFConstructorWithOpts =
            t.wrapConstructorWithOpts =
            t.wrapConstructor =
            t.checkOpts =
            t.Hash =
            t.concatBytes =
            t.toBytes =
            t.utf8ToBytes =
            t.asyncLoop =
            t.nextTick =
            t.hexToBytes =
            t.bytesToHex =
            t.isLE =
            t.rotr =
            t.createView =
            t.u32 =
            t.u8 =
              void 0);
        let r = n(922),
          i = (e) => e instanceof Uint8Array;
        if (
          ((t.u8 = (e) => new Uint8Array(e.buffer, e.byteOffset, e.byteLength)),
          (t.u32 = (e) =>
            new Uint32Array(
              e.buffer,
              e.byteOffset,
              Math.floor(e.byteLength / 4)
            )),
          (t.createView = (e) =>
            new DataView(e.buffer, e.byteOffset, e.byteLength)),
          (t.rotr = (e, t) => (e << (32 - t)) | (e >>> t)),
          (t.isLE =
            68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0]),
          !t.isLE)
        )
          throw Error("Non little-endian hardware is not supported");
        let a = Array.from({ length: 256 }, (e, t) =>
          t.toString(16).padStart(2, "0")
        );
        (t.bytesToHex = function (e) {
          if (!i(e)) throw Error("Uint8Array expected");
          let t = "";
          for (let n = 0; n < e.length; n++) t += a[e[n]];
          return t;
        }),
          (t.hexToBytes = function (e) {
            if ("string" != typeof e)
              throw Error("hex string expected, got " + typeof e);
            let t = e.length;
            if (t % 2)
              throw Error(
                "padded hex string expected, got unpadded hex of length " + t
              );
            let n = new Uint8Array(t / 2);
            for (let t = 0; t < n.length; t++) {
              let r = 2 * t,
                i = e.slice(r, r + 2),
                a = Number.parseInt(i, 16);
              if (Number.isNaN(a) || a < 0)
                throw Error("Invalid byte sequence");
              n[t] = a;
            }
            return n;
          });
        let o = async () => {};
        async function s(e, n, r) {
          let i = Date.now();
          for (let a = 0; a < e; a++) {
            r(a);
            let e = Date.now() - i;
            (e >= 0 && e < n) || (await (0, t.nextTick)(), (i += e));
          }
        }
        function u(e) {
          if ("string" != typeof e)
            throw Error(`utf8ToBytes expected string, got ${typeof e}`);
          return new Uint8Array(new TextEncoder().encode(e));
        }
        function l(e) {
          if (("string" == typeof e && (e = u(e)), !i(e)))
            throw Error(`expected Uint8Array, got ${typeof e}`);
          return e;
        }
        (t.nextTick = o),
          (t.asyncLoop = s),
          (t.utf8ToBytes = u),
          (t.toBytes = l),
          (t.concatBytes = function (...e) {
            let t = new Uint8Array(e.reduce((e, t) => e + t.length, 0)),
              n = 0;
            return (
              e.forEach((e) => {
                if (!i(e)) throw Error("Uint8Array expected");
                t.set(e, n), (n += e.length);
              }),
              t
            );
          }),
          (t.Hash = class {
            clone() {
              return this._cloneInto();
            }
          });
        let c = {}.toString;
        (t.checkOpts = function (e, t) {
          if (void 0 !== t && "[object Object]" !== c.call(t))
            throw Error("Options should be object or undefined");
          let n = Object.assign(e, t);
          return n;
        }),
          (t.wrapConstructor = function (e) {
            let t = (t) => e().update(l(t)).digest(),
              n = e();
            return (
              (t.outputLen = n.outputLen),
              (t.blockLen = n.blockLen),
              (t.create = () => e()),
              t
            );
          }),
          (t.wrapConstructorWithOpts = function (e) {
            let t = (t, n) => e(n).update(l(t)).digest(),
              n = e({});
            return (
              (t.outputLen = n.outputLen),
              (t.blockLen = n.blockLen),
              (t.create = (t) => e(t)),
              t
            );
          }),
          (t.wrapXOFConstructorWithOpts = function (e) {
            let t = (t, n) => e(n).update(l(t)).digest(),
              n = e({});
            return (
              (t.outputLen = n.outputLen),
              (t.blockLen = n.blockLen),
              (t.create = (t) => e(t)),
              t
            );
          }),
          (t.randomBytes = function (e = 32) {
            if (r.crypto && "function" == typeof r.crypto.getRandomValues)
              return r.crypto.getRandomValues(new Uint8Array(e));
            throw Error("crypto.getRandomValues must be defined");
          });
      },
      35883: function () {},
      51538: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.BaseError = void 0);
        let r = n(27870);
        class i extends Error {
          constructor(e, t = {}) {
            let n =
                t.cause instanceof i
                  ? t.cause.details
                  : t.cause?.message
                  ? t.cause.message
                  : t.details,
              a = (t.cause instanceof i && t.cause.docsPath) || t.docsPath,
              o = [
                e || "An error occurred.",
                "",
                ...(t.metaMessages ? [...t.metaMessages, ""] : []),
                ...(a ? [`Docs: https://abitype.dev${a}`] : []),
                ...(n ? [`Details: ${n}`] : []),
                `Version: abitype@${r.version}`,
              ].join("\n");
            super(o),
              Object.defineProperty(this, "details", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "docsPath", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "metaMessages", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "shortMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiTypeError",
              }),
              t.cause && (this.cause = t.cause),
              (this.details = n),
              (this.docsPath = a),
              (this.metaMessages = t.metaMessages),
              (this.shortMessage = e);
          }
        }
        t.BaseError = i;
      },
      80844: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.UnknownSolidityTypeError =
            t.UnknownTypeError =
            t.InvalidAbiItemError =
              void 0);
        let r = n(51538);
        class i extends r.BaseError {
          constructor({ signature: e }) {
            super("Failed to parse ABI item.", {
              details: `parseAbiItem(${JSON.stringify(e, null, 2)})`,
              docsPath: "/api/human.html#parseabiitem-1",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidAbiItemError",
              });
          }
        }
        t.InvalidAbiItemError = i;
        class a extends r.BaseError {
          constructor({ type: e }) {
            super("Unknown type.", {
              metaMessages: [
                `Type "${e}" is not a valid ABI type. Perhaps you forgot to include a struct signature?`,
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnknownTypeError",
              });
          }
        }
        t.UnknownTypeError = a;
        class o extends r.BaseError {
          constructor({ type: e }) {
            super("Unknown type.", {
              metaMessages: [`Type "${e}" is not a valid ABI type.`],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnknownSolidityTypeError",
              });
          }
        }
        t.UnknownSolidityTypeError = o;
      },
      43972: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.InvalidAbiTypeParameterError =
            t.InvalidFunctionModifierError =
            t.InvalidModifierError =
            t.SolidityProtectedKeywordError =
            t.InvalidParameterError =
            t.InvalidAbiParametersError =
            t.InvalidAbiParameterError =
              void 0);
        let r = n(51538);
        class i extends r.BaseError {
          constructor({ param: e }) {
            super("Failed to parse ABI parameter.", {
              details: `parseAbiParameter(${JSON.stringify(e, null, 2)})`,
              docsPath: "/api/human.html#parseabiparameter-1",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidAbiParameterError",
              });
          }
        }
        t.InvalidAbiParameterError = i;
        class a extends r.BaseError {
          constructor({ params: e }) {
            super("Failed to parse ABI parameters.", {
              details: `parseAbiParameters(${JSON.stringify(e, null, 2)})`,
              docsPath: "/api/human.html#parseabiparameters-1",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidAbiParametersError",
              });
          }
        }
        t.InvalidAbiParametersError = a;
        class o extends r.BaseError {
          constructor({ param: e }) {
            super("Invalid ABI parameter.", { details: e }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidParameterError",
              });
          }
        }
        t.InvalidParameterError = o;
        class s extends r.BaseError {
          constructor({ param: e, name: t }) {
            super("Invalid ABI parameter.", {
              details: e,
              metaMessages: [
                `"${t}" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`,
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "SolidityProtectedKeywordError",
              });
          }
        }
        t.SolidityProtectedKeywordError = s;
        class u extends r.BaseError {
          constructor({ param: e, type: t, modifier: n }) {
            super("Invalid ABI parameter.", {
              details: e,
              metaMessages: [
                `Modifier "${n}" not allowed${t ? ` in "${t}" type` : ""}.`,
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidModifierError",
              });
          }
        }
        t.InvalidModifierError = u;
        class l extends r.BaseError {
          constructor({ param: e, type: t, modifier: n }) {
            super("Invalid ABI parameter.", {
              details: e,
              metaMessages: [
                `Modifier "${n}" not allowed${t ? ` in "${t}" type` : ""}.`,
                `Data location can only be specified for array, struct, or mapping types, but "${n}" was given.`,
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidFunctionModifierError",
              });
          }
        }
        t.InvalidFunctionModifierError = l;
        class c extends r.BaseError {
          constructor({ abiParameter: e }) {
            super("Invalid ABI parameter.", {
              details: JSON.stringify(e, null, 2),
              metaMessages: ["ABI parameter type is invalid."],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidAbiTypeParameterError",
              });
          }
        }
        t.InvalidAbiTypeParameterError = c;
      },
      3802: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.InvalidStructSignatureError =
            t.UnknownSignatureError =
            t.InvalidSignatureError =
              void 0);
        let r = n(51538);
        class i extends r.BaseError {
          constructor({ signature: e, type: t }) {
            super(`Invalid ${t} signature.`, { details: e }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidSignatureError",
              });
          }
        }
        t.InvalidSignatureError = i;
        class a extends r.BaseError {
          constructor({ signature: e }) {
            super("Unknown signature.", { details: e }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnknownSignatureError",
              });
          }
        }
        t.UnknownSignatureError = a;
        class o extends r.BaseError {
          constructor({ signature: e }) {
            super("Invalid struct signature.", {
              details: e,
              metaMessages: ["No properties exist."],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidStructSignatureError",
              });
          }
        }
        t.InvalidStructSignatureError = o;
      },
      49295: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.InvalidParenthesisError = void 0);
        let r = n(51538);
        class i extends r.BaseError {
          constructor({ current: e, depth: t }) {
            super("Unbalanced parentheses.", {
              metaMessages: [
                `"${e.trim()}" has too many ${
                  t > 0 ? "opening" : "closing"
                } parentheses.`,
              ],
              details: `Depth "${t}"`,
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidParenthesisError",
              });
          }
        }
        t.InvalidParenthesisError = i;
      },
      68042: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.CircularReferenceError = void 0);
        let r = n(51538);
        class i extends r.BaseError {
          constructor({ type: e }) {
            super("Circular reference detected.", {
              metaMessages: [`Struct "${e}" is a circular reference.`],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "CircularReferenceError",
              });
          }
        }
        t.CircularReferenceError = i;
      },
      57442: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.formatAbi = void 0);
        let r = n(5659);
        t.formatAbi = function (e) {
          let t = [],
            n = e.length;
          for (let i = 0; i < n; i++) {
            let n = e[i],
              a = (0, r.formatAbiItem)(n);
            t.push(a);
          }
          return t;
        };
      },
      5659: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.formatAbiItem = void 0);
        let r = n(6965);
        t.formatAbiItem = function (e) {
          return "function" === e.type
            ? `function ${e.name}(${(0, r.formatAbiParameters)(e.inputs)})${
                e.stateMutability && "nonpayable" !== e.stateMutability
                  ? ` ${e.stateMutability}`
                  : ""
              }${
                e.outputs.length
                  ? ` returns (${(0, r.formatAbiParameters)(e.outputs)})`
                  : ""
              }`
            : "event" === e.type
            ? `event ${e.name}(${(0, r.formatAbiParameters)(e.inputs)})`
            : "error" === e.type
            ? `error ${e.name}(${(0, r.formatAbiParameters)(e.inputs)})`
            : "constructor" === e.type
            ? `constructor(${(0, r.formatAbiParameters)(e.inputs)})${
                "payable" === e.stateMutability ? " payable" : ""
              }`
            : "fallback" === e.type
            ? "fallback()"
            : "receive() external payable";
        };
      },
      15004: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.formatAbiParameter = void 0);
        let r = n(91876),
          i = /^tuple(?<array>(\[(\d*)\])*)$/;
        t.formatAbiParameter = function e(t) {
          let n = t.type;
          if (i.test(t.type) && "components" in t) {
            n = "(";
            let a = t.components.length;
            for (let r = 0; r < a; r++) {
              let i = t.components[r];
              (n += e(i)), r < a - 1 && (n += ", ");
            }
            let o = (0, r.execTyped)(i, t.type);
            return (n += `)${o?.array ?? ""}`), e({ ...t, type: n });
          }
          return ("indexed" in t && t.indexed && (n = `${n} indexed`), t.name)
            ? `${n} ${t.name}`
            : n;
        };
      },
      6965: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.formatAbiParameters = void 0);
        let r = n(15004);
        t.formatAbiParameters = function (e) {
          let t = "",
            n = e.length;
          for (let i = 0; i < n; i++) {
            let a = e[i];
            (t += (0, r.formatAbiParameter)(a)), i !== n - 1 && (t += ", ");
          }
          return t;
        };
      },
      74005: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.parseAbi = void 0);
        let r = n(82947),
          i = n(53713),
          a = n(61236);
        t.parseAbi = function (e) {
          let t = (0, i.parseStructs)(e),
            n = [],
            o = e.length;
          for (let i = 0; i < o; i++) {
            let o = e[i];
            (0, r.isStructSignature)(o) || n.push((0, a.parseSignature)(o, t));
          }
          return n;
        };
      },
      9707: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.parseAbiItem = void 0);
        let r = n(99620),
          i = n(82947),
          a = n(53713),
          o = n(61236);
        t.parseAbiItem = function (e) {
          let t;
          if ("string" == typeof e) t = (0, o.parseSignature)(e);
          else {
            let n = (0, a.parseStructs)(e),
              r = e.length;
            for (let a = 0; a < r; a++) {
              let r = e[a];
              if (!(0, i.isStructSignature)(r)) {
                t = (0, o.parseSignature)(r, n);
                break;
              }
            }
          }
          if (!t) throw new r.InvalidAbiItemError({ signature: e });
          return t;
        };
      },
      87929: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.parseAbiParameter = void 0);
        let r = n(99620),
          i = n(82947),
          a = n(53713),
          o = n(61236);
        t.parseAbiParameter = function (e) {
          let t;
          if ("string" == typeof e)
            t = (0, o.parseAbiParameter)(e, { modifiers: i.modifiers });
          else {
            let n = (0, a.parseStructs)(e),
              r = e.length;
            for (let a = 0; a < r; a++) {
              let r = e[a];
              if (!(0, i.isStructSignature)(r)) {
                t = (0, o.parseAbiParameter)(r, {
                  modifiers: i.modifiers,
                  structs: n,
                });
                break;
              }
            }
          }
          if (!t) throw new r.InvalidAbiParameterError({ param: e });
          return t;
        };
      },
      37790: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.parseAbiParameters = void 0);
        let r = n(99620),
          i = n(82947),
          a = n(53713),
          o = n(61236),
          s = n(61236);
        t.parseAbiParameters = function (e) {
          let t = [];
          if ("string" == typeof e) {
            let n = (0, o.splitParameters)(e),
              r = n.length;
            for (let e = 0; e < r; e++)
              t.push(
                (0, s.parseAbiParameter)(n[e], { modifiers: i.modifiers })
              );
          } else {
            let n = (0, a.parseStructs)(e),
              r = e.length;
            for (let a = 0; a < r; a++) {
              let r = e[a];
              if ((0, i.isStructSignature)(r)) continue;
              let u = (0, o.splitParameters)(r),
                l = u.length;
              for (let e = 0; e < l; e++)
                t.push(
                  (0, s.parseAbiParameter)(u[e], {
                    modifiers: i.modifiers,
                    structs: n,
                  })
                );
            }
          }
          if (0 === t.length)
            throw new r.InvalidAbiParametersError({ params: e });
          return t;
        };
      },
      3537: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.parameterCache = t.getParameterCacheKey = void 0),
          (t.getParameterCacheKey = function (e, t) {
            return t ? `${t}:${e}` : e;
          }),
          (t.parameterCache = new Map([
            ["address", { type: "address" }],
            ["bool", { type: "bool" }],
            ["bytes", { type: "bytes" }],
            ["bytes32", { type: "bytes32" }],
            ["int", { type: "int256" }],
            ["int256", { type: "int256" }],
            ["string", { type: "string" }],
            ["uint", { type: "uint256" }],
            ["uint8", { type: "uint8" }],
            ["uint16", { type: "uint16" }],
            ["uint24", { type: "uint24" }],
            ["uint32", { type: "uint32" }],
            ["uint64", { type: "uint64" }],
            ["uint96", { type: "uint96" }],
            ["uint112", { type: "uint112" }],
            ["uint160", { type: "uint160" }],
            ["uint192", { type: "uint192" }],
            ["uint256", { type: "uint256" }],
            ["address owner", { type: "address", name: "owner" }],
            ["address to", { type: "address", name: "to" }],
            ["bool approved", { type: "bool", name: "approved" }],
            ["bytes _data", { type: "bytes", name: "_data" }],
            ["bytes data", { type: "bytes", name: "data" }],
            ["bytes signature", { type: "bytes", name: "signature" }],
            ["bytes32 hash", { type: "bytes32", name: "hash" }],
            ["bytes32 r", { type: "bytes32", name: "r" }],
            ["bytes32 root", { type: "bytes32", name: "root" }],
            ["bytes32 s", { type: "bytes32", name: "s" }],
            ["string name", { type: "string", name: "name" }],
            ["string symbol", { type: "string", name: "symbol" }],
            ["string tokenURI", { type: "string", name: "tokenURI" }],
            ["uint tokenId", { type: "uint256", name: "tokenId" }],
            ["uint8 v", { type: "uint8", name: "v" }],
            ["uint256 balance", { type: "uint256", name: "balance" }],
            ["uint256 tokenId", { type: "uint256", name: "tokenId" }],
            ["uint256 value", { type: "uint256", name: "value" }],
            [
              "event:address indexed from",
              { type: "address", name: "from", indexed: !0 },
            ],
            [
              "event:address indexed to",
              { type: "address", name: "to", indexed: !0 },
            ],
            [
              "event:uint indexed tokenId",
              { type: "uint256", name: "tokenId", indexed: !0 },
            ],
            [
              "event:uint256 indexed tokenId",
              { type: "uint256", name: "tokenId", indexed: !0 },
            ],
          ]));
      },
      82947: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.functionModifiers =
            t.eventModifiers =
            t.modifiers =
            t.isReceiveSignature =
            t.isFallbackSignature =
            t.execConstructorSignature =
            t.isConstructorSignature =
            t.execStructSignature =
            t.isStructSignature =
            t.execFunctionSignature =
            t.isFunctionSignature =
            t.execEventSignature =
            t.isEventSignature =
            t.execErrorSignature =
            t.isErrorSignature =
              void 0);
        let r = n(91876),
          i = /^error (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)$/;
        (t.isErrorSignature = function (e) {
          return i.test(e);
        }),
          (t.execErrorSignature = function (e) {
            return (0, r.execTyped)(i, e);
          });
        let a =
          /^event (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)$/;
        (t.isEventSignature = function (e) {
          return a.test(e);
        }),
          (t.execEventSignature = function (e) {
            return (0, r.execTyped)(a, e);
          });
        let o =
          /^function (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\((?<parameters>.*?)\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns\s?\((?<returns>.*?)\))?$/;
        (t.isFunctionSignature = function (e) {
          return o.test(e);
        }),
          (t.execFunctionSignature = function (e) {
            return (0, r.execTyped)(o, e);
          });
        let s =
          /^struct (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*) \{(?<properties>.*?)\}$/;
        (t.isStructSignature = function (e) {
          return s.test(e);
        }),
          (t.execStructSignature = function (e) {
            return (0, r.execTyped)(s, e);
          });
        let u =
          /^constructor\((?<parameters>.*?)\)(?:\s(?<stateMutability>payable{1}))?$/;
        (t.isConstructorSignature = function (e) {
          return u.test(e);
        }),
          (t.execConstructorSignature = function (e) {
            return (0, r.execTyped)(u, e);
          });
        let l = /^fallback\(\)$/;
        t.isFallbackSignature = function (e) {
          return l.test(e);
        };
        let c = /^receive\(\) external payable$/;
        (t.isReceiveSignature = function (e) {
          return c.test(e);
        }),
          (t.modifiers = new Set(["memory", "indexed", "storage", "calldata"])),
          (t.eventModifiers = new Set(["indexed"])),
          (t.functionModifiers = new Set(["calldata", "memory", "storage"]));
      },
      53713: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.parseStructs = void 0);
        let r = n(91876),
          i = n(80844),
          a = n(43972),
          o = n(3802),
          s = n(68042),
          u = n(82947),
          l = n(61236);
        t.parseStructs = function (e) {
          let t = {},
            n = e.length;
          for (let r = 0; r < n; r++) {
            let n = e[r];
            if (!(0, u.isStructSignature)(n)) continue;
            let i = (0, u.execStructSignature)(n);
            if (!i)
              throw new o.InvalidSignatureError({
                signature: n,
                type: "struct",
              });
            let a = i.properties.split(";"),
              s = [],
              c = a.length;
            for (let e = 0; e < c; e++) {
              let t = a[e],
                n = t.trim();
              if (!n) continue;
              let r = (0, l.parseAbiParameter)(n, { type: "struct" });
              s.push(r);
            }
            if (!s.length)
              throw new o.InvalidStructSignatureError({ signature: n });
            t[i.name] = s;
          }
          let d = {},
            f = Object.entries(t),
            p = f.length;
          for (let e = 0; e < p; e++) {
            let [n, o] = f[e];
            d[n] = (function e(t, n, o = new Set()) {
              let u = [],
                d = t.length;
              for (let f = 0; f < d; f++) {
                let d = t[f],
                  p = r.isTupleRegex.test(d.type);
                if (p) u.push(d);
                else {
                  let t = (0, r.execTyped)(c, d.type);
                  if (!t?.type)
                    throw new a.InvalidAbiTypeParameterError({
                      abiParameter: d,
                    });
                  let { array: f, type: p } = t;
                  if (p in n) {
                    if (o.has(p))
                      throw new s.CircularReferenceError({ type: p });
                    u.push({
                      ...d,
                      type: `tuple${f ?? ""}`,
                      components: e(n[p] ?? [], n, new Set([...o, p])),
                    });
                  } else if ((0, l.isSolidityType)(p)) u.push(d);
                  else throw new i.UnknownTypeError({ type: p });
                }
              }
              return u;
            })(o, t);
          }
          return d;
        };
        let c = /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\[\d*?\])+?)?$/;
      },
      61236: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.isValidDataLocation =
            t.isSolidityKeyword =
            t.isSolidityType =
            t.splitParameters =
            t.parseAbiParameter =
            t.parseSignature =
              void 0);
        let r = n(91876),
          i = n(80844),
          a = n(43972),
          o = n(3802),
          s = n(49295),
          u = n(3537),
          l = n(82947);
        t.parseSignature = function (e, t = {}) {
          if ((0, l.isFunctionSignature)(e)) {
            let n = (0, l.execFunctionSignature)(e);
            if (!n)
              throw new o.InvalidSignatureError({
                signature: e,
                type: "function",
              });
            let r = h(n.parameters),
              i = [],
              a = r.length;
            for (let e = 0; e < a; e++)
              i.push(
                p(r[e], {
                  modifiers: l.functionModifiers,
                  structs: t,
                  type: "function",
                })
              );
            let s = [];
            if (n.returns) {
              let e = h(n.returns),
                r = e.length;
              for (let n = 0; n < r; n++)
                s.push(
                  p(e[n], {
                    modifiers: l.functionModifiers,
                    structs: t,
                    type: "function",
                  })
                );
            }
            return {
              name: n.name,
              type: "function",
              stateMutability: n.stateMutability ?? "nonpayable",
              inputs: i,
              outputs: s,
            };
          }
          if ((0, l.isEventSignature)(e)) {
            let n = (0, l.execEventSignature)(e);
            if (!n)
              throw new o.InvalidSignatureError({
                signature: e,
                type: "event",
              });
            let r = h(n.parameters),
              i = [],
              a = r.length;
            for (let e = 0; e < a; e++)
              i.push(
                p(r[e], {
                  modifiers: l.eventModifiers,
                  structs: t,
                  type: "event",
                })
              );
            return { name: n.name, type: "event", inputs: i };
          }
          if ((0, l.isErrorSignature)(e)) {
            let n = (0, l.execErrorSignature)(e);
            if (!n)
              throw new o.InvalidSignatureError({
                signature: e,
                type: "error",
              });
            let r = h(n.parameters),
              i = [],
              a = r.length;
            for (let e = 0; e < a; e++)
              i.push(p(r[e], { structs: t, type: "error" }));
            return { name: n.name, type: "error", inputs: i };
          }
          if ((0, l.isConstructorSignature)(e)) {
            let n = (0, l.execConstructorSignature)(e);
            if (!n)
              throw new o.InvalidSignatureError({
                signature: e,
                type: "constructor",
              });
            let r = h(n.parameters),
              i = [],
              a = r.length;
            for (let e = 0; e < a; e++)
              i.push(p(r[e], { structs: t, type: "constructor" }));
            return {
              type: "constructor",
              stateMutability: n.stateMutability ?? "nonpayable",
              inputs: i,
            };
          }
          if ((0, l.isFallbackSignature)(e)) return { type: "fallback" };
          if ((0, l.isReceiveSignature)(e))
            return { type: "receive", stateMutability: "payable" };
          throw new o.UnknownSignatureError({ signature: e });
        };
        let c =
            /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/,
          d =
            /^\((?<type>.+?)\)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/,
          f = /^u?int$/;
        function p(e, t) {
          let n;
          let o = (0, u.getParameterCacheKey)(e, t?.type);
          if (u.parameterCache.has(o)) return u.parameterCache.get(o);
          let s = r.isTupleRegex.test(e),
            y = (0, r.execTyped)(s ? d : c, e);
          if (!y) throw new a.InvalidParameterError({ param: e });
          if (y.name && g(y.name))
            throw new a.SolidityProtectedKeywordError({
              param: e,
              name: y.name,
            });
          let v = y.name ? { name: y.name } : {},
            w = "indexed" === y.modifier ? { indexed: !0 } : {},
            E = t?.structs ?? {},
            x = {};
          if (s) {
            n = "tuple";
            let e = h(y.type),
              t = [],
              r = e.length;
            for (let n = 0; n < r; n++) t.push(p(e[n], { structs: E }));
            x = { components: t };
          } else if (y.type in E)
            (n = "tuple"), (x = { components: E[y.type] });
          else if (f.test(y.type)) n = `${y.type}256`;
          else if (((n = y.type), t?.type !== "struct" && !m(n)))
            throw new i.UnknownSolidityTypeError({ type: n });
          if (y.modifier) {
            if (!t?.modifiers?.has?.(y.modifier))
              throw new a.InvalidModifierError({
                param: e,
                type: t?.type,
                modifier: y.modifier,
              });
            if (l.functionModifiers.has(y.modifier) && !b(n, !!y.array))
              throw new a.InvalidFunctionModifierError({
                param: e,
                type: t?.type,
                modifier: y.modifier,
              });
          }
          let C = { type: `${n}${y.array ?? ""}`, ...v, ...w, ...x };
          return u.parameterCache.set(o, C), C;
        }
        function h(e, t = [], n = "", r = 0) {
          if ("" === e) {
            if ("" === n) return t;
            if (0 !== r)
              throw new s.InvalidParenthesisError({ current: n, depth: r });
            return t.push(n.trim()), t;
          }
          let i = e.length;
          for (let a = 0; a < i; a++) {
            let i = e[a],
              o = e.slice(a + 1);
            switch (i) {
              case ",":
                return 0 === r
                  ? h(o, [...t, n.trim()])
                  : h(o, t, `${n}${i}`, r);
              case "(":
                return h(o, t, `${n}${i}`, r + 1);
              case ")":
                return h(o, t, `${n}${i}`, r - 1);
              default:
                return h(o, t, `${n}${i}`, r);
            }
          }
          return [];
        }
        function m(e) {
          return (
            "address" === e ||
            "bool" === e ||
            "function" === e ||
            "string" === e ||
            r.bytesRegex.test(e) ||
            r.integerRegex.test(e)
          );
        }
        (t.parseAbiParameter = p),
          (t.splitParameters = h),
          (t.isSolidityType = m);
        let y =
          /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/;
        function g(e) {
          return (
            "address" === e ||
            "bool" === e ||
            "function" === e ||
            "string" === e ||
            "tuple" === e ||
            r.bytesRegex.test(e) ||
            r.integerRegex.test(e) ||
            y.test(e)
          );
        }
        function b(e, t) {
          return t || "bytes" === e || "string" === e || "tuple" === e;
        }
        (t.isSolidityKeyword = g), (t.isValidDataLocation = b);
      },
      99620: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.CircularReferenceError =
            t.InvalidParenthesisError =
            t.UnknownSignatureError =
            t.InvalidSignatureError =
            t.InvalidStructSignatureError =
            t.InvalidAbiParameterError =
            t.InvalidAbiParametersError =
            t.InvalidParameterError =
            t.SolidityProtectedKeywordError =
            t.InvalidModifierError =
            t.InvalidFunctionModifierError =
            t.InvalidAbiTypeParameterError =
            t.UnknownSolidityTypeError =
            t.InvalidAbiItemError =
            t.UnknownTypeError =
            t.parseAbiParameters =
            t.parseAbiParameter =
            t.parseAbiItem =
            t.parseAbi =
            t.formatAbiParameters =
            t.formatAbiParameter =
            t.formatAbiItem =
            t.formatAbi =
            t.narrow =
            t.BaseError =
              void 0);
        var r = n(51538);
        Object.defineProperty(t, "BaseError", {
          enumerable: !0,
          get: function () {
            return r.BaseError;
          },
        });
        var i = n(95511);
        Object.defineProperty(t, "narrow", {
          enumerable: !0,
          get: function () {
            return i.narrow;
          },
        });
        var a = n(57442);
        Object.defineProperty(t, "formatAbi", {
          enumerable: !0,
          get: function () {
            return a.formatAbi;
          },
        });
        var o = n(5659);
        Object.defineProperty(t, "formatAbiItem", {
          enumerable: !0,
          get: function () {
            return o.formatAbiItem;
          },
        });
        var s = n(15004);
        Object.defineProperty(t, "formatAbiParameter", {
          enumerable: !0,
          get: function () {
            return s.formatAbiParameter;
          },
        });
        var u = n(6965);
        Object.defineProperty(t, "formatAbiParameters", {
          enumerable: !0,
          get: function () {
            return u.formatAbiParameters;
          },
        });
        var l = n(74005);
        Object.defineProperty(t, "parseAbi", {
          enumerable: !0,
          get: function () {
            return l.parseAbi;
          },
        });
        var c = n(9707);
        Object.defineProperty(t, "parseAbiItem", {
          enumerable: !0,
          get: function () {
            return c.parseAbiItem;
          },
        });
        var d = n(87929);
        Object.defineProperty(t, "parseAbiParameter", {
          enumerable: !0,
          get: function () {
            return d.parseAbiParameter;
          },
        });
        var f = n(37790);
        Object.defineProperty(t, "parseAbiParameters", {
          enumerable: !0,
          get: function () {
            return f.parseAbiParameters;
          },
        });
        var p = n(80844);
        Object.defineProperty(t, "UnknownTypeError", {
          enumerable: !0,
          get: function () {
            return p.UnknownTypeError;
          },
        }),
          Object.defineProperty(t, "InvalidAbiItemError", {
            enumerable: !0,
            get: function () {
              return p.InvalidAbiItemError;
            },
          }),
          Object.defineProperty(t, "UnknownSolidityTypeError", {
            enumerable: !0,
            get: function () {
              return p.UnknownSolidityTypeError;
            },
          });
        var h = n(43972);
        Object.defineProperty(t, "InvalidAbiTypeParameterError", {
          enumerable: !0,
          get: function () {
            return h.InvalidAbiTypeParameterError;
          },
        }),
          Object.defineProperty(t, "InvalidFunctionModifierError", {
            enumerable: !0,
            get: function () {
              return h.InvalidFunctionModifierError;
            },
          }),
          Object.defineProperty(t, "InvalidModifierError", {
            enumerable: !0,
            get: function () {
              return h.InvalidModifierError;
            },
          }),
          Object.defineProperty(t, "SolidityProtectedKeywordError", {
            enumerable: !0,
            get: function () {
              return h.SolidityProtectedKeywordError;
            },
          }),
          Object.defineProperty(t, "InvalidParameterError", {
            enumerable: !0,
            get: function () {
              return h.InvalidParameterError;
            },
          }),
          Object.defineProperty(t, "InvalidAbiParametersError", {
            enumerable: !0,
            get: function () {
              return h.InvalidAbiParametersError;
            },
          }),
          Object.defineProperty(t, "InvalidAbiParameterError", {
            enumerable: !0,
            get: function () {
              return h.InvalidAbiParameterError;
            },
          });
        var m = n(3802);
        Object.defineProperty(t, "InvalidStructSignatureError", {
          enumerable: !0,
          get: function () {
            return m.InvalidStructSignatureError;
          },
        }),
          Object.defineProperty(t, "InvalidSignatureError", {
            enumerable: !0,
            get: function () {
              return m.InvalidSignatureError;
            },
          }),
          Object.defineProperty(t, "UnknownSignatureError", {
            enumerable: !0,
            get: function () {
              return m.UnknownSignatureError;
            },
          });
        var y = n(49295);
        Object.defineProperty(t, "InvalidParenthesisError", {
          enumerable: !0,
          get: function () {
            return y.InvalidParenthesisError;
          },
        });
        var g = n(68042);
        Object.defineProperty(t, "CircularReferenceError", {
          enumerable: !0,
          get: function () {
            return g.CircularReferenceError;
          },
        });
      },
      95511: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.narrow = void 0),
          (t.narrow = function (e) {
            return e;
          });
      },
      91876: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.isTupleRegex =
            t.integerRegex =
            t.bytesRegex =
            t.execTyped =
              void 0),
          (t.execTyped = function (e, t) {
            let n = e.exec(t);
            return n?.groups;
          }),
          (t.bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/),
          (t.integerRegex =
            /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/),
          (t.isTupleRegex = /^\(.+?\).*?$/);
      },
      27870: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.version = void 0),
          (t.version = "0.9.8");
      },
      18281: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.parseAccount = void 0),
          (t.parseAccount = function (e) {
            return "string" == typeof e ? { address: e, type: "json-rpc" } : e;
          });
      },
      94873: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.publicKeyToAddress = void 0);
        let r = n(3001),
          i = n(12922);
        t.publicKeyToAddress = function (e) {
          let t = (0, i.keccak256)(`0x${e.substring(4)}`).substring(26);
          return (0, r.checksumAddress)(`0x${t}`);
        };
      },
      59442: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getEnsAddress = void 0);
        let r = n(86725),
          i = n(52366),
          a = n(71124),
          o = n(31693),
          s = n(29957),
          u = n(62002),
          l = n(57961),
          c = n(41177),
          d = n(75007),
          f = n(94303),
          p = n(81746);
        async function h(
          e,
          {
            blockNumber: t,
            blockTag: n,
            coinType: h,
            name: m,
            universalResolverAddress: y,
          }
        ) {
          let g = y;
          if (!g) {
            if (!e.chain)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            g = (0, o.getChainContractAddress)({
              blockNumber: t,
              chain: e.chain,
              contract: "ensUniversalResolver",
            });
          }
          try {
            let o = (0, a.encodeFunctionData)({
                abi: r.addressResolverAbi,
                functionName: "addr",
                ...(null != h
                  ? { args: [(0, c.namehash)(m), BigInt(h)] }
                  : { args: [(0, c.namehash)(m)] }),
              }),
              l = await (0, f.getAction)(
                e,
                p.readContract,
                "readContract"
              )({
                address: g,
                abi: r.universalResolverResolveAbi,
                functionName: "resolve",
                args: [(0, u.toHex)((0, d.packetToBytes)(m)), o],
                blockNumber: t,
                blockTag: n,
              });
            if ("0x" === l[0]) return null;
            let y = (0, i.decodeFunctionResult)({
              abi: r.addressResolverAbi,
              args: null != h ? [(0, c.namehash)(m), BigInt(h)] : void 0,
              functionName: "addr",
              data: l[0],
            });
            if ("0x" === y || "0x00" === (0, s.trim)(y)) return null;
            return y;
          } catch (e) {
            if ((0, l.isNullUniversalResolverError)(e, "resolve")) return null;
            throw e;
          }
        }
        t.getEnsAddress = h;
      },
      4418: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getEnsAvatar = void 0);
        let r = n(28871),
          i = n(94303),
          a = n(84011);
        async function o(
          e,
          {
            blockNumber: t,
            blockTag: n,
            gatewayUrls: o,
            name: s,
            universalResolverAddress: u,
          }
        ) {
          let l = await (0, i.getAction)(
            e,
            a.getEnsText,
            "getEnsText"
          )({
            blockNumber: t,
            blockTag: n,
            key: "avatar",
            name: s,
            universalResolverAddress: u,
          });
          if (!l) return null;
          try {
            return await (0, r.parseAvatarRecord)(e, {
              record: l,
              gatewayUrls: o,
            });
          } catch {
            return null;
          }
        }
        t.getEnsAvatar = o;
      },
      33352: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getEnsName = void 0);
        let r = n(86725),
          i = n(31693),
          a = n(62002),
          o = n(57961),
          s = n(75007),
          u = n(94303),
          l = n(81746);
        async function c(
          e,
          {
            address: t,
            blockNumber: n,
            blockTag: c,
            universalResolverAddress: d,
          }
        ) {
          let f = d;
          if (!f) {
            if (!e.chain)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            f = (0, i.getChainContractAddress)({
              blockNumber: n,
              chain: e.chain,
              contract: "ensUniversalResolver",
            });
          }
          let p = `${t.toLowerCase().substring(2)}.addr.reverse`;
          try {
            let [i, o] = await (0, u.getAction)(
              e,
              l.readContract,
              "readContract"
            )({
              address: f,
              abi: r.universalResolverReverseAbi,
              functionName: "reverse",
              args: [(0, a.toHex)((0, s.packetToBytes)(p))],
              blockNumber: n,
              blockTag: c,
            });
            if (t.toLowerCase() !== o.toLowerCase()) return null;
            return i;
          } catch (e) {
            if ((0, o.isNullUniversalResolverError)(e, "reverse")) return null;
            throw e;
          }
        }
        t.getEnsName = c;
      },
      37887: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getEnsResolver = void 0);
        let r = n(31693),
          i = n(62002),
          a = n(75007),
          o = n(94303),
          s = n(81746);
        async function u(
          e,
          { blockNumber: t, blockTag: n, name: u, universalResolverAddress: l }
        ) {
          let c = l;
          if (!c) {
            if (!e.chain)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            c = (0, r.getChainContractAddress)({
              blockNumber: t,
              chain: e.chain,
              contract: "ensUniversalResolver",
            });
          }
          let [d] = await (0, o.getAction)(
            e,
            s.readContract,
            "readContract"
          )({
            address: c,
            abi: [
              {
                inputs: [{ type: "bytes" }],
                name: "findResolver",
                outputs: [{ type: "address" }, { type: "bytes32" }],
                stateMutability: "view",
                type: "function",
              },
            ],
            functionName: "findResolver",
            args: [(0, i.toHex)((0, a.packetToBytes)(u))],
            blockNumber: t,
            blockTag: n,
          });
          return d;
        }
        t.getEnsResolver = u;
      },
      84011: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getEnsText = void 0);
        let r = n(86725),
          i = n(52366),
          a = n(71124),
          o = n(31693),
          s = n(62002),
          u = n(57961),
          l = n(41177),
          c = n(75007),
          d = n(94303),
          f = n(81746);
        async function p(
          e,
          {
            blockNumber: t,
            blockTag: n,
            name: p,
            key: h,
            universalResolverAddress: m,
          }
        ) {
          let y = m;
          if (!y) {
            if (!e.chain)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            y = (0, o.getChainContractAddress)({
              blockNumber: t,
              chain: e.chain,
              contract: "ensUniversalResolver",
            });
          }
          try {
            let o = await (0, d.getAction)(
              e,
              f.readContract,
              "readContract"
            )({
              address: y,
              abi: r.universalResolverResolveAbi,
              functionName: "resolve",
              args: [
                (0, s.toHex)((0, c.packetToBytes)(p)),
                (0, a.encodeFunctionData)({
                  abi: r.textResolverAbi,
                  functionName: "text",
                  args: [(0, l.namehash)(p), h],
                }),
              ],
              blockNumber: t,
              blockTag: n,
            });
            if ("0x" === o[0]) return null;
            let u = (0, i.decodeFunctionResult)({
              abi: r.textResolverAbi,
              functionName: "text",
              data: o[0],
            });
            return "" === u ? null : u;
          } catch (e) {
            if ((0, u.isNullUniversalResolverError)(e, "resolve")) return null;
            throw e;
          }
        }
        t.getEnsText = p;
      },
      8880: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getEventParameters =
            t.getFunctionParameters =
            t.getContract =
              void 0);
        let r = n(94303),
          i = n(62068),
          a = n(7848),
          o = n(48177),
          s = n(81746),
          u = n(41281),
          l = n(98877),
          c = n(9650);
        function d(e) {
          let t = e.length && Array.isArray(e[0]),
            n = t ? e[0] : [],
            r = (t ? e[1] : e[0]) ?? {};
          return { args: n, options: r };
        }
        function f(e, t) {
          let n = !1;
          Array.isArray(e[0])
            ? (n = !0)
            : 1 === e.length
            ? (n = t.inputs.some((e) => e.indexed))
            : 2 === e.length && (n = !0);
          let r = n ? e[0] : void 0,
            i = (n ? e[1] : e[0]) ?? {};
          return { args: r, options: i };
        }
        (t.getContract = function ({
          abi: e,
          address: t,
          publicClient: n,
          walletClient: p,
        }) {
          let h = null != n,
            m = null != p,
            y = {},
            g = !1,
            b = !1,
            v = !1;
          for (let t of e)
            if (
              ("function" === t.type
                ? "view" === t.stateMutability || "pure" === t.stateMutability
                  ? (g = !0)
                  : (b = !0)
                : "event" === t.type && (v = !0),
              g && b && v)
            )
              break;
          return (
            h &&
              (g &&
                (y.read = new Proxy(
                  {},
                  {
                    get:
                      (i, a) =>
                      (...i) => {
                        let { args: o, options: u } = d(i);
                        return (0, r.getAction)(
                          n,
                          s.readContract,
                          "readContract"
                        )({
                          abi: e,
                          address: t,
                          functionName: a,
                          args: o,
                          ...u,
                        });
                      },
                  }
                )),
              b &&
                (y.simulate = new Proxy(
                  {},
                  {
                    get:
                      (i, a) =>
                      (...i) => {
                        let { args: o, options: s } = d(i);
                        return (0, r.getAction)(
                          n,
                          u.simulateContract,
                          "simulateContract"
                        )({
                          abi: e,
                          address: t,
                          functionName: a,
                          args: o,
                          ...s,
                        });
                      },
                  }
                )),
              v &&
                ((y.createEventFilter = new Proxy(
                  {},
                  {
                    get:
                      (a, o) =>
                      (...a) => {
                        let s = e.find(
                            (e) => "event" === e.type && e.name === o
                          ),
                          { args: u, options: l } = f(a, s);
                        return (0, r.getAction)(
                          n,
                          i.createContractEventFilter,
                          "createContractEventFilter"
                        )({ abi: e, address: t, eventName: o, args: u, ...l });
                      },
                  }
                )),
                (y.getEvents = new Proxy(
                  {},
                  {
                    get:
                      (i, a) =>
                      (...i) => {
                        let s = e.find(
                            (e) => "event" === e.type && e.name === a
                          ),
                          { args: u, options: l } = f(i, s);
                        return (0, r.getAction)(
                          n,
                          o.getContractEvents,
                          "getContractEvents"
                        )({ abi: e, address: t, eventName: a, args: u, ...l });
                      },
                  }
                )),
                (y.watchEvent = new Proxy(
                  {},
                  {
                    get:
                      (i, a) =>
                      (...i) => {
                        let o = e.find(
                            (e) => "event" === e.type && e.name === a
                          ),
                          { args: s, options: u } = f(i, o);
                        return (0, r.getAction)(
                          n,
                          l.watchContractEvent,
                          "watchContractEvent"
                        )({ abi: e, address: t, eventName: a, args: s, ...u });
                      },
                  }
                )))),
            m &&
              b &&
              (y.write = new Proxy(
                {},
                {
                  get:
                    (n, i) =>
                    (...n) => {
                      let { args: a, options: o } = d(n);
                      return (0, r.getAction)(
                        p,
                        c.writeContract,
                        "writeContract"
                      )({ abi: e, address: t, functionName: i, args: a, ...o });
                    },
                }
              )),
            (h || m) &&
              b &&
              (y.estimateGas = new Proxy(
                {},
                {
                  get:
                    (i, o) =>
                    (...i) => {
                      let { args: s, options: u } = d(i),
                        l = n ?? p;
                      return (0, r.getAction)(
                        l,
                        a.estimateContractGas,
                        "estimateContractGas"
                      )({
                        abi: e,
                        address: t,
                        functionName: o,
                        args: s,
                        ...u,
                        account: u.account ?? p.account,
                      });
                    },
                }
              )),
            (y.address = t),
            (y.abi = e),
            y
          );
        }),
          (t.getFunctionParameters = d),
          (t.getEventParameters = f);
      },
      21739: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getRevertErrorData = t.call = void 0);
        let r = n(18281),
          i = n(86725),
          a = n(15251),
          o = n(24304),
          s = n(28890),
          u = n(4924),
          l = n(52366),
          c = n(71124),
          d = n(31693),
          f = n(62002),
          p = n(25950),
          h = n(29824),
          m = n(14928),
          y = n(30251),
          g = n(77365);
        async function b(e, t) {
          let {
              account: i = e.account,
              batch: o = !!e.batch?.multicall,
              blockNumber: u,
              blockTag: l = "latest",
              accessList: c,
              data: d,
              gas: y,
              gasPrice: b,
              maxFeePerGas: E,
              maxPriorityFeePerGas: x,
              nonce: C,
              to: _,
              value: T,
              ...S
            } = t,
            P = i ? (0, r.parseAccount)(i) : void 0;
          try {
            (0, g.assertRequest)(t);
            let n = u ? (0, f.numberToHex)(u) : void 0,
              r = n || l,
              i = e.chain?.formatters?.transactionRequest?.format,
              p = i || m.formatTransactionRequest,
              w = p({
                ...(0, h.extract)(S, { format: i }),
                from: P?.address,
                accessList: c,
                data: d,
                gas: y,
                gasPrice: b,
                maxFeePerGas: E,
                maxPriorityFeePerGas: x,
                nonce: C,
                to: _,
                value: T,
              });
            if (
              o &&
              (function ({ request: e }) {
                let { data: t, to: n, ...r } = e;
                return (
                  !(!t || t.startsWith(a.aggregate3Signature)) &&
                  !!n &&
                  !(Object.values(r).filter((e) => void 0 !== e).length > 0)
                );
              })({ request: w })
            )
              try {
                return await v(e, { ...w, blockNumber: u, blockTag: l });
              } catch (e) {
                if (
                  !(e instanceof s.ClientChainNotConfiguredError) &&
                  !(e instanceof s.ChainDoesNotSupportContract)
                )
                  throw e;
              }
            let O = await e.request({
              method: "eth_call",
              params: r ? [w, r] : [w],
            });
            if ("0x" === O) return { data: void 0 };
            return { data: O };
          } catch (o) {
            let r = w(o),
              { offchainLookup: i, offchainLookupSignature: a } =
                await Promise.resolve().then(() => n(10062));
            if (r?.slice(0, 10) === a && _)
              return { data: await i(e, { data: r, to: _ }) };
            throw (0, p.getCallError)(o, { ...t, account: P, chain: e.chain });
          }
        }
        async function v(e, t) {
          let { batchSize: n = 1024, wait: r = 0 } =
              "object" == typeof e.batch?.multicall ? e.batch.multicall : {},
            {
              blockNumber: a,
              blockTag: o = "latest",
              data: p,
              multicallAddress: h,
              to: m,
            } = t,
            g = h;
          if (!g) {
            if (!e.chain) throw new s.ClientChainNotConfiguredError();
            g = (0, d.getChainContractAddress)({
              blockNumber: a,
              chain: e.chain,
              contract: "multicall3",
            });
          }
          let b = a ? (0, f.numberToHex)(a) : void 0,
            v = b || o,
            { schedule: w } = (0, y.createBatchScheduler)({
              id: `${e.uid}.${v}`,
              wait: r,
              shouldSplitBatch(e) {
                let t = e.reduce((e, { data: t }) => e + (t.length - 2), 0);
                return t > 2 * n;
              },
              fn: async (t) => {
                let n = t.map((e) => ({
                    allowFailure: !0,
                    callData: e.data,
                    target: e.to,
                  })),
                  r = (0, c.encodeFunctionData)({
                    abi: i.multicall3Abi,
                    args: [n],
                    functionName: "aggregate3",
                  }),
                  a = await e.request({
                    method: "eth_call",
                    params: [{ data: r, to: g }, v],
                  });
                return (0, l.decodeFunctionResult)({
                  abi: i.multicall3Abi,
                  args: [n],
                  functionName: "aggregate3",
                  data: a || "0x",
                });
              },
            }),
            [{ returnData: E, success: x }] = await w({ data: p, to: m });
          if (!x) throw new u.RawContractError({ data: E });
          return "0x" === E ? { data: void 0 } : { data: E };
        }
        function w(e) {
          if (!(e instanceof o.BaseError)) return;
          let t = e.walk();
          return "object" == typeof t.data ? t.data.data : t.data;
        }
        (t.call = b), (t.getRevertErrorData = w);
      },
      28061: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.createBlockFilter = void 0);
        let r = n(75693);
        async function i(e) {
          let t = (0, r.createFilterRequestScope)(e, {
              method: "eth_newBlockFilter",
            }),
            n = await e.request({ method: "eth_newBlockFilter" });
          return { id: n, request: t(n), type: "block" };
        }
        t.createBlockFilter = i;
      },
      62068: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.createContractEventFilter = void 0);
        let r = n(86778),
          i = n(62002),
          a = n(75693);
        async function o(
          e,
          {
            address: t,
            abi: n,
            args: o,
            eventName: s,
            fromBlock: u,
            strict: l,
            toBlock: c,
          }
        ) {
          let d = (0, a.createFilterRequestScope)(e, {
              method: "eth_newFilter",
            }),
            f = s
              ? (0, r.encodeEventTopics)({ abi: n, args: o, eventName: s })
              : void 0,
            p = await e.request({
              method: "eth_newFilter",
              params: [
                {
                  address: t,
                  fromBlock: "bigint" == typeof u ? (0, i.numberToHex)(u) : u,
                  toBlock: "bigint" == typeof c ? (0, i.numberToHex)(c) : c,
                  topics: f,
                },
              ],
            });
          return {
            abi: n,
            args: o,
            eventName: s,
            id: p,
            request: d(p),
            strict: l,
            type: "event",
          };
        }
        t.createContractEventFilter = o;
      },
      58473: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.createEventFilter = void 0);
        let r = n(86778),
          i = n(62002),
          a = n(75693);
        async function o(
          e,
          {
            address: t,
            args: n,
            event: o,
            events: s,
            fromBlock: u,
            strict: l,
            toBlock: c,
          } = {}
        ) {
          let d = s ?? (o ? [o] : void 0),
            f = (0, a.createFilterRequestScope)(e, { method: "eth_newFilter" }),
            p = [];
          d &&
            ((p = [
              d.flatMap((e) =>
                (0, r.encodeEventTopics)({
                  abi: [e],
                  eventName: e.name,
                  args: n,
                })
              ),
            ]),
            o && (p = p[0]));
          let h = await e.request({
            method: "eth_newFilter",
            params: [
              {
                address: t,
                fromBlock: "bigint" == typeof u ? (0, i.numberToHex)(u) : u,
                toBlock: "bigint" == typeof c ? (0, i.numberToHex)(c) : c,
                ...(p.length ? { topics: p } : {}),
              },
            ],
          });
          return {
            abi: d,
            args: n,
            eventName: o ? o.name : void 0,
            fromBlock: u,
            id: h,
            request: f(h),
            strict: l,
            toBlock: c,
            type: "event",
          };
        }
        t.createEventFilter = o;
      },
      56906: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.createPendingTransactionFilter = void 0);
        let r = n(75693);
        async function i(e) {
          let t = (0, r.createFilterRequestScope)(e, {
              method: "eth_newPendingTransactionFilter",
            }),
            n = await e.request({ method: "eth_newPendingTransactionFilter" });
          return { id: n, request: t(n), type: "transaction" };
        }
        t.createPendingTransactionFilter = i;
      },
      7848: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.estimateContractGas = void 0);
        let r = n(18281),
          i = n(71124),
          a = n(30548),
          o = n(94303),
          s = n(36392);
        async function u(
          e,
          { abi: t, address: n, args: u, functionName: l, ...c }
        ) {
          let d = (0, i.encodeFunctionData)({
            abi: t,
            args: u,
            functionName: l,
          });
          try {
            let t = await (0, o.getAction)(
              e,
              s.estimateGas,
              "estimateGas"
            )({ data: d, to: n, ...c });
            return t;
          } catch (i) {
            let e = c.account ? (0, r.parseAccount)(c.account) : void 0;
            throw (0, a.getContractError)(i, {
              abi: t,
              address: n,
              args: u,
              docsPath: "/docs/contract/estimateContractGas",
              functionName: l,
              sender: e?.address,
            });
          }
        }
        t.estimateContractGas = u;
      },
      85273: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.internal_estimateFeesPerGas = t.estimateFeesPerGas = void 0);
        let r = n(3242),
          i = n(94303),
          a = n(13962),
          o = n(90455),
          s = n(64186);
        async function u(e, t) {
          return l(e, t);
        }
        async function l(e, t) {
          let {
              block: n,
              chain: u = e.chain,
              request: l,
              type: c = "eip1559",
            } = t || {},
            d = await (async () =>
              "function" == typeof u?.fees?.baseFeeMultiplier
                ? u.fees.baseFeeMultiplier({ block: n, client: e, request: l })
                : u?.fees?.baseFeeMultiplier ?? 1.2)();
          if (d < 1) throw new r.BaseFeeScalarError();
          let f = d.toString().split(".")[1]?.length ?? 0,
            p = 10 ** f,
            h = (e) => (e * BigInt(Math.ceil(d * p))) / BigInt(p),
            m = n || (await (0, i.getAction)(e, o.getBlock, "getBlock")({}));
          if ("function" == typeof u?.fees?.estimateFeesPerGas)
            return u.fees.estimateFeesPerGas({
              block: n,
              client: e,
              multiply: h,
              request: l,
              type: c,
            });
          if ("eip1559" === c) {
            if ("bigint" != typeof m.baseFeePerGas)
              throw new r.Eip1559FeesNotSupportedError();
            let t = l?.maxPriorityFeePerGas
                ? l.maxPriorityFeePerGas
                : await (0, a.internal_estimateMaxPriorityFeePerGas)(e, {
                    block: m,
                    chain: u,
                    request: l,
                  }),
              n = h(m.baseFeePerGas),
              i = l?.maxFeePerGas ?? n + t;
            return { maxFeePerGas: i, maxPriorityFeePerGas: t };
          }
          let y =
            l?.gasPrice ??
            h(await (0, i.getAction)(e, s.getGasPrice, "getGasPrice")({}));
          return { gasPrice: y };
        }
        (t.estimateFeesPerGas = u), (t.internal_estimateFeesPerGas = l);
      },
      36392: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.estimateGas = void 0);
        let r = n(18281),
          i = n(29723),
          a = n(62002),
          o = n(6559),
          s = n(29824),
          u = n(14928),
          l = n(77365),
          c = n(8969);
        async function d(e, t) {
          let n = t.account ?? e.account;
          if (!n)
            throw new i.AccountNotFoundError({
              docsPath: "/docs/actions/public/estimateGas",
            });
          let d = (0, r.parseAccount)(n);
          try {
            let {
                accessList: n,
                blockNumber: r,
                blockTag: i,
                data: o,
                gas: f,
                gasPrice: p,
                maxFeePerGas: h,
                maxPriorityFeePerGas: m,
                nonce: y,
                to: g,
                value: b,
                ...v
              } = "local" === d.type
                ? await (0, c.prepareTransactionRequest)(e, t)
                : t,
              w = r ? (0, a.numberToHex)(r) : void 0,
              E = w || i;
            (0, l.assertRequest)(t);
            let x = e.chain?.formatters?.transactionRequest?.format,
              C = x || u.formatTransactionRequest,
              _ = C({
                ...(0, s.extract)(v, { format: x }),
                from: d.address,
                accessList: n,
                data: o,
                gas: f,
                gasPrice: p,
                maxFeePerGas: h,
                maxPriorityFeePerGas: m,
                nonce: y,
                to: g,
                value: b,
              }),
              T = await e.request({
                method: "eth_estimateGas",
                params: E ? [_, E] : [_],
              });
            return BigInt(T);
          } catch (n) {
            throw (0, o.getEstimateGasError)(n, {
              ...t,
              account: d,
              chain: e.chain,
            });
          }
        }
        t.estimateGas = d;
      },
      13962: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.internal_estimateMaxPriorityFeePerGas =
            t.estimateMaxPriorityFeePerGas =
              void 0);
        let r = n(3242),
          i = n(39581),
          a = n(94303),
          o = n(90455),
          s = n(64186);
        async function u(e, t) {
          return l(e, t);
        }
        async function l(e, t) {
          let { block: n, chain: u = e.chain, request: l } = t || {};
          if ("function" == typeof u?.fees?.defaultPriorityFee) {
            let t =
              n || (await (0, a.getAction)(e, o.getBlock, "getBlock")({}));
            return u.fees.defaultPriorityFee({
              block: t,
              client: e,
              request: l,
            });
          }
          if (void 0 !== u?.fees?.defaultPriorityFee)
            return u?.fees?.defaultPriorityFee;
          try {
            let t = await e.request({ method: "eth_maxPriorityFeePerGas" });
            return (0, i.hexToBigInt)(t);
          } catch {
            let [t, i] = await Promise.all([
              n
                ? Promise.resolve(n)
                : (0, a.getAction)(e, o.getBlock, "getBlock")({}),
              (0, a.getAction)(e, s.getGasPrice, "getGasPrice")({}),
            ]);
            if ("bigint" != typeof t.baseFeePerGas)
              throw new r.Eip1559FeesNotSupportedError();
            let u = i - t.baseFeePerGas;
            if (u < 0n) return 0n;
            return u;
          }
        }
        (t.estimateMaxPriorityFeePerGas = u),
          (t.internal_estimateMaxPriorityFeePerGas = l);
      },
      32572: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getBalance = void 0);
        let r = n(62002);
        async function i(
          e,
          { address: t, blockNumber: n, blockTag: i = "latest" }
        ) {
          let a = n ? (0, r.numberToHex)(n) : void 0,
            o = await e.request({
              method: "eth_getBalance",
              params: [t, a || i],
            });
          return BigInt(o);
        }
        t.getBalance = i;
      },
      90455: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getBlock = void 0);
        let r = n(88577),
          i = n(62002),
          a = n(49906);
        async function o(
          e,
          {
            blockHash: t,
            blockNumber: n,
            blockTag: o,
            includeTransactions: s,
          } = {}
        ) {
          let u = s ?? !1,
            l = void 0 !== n ? (0, i.numberToHex)(n) : void 0,
            c = null;
          if (
            !(c = t
              ? await e.request({
                  method: "eth_getBlockByHash",
                  params: [t, u],
                })
              : await e.request({
                  method: "eth_getBlockByNumber",
                  params: [l || (o ?? "latest"), u],
                }))
          )
            throw new r.BlockNotFoundError({ blockHash: t, blockNumber: n });
          let d = e.chain?.formatters?.block?.format || a.formatBlock;
          return d(c);
        }
        t.getBlock = o;
      },
      20850: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getBlockNumber = t.getBlockNumberCache = void 0);
        let r = n(70330),
          i = (e) => `blockNumber.${e}`;
        async function a(e, { cacheTime: t = e.cacheTime, maxAge: n } = {}) {
          let a = await (0, r.withCache)(
            () => e.request({ method: "eth_blockNumber" }),
            { cacheKey: i(e.uid), cacheTime: n ?? t }
          );
          return BigInt(a);
        }
        (t.getBlockNumberCache = function (e) {
          return (0, r.getCache)(i(e));
        }),
          (t.getBlockNumber = a);
      },
      79559: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getBlockTransactionCount = void 0);
        let r = n(39581),
          i = n(62002);
        async function a(
          e,
          { blockHash: t, blockNumber: n, blockTag: a = "latest" } = {}
        ) {
          let o;
          let s = void 0 !== n ? (0, i.numberToHex)(n) : void 0;
          return (
            (o = t
              ? await e.request({
                  method: "eth_getBlockTransactionCountByHash",
                  params: [t],
                })
              : await e.request({
                  method: "eth_getBlockTransactionCountByNumber",
                  params: [s || a],
                })),
            (0, r.hexToNumber)(o)
          );
        }
        t.getBlockTransactionCount = a;
      },
      38094: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getBytecode = void 0);
        let r = n(62002);
        async function i(
          e,
          { address: t, blockNumber: n, blockTag: i = "latest" }
        ) {
          let a = void 0 !== n ? (0, r.numberToHex)(n) : void 0,
            o = await e.request({ method: "eth_getCode", params: [t, a || i] });
          if ("0x" !== o) return o;
        }
        t.getBytecode = i;
      },
      49988: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getChainId = void 0);
        let r = n(39581);
        async function i(e) {
          let t = await e.request({ method: "eth_chainId" });
          return (0, r.hexToNumber)(t);
        }
        t.getChainId = i;
      },
      48177: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getContractEvents = void 0);
        let r = n(65775),
          i = n(94303),
          a = n(23367);
        async function o(
          e,
          {
            abi: t,
            address: n,
            args: o,
            blockHash: s,
            eventName: u,
            fromBlock: l,
            toBlock: c,
            strict: d,
          }
        ) {
          let f = u ? (0, r.getAbiItem)({ abi: t, name: u }) : void 0,
            p = f ? void 0 : t.filter((e) => "event" === e.type);
          return (0, i.getAction)(
            e,
            a.getLogs,
            "getLogs"
          )({
            address: n,
            args: o,
            blockHash: s,
            event: f,
            events: p,
            fromBlock: l,
            toBlock: c,
            strict: d,
          });
        }
        t.getContractEvents = o;
      },
      80748: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getFeeHistory = void 0);
        let r = n(62002),
          i = n(31197);
        async function a(
          e,
          {
            blockCount: t,
            blockNumber: n,
            blockTag: a = "latest",
            rewardPercentiles: o,
          }
        ) {
          let s = n ? (0, r.numberToHex)(n) : void 0,
            u = await e.request({
              method: "eth_feeHistory",
              params: [(0, r.numberToHex)(t), s || a, o],
            });
          return (0, i.formatFeeHistory)(u);
        }
        t.getFeeHistory = a;
      },
      83117: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getFilterChanges = void 0);
        let r = n(65413),
          i = n(57573),
          a = n(47960);
        async function o(e, { filter: t }) {
          let n = "strict" in t && t.strict,
            o = await t.request({
              method: "eth_getFilterChanges",
              params: [t.id],
            });
          return o
            .map((e) => {
              if ("string" == typeof e) return e;
              try {
                let { eventName: r, args: o } =
                  "abi" in t && t.abi
                    ? (0, i.decodeEventLog)({
                        abi: t.abi,
                        data: e.data,
                        topics: e.topics,
                        strict: n,
                      })
                    : { eventName: void 0, args: void 0 };
                return (0, a.formatLog)(e, { args: o, eventName: r });
              } catch (o) {
                let n, i;
                if (
                  o instanceof r.DecodeLogDataMismatch ||
                  o instanceof r.DecodeLogTopicsMismatch
                ) {
                  if ("strict" in t && t.strict) return;
                  (n = o.abiItem.name),
                    (i = o.abiItem.inputs?.some(
                      (e) => !("name" in e && e.name)
                    ));
                }
                return (0, a.formatLog)(e, { args: i ? [] : {}, eventName: n });
              }
            })
            .filter(Boolean);
        }
        t.getFilterChanges = o;
      },
      14176: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getFilterLogs = void 0);
        let r = n(65413),
          i = n(57573),
          a = n(47960);
        async function o(e, { filter: t }) {
          let n = t.strict ?? !1,
            o = await t.request({
              method: "eth_getFilterLogs",
              params: [t.id],
            });
          return o
            .map((e) => {
              try {
                let { eventName: r, args: o } =
                  "abi" in t && t.abi
                    ? (0, i.decodeEventLog)({
                        abi: t.abi,
                        data: e.data,
                        topics: e.topics,
                        strict: n,
                      })
                    : { eventName: void 0, args: void 0 };
                return (0, a.formatLog)(e, { args: o, eventName: r });
              } catch (o) {
                let n, i;
                if (
                  o instanceof r.DecodeLogDataMismatch ||
                  o instanceof r.DecodeLogTopicsMismatch
                ) {
                  if ("strict" in t && t.strict) return;
                  (n = o.abiItem.name),
                    (i = o.abiItem.inputs?.some(
                      (e) => !("name" in e && e.name)
                    ));
                }
                return (0, a.formatLog)(e, { args: i ? [] : {}, eventName: n });
              }
            })
            .filter(Boolean);
        }
        t.getFilterLogs = o;
      },
      64186: function (e, t) {
        "use strict";
        async function n(e) {
          let t = await e.request({ method: "eth_gasPrice" });
          return BigInt(t);
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getGasPrice = void 0),
          (t.getGasPrice = n);
      },
      23367: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getLogs = void 0);
        let r = n(65413),
          i = n(57573),
          a = n(86778),
          o = n(62002),
          s = n(47960);
        async function u(
          e,
          {
            address: t,
            blockHash: n,
            fromBlock: u,
            toBlock: l,
            event: c,
            events: d,
            args: f,
            strict: p,
          } = {}
        ) {
          let h = p ?? !1,
            m = d ?? (c ? [c] : void 0),
            y = [];
          return (
            m &&
              ((y = [
                m.flatMap((e) =>
                  (0, a.encodeEventTopics)({
                    abi: [e],
                    eventName: e.name,
                    args: f,
                  })
                ),
              ]),
              c && (y = y[0])),
            (n
              ? await e.request({
                  method: "eth_getLogs",
                  params: [{ address: t, topics: y, blockHash: n }],
                })
              : await e.request({
                  method: "eth_getLogs",
                  params: [
                    {
                      address: t,
                      topics: y,
                      fromBlock:
                        "bigint" == typeof u ? (0, o.numberToHex)(u) : u,
                      toBlock: "bigint" == typeof l ? (0, o.numberToHex)(l) : l,
                    },
                  ],
                })
            )
              .map((e) => {
                try {
                  let { eventName: t, args: n } = m
                    ? (0, i.decodeEventLog)({
                        abi: m,
                        data: e.data,
                        topics: e.topics,
                        strict: h,
                      })
                    : { eventName: void 0, args: void 0 };
                  return (0, s.formatLog)(e, { args: n, eventName: t });
                } catch (i) {
                  let t, n;
                  if (
                    i instanceof r.DecodeLogDataMismatch ||
                    i instanceof r.DecodeLogTopicsMismatch
                  ) {
                    if (h) return;
                    (t = i.abiItem.name),
                      (n = i.abiItem.inputs?.some(
                        (e) => !("name" in e && e.name)
                      ));
                  }
                  return (0, s.formatLog)(e, {
                    args: n ? [] : {},
                    eventName: t,
                  });
                }
              })
              .filter(Boolean)
          );
        }
        t.getLogs = u;
      },
      76409: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getProof = void 0);
        let r = n(62002),
          i = n(11360);
        async function a(
          e,
          { address: t, blockNumber: n, blockTag: a, storageKeys: o }
        ) {
          let s = void 0 !== n ? (0, r.numberToHex)(n) : void 0,
            u = await e.request({
              method: "eth_getProof",
              params: [t, o, s || (a ?? "latest")],
            });
          return (0, i.formatProof)(u);
        }
        t.getProof = a;
      },
      47967: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getStorageAt = void 0);
        let r = n(62002);
        async function i(
          e,
          { address: t, blockNumber: n, blockTag: i = "latest", slot: a }
        ) {
          let o = void 0 !== n ? (0, r.numberToHex)(n) : void 0,
            s = await e.request({
              method: "eth_getStorageAt",
              params: [t, a, o || i],
            });
          return s;
        }
        t.getStorageAt = i;
      },
      75590: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getTransaction = void 0);
        let r = n(72861),
          i = n(62002),
          a = n(64056);
        async function o(
          e,
          { blockHash: t, blockNumber: n, blockTag: o, hash: s, index: u }
        ) {
          let l = o || "latest",
            c = void 0 !== n ? (0, i.numberToHex)(n) : void 0,
            d = null;
          if (
            (s
              ? (d = await e.request({
                  method: "eth_getTransactionByHash",
                  params: [s],
                }))
              : t
              ? (d = await e.request({
                  method: "eth_getTransactionByBlockHashAndIndex",
                  params: [t, (0, i.numberToHex)(u)],
                }))
              : (c || l) &&
                (d = await e.request({
                  method: "eth_getTransactionByBlockNumberAndIndex",
                  params: [c || l, (0, i.numberToHex)(u)],
                })),
            !d)
          )
            throw new r.TransactionNotFoundError({
              blockHash: t,
              blockNumber: n,
              blockTag: l,
              hash: s,
              index: u,
            });
          let f =
            e.chain?.formatters?.transaction?.format || a.formatTransaction;
          return f(d);
        }
        t.getTransaction = o;
      },
      22232: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getTransactionConfirmations = void 0);
        let r = n(94303),
          i = n(20850),
          a = n(75590);
        async function o(e, { hash: t, transactionReceipt: n }) {
          let [o, s] = await Promise.all([
              (0, r.getAction)(e, i.getBlockNumber, "getBlockNumber")({}),
              t
                ? (0, r.getAction)(
                    e,
                    a.getTransaction,
                    "getBlockNumber"
                  )({ hash: t })
                : void 0,
            ]),
            u = n?.blockNumber || s?.blockNumber;
          return u ? o - u + 1n : 0n;
        }
        t.getTransactionConfirmations = o;
      },
      35065: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getTransactionCount = void 0);
        let r = n(39581),
          i = n(62002);
        async function a(
          e,
          { address: t, blockTag: n = "latest", blockNumber: a }
        ) {
          let o = await e.request({
            method: "eth_getTransactionCount",
            params: [t, a ? (0, i.numberToHex)(a) : n],
          });
          return (0, r.hexToNumber)(o);
        }
        t.getTransactionCount = a;
      },
      25947: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getTransactionReceipt = void 0);
        let r = n(72861),
          i = n(37262);
        async function a(e, { hash: t }) {
          let n = await e.request({
            method: "eth_getTransactionReceipt",
            params: [t],
          });
          if (!n) throw new r.TransactionReceiptNotFoundError({ hash: t });
          let a =
            e.chain?.formatters?.transactionReceipt?.format ||
            i.formatTransactionReceipt;
          return a(n);
        }
        t.getTransactionReceipt = a;
      },
      50323: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.multicall = void 0);
        let r = n(86725),
          i = n(65413),
          a = n(24304),
          o = n(4924),
          s = n(52366),
          u = n(71124),
          l = n(31693),
          c = n(30548),
          d = n(94303),
          f = n(81746);
        async function p(e, t) {
          let {
              allowFailure: n = !0,
              batchSize: p,
              blockNumber: h,
              blockTag: m,
              contracts: y,
              multicallAddress: g,
            } = t,
            b =
              p ??
              (("object" == typeof e.batch?.multicall &&
                e.batch.multicall.batchSize) ||
                1024),
            v = g;
          if (!v) {
            if (!e.chain)
              throw Error(
                "client chain not configured. multicallAddress is required."
              );
            v = (0, l.getChainContractAddress)({
              blockNumber: h,
              chain: e.chain,
              contract: "multicall3",
            });
          }
          let w = [[]],
            E = 0,
            x = 0;
          for (let e = 0; e < y.length; e++) {
            let { abi: t, address: r, args: i, functionName: a } = y[e];
            try {
              let e = (0, u.encodeFunctionData)({
                abi: t,
                args: i,
                functionName: a,
              });
              (x += (e.length - 2) / 2),
                b > 0 &&
                  x > b &&
                  w[E].length > 0 &&
                  (E++, (x = (e.length - 2) / 2), (w[E] = [])),
                (w[E] = [
                  ...w[E],
                  { allowFailure: !0, callData: e, target: r },
                ]);
            } catch (o) {
              let e = (0, c.getContractError)(o, {
                abi: t,
                address: r,
                args: i,
                docsPath: "/docs/contract/multicall",
                functionName: a,
              });
              if (!n) throw e;
              w[E] = [...w[E], { allowFailure: !0, callData: "0x", target: r }];
            }
          }
          let C = await Promise.allSettled(
              w.map((t) =>
                (0, d.getAction)(
                  e,
                  f.readContract,
                  "readContract"
                )({
                  abi: r.multicall3Abi,
                  address: v,
                  args: [t],
                  blockNumber: h,
                  blockTag: m,
                  functionName: "aggregate3",
                })
              )
            ),
            _ = [];
          for (let e = 0; e < C.length; e++) {
            let t = C[e];
            if ("rejected" === t.status) {
              if (!n) throw t.reason;
              for (let n = 0; n < w[e].length; n++)
                _.push({ status: "failure", error: t.reason, result: void 0 });
              continue;
            }
            let r = t.value;
            for (let t = 0; t < r.length; t++) {
              let { returnData: a, success: u } = r[t],
                { callData: l } = w[e][t],
                { abi: d, address: f, functionName: p, args: h } = y[_.length];
              try {
                if ("0x" === l) throw new i.AbiDecodingZeroDataError();
                if (!u) throw new o.RawContractError({ data: a });
                let e = (0, s.decodeFunctionResult)({
                  abi: d,
                  args: h,
                  data: a,
                  functionName: p,
                });
                _.push(n ? { result: e, status: "success" } : e);
              } catch (t) {
                let e = (0, c.getContractError)(t, {
                  abi: d,
                  address: f,
                  args: h,
                  docsPath: "/docs/contract/multicall",
                  functionName: p,
                });
                if (!n) throw e;
                _.push({ error: e, result: void 0, status: "failure" });
              }
            }
          }
          if (_.length !== y.length)
            throw new a.BaseError("multicall results mismatch");
          return _;
        }
        t.multicall = p;
      },
      81746: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.readContract = void 0);
        let r = n(52366),
          i = n(71124),
          a = n(30548),
          o = n(94303),
          s = n(21739);
        async function u(
          e,
          { abi: t, address: n, args: u, functionName: l, ...c }
        ) {
          let d = (0, i.encodeFunctionData)({
            abi: t,
            args: u,
            functionName: l,
          });
          try {
            let { data: i } = await (0, o.getAction)(
              e,
              s.call,
              "call"
            )({ data: d, to: n, ...c });
            return (0, r.decodeFunctionResult)({
              abi: t,
              args: u,
              functionName: l,
              data: i || "0x",
            });
          } catch (e) {
            throw (0, a.getContractError)(e, {
              abi: t,
              address: n,
              args: u,
              docsPath: "/docs/contract/readContract",
              functionName: l,
            });
          }
        }
        t.readContract = u;
      },
      41281: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.simulateContract = void 0);
        let r = n(18281),
          i = n(52366),
          a = n(71124),
          o = n(30548),
          s = n(94303),
          u = n(21739);
        async function l(
          e,
          { abi: t, address: n, args: l, dataSuffix: c, functionName: d, ...f }
        ) {
          let p = f.account ? (0, r.parseAccount)(f.account) : void 0,
            h = (0, a.encodeFunctionData)({ abi: t, args: l, functionName: d });
          try {
            let { data: r } = await (0, s.getAction)(
                e,
                u.call,
                "call"
              )({
                batch: !1,
                data: `${h}${c ? c.replace("0x", "") : ""}`,
                to: n,
                ...f,
              }),
              a = (0, i.decodeFunctionResult)({
                abi: t,
                args: l,
                functionName: d,
                data: r || "0x",
              });
            return {
              result: a,
              request: {
                abi: t,
                address: n,
                args: l,
                dataSuffix: c,
                functionName: d,
                ...f,
              },
            };
          } catch (e) {
            throw (0, o.getContractError)(e, {
              abi: t,
              address: n,
              args: l,
              docsPath: "/docs/contract/simulateContract",
              functionName: d,
              sender: p?.address,
            });
          }
        }
        t.simulateContract = l;
      },
      48272: function (e, t) {
        "use strict";
        async function n(e, { filter: t }) {
          return t.request({ method: "eth_uninstallFilter", params: [t.id] });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.uninstallFilter = void 0),
          (t.uninstallFilter = n);
      },
      2418: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.verifyHash = void 0);
        let r = n(86725),
          i = n(23871),
          a = n(4924),
          o = n(68640),
          s = n(94303),
          u = n(17493),
          l = n(21739);
        async function c(e, { address: t, hash: n, signature: c, ...d }) {
          let f = (0, u.isHex)(c) ? c : (0, u.toHex)(c);
          try {
            let { data: a } = await (0, s.getAction)(
              e,
              l.call,
              "call"
            )({
              data: (0, u.encodeDeployData)({
                abi: r.universalSignatureValidatorAbi,
                args: [t, n, f],
                bytecode: i.universalSignatureValidatorByteCode,
              }),
              ...d,
            });
            return (0, o.isBytesEqual)(a ?? "0x0", "0x1");
          } catch (e) {
            if (e instanceof a.CallExecutionError) return !1;
            throw e;
          }
        }
        t.verifyHash = c;
      },
      28273: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.verifyMessage = void 0);
        let r = n(17493),
          i = n(2418);
        async function a(e, { address: t, message: n, signature: a, ...o }) {
          let s = (0, r.hashMessage)(n);
          return (0, i.verifyHash)(e, {
            address: t,
            hash: s,
            signature: a,
            ...o,
          });
        }
        t.verifyMessage = a;
      },
      37644: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.verifyTypedData = void 0);
        let r = n(90696),
          i = n(2418);
        async function a(
          e,
          {
            address: t,
            signature: n,
            message: a,
            primaryType: o,
            types: s,
            domain: u,
            ...l
          }
        ) {
          let c = (0, r.hashTypedData)({
            message: a,
            primaryType: o,
            types: s,
            domain: u,
          });
          return (0, i.verifyHash)(e, {
            address: t,
            hash: c,
            signature: n,
            ...l,
          });
        }
        t.verifyTypedData = a;
      },
      90365: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.waitForTransactionReceipt = void 0);
        let r = n(88577),
          i = n(72861),
          a = n(94303),
          o = n(31410),
          s = n(87593),
          u = n(29803),
          l = n(90455),
          c = n(75590),
          d = n(25947),
          f = n(29288);
        async function p(
          e,
          {
            confirmations: t = 1,
            hash: n,
            onReplaced: p,
            pollingInterval: h = e.pollingInterval,
            timeout: m,
          }
        ) {
          let y, g, b;
          let v = (0, u.stringify)(["waitForTransactionReceipt", e.uid, n]),
            w = !1;
          return new Promise((u, E) => {
            m &&
              setTimeout(
                () =>
                  E(new i.WaitForTransactionReceiptTimeoutError({ hash: n })),
                m
              );
            let x = (0, o.observe)(
              v,
              { onReplaced: p, resolve: u, reject: E },
              (o) => {
                let u = (0, a.getAction)(
                  e,
                  f.watchBlockNumber,
                  "watchBlockNumber"
                )({
                  emitMissed: !0,
                  emitOnBegin: !0,
                  poll: !0,
                  pollingInterval: h,
                  async onBlockNumber(f) {
                    if (w) return;
                    let p = f,
                      h = (e) => {
                        u(), e(), x();
                      };
                    try {
                      if (b) {
                        if (
                          t > 1 &&
                          (!b.blockNumber || p - b.blockNumber + 1n < t)
                        )
                          return;
                        h(() => o.resolve(b));
                        return;
                      }
                      if (
                        (y ||
                          ((w = !0),
                          await (0, s.withRetry)(
                            async () => {
                              (y = await (0, a.getAction)(
                                e,
                                c.getTransaction,
                                "getTransaction"
                              )({ hash: n })).blockNumber &&
                                (p = y.blockNumber);
                            },
                            {
                              delay: ({ count: e }) => 200 * ~~(1 << e),
                              retryCount: 6,
                            }
                          ),
                          (w = !1)),
                        (b = await (0, a.getAction)(
                          e,
                          d.getTransactionReceipt,
                          "getTransactionReceipt"
                        )({ hash: n })),
                        t > 1 && (!b.blockNumber || p - b.blockNumber + 1n < t))
                      )
                        return;
                      h(() => o.resolve(b));
                    } catch (n) {
                      if (
                        y &&
                        (n instanceof i.TransactionNotFoundError ||
                          n instanceof i.TransactionReceiptNotFoundError)
                      )
                        try {
                          (g = y), (w = !0);
                          let n = await (0, s.withRetry)(
                            () =>
                              (0, a.getAction)(
                                e,
                                l.getBlock,
                                "getBlock"
                              )({ blockNumber: p, includeTransactions: !0 }),
                            {
                              delay: ({ count: e }) => 200 * ~~(1 << e),
                              retryCount: 6,
                              shouldRetry: ({ error: e }) =>
                                e instanceof r.BlockNotFoundError,
                            }
                          );
                          w = !1;
                          let i = n.transactions.find(
                            ({ from: e, nonce: t }) =>
                              e === g.from && t === g.nonce
                          );
                          if (
                            !i ||
                            ((b = await (0, a.getAction)(
                              e,
                              d.getTransactionReceipt,
                              "getTransactionReceipt"
                            )({ hash: i.hash })),
                            t > 1 &&
                              (!b.blockNumber || p - b.blockNumber + 1n < t))
                          )
                            return;
                          let u = "replaced";
                          i.to === g.to && i.value === g.value
                            ? (u = "repriced")
                            : i.from === i.to &&
                              0n === i.value &&
                              (u = "cancelled"),
                            h(() => {
                              o.onReplaced?.({
                                reason: u,
                                replacedTransaction: g,
                                transaction: i,
                                transactionReceipt: b,
                              }),
                                o.resolve(b);
                            });
                        } catch (e) {
                          h(() => o.reject(e));
                        }
                      else h(() => o.reject(n));
                    }
                  },
                });
              }
            );
          });
        }
        t.waitForTransactionReceipt = p;
      },
      29288: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.watchBlockNumber = void 0);
        let r = n(39581),
          i = n(94303),
          a = n(31410),
          o = n(3312),
          s = n(29803),
          u = n(20850);
        t.watchBlockNumber = function (
          e,
          {
            emitOnBegin: t = !1,
            emitMissed: n = !1,
            onBlockNumber: l,
            onError: c,
            poll: d,
            pollingInterval: f = e.pollingInterval,
          }
        ) {
          let p, h, m;
          let y = void 0 !== d ? d : "webSocket" !== e.transport.type;
          return y
            ? (() => {
                let r = (0, s.stringify)(["watchBlockNumber", e.uid, t, n, f]);
                return (0, a.observe)(
                  r,
                  { onBlockNumber: l, onError: c },
                  (r) =>
                    (0, o.poll)(
                      async () => {
                        try {
                          let t = await (0, i.getAction)(
                            e,
                            u.getBlockNumber,
                            "getBlockNumber"
                          )({ cacheTime: 0 });
                          if (p) {
                            if (t === p) return;
                            if (t - p > 1 && n)
                              for (let e = p + 1n; e < t; e++)
                                r.onBlockNumber(e, p), (p = e);
                          }
                          (!p || t > p) && (r.onBlockNumber(t, p), (p = t));
                        } catch (e) {
                          r.onError?.(e);
                        }
                      },
                      { emitOnBegin: t, interval: f }
                    )
                );
              })()
            : ((h = !0),
              (m = () => (h = !1)),
              (async () => {
                try {
                  let { unsubscribe: t } = await e.transport.subscribe({
                    params: ["newHeads"],
                    onData(e) {
                      if (!h) return;
                      let t = (0, r.hexToBigInt)(e.result?.number);
                      l(t, p), (p = t);
                    },
                    onError(e) {
                      c?.(e);
                    },
                  });
                  (m = t), h || m();
                } catch (e) {
                  c?.(e);
                }
              })(),
              m);
        };
      },
      29930: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.watchBlocks = void 0);
        let r = n(49906),
          i = n(94303),
          a = n(31410),
          o = n(3312),
          s = n(29803),
          u = n(90455);
        t.watchBlocks = function (
          e,
          {
            blockTag: t = "latest",
            emitMissed: n = !1,
            emitOnBegin: l = !1,
            onBlock: c,
            onError: d,
            includeTransactions: f,
            poll: p,
            pollingInterval: h = e.pollingInterval,
          }
        ) {
          let m, y, g;
          let b = void 0 !== p ? p : "webSocket" !== e.transport.type,
            v = f ?? !1;
          return b
            ? (() => {
                let r = (0, s.stringify)(["watchBlocks", e.uid, n, l, v, h]);
                return (0, a.observe)(r, { onBlock: c, onError: d }, (r) =>
                  (0, o.poll)(
                    async () => {
                      try {
                        let a = await (0, i.getAction)(
                          e,
                          u.getBlock,
                          "getBlock"
                        )({ blockTag: t, includeTransactions: v });
                        if (a.number && m?.number) {
                          if (a.number === m.number) return;
                          if (a.number - m.number > 1 && n)
                            for (let t = m?.number + 1n; t < a.number; t++) {
                              let n = await (0, i.getAction)(
                                e,
                                u.getBlock,
                                "getBlock"
                              )({ blockNumber: t, includeTransactions: v });
                              r.onBlock(n, m), (m = n);
                            }
                        }
                        (!m?.number ||
                          ("pending" === t && !a?.number) ||
                          (a.number && a.number > m.number)) &&
                          (r.onBlock(a, m), (m = a));
                      } catch (e) {
                        r.onError?.(e);
                      }
                    },
                    { emitOnBegin: l, interval: h }
                  )
                );
              })()
            : ((y = !0),
              (g = () => (y = !1)),
              (async () => {
                try {
                  let { unsubscribe: t } = await e.transport.subscribe({
                    params: ["newHeads"],
                    onData(t) {
                      if (!y) return;
                      let n =
                          e.chain?.formatters?.block?.format || r.formatBlock,
                        i = n(t.result);
                      c(i, m), (m = i);
                    },
                    onError(e) {
                      d?.(e);
                    },
                  });
                  (g = t), y || g();
                } catch (e) {
                  d?.(e);
                }
              })(),
              g);
        };
      },
      98877: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.watchContractEvent = void 0);
        let r = n(31410),
          i = n(3312),
          a = n(29803),
          o = n(65413),
          s = n(73812),
          u = n(57573),
          l = n(86778),
          c = n(47960),
          d = n(94303),
          f = n(62068),
          p = n(20850),
          h = n(48177),
          m = n(83117),
          y = n(48272);
        t.watchContractEvent = function (
          e,
          {
            abi: t,
            address: n,
            args: g,
            batch: b = !0,
            eventName: v,
            onError: w,
            onLogs: E,
            poll: x,
            pollingInterval: C = e.pollingInterval,
            strict: _,
          }
        ) {
          let T, S;
          let P = void 0 !== x ? x : "webSocket" !== e.transport.type;
          return P
            ? (() => {
                let o = (0, a.stringify)([
                    "watchContractEvent",
                    n,
                    g,
                    b,
                    e.uid,
                    v,
                    C,
                  ]),
                  u = _ ?? !1;
                return (0, r.observe)(o, { onLogs: E, onError: w }, (r) => {
                  let a, o;
                  let l = !1,
                    c = (0, i.poll)(
                      async () => {
                        if (!l) {
                          try {
                            o = await (0, d.getAction)(
                              e,
                              f.createContractEventFilter,
                              "createContractEventFilter"
                            )({
                              abi: t,
                              address: n,
                              args: g,
                              eventName: v,
                              strict: u,
                            });
                          } catch {}
                          l = !0;
                          return;
                        }
                        try {
                          let i;
                          if (o)
                            i = await (0, d.getAction)(
                              e,
                              m.getFilterChanges,
                              "getFilterChanges"
                            )({ filter: o });
                          else {
                            let r = await (0, d.getAction)(
                              e,
                              p.getBlockNumber,
                              "getBlockNumber"
                            )({});
                            (i =
                              a && a !== r
                                ? await (0, d.getAction)(
                                    e,
                                    h.getContractEvents,
                                    "getContractEvents"
                                  )({
                                    abi: t,
                                    address: n,
                                    args: g,
                                    eventName: v,
                                    fromBlock: a + 1n,
                                    toBlock: r,
                                    strict: u,
                                  })
                                : []),
                              (a = r);
                          }
                          if (0 === i.length) return;
                          if (b) r.onLogs(i);
                          else for (let e of i) r.onLogs([e]);
                        } catch (e) {
                          o && e instanceof s.InvalidInputRpcError && (l = !1),
                            r.onError?.(e);
                        }
                      },
                      { emitOnBegin: !0, interval: C }
                    );
                  return async () => {
                    o &&
                      (await (0, d.getAction)(
                        e,
                        y.uninstallFilter,
                        "uninstallFilter"
                      )({ filter: o })),
                      c();
                  };
                });
              })()
            : ((T = !0),
              (S = () => (T = !1)),
              (async () => {
                try {
                  let r = v
                      ? (0, l.encodeEventTopics)({
                          abi: t,
                          eventName: v,
                          args: g,
                        })
                      : [],
                    { unsubscribe: i } = await e.transport.subscribe({
                      params: ["logs", { address: n, topics: r }],
                      onData(e) {
                        if (!T) return;
                        let n = e.result;
                        try {
                          let { eventName: e, args: r } = (0, u.decodeEventLog)(
                              {
                                abi: t,
                                data: n.data,
                                topics: n.topics,
                                strict: _,
                              }
                            ),
                            i = (0, c.formatLog)(n, { args: r, eventName: e });
                          E([i]);
                        } catch (i) {
                          let e, t;
                          if (
                            i instanceof o.DecodeLogDataMismatch ||
                            i instanceof o.DecodeLogTopicsMismatch
                          ) {
                            if (_) return;
                            (e = i.abiItem.name),
                              (t = i.abiItem.inputs?.some(
                                (e) => !("name" in e && e.name)
                              ));
                          }
                          let r = (0, c.formatLog)(n, {
                            args: t ? [] : {},
                            eventName: e,
                          });
                          E([r]);
                        }
                      },
                      onError(e) {
                        w?.(e);
                      },
                    });
                  (S = i), T || S();
                } catch (e) {
                  w?.(e);
                }
              })(),
              S);
        };
      },
      74348: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.watchEvent = void 0);
        let r = n(31410),
          i = n(3312),
          a = n(29803),
          o = n(65413),
          s = n(73812),
          u = n(94303),
          l = n(17493),
          c = n(58473),
          d = n(20850),
          f = n(83117),
          p = n(23367),
          h = n(48272);
        t.watchEvent = function (
          e,
          {
            address: t,
            args: n,
            batch: m = !0,
            event: y,
            events: g,
            onError: b,
            onLogs: v,
            poll: w,
            pollingInterval: E = e.pollingInterval,
            strict: x,
          }
        ) {
          let C, _;
          let T = void 0 !== w ? w : "webSocket" !== e.transport.type,
            S = x ?? !1;
          return T
            ? (() => {
                let o = (0, a.stringify)(["watchEvent", t, n, m, e.uid, y, E]);
                return (0, r.observe)(o, { onLogs: v, onError: b }, (r) => {
                  let a, o;
                  let l = !1,
                    b = (0, i.poll)(
                      async () => {
                        if (!l) {
                          try {
                            o = await (0, u.getAction)(
                              e,
                              c.createEventFilter,
                              "createEventFilter"
                            )({
                              address: t,
                              args: n,
                              event: y,
                              events: g,
                              strict: S,
                            });
                          } catch {}
                          l = !0;
                          return;
                        }
                        try {
                          let i;
                          if (o)
                            i = await (0, u.getAction)(
                              e,
                              f.getFilterChanges,
                              "getFilterChanges"
                            )({ filter: o });
                          else {
                            let r = await (0, u.getAction)(
                              e,
                              d.getBlockNumber,
                              "getBlockNumber"
                            )({});
                            (i =
                              a && a !== r
                                ? await (0, u.getAction)(
                                    e,
                                    p.getLogs,
                                    "getLogs"
                                  )({
                                    address: t,
                                    args: n,
                                    event: y,
                                    events: g,
                                    fromBlock: a + 1n,
                                    toBlock: r,
                                  })
                                : []),
                              (a = r);
                          }
                          if (0 === i.length) return;
                          if (m) r.onLogs(i);
                          else for (let e of i) r.onLogs([e]);
                        } catch (e) {
                          o && e instanceof s.InvalidInputRpcError && (l = !1),
                            r.onError?.(e);
                        }
                      },
                      { emitOnBegin: !0, interval: E }
                    );
                  return async () => {
                    o &&
                      (await (0, u.getAction)(
                        e,
                        h.uninstallFilter,
                        "uninstallFilter"
                      )({ filter: o })),
                      b();
                  };
                });
              })()
            : ((C = !0),
              (_ = () => (C = !1)),
              (async () => {
                try {
                  let r = g ?? (y ? [y] : void 0),
                    i = [];
                  r &&
                    ((i = [
                      r.flatMap((e) =>
                        (0, l.encodeEventTopics)({
                          abi: [e],
                          eventName: e.name,
                          args: n,
                        })
                      ),
                    ]),
                    y && (i = i[0]));
                  let { unsubscribe: a } = await e.transport.subscribe({
                    params: ["logs", { address: t, topics: i }],
                    onData(e) {
                      if (!C) return;
                      let t = e.result;
                      try {
                        let { eventName: e, args: n } = (0, l.decodeEventLog)({
                            abi: r,
                            data: t.data,
                            topics: t.topics,
                            strict: S,
                          }),
                          i = (0, l.formatLog)(t, { args: n, eventName: e });
                        v([i]);
                      } catch (i) {
                        let e, n;
                        if (
                          i instanceof o.DecodeLogDataMismatch ||
                          i instanceof o.DecodeLogTopicsMismatch
                        ) {
                          if (x) return;
                          (e = i.abiItem.name),
                            (n = i.abiItem.inputs?.some(
                              (e) => !("name" in e && e.name)
                            ));
                        }
                        let r = (0, l.formatLog)(t, {
                          args: n ? [] : {},
                          eventName: e,
                        });
                        v([r]);
                      }
                    },
                    onError(e) {
                      b?.(e);
                    },
                  });
                  (_ = a), C || _();
                } catch (e) {
                  b?.(e);
                }
              })(),
              _);
        };
      },
      72045: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.watchPendingTransactions = void 0);
        let r = n(94303),
          i = n(31410),
          a = n(3312),
          o = n(29803),
          s = n(56906),
          u = n(83117),
          l = n(48272);
        t.watchPendingTransactions = function (
          e,
          {
            batch: t = !0,
            onError: n,
            onTransactions: c,
            poll: d,
            pollingInterval: f = e.pollingInterval,
          }
        ) {
          let p, h;
          let m = void 0 !== d ? d : "webSocket" !== e.transport.type;
          return m
            ? (() => {
                let d = (0, o.stringify)([
                  "watchPendingTransactions",
                  e.uid,
                  t,
                  f,
                ]);
                return (0, i.observe)(
                  d,
                  { onTransactions: c, onError: n },
                  (n) => {
                    let i;
                    let o = (0, a.poll)(
                      async () => {
                        try {
                          if (!i)
                            try {
                              i = await (0, r.getAction)(
                                e,
                                s.createPendingTransactionFilter,
                                "createPendingTransactionFilter"
                              )({});
                              return;
                            } catch (e) {
                              throw (o(), e);
                            }
                          let a = await (0, r.getAction)(
                            e,
                            u.getFilterChanges,
                            "getFilterChanges"
                          )({ filter: i });
                          if (0 === a.length) return;
                          if (t) n.onTransactions(a);
                          else for (let e of a) n.onTransactions([e]);
                        } catch (e) {
                          n.onError?.(e);
                        }
                      },
                      { emitOnBegin: !0, interval: f }
                    );
                    return async () => {
                      i &&
                        (await (0, r.getAction)(
                          e,
                          l.uninstallFilter,
                          "uninstallFilter"
                        )({ filter: i })),
                        o();
                    };
                  }
                );
              })()
            : ((p = !0),
              (h = () => (p = !1)),
              (async () => {
                try {
                  let { unsubscribe: t } = await e.transport.subscribe({
                    params: ["newPendingTransactions"],
                    onData(e) {
                      if (!p) return;
                      let t = e.result;
                      c([t]);
                    },
                    onError(e) {
                      n?.(e);
                    },
                  });
                  (h = t), p || h();
                } catch (e) {
                  n?.(e);
                }
              })(),
              h);
        };
      },
      64696: function (e, t) {
        "use strict";
        async function n(e, { hash: t }) {
          await e.request({ method: `${e.mode}_dropTransaction`, params: [t] });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.dropTransaction = void 0),
          (t.dropTransaction = n);
      },
      59683: function (e, t) {
        "use strict";
        async function n(e) {
          return e.request({ method: `${e.mode}_dumpState` });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.dumpState = void 0),
          (t.dumpState = n);
      },
      82595: function (e, t) {
        "use strict";
        async function n(e) {
          return "ganache" === e.mode
            ? await e.request({ method: "eth_mining" })
            : await e.request({ method: `${e.mode}_getAutomine` });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getAutomine = void 0),
          (t.getAutomine = n);
      },
      50137: function (e, t) {
        "use strict";
        async function n(e) {
          return await e.request({ method: "txpool_content" });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getTxpoolContent = void 0),
          (t.getTxpoolContent = n);
      },
      28544: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getTxpoolStatus = void 0);
        let r = n(39581);
        async function i(e) {
          let { pending: t, queued: n } = await e.request({
            method: "txpool_status",
          });
          return {
            pending: (0, r.hexToNumber)(t),
            queued: (0, r.hexToNumber)(n),
          };
        }
        t.getTxpoolStatus = i;
      },
      67578: function (e, t) {
        "use strict";
        async function n(e, { address: t }) {
          await e.request({
            method: `${e.mode}_impersonateAccount`,
            params: [t],
          });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.impersonateAccount = void 0),
          (t.impersonateAccount = n);
      },
      9575: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.increaseTime = void 0);
        let r = n(62002);
        async function i(e, { seconds: t }) {
          return await e.request({
            method: "evm_increaseTime",
            params: [(0, r.numberToHex)(t)],
          });
        }
        t.increaseTime = i;
      },
      32300: function (e, t) {
        "use strict";
        async function n(e) {
          return await e.request({ method: "txpool_inspect" });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.inspectTxpool = void 0),
          (t.inspectTxpool = n);
      },
      19281: function (e, t) {
        "use strict";
        async function n(e, { state: t }) {
          await e.request({ method: `${e.mode}_loadState`, params: [t] });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.loadState = void 0),
          (t.loadState = n);
      },
      95210: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.mine = void 0);
        let r = n(62002);
        async function i(e, { blocks: t, interval: n }) {
          "ganache" === e.mode
            ? await e.request({
                method: "evm_mine",
                params: [{ blocks: (0, r.numberToHex)(t) }],
              })
            : await e.request({
                method: `${e.mode}_mine`,
                params: [(0, r.numberToHex)(t), (0, r.numberToHex)(n || 0)],
              });
        }
        t.mine = i;
      },
      83011: function (e, t) {
        "use strict";
        async function n(e) {
          await e.request({ method: `${e.mode}_removeBlockTimestampInterval` });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.removeBlockTimestampInterval = void 0),
          (t.removeBlockTimestampInterval = n);
      },
      23628: function (e, t) {
        "use strict";
        async function n(e, { blockNumber: t, jsonRpcUrl: n } = {}) {
          await e.request({
            method: `${e.mode}_reset`,
            params: [{ forking: { blockNumber: Number(t), jsonRpcUrl: n } }],
          });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.reset = void 0),
          (t.reset = n);
      },
      22033: function (e, t) {
        "use strict";
        async function n(e, { id: t }) {
          await e.request({ method: "evm_revert", params: [t] });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.revert = void 0),
          (t.revert = n);
      },
      65888: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.sendUnsignedTransaction = void 0);
        let r = n(29824),
          i = n(14928);
        async function a(e, t) {
          let {
              accessList: n,
              data: a,
              from: o,
              gas: s,
              gasPrice: u,
              maxFeePerGas: l,
              maxPriorityFeePerGas: c,
              nonce: d,
              to: f,
              value: p,
              ...h
            } = t,
            m = e.chain?.formatters?.transactionRequest?.format,
            y = m || i.formatTransactionRequest,
            g = y({
              ...(0, r.extract)(h, { format: m }),
              accessList: n,
              data: a,
              from: o,
              gas: s,
              gasPrice: u,
              maxFeePerGas: l,
              maxPriorityFeePerGas: c,
              nonce: d,
              to: f,
              value: p,
            }),
            b = await e.request({
              method: "eth_sendUnsignedTransaction",
              params: [g],
            });
          return b;
        }
        t.sendUnsignedTransaction = a;
      },
      2361: function (e, t) {
        "use strict";
        async function n(e, t) {
          "ganache" === e.mode
            ? t
              ? await e.request({ method: "miner_start" })
              : await e.request({ method: "miner_stop" })
            : await e.request({ method: "evm_setAutomine", params: [t] });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.setAutomine = void 0),
          (t.setAutomine = n);
      },
      49222: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.setBalance = void 0);
        let r = n(62002);
        async function i(e, { address: t, value: n }) {
          "ganache" === e.mode
            ? await e.request({
                method: "evm_setAccountBalance",
                params: [t, (0, r.numberToHex)(n)],
              })
            : await e.request({
                method: `${e.mode}_setBalance`,
                params: [t, (0, r.numberToHex)(n)],
              });
        }
        t.setBalance = i;
      },
      49089: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.setBlockGasLimit = void 0);
        let r = n(62002);
        async function i(e, { gasLimit: t }) {
          await e.request({
            method: "evm_setBlockGasLimit",
            params: [(0, r.numberToHex)(t)],
          });
        }
        t.setBlockGasLimit = i;
      },
      48494: function (e, t) {
        "use strict";
        async function n(e, { interval: t }) {
          let n = "hardhat" === e.mode ? 1e3 * t : t;
          await e.request({
            method: `${e.mode}_setBlockTimestampInterval`,
            params: [n],
          });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.setBlockTimestampInterval = void 0),
          (t.setBlockTimestampInterval = n);
      },
      425: function (e, t) {
        "use strict";
        async function n(e, { address: t, bytecode: n }) {
          await e.request({ method: `${e.mode}_setCode`, params: [t, n] });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.setCode = void 0),
          (t.setCode = n);
      },
      7362: function (e, t) {
        "use strict";
        async function n(e, { address: t }) {
          await e.request({ method: `${e.mode}_setCoinbase`, params: [t] });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.setCoinbase = void 0),
          (t.setCoinbase = n);
      },
      57471: function (e, t) {
        "use strict";
        async function n(e, { interval: t }) {
          let n = "hardhat" === e.mode ? 1e3 * t : t;
          await e.request({ method: "evm_setIntervalMining", params: [n] });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.setIntervalMining = void 0),
          (t.setIntervalMining = n);
      },
      5857: function (e, t) {
        "use strict";
        async function n(e, t) {
          await e.request({
            method: `${e.mode}_setLoggingEnabled`,
            params: [t],
          });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.setLoggingEnabled = void 0),
          (t.setLoggingEnabled = n);
      },
      93549: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.setMinGasPrice = void 0);
        let r = n(62002);
        async function i(e, { gasPrice: t }) {
          await e.request({
            method: `${e.mode}_setMinGasPrice`,
            params: [(0, r.numberToHex)(t)],
          });
        }
        t.setMinGasPrice = i;
      },
      55247: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.setNextBlockBaseFeePerGas = void 0);
        let r = n(62002);
        async function i(e, { baseFeePerGas: t }) {
          await e.request({
            method: `${e.mode}_setNextBlockBaseFeePerGas`,
            params: [(0, r.numberToHex)(t)],
          });
        }
        t.setNextBlockBaseFeePerGas = i;
      },
      16010: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.setNextBlockTimestamp = void 0);
        let r = n(62002);
        async function i(e, { timestamp: t }) {
          await e.request({
            method: "evm_setNextBlockTimestamp",
            params: [(0, r.numberToHex)(t)],
          });
        }
        t.setNextBlockTimestamp = i;
      },
      38234: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.setNonce = void 0);
        let r = n(62002);
        async function i(e, { address: t, nonce: n }) {
          await e.request({
            method: `${e.mode}_setNonce`,
            params: [t, (0, r.numberToHex)(n)],
          });
        }
        t.setNonce = i;
      },
      24777: function (e, t) {
        "use strict";
        async function n(e, t) {
          await e.request({ method: `${e.mode}_setRpcUrl`, params: [t] });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.setRpcUrl = void 0),
          (t.setRpcUrl = n);
      },
      54011: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.setStorageAt = void 0);
        let r = n(62002);
        async function i(e, { address: t, index: n, value: i }) {
          await e.request({
            method: `${e.mode}_setStorageAt`,
            params: [t, "number" == typeof n ? (0, r.numberToHex)(n) : n, i],
          });
        }
        t.setStorageAt = i;
      },
      79487: function (e, t) {
        "use strict";
        async function n(e) {
          return await e.request({ method: "evm_snapshot" });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.snapshot = void 0),
          (t.snapshot = n);
      },
      77473: function (e, t) {
        "use strict";
        async function n(e, { address: t }) {
          await e.request({
            method: `${e.mode}_stopImpersonatingAccount`,
            params: [t],
          });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.stopImpersonatingAccount = void 0),
          (t.stopImpersonatingAccount = n);
      },
      13356: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.addChain = void 0);
        let r = n(62002);
        async function i(e, { chain: t }) {
          let {
            id: n,
            name: i,
            nativeCurrency: a,
            rpcUrls: o,
            blockExplorers: s,
          } = t;
          await e.request({
            method: "wallet_addEthereumChain",
            params: [
              {
                chainId: (0, r.numberToHex)(n),
                chainName: i,
                nativeCurrency: a,
                rpcUrls: o.default.http,
                blockExplorerUrls: s
                  ? Object.values(s).map(({ url: e }) => e)
                  : void 0,
              },
            ],
          });
        }
        t.addChain = i;
      },
      60627: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.deployContract = void 0);
        let r = n(1099),
          i = n(18659);
        t.deployContract = function (
          e,
          { abi: t, args: n, bytecode: a, ...o }
        ) {
          let s = (0, r.encodeDeployData)({ abi: t, args: n, bytecode: a });
          return (0, i.sendTransaction)(e, { ...o, data: s });
        };
      },
      36790: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getAddresses = void 0);
        let r = n(3001);
        async function i(e) {
          if (e.account?.type === "local") return [e.account.address];
          let t = await e.request({ method: "eth_accounts" });
          return t.map((e) => (0, r.checksumAddress)(e));
        }
        t.getAddresses = i;
      },
      16331: function (e, t) {
        "use strict";
        async function n(e) {
          let t = await e.request({ method: "wallet_getPermissions" });
          return t;
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getPermissions = void 0),
          (t.getPermissions = n);
      },
      8969: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.prepareTransactionRequest = void 0);
        let r = n(18281),
          i = n(85273),
          a = n(36392),
          o = n(90455),
          s = n(35065),
          u = n(29723),
          l = n(3242),
          c = n(94303),
          d = n(77365),
          f = n(57080);
        async function p(e, t) {
          let {
            account: n = e.account,
            chain: p,
            gas: h,
            nonce: m,
            type: y,
          } = t;
          if (!n) throw new u.AccountNotFoundError();
          let g = (0, r.parseAccount)(n),
            b = await (0, c.getAction)(
              e,
              o.getBlock,
              "getBlock"
            )({ blockTag: "latest" }),
            v = { ...t, from: g.address };
          if (
            (void 0 === m &&
              (v.nonce = await (0, c.getAction)(
                e,
                s.getTransactionCount,
                "getTransactionCount"
              )({ address: g.address, blockTag: "pending" })),
            void 0 === y)
          )
            try {
              v.type = (0, f.getTransactionType)(v);
            } catch {
              v.type =
                "bigint" == typeof b.baseFeePerGas ? "eip1559" : "legacy";
            }
          if ("eip1559" === v.type) {
            let { maxFeePerGas: n, maxPriorityFeePerGas: r } = await (0,
            i.internal_estimateFeesPerGas)(e, {
              block: b,
              chain: p,
              request: v,
            });
            if (
              void 0 === t.maxPriorityFeePerGas &&
              t.maxFeePerGas &&
              t.maxFeePerGas < r
            )
              throw new l.MaxFeePerGasTooLowError({ maxPriorityFeePerGas: r });
            (v.maxPriorityFeePerGas = r), (v.maxFeePerGas = n);
          } else {
            if (void 0 !== t.maxFeePerGas || void 0 !== t.maxPriorityFeePerGas)
              throw new l.Eip1559FeesNotSupportedError();
            let { gasPrice: n } = await (0, i.internal_estimateFeesPerGas)(e, {
              block: b,
              chain: p,
              request: v,
              type: "legacy",
            });
            v.gasPrice = n;
          }
          return (
            void 0 === h &&
              (v.gas = await (0, c.getAction)(
                e,
                a.estimateGas,
                "estimateGas"
              )({ ...v, account: { address: g.address, type: "json-rpc" } })),
            (0, d.assertRequest)(v),
            v
          );
        }
        t.prepareTransactionRequest = p;
      },
      56583: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.requestAddresses = void 0);
        let r = n(3001);
        async function i(e) {
          let t = await e.request({ method: "eth_requestAccounts" });
          return t.map((e) => (0, r.getAddress)(e));
        }
        t.requestAddresses = i;
      },
      76022: function (e, t) {
        "use strict";
        async function n(e, t) {
          return e.request({
            method: "wallet_requestPermissions",
            params: [t],
          });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.requestPermissions = void 0),
          (t.requestPermissions = n);
      },
      46832: function (e, t) {
        "use strict";
        async function n(e, { serializedTransaction: t }) {
          return e.request({ method: "eth_sendRawTransaction", params: [t] });
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.sendRawTransaction = void 0),
          (t.sendRawTransaction = n);
      },
      18659: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.sendTransaction = void 0);
        let r = n(18281),
          i = n(29723),
          a = n(81696),
          o = n(61350),
          s = n(29824),
          u = n(14928),
          l = n(94303),
          c = n(77365),
          d = n(49988),
          f = n(8969),
          p = n(46832);
        async function h(e, t) {
          let {
            account: n = e.account,
            chain: h = e.chain,
            accessList: m,
            data: y,
            gas: g,
            gasPrice: b,
            maxFeePerGas: v,
            maxPriorityFeePerGas: w,
            nonce: E,
            to: x,
            value: C,
            ..._
          } = t;
          if (!n)
            throw new i.AccountNotFoundError({
              docsPath: "/docs/actions/wallet/sendTransaction",
            });
          let T = (0, r.parseAccount)(n);
          try {
            let n;
            if (
              ((0, c.assertRequest)(t),
              null !== h &&
                ((n = await (0, l.getAction)(
                  e,
                  d.getChainId,
                  "getChainId"
                )({})),
                (0, a.assertCurrentChain)({ currentChainId: n, chain: h })),
              "local" === T.type)
            ) {
              let t = await (0, l.getAction)(
                e,
                f.prepareTransactionRequest,
                "prepareTransactionRequest"
              )({
                account: T,
                accessList: m,
                chain: h,
                data: y,
                gas: g,
                gasPrice: b,
                maxFeePerGas: v,
                maxPriorityFeePerGas: w,
                nonce: E,
                to: x,
                value: C,
                ..._,
              });
              n ||
                (n = await (0, l.getAction)(e, d.getChainId, "getChainId")({}));
              let r = h?.serializers?.transaction,
                i = await T.signTransaction(
                  { ...t, chainId: n },
                  { serializer: r }
                );
              return await (0, l.getAction)(
                e,
                p.sendRawTransaction,
                "sendRawTransaction"
              )({ serializedTransaction: i });
            }
            let r = e.chain?.formatters?.transactionRequest?.format,
              i = r || u.formatTransactionRequest,
              o = i({
                ...(0, s.extract)(_, { format: r }),
                accessList: m,
                data: y,
                from: T.address,
                gas: g,
                gasPrice: b,
                maxFeePerGas: v,
                maxPriorityFeePerGas: w,
                nonce: E,
                to: x,
                value: C,
              });
            return await e.request({
              method: "eth_sendTransaction",
              params: [o],
            });
          } catch (e) {
            throw (0, o.getTransactionError)(e, {
              ...t,
              account: T,
              chain: t.chain || void 0,
            });
          }
        }
        t.sendTransaction = h;
      },
      36158: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.signMessage = void 0);
        let r = n(18281),
          i = n(29723),
          a = n(62002);
        async function o(e, { account: t = e.account, message: n }) {
          if (!t)
            throw new i.AccountNotFoundError({
              docsPath: "/docs/actions/wallet/signMessage",
            });
          let o = (0, r.parseAccount)(t);
          if ("local" === o.type) return o.signMessage({ message: n });
          let s =
            "string" == typeof n
              ? (0, a.stringToHex)(n)
              : n.raw instanceof Uint8Array
              ? (0, a.toHex)(n.raw)
              : n.raw;
          return e.request({ method: "personal_sign", params: [s, o.address] });
        }
        t.signMessage = o;
      },
      90402: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.signTransaction = void 0);
        let r = n(18281),
          i = n(29723),
          a = n(81696),
          o = n(14928),
          s = n(94303),
          u = n(17493),
          l = n(77365),
          c = n(49988);
        async function d(e, t) {
          let { account: n = e.account, chain: d = e.chain, ...f } = t;
          if (!n)
            throw new i.AccountNotFoundError({
              docsPath: "/docs/actions/wallet/signTransaction",
            });
          let p = (0, r.parseAccount)(n);
          (0, l.assertRequest)({ account: p, ...t });
          let h = await (0, s.getAction)(e, c.getChainId, "getChainId")({});
          null !== d &&
            (0, a.assertCurrentChain)({ currentChainId: h, chain: d });
          let m = d?.formatters || e.chain?.formatters,
            y = m?.transactionRequest?.format || o.formatTransactionRequest;
          return "local" === p.type
            ? p.signTransaction(
                { ...f, chainId: h },
                { serializer: e.chain?.serializers?.transaction }
              )
            : await e.request({
                method: "eth_signTransaction",
                params: [
                  { ...y(f), chainId: (0, u.numberToHex)(h), from: p.address },
                ],
              });
        }
        t.signTransaction = d;
      },
      4910: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.signTypedData = void 0);
        let r = n(18281),
          i = n(29723),
          a = n(34323),
          o = n(29803),
          s = n(85024);
        async function u(
          e,
          {
            account: t = e.account,
            domain: n,
            message: u,
            primaryType: l,
            types: c,
          }
        ) {
          if (!t)
            throw new i.AccountNotFoundError({
              docsPath: "/docs/actions/wallet/signTypedData",
            });
          let d = (0, r.parseAccount)(t),
            f = {
              EIP712Domain: (0, s.getTypesForEIP712Domain)({ domain: n }),
              ...c,
            };
          if (
            ((0, s.validateTypedData)({
              domain: n,
              message: u,
              primaryType: l,
              types: f,
            }),
            "local" === d.type)
          )
            return d.signTypedData({
              domain: n,
              primaryType: l,
              types: f,
              message: u,
            });
          let p = (0, o.stringify)(
            { domain: n ?? {}, primaryType: l, types: f, message: u },
            (e, t) => ((0, a.isHex)(t) ? t.toLowerCase() : t)
          );
          return e.request({
            method: "eth_signTypedData_v4",
            params: [d.address, p],
          });
        }
        t.signTypedData = u;
      },
      32672: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.switchChain = void 0);
        let r = n(62002);
        async function i(e, { id: t }) {
          await e.request({
            method: "wallet_switchEthereumChain",
            params: [{ chainId: (0, r.numberToHex)(t) }],
          });
        }
        t.switchChain = i;
      },
      85479: function (e, t) {
        "use strict";
        async function n(e, t) {
          let n = await e.request({ method: "wallet_watchAsset", params: t });
          return n;
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.watchAsset = void 0),
          (t.watchAsset = n);
      },
      9650: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.writeContract = void 0);
        let r = n(71124),
          i = n(94303),
          a = n(18659);
        async function o(
          e,
          { abi: t, address: n, args: o, dataSuffix: s, functionName: u, ...l }
        ) {
          let c = (0, r.encodeFunctionData)({
              abi: t,
              args: o,
              functionName: u,
            }),
            d = await (0, i.getAction)(
              e,
              a.sendTransaction,
              "sendTransaction"
            )({ data: `${c}${s ? s.replace("0x", "") : ""}`, to: n, ...l });
          return d;
        }
        t.writeContract = o;
      },
      74485: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.createClient = void 0);
        let r = n(5203),
          i = n(18614);
        t.createClient = function (e) {
          let {
              batch: t,
              cacheTime: n = e.pollingInterval ?? 4e3,
              key: a = "base",
              name: o = "Base Client",
              pollingInterval: s = 4e3,
              type: u = "base",
            } = e,
            l = e.chain,
            c = e.account ? (0, r.parseAccount)(e.account) : void 0,
            {
              config: d,
              request: f,
              value: p,
            } = e.transport({ chain: l, pollingInterval: s }),
            h = { ...d, ...p },
            m = {
              account: c,
              batch: t,
              cacheTime: n,
              chain: l,
              key: a,
              name: o,
              pollingInterval: s,
              request: f,
              transport: h,
              type: u,
              uid: (0, i.uid)(),
            };
          return Object.assign(m, {
            extend: (function e(t) {
              return (n) => {
                let r = n(t);
                for (let e in m) delete r[e];
                let i = { ...t, ...r };
                return Object.assign(i, { extend: e(i) });
              };
            })(m),
          });
        };
      },
      18579: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.createPublicClient = void 0);
        let r = n(74485),
          i = n(81986);
        t.createPublicClient = function (e) {
          let { key: t = "public", name: n = "Public Client" } = e,
            a = (0, r.createClient)({
              ...e,
              key: t,
              name: n,
              type: "publicClient",
            });
          return a.extend(i.publicActions);
        };
      },
      551: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.createTestClient = void 0);
        let r = n(74485),
          i = n(67213);
        t.createTestClient = function (e) {
          let { key: t = "test", name: n = "Test Client", mode: a } = e,
            o = (0, r.createClient)({
              ...e,
              key: t,
              name: n,
              type: "testClient",
            });
          return o.extend((e) => ({
            mode: a,
            ...(0, i.testActions)({ mode: a })(e),
          }));
        };
      },
      87410: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.createWalletClient = void 0);
        let r = n(74485),
          i = n(87054);
        t.createWalletClient = function (e) {
          let {
              key: t = "wallet",
              name: n = "Wallet Client",
              transport: a,
            } = e,
            o = (0, r.createClient)({
              ...e,
              key: t,
              name: n,
              transport: (e) => a({ ...e, retryCount: 0 }),
              type: "walletClient",
            });
          return o.extend(i.walletActions);
        };
      },
      81986: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.publicActions = void 0);
        let r = n(59442),
          i = n(4418),
          a = n(33352),
          o = n(37887),
          s = n(84011),
          u = n(21739),
          l = n(28061),
          c = n(62068),
          d = n(58473),
          f = n(56906),
          p = n(7848),
          h = n(85273),
          m = n(36392),
          y = n(13962),
          g = n(32572),
          b = n(90455),
          v = n(20850),
          w = n(79559),
          E = n(38094),
          x = n(49988),
          C = n(48177),
          _ = n(80748),
          T = n(83117),
          S = n(14176),
          P = n(64186),
          O = n(23367),
          I = n(76409),
          A = n(47967),
          k = n(75590),
          j = n(22232),
          B = n(35065),
          M = n(25947),
          N = n(50323),
          D = n(81746),
          R = n(41281),
          F = n(48272),
          L = n(28273),
          U = n(37644),
          $ = n(90365),
          q = n(29288),
          H = n(29930),
          z = n(98877),
          G = n(74348),
          W = n(72045),
          V = n(8969),
          K = n(46832);
        t.publicActions = function (e) {
          return {
            call: (t) => (0, u.call)(e, t),
            createBlockFilter: () => (0, l.createBlockFilter)(e),
            createContractEventFilter: (t) =>
              (0, c.createContractEventFilter)(e, t),
            createEventFilter: (t) => (0, d.createEventFilter)(e, t),
            createPendingTransactionFilter: () =>
              (0, f.createPendingTransactionFilter)(e),
            estimateContractGas: (t) => (0, p.estimateContractGas)(e, t),
            estimateGas: (t) => (0, m.estimateGas)(e, t),
            getBalance: (t) => (0, g.getBalance)(e, t),
            getBlock: (t) => (0, b.getBlock)(e, t),
            getBlockNumber: (t) => (0, v.getBlockNumber)(e, t),
            getBlockTransactionCount: (t) =>
              (0, w.getBlockTransactionCount)(e, t),
            getBytecode: (t) => (0, E.getBytecode)(e, t),
            getChainId: () => (0, x.getChainId)(e),
            getContractEvents: (t) => (0, C.getContractEvents)(e, t),
            getEnsAddress: (t) => (0, r.getEnsAddress)(e, t),
            getEnsAvatar: (t) => (0, i.getEnsAvatar)(e, t),
            getEnsName: (t) => (0, a.getEnsName)(e, t),
            getEnsResolver: (t) => (0, o.getEnsResolver)(e, t),
            getEnsText: (t) => (0, s.getEnsText)(e, t),
            getFeeHistory: (t) => (0, _.getFeeHistory)(e, t),
            estimateFeesPerGas: (t) => (0, h.estimateFeesPerGas)(e, t),
            getFilterChanges: (t) => (0, T.getFilterChanges)(e, t),
            getFilterLogs: (t) => (0, S.getFilterLogs)(e, t),
            getGasPrice: () => (0, P.getGasPrice)(e),
            getLogs: (t) => (0, O.getLogs)(e, t),
            getProof: (t) => (0, I.getProof)(e, t),
            estimateMaxPriorityFeePerGas: (t) =>
              (0, y.estimateMaxPriorityFeePerGas)(e, t),
            getStorageAt: (t) => (0, A.getStorageAt)(e, t),
            getTransaction: (t) => (0, k.getTransaction)(e, t),
            getTransactionConfirmations: (t) =>
              (0, j.getTransactionConfirmations)(e, t),
            getTransactionCount: (t) => (0, B.getTransactionCount)(e, t),
            getTransactionReceipt: (t) => (0, M.getTransactionReceipt)(e, t),
            multicall: (t) => (0, N.multicall)(e, t),
            prepareTransactionRequest: (t) =>
              (0, V.prepareTransactionRequest)(e, t),
            readContract: (t) => (0, D.readContract)(e, t),
            sendRawTransaction: (t) => (0, K.sendRawTransaction)(e, t),
            simulateContract: (t) => (0, R.simulateContract)(e, t),
            verifyMessage: (t) => (0, L.verifyMessage)(e, t),
            verifyTypedData: (t) => (0, U.verifyTypedData)(e, t),
            uninstallFilter: (t) => (0, F.uninstallFilter)(e, t),
            waitForTransactionReceipt: (t) =>
              (0, $.waitForTransactionReceipt)(e, t),
            watchBlocks: (t) => (0, H.watchBlocks)(e, t),
            watchBlockNumber: (t) => (0, q.watchBlockNumber)(e, t),
            watchContractEvent: (t) => (0, z.watchContractEvent)(e, t),
            watchEvent: (t) => (0, G.watchEvent)(e, t),
            watchPendingTransactions: (t) =>
              (0, W.watchPendingTransactions)(e, t),
          };
        };
      },
      67213: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.testActions = void 0);
        let r = n(64696),
          i = n(59683),
          a = n(82595),
          o = n(50137),
          s = n(28544),
          u = n(67578),
          l = n(9575),
          c = n(32300),
          d = n(19281),
          f = n(95210),
          p = n(83011),
          h = n(23628),
          m = n(22033),
          y = n(65888),
          g = n(2361),
          b = n(49222),
          v = n(49089),
          w = n(48494),
          E = n(425),
          x = n(7362),
          C = n(57471),
          _ = n(5857),
          T = n(93549),
          S = n(55247),
          P = n(16010),
          O = n(38234),
          I = n(24777),
          A = n(54011),
          k = n(79487),
          j = n(77473);
        t.testActions = function ({ mode: e }) {
          return (t) => {
            let n = t.extend(() => ({ mode: e }));
            return {
              dropTransaction: (e) => (0, r.dropTransaction)(n, e),
              dumpState: () => (0, i.dumpState)(n),
              getAutomine: () => (0, a.getAutomine)(n),
              getTxpoolContent: () => (0, o.getTxpoolContent)(n),
              getTxpoolStatus: () => (0, s.getTxpoolStatus)(n),
              impersonateAccount: (e) => (0, u.impersonateAccount)(n, e),
              increaseTime: (e) => (0, l.increaseTime)(n, e),
              inspectTxpool: () => (0, c.inspectTxpool)(n),
              loadState: (e) => (0, d.loadState)(n, e),
              mine: (e) => (0, f.mine)(n, e),
              removeBlockTimestampInterval: () =>
                (0, p.removeBlockTimestampInterval)(n),
              reset: (e) => (0, h.reset)(n, e),
              revert: (e) => (0, m.revert)(n, e),
              sendUnsignedTransaction: (e) =>
                (0, y.sendUnsignedTransaction)(n, e),
              setAutomine: (e) => (0, g.setAutomine)(n, e),
              setBalance: (e) => (0, b.setBalance)(n, e),
              setBlockGasLimit: (e) => (0, v.setBlockGasLimit)(n, e),
              setBlockTimestampInterval: (e) =>
                (0, w.setBlockTimestampInterval)(n, e),
              setCode: (e) => (0, E.setCode)(n, e),
              setCoinbase: (e) => (0, x.setCoinbase)(n, e),
              setIntervalMining: (e) => (0, C.setIntervalMining)(n, e),
              setLoggingEnabled: (e) => (0, _.setLoggingEnabled)(n, e),
              setMinGasPrice: (e) => (0, T.setMinGasPrice)(n, e),
              setNextBlockBaseFeePerGas: (e) =>
                (0, S.setNextBlockBaseFeePerGas)(n, e),
              setNextBlockTimestamp: (e) => (0, P.setNextBlockTimestamp)(n, e),
              setNonce: (e) => (0, O.setNonce)(n, e),
              setRpcUrl: (e) => (0, I.setRpcUrl)(n, e),
              setStorageAt: (e) => (0, A.setStorageAt)(n, e),
              snapshot: () => (0, k.snapshot)(n),
              stopImpersonatingAccount: (e) =>
                (0, j.stopImpersonatingAccount)(n, e),
            };
          };
        };
      },
      87054: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.walletActions = void 0);
        let r = n(49988),
          i = n(13356),
          a = n(60627),
          o = n(36790),
          s = n(16331),
          u = n(8969),
          l = n(56583),
          c = n(76022),
          d = n(46832),
          f = n(18659),
          p = n(36158),
          h = n(90402),
          m = n(4910),
          y = n(32672),
          g = n(85479),
          b = n(9650);
        t.walletActions = function (e) {
          return {
            addChain: (t) => (0, i.addChain)(e, t),
            deployContract: (t) => (0, a.deployContract)(e, t),
            getAddresses: () => (0, o.getAddresses)(e),
            getChainId: () => (0, r.getChainId)(e),
            getPermissions: () => (0, s.getPermissions)(e),
            prepareTransactionRequest: (t) =>
              (0, u.prepareTransactionRequest)(e, t),
            requestAddresses: () => (0, l.requestAddresses)(e),
            requestPermissions: (t) => (0, c.requestPermissions)(e, t),
            sendRawTransaction: (t) => (0, d.sendRawTransaction)(e, t),
            sendTransaction: (t) => (0, f.sendTransaction)(e, t),
            signMessage: (t) => (0, p.signMessage)(e, t),
            signTransaction: (t) => (0, h.signTransaction)(e, t),
            signTypedData: (t) => (0, m.signTypedData)(e, t),
            switchChain: (t) => (0, y.switchChain)(e, t),
            watchAsset: (t) => (0, g.watchAsset)(e, t),
            writeContract: (t) => (0, b.writeContract)(e, t),
          };
        };
      },
      67641: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.createTransport = void 0);
        let r = n(42768);
        t.createTransport = function (
          {
            key: e,
            name: t,
            request: n,
            retryCount: i = 3,
            retryDelay: a = 150,
            timeout: o,
            type: s,
          },
          u
        ) {
          return {
            config: {
              key: e,
              name: t,
              request: n,
              retryCount: i,
              retryDelay: a,
              timeout: o,
              type: s,
            },
            request: (0, r.buildRequest)(n, { retryCount: i, retryDelay: a }),
            value: u,
          };
        };
      },
      52883: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.custom = void 0);
        let r = n(67641);
        t.custom = function (e, t = {}) {
          let {
            key: n = "custom",
            name: i = "Custom Provider",
            retryDelay: a,
          } = t;
          return ({ retryCount: o }) =>
            (0, r.createTransport)({
              key: n,
              name: i,
              request: e.request.bind(e),
              retryCount: t.retryCount ?? o,
              retryDelay: a,
              type: "custom",
            });
        };
      },
      35010: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.rankTransports = t.fallback = void 0);
        let r = n(42768),
          i = n(95501),
          a = n(67641);
        function o({
          chain: e,
          interval: t = 4e3,
          onTransports: n,
          sampleCount: r = 10,
          timeout: a = 1e3,
          transports: o,
          weights: s = {},
        }) {
          let { stability: u = 0.7, latency: l = 0.3 } = s,
            c = [],
            d = async () => {
              let s = await Promise.all(
                o.map(async (t) => {
                  let n, r;
                  let i = t({ chain: e, retryCount: 0, timeout: a }),
                    o = Date.now();
                  try {
                    await i.request({ method: "net_listening" }), (r = 1);
                  } catch {
                    r = 0;
                  } finally {
                    n = Date.now();
                  }
                  let s = n - o;
                  return { latency: s, success: r };
                })
              );
              c.push(s), c.length > r && c.shift();
              let f = Math.max(
                  ...c.map((e) => Math.max(...e.map(({ latency: e }) => e)))
                ),
                p = o
                  .map((e, t) => {
                    let n = c.map((e) => e[t].latency),
                      r = n.reduce((e, t) => e + t, 0) / n.length,
                      i = c.map((e) => e[t].success),
                      a = i.reduce((e, t) => e + t, 0) / i.length;
                    return 0 === a ? [0, t] : [l * (1 - r / f) + u * a, t];
                  })
                  .sort((e, t) => t[0] - e[0]);
              n(p.map(([, e]) => o[e])), await (0, i.wait)(t), d();
            };
          d();
        }
        (t.fallback = function (e, t = {}) {
          let {
            key: n = "fallback",
            name: i = "Fallback",
            rank: s = !1,
            retryCount: u,
            retryDelay: l,
          } = t;
          return ({ chain: t, pollingInterval: c = 4e3, timeout: d }) => {
            let f = e,
              p = () => {},
              h = (0, a.createTransport)(
                {
                  key: n,
                  name: i,
                  async request({ method: e, params: n }) {
                    let i = async (a = 0) => {
                      let o = f[a]({ chain: t, retryCount: 0, timeout: d });
                      try {
                        let t = await o.request({ method: e, params: n });
                        return (
                          p({
                            method: e,
                            params: n,
                            response: t,
                            transport: o,
                            status: "success",
                          }),
                          t
                        );
                      } catch (t) {
                        if (
                          (p({
                            error: t,
                            method: e,
                            params: n,
                            transport: o,
                            status: "error",
                          }),
                          (0, r.isDeterministicError)(t) || a === f.length - 1)
                        )
                          throw t;
                        return i(a + 1);
                      }
                    };
                    return i();
                  },
                  retryCount: u,
                  retryDelay: l,
                  type: "fallback",
                },
                {
                  onResponse: (e) => (p = e),
                  transports: f.map((e) => e({ chain: t, retryCount: 0 })),
                }
              );
            if (s) {
              let e = "object" == typeof s ? s : {};
              o({
                chain: t,
                interval: e.interval ?? c,
                onTransports: (e) => (f = e),
                sampleCount: e.sampleCount,
                timeout: e.timeout,
                transports: f,
                weights: e.weights,
              });
            }
            return h;
          };
        }),
          (t.rankTransports = o);
      },
      69800: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.http = void 0);
        let r = n(4880),
          i = n(3927),
          a = n(30251),
          o = n(93087),
          s = n(67641);
        t.http = function (e, t = {}) {
          let {
            batch: n,
            fetchOptions: u,
            key: l = "http",
            name: c = "HTTP JSON-RPC",
            retryDelay: d,
          } = t;
          return ({ chain: f, retryCount: p, timeout: h }) => {
            let { batchSize: m = 1e3, wait: y = 0 } =
                "object" == typeof n ? n : {},
              g = t.retryCount ?? p,
              b = h ?? t.timeout ?? 1e4,
              v = e || f?.rpcUrls.default.http[0];
            if (!v) throw new i.UrlRequiredError();
            return (0, s.createTransport)(
              {
                key: l,
                name: c,
                async request({ method: t, params: i }) {
                  let s = { method: t, params: i },
                    { schedule: l } = (0, a.createBatchScheduler)({
                      id: `${e}`,
                      wait: y,
                      shouldSplitBatch: (e) => e.length > m,
                      fn: (e) =>
                        o.rpc.http(v, { body: e, fetchOptions: u, timeout: b }),
                      sort: (e, t) => e.id - t.id,
                    }),
                    c = async (e) =>
                      n
                        ? l(e)
                        : [
                            await o.rpc.http(v, {
                              body: e,
                              fetchOptions: u,
                              timeout: b,
                            }),
                          ],
                    [{ error: d, result: f }] = await c(s);
                  if (d)
                    throw new r.RpcRequestError({ body: s, error: d, url: v });
                  return f;
                },
                retryCount: g,
                retryDelay: d,
                timeout: b,
                type: "http",
              },
              { fetchOptions: u, url: e }
            );
          };
        };
      },
      99102: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.webSocket = void 0);
        let r = n(4880),
          i = n(3927),
          a = n(93087),
          o = n(67641);
        t.webSocket = function (e, t = {}) {
          let {
            key: n = "webSocket",
            name: s = "WebSocket JSON-RPC",
            retryDelay: u,
          } = t;
          return ({ chain: l, retryCount: c, timeout: d }) => {
            let f = t.retryCount ?? c,
              p = d ?? t.timeout ?? 1e4,
              h = e || l?.rpcUrls.default.webSocket?.[0];
            if (!h) throw new i.UrlRequiredError();
            return (0, o.createTransport)(
              {
                key: n,
                name: s,
                async request({ method: e, params: t }) {
                  let n = { method: e, params: t },
                    i = await (0, a.getSocket)(h),
                    { error: o, result: s } = await a.rpc.webSocketAsync(i, {
                      body: n,
                      timeout: p,
                    });
                  if (o)
                    throw new r.RpcRequestError({ body: n, error: o, url: h });
                  return s;
                },
                retryCount: f,
                retryDelay: u,
                timeout: p,
                type: "webSocket",
              },
              {
                getSocket: () => (0, a.getSocket)(h),
                async subscribe({ params: e, onData: t, onError: n }) {
                  let r = await (0, a.getSocket)(h),
                    { result: i } = await new Promise((i, o) =>
                      a.rpc.webSocket(r, {
                        body: { method: "eth_subscribe", params: e },
                        onResponse(e) {
                          if (e.error) {
                            o(e.error), n?.(e.error);
                            return;
                          }
                          if ("number" == typeof e.id) {
                            i(e);
                            return;
                          }
                          "eth_subscription" === e.method && t(e.params);
                        },
                      })
                    );
                  return {
                    subscriptionId: i,
                    unsubscribe: async () =>
                      new Promise((e) =>
                        a.rpc.webSocket(r, {
                          body: { method: "eth_unsubscribe", params: [i] },
                          onResponse: e,
                        })
                      ),
                  };
                },
              }
            );
          };
        };
      },
      86725: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.universalSignatureValidatorAbi =
            t.smartAccountAbi =
            t.addressResolverAbi =
            t.textResolverAbi =
            t.universalResolverReverseAbi =
            t.universalResolverResolveAbi =
            t.multicall3Abi =
              void 0),
          (t.multicall3Abi = [
            {
              inputs: [
                {
                  components: [
                    { name: "target", type: "address" },
                    { name: "allowFailure", type: "bool" },
                    { name: "callData", type: "bytes" },
                  ],
                  name: "calls",
                  type: "tuple[]",
                },
              ],
              name: "aggregate3",
              outputs: [
                {
                  components: [
                    { name: "success", type: "bool" },
                    { name: "returnData", type: "bytes" },
                  ],
                  name: "returnData",
                  type: "tuple[]",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
          ]);
        let n = [
          { inputs: [], name: "ResolverNotFound", type: "error" },
          { inputs: [], name: "ResolverWildcardNotSupported", type: "error" },
        ];
        (t.universalResolverResolveAbi = [
          ...n,
          {
            name: "resolve",
            type: "function",
            stateMutability: "view",
            inputs: [
              { name: "name", type: "bytes" },
              { name: "data", type: "bytes" },
            ],
            outputs: [
              { name: "", type: "bytes" },
              { name: "address", type: "address" },
            ],
          },
        ]),
          (t.universalResolverReverseAbi = [
            ...n,
            {
              name: "reverse",
              type: "function",
              stateMutability: "view",
              inputs: [{ type: "bytes", name: "reverseName" }],
              outputs: [
                { type: "string", name: "resolvedName" },
                { type: "address", name: "resolvedAddress" },
                { type: "address", name: "reverseResolver" },
                { type: "address", name: "resolver" },
              ],
            },
          ]),
          (t.textResolverAbi = [
            {
              name: "text",
              type: "function",
              stateMutability: "view",
              inputs: [
                { name: "name", type: "bytes32" },
                { name: "key", type: "string" },
              ],
              outputs: [{ name: "", type: "string" }],
            },
          ]),
          (t.addressResolverAbi = [
            {
              name: "addr",
              type: "function",
              stateMutability: "view",
              inputs: [{ name: "name", type: "bytes32" }],
              outputs: [{ name: "", type: "address" }],
            },
            {
              name: "addr",
              type: "function",
              stateMutability: "view",
              inputs: [
                { name: "name", type: "bytes32" },
                { name: "coinType", type: "uint256" },
              ],
              outputs: [{ name: "", type: "bytes" }],
            },
          ]),
          (t.smartAccountAbi = [
            {
              name: "isValidSignature",
              type: "function",
              stateMutability: "view",
              inputs: [
                { name: "hash", type: "bytes32" },
                { name: "signature", type: "bytes" },
              ],
              outputs: [{ name: "", type: "bytes4" }],
            },
          ]),
          (t.universalSignatureValidatorAbi = [
            {
              inputs: [
                { internalType: "address", name: "_signer", type: "address" },
                { internalType: "bytes32", name: "_hash", type: "bytes32" },
                { internalType: "bytes", name: "_signature", type: "bytes" },
              ],
              stateMutability: "nonpayable",
              type: "constructor",
            },
          ]);
      },
      78104: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.zeroAddress = void 0),
          (t.zeroAddress = "0x0000000000000000000000000000000000000000");
      },
      82357: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.zeroHash = void 0),
          (t.zeroHash =
            "0x0000000000000000000000000000000000000000000000000000000000000000");
      },
      15251: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.aggregate3Signature = void 0),
          (t.aggregate3Signature = "0x82ad56cb");
      },
      23871: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.universalSignatureValidatorByteCode = void 0),
          (t.universalSignatureValidatorByteCode =
            "0x60806040523480156200001157600080fd5b50604051620007003803806200070083398101604081905262000034916200056f565b6000620000438484846200004f565b9050806000526001601ff35b600080846001600160a01b0316803b806020016040519081016040528181526000908060200190933c90507f6492649264926492649264926492649264926492649264926492649264926492620000a68462000451565b036200021f57600060608085806020019051810190620000c79190620005ce565b8651929550909350915060000362000192576000836001600160a01b031683604051620000f5919062000643565b6000604051808303816000865af19150503d806000811462000134576040519150601f19603f3d011682016040523d82523d6000602084013e62000139565b606091505b5050905080620001905760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b505b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90620001c4908b90869060040162000661565b602060405180830381865afa158015620001e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020891906200069d565b6001600160e01b031916149450505050506200044a565b805115620002b157604051630b135d3f60e11b808252906001600160a01b03871690631626ba7e9062000259908890889060040162000661565b602060405180830381865afa15801562000277573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029d91906200069d565b6001600160e01b031916149150506200044a565b8251604114620003195760405162461bcd60e51b815260206004820152603a6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e677468000000000000606482015260840162000187565b620003236200046b565b506020830151604080850151855186939260009185919081106200034b576200034b620006c9565b016020015160f81c9050601b81148015906200036b57508060ff16601c14155b15620003cf5760405162461bcd60e51b815260206004820152603b6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c75650000000000606482015260840162000187565b6040805160008152602081018083528a905260ff83169181019190915260608101849052608081018390526001600160a01b038a169060019060a0016020604051602081039080840390855afa1580156200042e573d6000803e3d6000fd5b505050602060405103516001600160a01b031614955050505050505b9392505050565b60006020825110156200046357600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b03811681146200049f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004d5578181015183820152602001620004bb565b50506000910152565b600082601f830112620004f057600080fd5b81516001600160401b03808211156200050d576200050d620004a2565b604051601f8301601f19908116603f01168101908282118183101715620005385762000538620004a2565b816040528381528660208588010111156200055257600080fd5b62000565846020830160208901620004b8565b9695505050505050565b6000806000606084860312156200058557600080fd5b8351620005928162000489565b6020850151604086015191945092506001600160401b03811115620005b657600080fd5b620005c486828701620004de565b9150509250925092565b600080600060608486031215620005e457600080fd5b8351620005f18162000489565b60208501519093506001600160401b03808211156200060f57600080fd5b6200061d87838801620004de565b935060408601519150808211156200063457600080fd5b50620005c486828701620004de565b6000825162000657818460208701620004b8565b9190910192915050565b828152604060208201526000825180604084015262000688816060850160208701620004b8565b601f01601f1916919091016060019392505050565b600060208284031215620006b057600080fd5b81516001600160e01b0319811681146200044a57600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572");
      },
      75081: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.minInt144 =
            t.minInt136 =
            t.minInt128 =
            t.minInt120 =
            t.minInt112 =
            t.minInt104 =
            t.minInt96 =
            t.minInt88 =
            t.minInt80 =
            t.minInt72 =
            t.minInt64 =
            t.minInt56 =
            t.minInt48 =
            t.minInt40 =
            t.minInt32 =
            t.minInt24 =
            t.minInt16 =
            t.minInt8 =
            t.maxInt256 =
            t.maxInt248 =
            t.maxInt240 =
            t.maxInt232 =
            t.maxInt224 =
            t.maxInt216 =
            t.maxInt208 =
            t.maxInt200 =
            t.maxInt192 =
            t.maxInt184 =
            t.maxInt176 =
            t.maxInt168 =
            t.maxInt160 =
            t.maxInt152 =
            t.maxInt144 =
            t.maxInt136 =
            t.maxInt128 =
            t.maxInt120 =
            t.maxInt112 =
            t.maxInt104 =
            t.maxInt96 =
            t.maxInt88 =
            t.maxInt80 =
            t.maxInt72 =
            t.maxInt64 =
            t.maxInt56 =
            t.maxInt48 =
            t.maxInt40 =
            t.maxInt32 =
            t.maxInt24 =
            t.maxInt16 =
            t.maxInt8 =
              void 0),
          (t.maxUint256 =
            t.maxUint248 =
            t.maxUint240 =
            t.maxUint232 =
            t.maxUint224 =
            t.maxUint216 =
            t.maxUint208 =
            t.maxUint200 =
            t.maxUint192 =
            t.maxUint184 =
            t.maxUint176 =
            t.maxUint168 =
            t.maxUint160 =
            t.maxUint152 =
            t.maxUint144 =
            t.maxUint136 =
            t.maxUint128 =
            t.maxUint120 =
            t.maxUint112 =
            t.maxUint104 =
            t.maxUint96 =
            t.maxUint88 =
            t.maxUint80 =
            t.maxUint72 =
            t.maxUint64 =
            t.maxUint56 =
            t.maxUint48 =
            t.maxUint40 =
            t.maxUint32 =
            t.maxUint24 =
            t.maxUint16 =
            t.maxUint8 =
            t.minInt256 =
            t.minInt248 =
            t.minInt240 =
            t.minInt232 =
            t.minInt224 =
            t.minInt216 =
            t.minInt208 =
            t.minInt200 =
            t.minInt192 =
            t.minInt184 =
            t.minInt176 =
            t.minInt168 =
            t.minInt160 =
            t.minInt152 =
              void 0),
          (t.maxInt8 = 2n ** (8n - 1n) - 1n),
          (t.maxInt16 = 2n ** (16n - 1n) - 1n),
          (t.maxInt24 = 2n ** (24n - 1n) - 1n),
          (t.maxInt32 = 2n ** (32n - 1n) - 1n),
          (t.maxInt40 = 2n ** (40n - 1n) - 1n),
          (t.maxInt48 = 2n ** (48n - 1n) - 1n),
          (t.maxInt56 = 2n ** (56n - 1n) - 1n),
          (t.maxInt64 = 2n ** (64n - 1n) - 1n),
          (t.maxInt72 = 2n ** (72n - 1n) - 1n),
          (t.maxInt80 = 2n ** (80n - 1n) - 1n),
          (t.maxInt88 = 2n ** (88n - 1n) - 1n),
          (t.maxInt96 = 2n ** (96n - 1n) - 1n),
          (t.maxInt104 = 2n ** (104n - 1n) - 1n),
          (t.maxInt112 = 2n ** (112n - 1n) - 1n),
          (t.maxInt120 = 2n ** (120n - 1n) - 1n),
          (t.maxInt128 = 2n ** (128n - 1n) - 1n),
          (t.maxInt136 = 2n ** (136n - 1n) - 1n),
          (t.maxInt144 = 2n ** (144n - 1n) - 1n),
          (t.maxInt152 = 2n ** (152n - 1n) - 1n),
          (t.maxInt160 = 2n ** (160n - 1n) - 1n),
          (t.maxInt168 = 2n ** (168n - 1n) - 1n),
          (t.maxInt176 = 2n ** (176n - 1n) - 1n),
          (t.maxInt184 = 2n ** (184n - 1n) - 1n),
          (t.maxInt192 = 2n ** (192n - 1n) - 1n),
          (t.maxInt200 = 2n ** (200n - 1n) - 1n),
          (t.maxInt208 = 2n ** (208n - 1n) - 1n),
          (t.maxInt216 = 2n ** (216n - 1n) - 1n),
          (t.maxInt224 = 2n ** (224n - 1n) - 1n),
          (t.maxInt232 = 2n ** (232n - 1n) - 1n),
          (t.maxInt240 = 2n ** (240n - 1n) - 1n),
          (t.maxInt248 = 2n ** (248n - 1n) - 1n),
          (t.maxInt256 = 2n ** (256n - 1n) - 1n),
          (t.minInt8 = -(2n ** (8n - 1n))),
          (t.minInt16 = -(2n ** (16n - 1n))),
          (t.minInt24 = -(2n ** (24n - 1n))),
          (t.minInt32 = -(2n ** (32n - 1n))),
          (t.minInt40 = -(2n ** (40n - 1n))),
          (t.minInt48 = -(2n ** (48n - 1n))),
          (t.minInt56 = -(2n ** (56n - 1n))),
          (t.minInt64 = -(2n ** (64n - 1n))),
          (t.minInt72 = -(2n ** (72n - 1n))),
          (t.minInt80 = -(2n ** (80n - 1n))),
          (t.minInt88 = -(2n ** (88n - 1n))),
          (t.minInt96 = -(2n ** (96n - 1n))),
          (t.minInt104 = -(2n ** (104n - 1n))),
          (t.minInt112 = -(2n ** (112n - 1n))),
          (t.minInt120 = -(2n ** (120n - 1n))),
          (t.minInt128 = -(2n ** (128n - 1n))),
          (t.minInt136 = -(2n ** (136n - 1n))),
          (t.minInt144 = -(2n ** (144n - 1n))),
          (t.minInt152 = -(2n ** (152n - 1n))),
          (t.minInt160 = -(2n ** (160n - 1n))),
          (t.minInt168 = -(2n ** (168n - 1n))),
          (t.minInt176 = -(2n ** (176n - 1n))),
          (t.minInt184 = -(2n ** (184n - 1n))),
          (t.minInt192 = -(2n ** (192n - 1n))),
          (t.minInt200 = -(2n ** (200n - 1n))),
          (t.minInt208 = -(2n ** (208n - 1n))),
          (t.minInt216 = -(2n ** (216n - 1n))),
          (t.minInt224 = -(2n ** (224n - 1n))),
          (t.minInt232 = -(2n ** (232n - 1n))),
          (t.minInt240 = -(2n ** (240n - 1n))),
          (t.minInt248 = -(2n ** (248n - 1n))),
          (t.minInt256 = -(2n ** (256n - 1n))),
          (t.maxUint8 = 2n ** 8n - 1n),
          (t.maxUint16 = 2n ** 16n - 1n),
          (t.maxUint24 = 2n ** 24n - 1n),
          (t.maxUint32 = 2n ** 32n - 1n),
          (t.maxUint40 = 2n ** 40n - 1n),
          (t.maxUint48 = 2n ** 48n - 1n),
          (t.maxUint56 = 2n ** 56n - 1n),
          (t.maxUint64 = 2n ** 64n - 1n),
          (t.maxUint72 = 2n ** 72n - 1n),
          (t.maxUint80 = 2n ** 80n - 1n),
          (t.maxUint88 = 2n ** 88n - 1n),
          (t.maxUint96 = 2n ** 96n - 1n),
          (t.maxUint104 = 2n ** 104n - 1n),
          (t.maxUint112 = 2n ** 112n - 1n),
          (t.maxUint120 = 2n ** 120n - 1n),
          (t.maxUint128 = 2n ** 128n - 1n),
          (t.maxUint136 = 2n ** 136n - 1n),
          (t.maxUint144 = 2n ** 144n - 1n),
          (t.maxUint152 = 2n ** 152n - 1n),
          (t.maxUint160 = 2n ** 160n - 1n),
          (t.maxUint168 = 2n ** 168n - 1n),
          (t.maxUint176 = 2n ** 176n - 1n),
          (t.maxUint184 = 2n ** 184n - 1n),
          (t.maxUint192 = 2n ** 192n - 1n),
          (t.maxUint200 = 2n ** 200n - 1n),
          (t.maxUint208 = 2n ** 208n - 1n),
          (t.maxUint216 = 2n ** 216n - 1n),
          (t.maxUint224 = 2n ** 224n - 1n),
          (t.maxUint232 = 2n ** 232n - 1n),
          (t.maxUint240 = 2n ** 240n - 1n),
          (t.maxUint248 = 2n ** 248n - 1n),
          (t.maxUint256 = 2n ** 256n - 1n);
      },
      55300: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.solidityPanic = t.solidityError = t.panicReasons = void 0),
          (t.panicReasons = {
            1: "An `assert` condition failed.",
            17: "Arithmic operation resulted in underflow or overflow.",
            18: "Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).",
            33: "Attempted to convert to an invalid type.",
            34: "Attempted to access a storage byte array that is incorrectly encoded.",
            49: "Performed `.pop()` on an empty array",
            50: "Array index is out of bounds.",
            65: "Allocated too much memory or created an array which is too large.",
            81: "Attempted to call a zero-initialized variable of internal function type.",
          }),
          (t.solidityError = {
            inputs: [{ name: "message", type: "string" }],
            name: "Error",
            type: "error",
          }),
          (t.solidityPanic = {
            inputs: [{ name: "reason", type: "uint256" }],
            name: "Panic",
            type: "error",
          });
      },
      95011: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.presignMessagePrefix = void 0),
          (t.presignMessagePrefix = "\x19Ethereum Signed Message:\n");
      },
      12966: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.weiUnits = t.gweiUnits = t.etherUnits = void 0),
          (t.etherUnits = { gwei: 9, wei: 18 }),
          (t.gweiUnits = { ether: -9, wei: 9 }),
          (t.weiUnits = { ether: -18, gwei: -9 });
      },
      65413: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.UnsupportedPackedAbiType =
            t.InvalidDefinitionTypeError =
            t.InvalidArrayError =
            t.InvalidAbiDecodingTypeError =
            t.InvalidAbiEncodingTypeError =
            t.DecodeLogTopicsMismatch =
            t.DecodeLogDataMismatch =
            t.BytesSizeMismatchError =
            t.AbiItemAmbiguityError =
            t.AbiFunctionSignatureNotFoundError =
            t.AbiFunctionOutputsNotFoundError =
            t.AbiFunctionNotFoundError =
            t.AbiEventNotFoundError =
            t.AbiEventSignatureNotFoundError =
            t.AbiEventSignatureEmptyTopicsError =
            t.AbiErrorSignatureNotFoundError =
            t.AbiErrorNotFoundError =
            t.AbiErrorInputsNotFoundError =
            t.AbiEncodingLengthMismatchError =
            t.AbiEncodingBytesSizeMismatchError =
            t.AbiEncodingArrayLengthMismatchError =
            t.AbiDecodingZeroDataError =
            t.AbiDecodingDataSizeTooSmallError =
            t.AbiDecodingDataSizeInvalidError =
            t.AbiConstructorParamsNotFoundError =
            t.AbiConstructorNotFoundError =
              void 0);
        let r = n(99636),
          i = n(61539),
          a = n(24304);
        class o extends a.BaseError {
          constructor({ docsPath: e }) {
            super(
              "A constructor was not found on the ABI.\nMake sure you are using the correct ABI and that the constructor exists on it.",
              { docsPath: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiConstructorNotFoundError",
              });
          }
        }
        t.AbiConstructorNotFoundError = o;
        class s extends a.BaseError {
          constructor({ docsPath: e }) {
            super(
              "Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.\nMake sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.",
              { docsPath: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiConstructorParamsNotFoundError",
              });
          }
        }
        t.AbiConstructorParamsNotFoundError = s;
        class u extends a.BaseError {
          constructor({ data: e, size: t }) {
            super(
              `Data size of ${t} bytes is invalid.
Size must be in increments of 32 bytes (size % 32 === 0).`,
              { metaMessages: [`Data: ${e} (${t} bytes)`] }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiDecodingDataSizeInvalidError",
              });
          }
        }
        t.AbiDecodingDataSizeInvalidError = u;
        class l extends a.BaseError {
          constructor({ data: e, params: t, size: n }) {
            super(
              `Data size of ${n} bytes is too small for given parameters.`,
              {
                metaMessages: [
                  `Params: (${(0, r.formatAbiParams)(t, { includeName: !0 })})`,
                  `Data:   ${e} (${n} bytes)`,
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiDecodingDataSizeTooSmallError",
              }),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "params", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "size", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.data = e),
              (this.params = t),
              (this.size = n);
          }
        }
        t.AbiDecodingDataSizeTooSmallError = l;
        class c extends a.BaseError {
          constructor() {
            super('Cannot decode zero data ("0x") with ABI parameters.'),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiDecodingZeroDataError",
              });
          }
        }
        t.AbiDecodingZeroDataError = c;
        class d extends a.BaseError {
          constructor({ expectedLength: e, givenLength: t, type: n }) {
            super(`ABI encoding array length mismatch for type ${n}.
Expected length: ${e}
Given length: ${t}`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEncodingArrayLengthMismatchError",
              });
          }
        }
        t.AbiEncodingArrayLengthMismatchError = d;
        class f extends a.BaseError {
          constructor({ expectedSize: e, value: t }) {
            super(
              `Size of bytes "${t}" (bytes${(0, i.size)(
                t
              )}) does not match expected size (bytes${e}).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEncodingBytesSizeMismatchError",
              });
          }
        }
        t.AbiEncodingBytesSizeMismatchError = f;
        class p extends a.BaseError {
          constructor({ expectedLength: e, givenLength: t }) {
            super(`ABI encoding params/values length mismatch.
Expected length (params): ${e}
Given length (values): ${t}`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEncodingLengthMismatchError",
              });
          }
        }
        t.AbiEncodingLengthMismatchError = p;
        class h extends a.BaseError {
          constructor(e, { docsPath: t }) {
            super(
              `Arguments (\`args\`) were provided to "${e}", but "${e}" on the ABI does not contain any parameters (\`inputs\`).
Cannot encode error result without knowing what the parameter types are.
Make sure you are using the correct ABI and that the inputs exist on it.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiErrorInputsNotFoundError",
              });
          }
        }
        t.AbiErrorInputsNotFoundError = h;
        class m extends a.BaseError {
          constructor(e, { docsPath: t } = {}) {
            super(
              `Error ${e ? `"${e}" ` : ""}not found on ABI.
Make sure you are using the correct ABI and that the error exists on it.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiErrorNotFoundError",
              });
          }
        }
        t.AbiErrorNotFoundError = m;
        class y extends a.BaseError {
          constructor(e, { docsPath: t }) {
            super(
              `Encoded error signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the error exists on it.
You can look up the decoded signature here: https://openchain.xyz/signatures?query=${e}.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiErrorSignatureNotFoundError",
              }),
              Object.defineProperty(this, "signature", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.signature = e);
          }
        }
        t.AbiErrorSignatureNotFoundError = y;
        class g extends a.BaseError {
          constructor({ docsPath: e }) {
            super("Cannot extract event signature from empty topics.", {
              docsPath: e,
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEventSignatureEmptyTopicsError",
              });
          }
        }
        t.AbiEventSignatureEmptyTopicsError = g;
        class b extends a.BaseError {
          constructor(e, { docsPath: t }) {
            super(
              `Encoded event signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.
You can look up the signature here: https://openchain.xyz/signatures?query=${e}.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEventSignatureNotFoundError",
              });
          }
        }
        t.AbiEventSignatureNotFoundError = b;
        class v extends a.BaseError {
          constructor(e, { docsPath: t } = {}) {
            super(
              `Event ${e ? `"${e}" ` : ""}not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEventNotFoundError",
              });
          }
        }
        t.AbiEventNotFoundError = v;
        class w extends a.BaseError {
          constructor(e, { docsPath: t } = {}) {
            super(
              `Function ${e ? `"${e}" ` : ""}not found on ABI.
Make sure you are using the correct ABI and that the function exists on it.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiFunctionNotFoundError",
              });
          }
        }
        t.AbiFunctionNotFoundError = w;
        class E extends a.BaseError {
          constructor(e, { docsPath: t }) {
            super(
              `Function "${e}" does not contain any \`outputs\` on ABI.
Cannot decode function result without knowing what the parameter types are.
Make sure you are using the correct ABI and that the function exists on it.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiFunctionOutputsNotFoundError",
              });
          }
        }
        t.AbiFunctionOutputsNotFoundError = E;
        class x extends a.BaseError {
          constructor(e, { docsPath: t }) {
            super(
              `Encoded function signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the function exists on it.
You can look up the signature here: https://openchain.xyz/signatures?query=${e}.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiFunctionSignatureNotFoundError",
              });
          }
        }
        t.AbiFunctionSignatureNotFoundError = x;
        class C extends a.BaseError {
          constructor(e, t) {
            super("Found ambiguous types in overloaded ABI items.", {
              metaMessages: [
                `\`${e.type}\` in \`${(0, r.formatAbiItem)(e.abiItem)}\`, and`,
                `\`${t.type}\` in \`${(0, r.formatAbiItem)(t.abiItem)}\``,
                "",
                "These types encode differently and cannot be distinguished at runtime.",
                "Remove one of the ambiguous items in the ABI.",
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiItemAmbiguityError",
              });
          }
        }
        t.AbiItemAmbiguityError = C;
        class _ extends a.BaseError {
          constructor({ expectedSize: e, givenSize: t }) {
            super(`Expected bytes${e}, got bytes${t}.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "BytesSizeMismatchError",
              });
          }
        }
        t.BytesSizeMismatchError = _;
        class T extends a.BaseError {
          constructor({ abiItem: e, data: t, params: n, size: i }) {
            super(
              `Data size of ${i} bytes is too small for non-indexed event parameters.`,
              {
                metaMessages: [
                  `Params: (${(0, r.formatAbiParams)(n, { includeName: !0 })})`,
                  `Data:   ${t} (${i} bytes)`,
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "DecodeLogDataMismatch",
              }),
              Object.defineProperty(this, "abiItem", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "params", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "size", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.abiItem = e),
              (this.data = t),
              (this.params = n),
              (this.size = i);
          }
        }
        t.DecodeLogDataMismatch = T;
        class S extends a.BaseError {
          constructor({ abiItem: e, param: t }) {
            super(
              `Expected a topic for indexed event parameter${
                t.name ? ` "${t.name}"` : ""
              } on event "${(0, r.formatAbiItem)(e, { includeName: !0 })}".`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "DecodeLogTopicsMismatch",
              }),
              Object.defineProperty(this, "abiItem", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.abiItem = e);
          }
        }
        t.DecodeLogTopicsMismatch = S;
        class P extends a.BaseError {
          constructor(e, { docsPath: t }) {
            super(
              `Type "${e}" is not a valid encoding type.
Please provide a valid ABI type.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidAbiEncodingType",
              });
          }
        }
        t.InvalidAbiEncodingTypeError = P;
        class O extends a.BaseError {
          constructor(e, { docsPath: t }) {
            super(
              `Type "${e}" is not a valid decoding type.
Please provide a valid ABI type.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidAbiDecodingType",
              });
          }
        }
        t.InvalidAbiDecodingTypeError = O;
        class I extends a.BaseError {
          constructor(e) {
            super(`Value "${e}" is not a valid array.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidArrayError",
              });
          }
        }
        t.InvalidArrayError = I;
        class A extends a.BaseError {
          constructor(e) {
            super(`"${e}" is not a valid definition type.
Valid types: "function", "event", "error"`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidDefinitionTypeError",
              });
          }
        }
        t.InvalidDefinitionTypeError = A;
        class k extends a.BaseError {
          constructor(e) {
            super(`Type "${e}" is not supported for packed encoding.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnsupportedPackedAbiType",
              });
          }
        }
        t.UnsupportedPackedAbiType = k;
      },
      29723: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.AccountNotFoundError = void 0);
        let r = n(24304);
        class i extends r.BaseError {
          constructor({ docsPath: e } = {}) {
            super(
              "Could not find an Account to execute with this Action.\nPlease provide an Account with the `account` argument on the Action, or by supplying an `account` to the WalletClient.",
              { docsPath: e, docsSlug: "account" }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AccountNotFoundError",
              });
          }
        }
        t.AccountNotFoundError = i;
      },
      77295: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.InvalidAddressError = void 0);
        let r = n(24304);
        class i extends r.BaseError {
          constructor({ address: e }) {
            super(`Address "${e}" is invalid.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidAddressError",
              });
          }
        }
        t.InvalidAddressError = i;
      },
      24304: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.BaseError = void 0);
        let r = n(34059);
        class i extends Error {
          constructor(e, t = {}) {
            super(),
              Object.defineProperty(this, "details", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "docsPath", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "metaMessages", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "shortMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ViemError",
              }),
              Object.defineProperty(this, "version", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: (0, r.getVersion)(),
              });
            let n =
                t.cause instanceof i
                  ? t.cause.details
                  : t.cause?.message
                  ? t.cause.message
                  : t.details,
              a = (t.cause instanceof i && t.cause.docsPath) || t.docsPath;
            (this.message = [
              e || "An error occurred.",
              "",
              ...(t.metaMessages ? [...t.metaMessages, ""] : []),
              ...(a
                ? [
                    `Docs: https://viem.sh${a}.html${
                      t.docsSlug ? `#${t.docsSlug}` : ""
                    }`,
                  ]
                : []),
              ...(n ? [`Details: ${n}`] : []),
              `Version: ${this.version}`,
            ].join("\n")),
              t.cause && (this.cause = t.cause),
              (this.details = n),
              (this.docsPath = a),
              (this.metaMessages = t.metaMessages),
              (this.shortMessage = e);
          }
          walk(e) {
            return (function e(t, n) {
              return n?.(t)
                ? t
                : t && "object" == typeof t && "cause" in t
                ? e(t.cause, n)
                : n
                ? null
                : t;
            })(this, e);
          }
        }
        t.BaseError = i;
      },
      88577: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.BlockNotFoundError = void 0);
        let r = n(24304);
        class i extends r.BaseError {
          constructor({ blockHash: e, blockNumber: t }) {
            let n = "Block";
            e && (n = `Block at hash "${e}"`),
              t && (n = `Block at number "${t}"`),
              super(`${n} could not be found.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "BlockNotFoundError",
              });
          }
        }
        t.BlockNotFoundError = i;
      },
      61095: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.OffchainLookupSenderMismatchError =
            t.OffchainLookupResponseMalformedError =
            t.OffchainLookupError =
              void 0);
        let r = n(29803),
          i = n(24304),
          a = n(34059);
        class o extends i.BaseError {
          constructor({
            callbackSelector: e,
            cause: t,
            data: n,
            extraData: r,
            sender: i,
            urls: o,
          }) {
            super(
              t.shortMessage ||
                "An error occurred while fetching for an offchain result.",
              {
                cause: t,
                metaMessages: [
                  ...(t.metaMessages || []),
                  t.metaMessages?.length ? "" : [],
                  "Offchain Gateway Call:",
                  o && [
                    "  Gateway URL(s):",
                    ...o.map((e) => `    ${(0, a.getUrl)(e)}`),
                  ],
                  `  Sender: ${i}`,
                  `  Data: ${n}`,
                  `  Callback selector: ${e}`,
                  `  Extra data: ${r}`,
                ].flat(),
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "OffchainLookupError",
              });
          }
        }
        t.OffchainLookupError = o;
        class s extends i.BaseError {
          constructor({ result: e, url: t }) {
            super(
              "Offchain gateway response is malformed. Response data must be a hex value.",
              {
                metaMessages: [
                  `Gateway URL: ${(0, a.getUrl)(t)}`,
                  `Response: ${(0, r.stringify)(e)}`,
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "OffchainLookupResponseMalformedError",
              });
          }
        }
        t.OffchainLookupResponseMalformedError = s;
        class u extends i.BaseError {
          constructor({ sender: e, to: t }) {
            super(
              "Reverted sender address does not match target contract address (`to`).",
              {
                metaMessages: [
                  `Contract address: ${t}`,
                  `OffchainLookup sender address: ${e}`,
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "OffchainLookupSenderMismatchError",
              });
          }
        }
        t.OffchainLookupSenderMismatchError = u;
      },
      28890: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.InvalidChainIdError =
            t.ClientChainNotConfiguredError =
            t.ChainNotFoundError =
            t.ChainMismatchError =
            t.ChainDoesNotSupportContract =
              void 0);
        let r = n(24304);
        class i extends r.BaseError {
          constructor({ blockNumber: e, chain: t, contract: n }) {
            super(`Chain "${t.name}" does not support contract "${n.name}".`, {
              metaMessages: [
                "This could be due to any of the following:",
                ...(e && n.blockCreated && n.blockCreated > e
                  ? [
                      `- The contract "${n.name}" was not deployed until block ${n.blockCreated} (current block ${e}).`,
                    ]
                  : [
                      `- The chain does not have the contract "${n.name}" configured.`,
                    ]),
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ChainDoesNotSupportContract",
              });
          }
        }
        t.ChainDoesNotSupportContract = i;
        class a extends r.BaseError {
          constructor({ chain: e, currentChainId: t }) {
            super(
              `The current chain of the wallet (id: ${t}) does not match the target chain for the transaction (id: ${e.id} – ${e.name}).`,
              {
                metaMessages: [
                  `Current Chain ID:  ${t}`,
                  `Expected Chain ID: ${e.id} – ${e.name}`,
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ChainMismatchError",
              });
          }
        }
        t.ChainMismatchError = a;
        class o extends r.BaseError {
          constructor() {
            super(
              "No chain was provided to the request.\nPlease provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient."
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ChainNotFoundError",
              });
          }
        }
        t.ChainNotFoundError = o;
        class s extends r.BaseError {
          constructor() {
            super("No chain was provided to the Client."),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ClientChainNotConfiguredError",
              });
          }
        }
        t.ClientChainNotConfiguredError = s;
        class u extends r.BaseError {
          constructor({ chainId: e }) {
            super(`Chain ID "${e}" is invalid.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidChainIdError",
              });
          }
        }
        t.InvalidChainIdError = u;
      },
      4924: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.RawContractError =
            t.ContractFunctionZeroDataError =
            t.ContractFunctionRevertedError =
            t.ContractFunctionExecutionError =
            t.CallExecutionError =
              void 0);
        let r = n(18281),
          i = n(55300),
          a = n(73843),
          o = n(99636),
          s = n(37253),
          u = n(65775),
          l = n(12183),
          c = n(60903),
          d = n(65413),
          f = n(24304),
          p = n(72861),
          h = n(34059);
        class m extends f.BaseError {
          constructor(
            e,
            {
              account: t,
              docsPath: n,
              chain: i,
              data: a,
              gas: o,
              gasPrice: s,
              maxFeePerGas: u,
              maxPriorityFeePerGas: d,
              nonce: f,
              to: h,
              value: m,
            }
          ) {
            let y = t ? (0, r.parseAccount)(t) : void 0,
              g = (0, p.prettyPrint)({
                from: y?.address,
                to: h,
                value:
                  void 0 !== m &&
                  `${(0, l.formatEther)(m)} ${
                    i?.nativeCurrency?.symbol || "ETH"
                  }`,
                data: a,
                gas: o,
                gasPrice: void 0 !== s && `${(0, c.formatGwei)(s)} gwei`,
                maxFeePerGas: void 0 !== u && `${(0, c.formatGwei)(u)} gwei`,
                maxPriorityFeePerGas:
                  void 0 !== d && `${(0, c.formatGwei)(d)} gwei`,
                nonce: f,
              });
            super(e.shortMessage, {
              cause: e,
              docsPath: n,
              metaMessages: [
                ...(e.metaMessages ? [...e.metaMessages, " "] : []),
                "Raw Call Arguments:",
                g,
              ].filter(Boolean),
            }),
              Object.defineProperty(this, "cause", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "CallExecutionError",
              }),
              (this.cause = e);
          }
        }
        t.CallExecutionError = m;
        class y extends f.BaseError {
          constructor(
            e,
            {
              abi: t,
              args: n,
              contractAddress: r,
              docsPath: i,
              functionName: a,
              sender: l,
            }
          ) {
            let c = (0, u.getAbiItem)({ abi: t, args: n, name: a }),
              d = c
                ? (0, s.formatAbiItemWithArgs)({
                    abiItem: c,
                    args: n,
                    includeFunctionName: !1,
                    includeName: !1,
                  })
                : void 0,
              f = c ? (0, o.formatAbiItem)(c, { includeName: !0 }) : void 0,
              m = (0, p.prettyPrint)({
                address: r && (0, h.getContractAddress)(r),
                function: f,
                args:
                  d &&
                  "()" !== d &&
                  `${[...Array(a?.length ?? 0).keys()]
                    .map(() => " ")
                    .join("")}${d}`,
                sender: l,
              });
            super(
              e.shortMessage ||
                `An unknown error occurred while executing the contract function "${a}".`,
              {
                cause: e,
                docsPath: i,
                metaMessages: [
                  ...(e.metaMessages ? [...e.metaMessages, " "] : []),
                  "Contract Call:",
                  m,
                ].filter(Boolean),
              }
            ),
              Object.defineProperty(this, "abi", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "args", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "cause", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "contractAddress", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "formattedArgs", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "functionName", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "sender", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ContractFunctionExecutionError",
              }),
              (this.abi = t),
              (this.args = n),
              (this.cause = e),
              (this.contractAddress = r),
              (this.functionName = a),
              (this.sender = l);
          }
        }
        t.ContractFunctionExecutionError = y;
        class g extends f.BaseError {
          constructor({ abi: e, data: t, functionName: n, message: r }) {
            let u, l, c, f, p;
            if (t && "0x" !== t)
              try {
                p = (0, a.decodeErrorResult)({ abi: e, data: t });
                let { abiItem: n, errorName: r, args: u } = p;
                if ("Error" === r) c = u[0];
                else if ("Panic" === r) {
                  let [e] = u;
                  c = i.panicReasons[e];
                } else {
                  let e = n
                      ? (0, o.formatAbiItem)(n, { includeName: !0 })
                      : void 0,
                    t =
                      n && u
                        ? (0, s.formatAbiItemWithArgs)({
                            abiItem: n,
                            args: u,
                            includeFunctionName: !1,
                            includeName: !1,
                          })
                        : void 0;
                  l = [
                    e ? `Error: ${e}` : "",
                    t && "()" !== t
                      ? `       ${[...Array(r?.length ?? 0).keys()]
                          .map(() => " ")
                          .join("")}${t}`
                      : "",
                  ];
                }
              } catch (e) {
                u = e;
              }
            else r && (c = r);
            u instanceof d.AbiErrorSignatureNotFoundError &&
              (l = [
                `Unable to decode signature "${(f =
                  u.signature)}" as it was not found on the provided ABI.`,
                "Make sure you are using the correct ABI and that the error exists on it.",
                `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${f}.`,
              ]),
              super(
                (c && "execution reverted" !== c) || f
                  ? [
                      `The contract function "${n}" reverted with the following ${
                        f ? "signature" : "reason"
                      }:`,
                      c || f,
                    ].join("\n")
                  : `The contract function "${n}" reverted.`,
                { cause: u, metaMessages: l }
              ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ContractFunctionRevertedError",
              }),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "reason", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "signature", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.data = p),
              (this.reason = c),
              (this.signature = f);
          }
        }
        t.ContractFunctionRevertedError = g;
        class b extends f.BaseError {
          constructor({ functionName: e }) {
            super(`The contract function "${e}" returned no data ("0x").`, {
              metaMessages: [
                "This could be due to any of the following:",
                `  - The contract does not have the function "${e}",`,
                "  - The parameters passed to the contract function may be invalid, or",
                "  - The address is not a contract.",
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ContractFunctionZeroDataError",
              });
          }
        }
        t.ContractFunctionZeroDataError = b;
        class v extends f.BaseError {
          constructor({ data: e, message: t }) {
            super(t || ""),
              Object.defineProperty(this, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 3,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "RawContractError",
              }),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.data = e);
          }
        }
        t.RawContractError = v;
      },
      87328: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.PositionOutOfBoundsError = t.NegativeOffsetError = void 0);
        let r = n(24304);
        class i extends r.BaseError {
          constructor({ offset: e }) {
            super(`Offset \`${e}\` cannot be negative.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "NegativeOffsetError",
              });
          }
        }
        t.NegativeOffsetError = i;
        class a extends r.BaseError {
          constructor({ length: e, position: t }) {
            super(
              `Position \`${t}\` is out of bounds (\`0 < position < ${e}\`).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "PositionOutOfBoundsError",
              });
          }
        }
        t.PositionOutOfBoundsError = a;
      },
      60771: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.SizeExceedsPaddingSizeError = t.SliceOffsetOutOfBoundsError =
            void 0);
        let r = n(24304);
        class i extends r.BaseError {
          constructor({ offset: e, position: t, size: n }) {
            super(
              `Slice ${
                "start" === t ? "starting" : "ending"
              } at offset "${e}" is out-of-bounds (size: ${n}).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "SliceOffsetOutOfBoundsError",
              });
          }
        }
        t.SliceOffsetOutOfBoundsError = i;
        class a extends r.BaseError {
          constructor({ size: e, targetSize: t, type: n }) {
            super(
              `${n.charAt(0).toUpperCase()}${n
                .slice(1)
                .toLowerCase()} size (${e}) exceeds padding size (${t}).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "SizeExceedsPaddingSizeError",
              });
          }
        }
        t.SizeExceedsPaddingSizeError = a;
      },
      11602: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.SizeOverflowError =
            t.OffsetOutOfBoundsError =
            t.InvalidHexValueError =
            t.InvalidHexBooleanError =
            t.InvalidBytesBooleanError =
            t.IntegerOutOfRangeError =
            t.DataLengthTooShortError =
            t.DataLengthTooLongError =
              void 0);
        let r = n(24304);
        class i extends r.BaseError {
          constructor({ consumed: e, length: t }) {
            super(
              `Consumed bytes (${e}) is shorter than data length (${t - 1}).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "DataLengthTooLongError",
              });
          }
        }
        t.DataLengthTooLongError = i;
        class a extends r.BaseError {
          constructor({ length: e, dataLength: t }) {
            super(
              `Data length (${t - 1}) is shorter than consumed bytes length (${
                e - 1
              }).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "DataLengthTooShortError",
              });
          }
        }
        t.DataLengthTooShortError = a;
        class o extends r.BaseError {
          constructor({ max: e, min: t, signed: n, size: r, value: i }) {
            super(
              `Number "${i}" is not in safe ${
                r ? `${8 * r}-bit ${n ? "signed" : "unsigned"} ` : ""
              }integer range ${e ? `(${t} to ${e})` : `(above ${t})`}`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "IntegerOutOfRangeError",
              });
          }
        }
        t.IntegerOutOfRangeError = o;
        class s extends r.BaseError {
          constructor(e) {
            super(
              `Bytes value "${e}" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidBytesBooleanError",
              });
          }
        }
        t.InvalidBytesBooleanError = s;
        class u extends r.BaseError {
          constructor(e) {
            super(
              `Hex value "${e}" is not a valid boolean. The hex value must be "0x0" (false) or "0x1" (true).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidHexBooleanError",
              });
          }
        }
        t.InvalidHexBooleanError = u;
        class l extends r.BaseError {
          constructor(e) {
            super(
              `Hex value "${e}" is an odd length (${e.length}). It must be an even length.`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidHexValueError",
              });
          }
        }
        t.InvalidHexValueError = l;
        class c extends r.BaseError {
          constructor({ nextOffset: e, offset: t }) {
            super(
              `Next offset (${e}) is greater than previous offset + consumed bytes (${t})`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "OffsetOutOfBoundsError",
              });
          }
        }
        t.OffsetOutOfBoundsError = c;
        class d extends r.BaseError {
          constructor({ givenSize: e, maxSize: t }) {
            super(`Size cannot exceed ${t} bytes. Given size: ${e} bytes.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "SizeOverflowError",
              });
          }
        }
        t.SizeOverflowError = d;
      },
      48710: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.EnsAvatarUnsupportedNamespaceError =
            t.EnsAvatarUriResolutionError =
            t.EnsAvatarInvalidNftUriError =
            t.EnsAvatarInvalidMetadataError =
              void 0);
        let r = n(24304);
        class i extends r.BaseError {
          constructor({ data: e }) {
            super(
              "Unable to extract image from metadata. The metadata may be malformed or invalid.",
              {
                metaMessages: [
                  "- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.",
                  "",
                  `Provided data: ${JSON.stringify(e)}`,
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "EnsAvatarInvalidMetadataError",
              });
          }
        }
        t.EnsAvatarInvalidMetadataError = i;
        class a extends r.BaseError {
          constructor({ reason: e }) {
            super(`ENS NFT avatar URI is invalid. ${e}`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "EnsAvatarInvalidNftUriError",
              });
          }
        }
        t.EnsAvatarInvalidNftUriError = a;
        class o extends r.BaseError {
          constructor({ uri: e }) {
            super(
              `Unable to resolve ENS avatar URI "${e}". The URI may be malformed, invalid, or does not respond with a valid image.`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "EnsAvatarUriResolutionError",
              });
          }
        }
        t.EnsAvatarUriResolutionError = o;
        class s extends r.BaseError {
          constructor({ namespace: e }) {
            super(
              `ENS NFT avatar namespace "${e}" is not supported. Must be "erc721" or "erc1155".`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "EnsAvatarUnsupportedNamespaceError",
              });
          }
        }
        t.EnsAvatarUnsupportedNamespaceError = s;
      },
      20028: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.EstimateGasExecutionError = void 0);
        let r = n(12183),
          i = n(60903),
          a = n(24304),
          o = n(72861);
        class s extends a.BaseError {
          constructor(
            e,
            {
              account: t,
              docsPath: n,
              chain: a,
              data: s,
              gas: u,
              gasPrice: l,
              maxFeePerGas: c,
              maxPriorityFeePerGas: d,
              nonce: f,
              to: p,
              value: h,
            }
          ) {
            let m = (0, o.prettyPrint)({
              from: t?.address,
              to: p,
              value:
                void 0 !== h &&
                `${(0, r.formatEther)(h)} ${
                  a?.nativeCurrency?.symbol || "ETH"
                }`,
              data: s,
              gas: u,
              gasPrice: void 0 !== l && `${(0, i.formatGwei)(l)} gwei`,
              maxFeePerGas: void 0 !== c && `${(0, i.formatGwei)(c)} gwei`,
              maxPriorityFeePerGas:
                void 0 !== d && `${(0, i.formatGwei)(d)} gwei`,
              nonce: f,
            });
            super(e.shortMessage, {
              cause: e,
              docsPath: n,
              metaMessages: [
                ...(e.metaMessages ? [...e.metaMessages, " "] : []),
                "Estimate Gas Arguments:",
                m,
              ].filter(Boolean),
            }),
              Object.defineProperty(this, "cause", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "EstimateGasExecutionError",
              }),
              (this.cause = e);
          }
        }
        t.EstimateGasExecutionError = s;
      },
      3242: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.MaxFeePerGasTooLowError =
            t.Eip1559FeesNotSupportedError =
            t.BaseFeeScalarError =
              void 0);
        let r = n(60903),
          i = n(24304);
        class a extends i.BaseError {
          constructor() {
            super("`baseFeeMultiplier` must be greater than 1."),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "BaseFeeScalarError",
              });
          }
        }
        t.BaseFeeScalarError = a;
        class o extends i.BaseError {
          constructor() {
            super("Chain does not support EIP-1559 fees."),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Eip1559FeesNotSupportedError",
              });
          }
        }
        t.Eip1559FeesNotSupportedError = o;
        class s extends i.BaseError {
          constructor({ maxPriorityFeePerGas: e }) {
            super(
              `\`maxFeePerGas\` cannot be less than the \`maxPriorityFeePerGas\` (${(0,
              r.formatGwei)(e)} gwei).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "MaxFeePerGasTooLowError",
              });
          }
        }
        t.MaxFeePerGasTooLowError = s;
      },
      21631: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.FilterTypeNotSupportedError = void 0);
        let r = n(24304);
        class i extends r.BaseError {
          constructor(e) {
            super(`Filter type "${e}" is not supported.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "FilterTypeNotSupportedError",
              });
          }
        }
        t.FilterTypeNotSupportedError = i;
      },
      31027: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.UnknownNodeError =
            t.TipAboveFeeCapError =
            t.TransactionTypeNotSupportedError =
            t.IntrinsicGasTooLowError =
            t.IntrinsicGasTooHighError =
            t.InsufficientFundsError =
            t.NonceMaxValueError =
            t.NonceTooLowError =
            t.NonceTooHighError =
            t.FeeCapTooLowError =
            t.FeeCapTooHighError =
            t.ExecutionRevertedError =
              void 0);
        let r = n(60903),
          i = n(24304);
        class a extends i.BaseError {
          constructor({ cause: e, message: t } = {}) {
            let n = t
              ?.replace("execution reverted: ", "")
              ?.replace("execution reverted", "");
            super(
              `Execution reverted ${
                n ? `with reason: ${n}` : "for an unknown reason"
              }.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ExecutionRevertedError",
              });
          }
        }
        Object.defineProperty(a, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 3,
        }),
          Object.defineProperty(a, "nodeMessage", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: /execution reverted/,
          }),
          (t.ExecutionRevertedError = a);
        class o extends i.BaseError {
          constructor({ cause: e, maxFeePerGas: t } = {}) {
            super(
              `The fee cap (\`maxFeePerGas\`${
                t ? ` = ${(0, r.formatGwei)(t)} gwei` : ""
              }) cannot be higher than the maximum allowed value (2^256-1).`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "FeeCapTooHigh",
              });
          }
        }
        Object.defineProperty(o, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value:
            /max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/,
        }),
          (t.FeeCapTooHighError = o);
        class s extends i.BaseError {
          constructor({ cause: e, maxFeePerGas: t } = {}) {
            super(
              `The fee cap (\`maxFeePerGas\`${
                t ? ` = ${(0, r.formatGwei)(t)}` : ""
              } gwei) cannot be lower than the block base fee.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "FeeCapTooLow",
              });
          }
        }
        Object.defineProperty(s, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value:
            /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/,
        }),
          (t.FeeCapTooLowError = s);
        class u extends i.BaseError {
          constructor({ cause: e, nonce: t } = {}) {
            super(
              `Nonce provided for the transaction ${
                t ? `(${t}) ` : ""
              }is higher than the next one expected.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "NonceTooHighError",
              });
          }
        }
        Object.defineProperty(u, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /nonce too high/,
        }),
          (t.NonceTooHighError = u);
        class l extends i.BaseError {
          constructor({ cause: e, nonce: t } = {}) {
            super(
              `Nonce provided for the transaction ${
                t ? `(${t}) ` : ""
              }is lower than the current nonce of the account.
Try increasing the nonce or find the latest nonce with \`getTransactionCount\`.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "NonceTooLowError",
              });
          }
        }
        Object.defineProperty(l, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /nonce too low|transaction already imported|already known/,
        }),
          (t.NonceTooLowError = l);
        class c extends i.BaseError {
          constructor({ cause: e, nonce: t } = {}) {
            super(
              `Nonce provided for the transaction ${
                t ? `(${t}) ` : ""
              }exceeds the maximum allowed nonce.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "NonceMaxValueError",
              });
          }
        }
        Object.defineProperty(c, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /nonce has max value/,
        }),
          (t.NonceMaxValueError = c);
        class d extends i.BaseError {
          constructor({ cause: e } = {}) {
            super(
              "The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.",
              {
                cause: e,
                metaMessages: [
                  "This error could arise when the account does not have enough funds to:",
                  " - pay for the total gas fee,",
                  " - pay for the value to send.",
                  " ",
                  "The cost of the transaction is calculated as `gas * gas fee + value`, where:",
                  " - `gas` is the amount of gas needed for transaction to execute,",
                  " - `gas fee` is the gas fee,",
                  " - `value` is the amount of ether to send to the recipient.",
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InsufficientFundsError",
              });
          }
        }
        Object.defineProperty(d, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /insufficient funds/,
        }),
          (t.InsufficientFundsError = d);
        class f extends i.BaseError {
          constructor({ cause: e, gas: t } = {}) {
            super(
              `The amount of gas ${
                t ? `(${t}) ` : ""
              }provided for the transaction exceeds the limit allowed for the block.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "IntrinsicGasTooHighError",
              });
          }
        }
        Object.defineProperty(f, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /intrinsic gas too high|gas limit reached/,
        }),
          (t.IntrinsicGasTooHighError = f);
        class p extends i.BaseError {
          constructor({ cause: e, gas: t } = {}) {
            super(
              `The amount of gas ${
                t ? `(${t}) ` : ""
              }provided for the transaction is too low.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "IntrinsicGasTooLowError",
              });
          }
        }
        Object.defineProperty(p, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /intrinsic gas too low/,
        }),
          (t.IntrinsicGasTooLowError = p);
        class h extends i.BaseError {
          constructor({ cause: e }) {
            super("The transaction type is not supported for this chain.", {
              cause: e,
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TransactionTypeNotSupportedError",
              });
          }
        }
        Object.defineProperty(h, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /transaction type not valid/,
        }),
          (t.TransactionTypeNotSupportedError = h);
        class m extends i.BaseError {
          constructor({
            cause: e,
            maxPriorityFeePerGas: t,
            maxFeePerGas: n,
          } = {}) {
            super(
              `The provided tip (\`maxPriorityFeePerGas\`${
                t ? ` = ${(0, r.formatGwei)(t)} gwei` : ""
              }) cannot be higher than the fee cap (\`maxFeePerGas\`${
                n ? ` = ${(0, r.formatGwei)(n)} gwei` : ""
              }).`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TipAboveFeeCapError",
              });
          }
        }
        Object.defineProperty(m, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value:
            /max priority fee per gas higher than max fee per gas|tip higher than fee cap/,
        }),
          (t.TipAboveFeeCapError = m);
        class y extends i.BaseError {
          constructor({ cause: e }) {
            super(`An error occurred while executing: ${e?.shortMessage}`, {
              cause: e,
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnknownNodeError",
              });
          }
        }
        t.UnknownNodeError = y;
      },
      4880: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.TimeoutError =
            t.RpcRequestError =
            t.WebSocketRequestError =
            t.HttpRequestError =
              void 0);
        let r = n(29803),
          i = n(24304),
          a = n(34059);
        class o extends i.BaseError {
          constructor({ body: e, details: t, headers: n, status: i, url: o }) {
            super("HTTP request failed.", {
              details: t,
              metaMessages: [
                i && `Status: ${i}`,
                `URL: ${(0, a.getUrl)(o)}`,
                e && `Request body: ${(0, r.stringify)(e)}`,
              ].filter(Boolean),
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "HttpRequestError",
              }),
              Object.defineProperty(this, "body", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "headers", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "status", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "url", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.body = e),
              (this.headers = n),
              (this.status = i),
              (this.url = o);
          }
        }
        t.HttpRequestError = o;
        class s extends i.BaseError {
          constructor({ body: e, details: t, url: n }) {
            super("WebSocket request failed.", {
              details: t,
              metaMessages: [
                `URL: ${(0, a.getUrl)(n)}`,
                `Request body: ${(0, r.stringify)(e)}`,
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "WebSocketRequestError",
              });
          }
        }
        t.WebSocketRequestError = s;
        class u extends i.BaseError {
          constructor({ body: e, error: t, url: n }) {
            super("RPC Request failed.", {
              cause: t,
              details: t.message,
              metaMessages: [
                `URL: ${(0, a.getUrl)(n)}`,
                `Request body: ${(0, r.stringify)(e)}`,
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "RpcRequestError",
              }),
              Object.defineProperty(this, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.code = t.code);
          }
        }
        t.RpcRequestError = u;
        class l extends i.BaseError {
          constructor({ body: e, url: t }) {
            super("The request took too long to respond.", {
              details: "The request timed out.",
              metaMessages: [
                `URL: ${(0, a.getUrl)(t)}`,
                `Request body: ${(0, r.stringify)(e)}`,
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TimeoutError",
              });
          }
        }
        t.TimeoutError = l;
      },
      73812: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.UnknownRpcError =
            t.SwitchChainError =
            t.ChainDisconnectedError =
            t.ProviderDisconnectedError =
            t.UnsupportedProviderMethodError =
            t.UnauthorizedProviderError =
            t.UserRejectedRequestError =
            t.JsonRpcVersionUnsupportedError =
            t.LimitExceededRpcError =
            t.MethodNotSupportedRpcError =
            t.TransactionRejectedRpcError =
            t.ResourceUnavailableRpcError =
            t.ResourceNotFoundRpcError =
            t.InvalidInputRpcError =
            t.InternalRpcError =
            t.InvalidParamsRpcError =
            t.MethodNotFoundRpcError =
            t.InvalidRequestRpcError =
            t.ParseRpcError =
            t.ProviderRpcError =
            t.RpcError =
              void 0);
        let r = n(24304),
          i = n(4880);
        class a extends r.BaseError {
          constructor(
            e,
            { code: t, docsPath: n, metaMessages: r, shortMessage: a }
          ) {
            super(a, {
              cause: e,
              docsPath: n,
              metaMessages: r || e?.metaMessages,
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "RpcError",
              }),
              Object.defineProperty(this, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.name = e.name),
              (this.code = e instanceof i.RpcRequestError ? e.code : t ?? -1);
          }
        }
        t.RpcError = a;
        class o extends a {
          constructor(e, t) {
            super(e, t),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ProviderRpcError",
              }),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.data = t.data);
          }
        }
        t.ProviderRpcError = o;
        class s extends a {
          constructor(e) {
            super(e, {
              code: s.code,
              shortMessage:
                "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ParseRpcError",
              });
          }
        }
        Object.defineProperty(s, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32700,
        }),
          (t.ParseRpcError = s);
        class u extends a {
          constructor(e) {
            super(e, {
              code: u.code,
              shortMessage: "JSON is not a valid request object.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidRequestRpcError",
              });
          }
        }
        Object.defineProperty(u, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32600,
        }),
          (t.InvalidRequestRpcError = u);
        class l extends a {
          constructor(e) {
            super(e, {
              code: l.code,
              shortMessage: "The method does not exist / is not available.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "MethodNotFoundRpcError",
              });
          }
        }
        Object.defineProperty(l, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32601,
        }),
          (t.MethodNotFoundRpcError = l);
        class c extends a {
          constructor(e) {
            super(e, {
              code: c.code,
              shortMessage:
                "Invalid parameters were provided to the RPC method.\nDouble check you have provided the correct parameters.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidParamsRpcError",
              });
          }
        }
        Object.defineProperty(c, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32602,
        }),
          (t.InvalidParamsRpcError = c);
        class d extends a {
          constructor(e) {
            super(e, {
              code: d.code,
              shortMessage: "An internal error was received.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InternalRpcError",
              });
          }
        }
        Object.defineProperty(d, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32603,
        }),
          (t.InternalRpcError = d);
        class f extends a {
          constructor(e) {
            super(e, {
              code: f.code,
              shortMessage:
                "Missing or invalid parameters.\nDouble check you have provided the correct parameters.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidInputRpcError",
              });
          }
        }
        Object.defineProperty(f, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32e3,
        }),
          (t.InvalidInputRpcError = f);
        class p extends a {
          constructor(e) {
            super(e, {
              code: p.code,
              shortMessage: "Requested resource not found.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ResourceNotFoundRpcError",
              });
          }
        }
        Object.defineProperty(p, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32001,
        }),
          (t.ResourceNotFoundRpcError = p);
        class h extends a {
          constructor(e) {
            super(e, {
              code: h.code,
              shortMessage: "Requested resource not available.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ResourceUnavailableRpcError",
              });
          }
        }
        Object.defineProperty(h, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32002,
        }),
          (t.ResourceUnavailableRpcError = h);
        class m extends a {
          constructor(e) {
            super(e, {
              code: m.code,
              shortMessage: "Transaction creation failed.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TransactionRejectedRpcError",
              });
          }
        }
        Object.defineProperty(m, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32003,
        }),
          (t.TransactionRejectedRpcError = m);
        class y extends a {
          constructor(e) {
            super(e, {
              code: y.code,
              shortMessage: "Method is not implemented.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "MethodNotSupportedRpcError",
              });
          }
        }
        Object.defineProperty(y, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32004,
        }),
          (t.MethodNotSupportedRpcError = y);
        class g extends a {
          constructor(e) {
            super(e, {
              code: g.code,
              shortMessage: "Request exceeds defined limit.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "LimitExceededRpcError",
              });
          }
        }
        Object.defineProperty(g, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32005,
        }),
          (t.LimitExceededRpcError = g);
        class b extends a {
          constructor(e) {
            super(e, {
              code: b.code,
              shortMessage: "Version of JSON-RPC protocol is not supported.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "JsonRpcVersionUnsupportedError",
              });
          }
        }
        Object.defineProperty(b, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32006,
        }),
          (t.JsonRpcVersionUnsupportedError = b);
        class v extends o {
          constructor(e) {
            super(e, {
              code: v.code,
              shortMessage: "User rejected the request.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UserRejectedRequestError",
              });
          }
        }
        Object.defineProperty(v, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4001,
        }),
          (t.UserRejectedRequestError = v);
        class w extends o {
          constructor(e) {
            super(e, {
              code: w.code,
              shortMessage:
                "The requested method and/or account has not been authorized by the user.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnauthorizedProviderError",
              });
          }
        }
        Object.defineProperty(w, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4100,
        }),
          (t.UnauthorizedProviderError = w);
        class E extends o {
          constructor(e) {
            super(e, {
              code: E.code,
              shortMessage:
                "The Provider does not support the requested method.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnsupportedProviderMethodError",
              });
          }
        }
        Object.defineProperty(E, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4200,
        }),
          (t.UnsupportedProviderMethodError = E);
        class x extends o {
          constructor(e) {
            super(e, {
              code: x.code,
              shortMessage: "The Provider is disconnected from all chains.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ProviderDisconnectedError",
              });
          }
        }
        Object.defineProperty(x, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4900,
        }),
          (t.ProviderDisconnectedError = x);
        class C extends o {
          constructor(e) {
            super(e, {
              code: C.code,
              shortMessage:
                "The Provider is not connected to the requested chain.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ChainDisconnectedError",
              });
          }
        }
        Object.defineProperty(C, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4901,
        }),
          (t.ChainDisconnectedError = C);
        class _ extends o {
          constructor(e) {
            super(e, {
              code: _.code,
              shortMessage:
                "An error occurred when attempting to switch chain.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "SwitchChainError",
              });
          }
        }
        Object.defineProperty(_, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4902,
        }),
          (t.SwitchChainError = _),
          (t.UnknownRpcError = class extends a {
            constructor(e) {
              super(e, { shortMessage: "An unknown RPC error occurred." }),
                Object.defineProperty(this, "name", {
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                  value: "UnknownRpcError",
                });
            }
          });
      },
      72861: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.WaitForTransactionReceiptTimeoutError =
            t.TransactionReceiptNotFoundError =
            t.TransactionNotFoundError =
            t.TransactionExecutionError =
            t.InvalidStorageKeySizeError =
            t.InvalidSerializedTransactionError =
            t.InvalidSerializedTransactionTypeError =
            t.InvalidSerializableTransactionError =
            t.InvalidLegacyVError =
            t.FeeConflictError =
            t.prettyPrint =
              void 0);
        let r = n(12183),
          i = n(60903),
          a = n(24304);
        function o(e) {
          let t = Object.entries(e)
              .map(([e, t]) => (void 0 === t || !1 === t ? null : [e, t]))
              .filter(Boolean),
            n = t.reduce((e, [t]) => Math.max(e, t.length), 0);
          return t
            .map(([e, t]) => `  ${`${e}:`.padEnd(n + 1)}  ${t}`)
            .join("\n");
        }
        t.prettyPrint = o;
        class s extends a.BaseError {
          constructor() {
            super(
              "Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.\nUse `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others."
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "FeeConflictError",
              });
          }
        }
        t.FeeConflictError = s;
        class u extends a.BaseError {
          constructor({ v: e }) {
            super(`Invalid \`v\` value "${e}". Expected 27 or 28.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidLegacyVError",
              });
          }
        }
        t.InvalidLegacyVError = u;
        class l extends a.BaseError {
          constructor({ transaction: e }) {
            super(
              "Cannot infer a transaction type from provided transaction.",
              {
                metaMessages: [
                  "Provided Transaction:",
                  "{",
                  o(e),
                  "}",
                  "",
                  "To infer the type, either provide:",
                  "- a `type` to the Transaction, or",
                  "- an EIP-1559 Transaction with `maxFeePerGas`, or",
                  "- an EIP-2930 Transaction with `gasPrice` & `accessList`, or",
                  "- a Legacy Transaction with `gasPrice`",
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidSerializableTransactionError",
              });
          }
        }
        t.InvalidSerializableTransactionError = l;
        class c extends a.BaseError {
          constructor({ serializedType: e }) {
            super(`Serialized transaction type "${e}" is invalid.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidSerializedTransactionType",
              }),
              Object.defineProperty(this, "serializedType", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.serializedType = e);
          }
        }
        t.InvalidSerializedTransactionTypeError = c;
        class d extends a.BaseError {
          constructor({ attributes: e, serializedTransaction: t, type: n }) {
            let r = Object.entries(e)
              .map(([e, t]) => (void 0 === t ? e : void 0))
              .filter(Boolean);
            super(
              `Invalid serialized transaction of type "${n}" was provided.`,
              {
                metaMessages: [
                  `Serialized Transaction: "${t}"`,
                  r.length > 0 ? `Missing Attributes: ${r.join(", ")}` : "",
                ].filter(Boolean),
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidSerializedTransactionError",
              }),
              Object.defineProperty(this, "serializedTransaction", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "type", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.serializedTransaction = t),
              (this.type = n);
          }
        }
        t.InvalidSerializedTransactionError = d;
        class f extends a.BaseError {
          constructor({ storageKey: e }) {
            super(
              `Size for storage key "${e}" is invalid. Expected 32 bytes. Got ${Math.floor(
                (e.length - 2) / 2
              )} bytes.`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidStorageKeySizeError",
              });
          }
        }
        t.InvalidStorageKeySizeError = f;
        class p extends a.BaseError {
          constructor(
            e,
            {
              account: t,
              docsPath: n,
              chain: a,
              data: s,
              gas: u,
              gasPrice: l,
              maxFeePerGas: c,
              maxPriorityFeePerGas: d,
              nonce: f,
              to: p,
              value: h,
            }
          ) {
            let m = o({
              chain: a && `${a?.name} (id: ${a?.id})`,
              from: t?.address,
              to: p,
              value:
                void 0 !== h &&
                `${(0, r.formatEther)(h)} ${
                  a?.nativeCurrency?.symbol || "ETH"
                }`,
              data: s,
              gas: u,
              gasPrice: void 0 !== l && `${(0, i.formatGwei)(l)} gwei`,
              maxFeePerGas: void 0 !== c && `${(0, i.formatGwei)(c)} gwei`,
              maxPriorityFeePerGas:
                void 0 !== d && `${(0, i.formatGwei)(d)} gwei`,
              nonce: f,
            });
            super(e.shortMessage, {
              cause: e,
              docsPath: n,
              metaMessages: [
                ...(e.metaMessages ? [...e.metaMessages, " "] : []),
                "Request Arguments:",
                m,
              ].filter(Boolean),
            }),
              Object.defineProperty(this, "cause", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TransactionExecutionError",
              }),
              (this.cause = e);
          }
        }
        t.TransactionExecutionError = p;
        class h extends a.BaseError {
          constructor({
            blockHash: e,
            blockNumber: t,
            blockTag: n,
            hash: r,
            index: i,
          }) {
            let a = "Transaction";
            n &&
              void 0 !== i &&
              (a = `Transaction at block time "${n}" at index "${i}"`),
              e &&
                void 0 !== i &&
                (a = `Transaction at block hash "${e}" at index "${i}"`),
              t &&
                void 0 !== i &&
                (a = `Transaction at block number "${t}" at index "${i}"`),
              r && (a = `Transaction with hash "${r}"`),
              super(`${a} could not be found.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TransactionNotFoundError",
              });
          }
        }
        t.TransactionNotFoundError = h;
        class m extends a.BaseError {
          constructor({ hash: e }) {
            super(
              `Transaction receipt with hash "${e}" could not be found. The Transaction may not be processed on a block yet.`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TransactionReceiptNotFoundError",
              });
          }
        }
        t.TransactionReceiptNotFoundError = m;
        class y extends a.BaseError {
          constructor({ hash: e }) {
            super(
              `Timed out while waiting for transaction with hash "${e}" to be confirmed.`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "WaitForTransactionReceiptTimeoutError",
              });
          }
        }
        t.WaitForTransactionReceiptTimeoutError = y;
      },
      3927: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.UrlRequiredError = void 0);
        let r = n(24304);
        class i extends r.BaseError {
          constructor() {
            super(
              "No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.",
              { docsPath: "/docs/clients/intro" }
            );
          }
        }
        t.UrlRequiredError = i;
      },
      34059: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getVersion = t.getUrl = t.getContractAddress = void 0);
        let r = n(47297);
        (t.getContractAddress = (e) => e),
          (t.getUrl = (e) => e),
          (t.getVersion = () => `viem@${r.version}`);
      },
      47297: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.version = void 0),
          (t.version = "1.21.3");
      },
      15875: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.maxInt112 =
            t.maxInt104 =
            t.maxInt96 =
            t.maxInt88 =
            t.maxInt80 =
            t.maxInt72 =
            t.maxInt64 =
            t.maxInt56 =
            t.maxInt48 =
            t.maxInt40 =
            t.maxInt32 =
            t.maxInt24 =
            t.maxInt16 =
            t.maxInt8 =
            t.weiUnits =
            t.gweiUnits =
            t.etherUnits =
            t.zeroAddress =
            t.multicall3Abi =
            t.webSocket =
            t.createWalletClient =
            t.createTransport =
            t.walletActions =
            t.testActions =
            t.publicActions =
            t.createTestClient =
            t.createPublicClient =
            t.http =
            t.fallback =
            t.custom =
            t.createClient =
            t.getContract =
            t.parseAbiParameters =
            t.parseAbiParameter =
            t.parseAbiItem =
            t.parseAbi =
            t.UnknownSignatureError =
            t.UnknownTypeError =
            t.SolidityProtectedKeywordError =
            t.InvalidStructSignatureError =
            t.InvalidSignatureError =
            t.InvalidParenthesisError =
            t.InvalidParameterError =
            t.InvalidModifierError =
            t.InvalidFunctionModifierError =
            t.InvalidAbiTypeParameterError =
            t.InvalidAbiItemError =
            t.InvalidAbiParametersError =
            t.InvalidAbiParameterError =
            t.CircularReferenceError =
              void 0),
          (t.maxUint256 =
            t.maxUint248 =
            t.maxUint240 =
            t.maxUint232 =
            t.maxUint224 =
            t.maxUint216 =
            t.maxUint208 =
            t.maxUint200 =
            t.maxUint192 =
            t.maxUint184 =
            t.maxUint176 =
            t.maxUint168 =
            t.maxUint160 =
            t.maxUint152 =
            t.maxUint144 =
            t.maxUint136 =
            t.maxUint128 =
            t.maxUint120 =
            t.maxUint112 =
            t.maxUint104 =
            t.maxUint96 =
            t.maxUint88 =
            t.maxUint80 =
            t.maxUint72 =
            t.maxUint64 =
            t.maxUint56 =
            t.maxUint48 =
            t.maxUint40 =
            t.maxUint32 =
            t.maxUint24 =
            t.maxUint16 =
            t.maxUint8 =
            t.maxInt256 =
            t.maxInt248 =
            t.maxInt240 =
            t.maxInt232 =
            t.maxInt224 =
            t.maxInt216 =
            t.maxInt208 =
            t.maxInt200 =
            t.maxInt192 =
            t.maxInt184 =
            t.maxInt176 =
            t.maxInt168 =
            t.maxInt160 =
            t.maxInt152 =
            t.maxInt144 =
            t.maxInt136 =
            t.maxInt128 =
            t.maxInt120 =
              void 0),
          (t.AbiFunctionOutputsNotFoundError =
            t.AbiFunctionNotFoundError =
            t.AbiEventSignatureNotFoundError =
            t.AbiEventSignatureEmptyTopicsError =
            t.AbiEventNotFoundError =
            t.AbiErrorSignatureNotFoundError =
            t.AbiErrorNotFoundError =
            t.AbiErrorInputsNotFoundError =
            t.AbiEncodingBytesSizeMismatchError =
            t.AbiEncodingLengthMismatchError =
            t.AbiEncodingArrayLengthMismatchError =
            t.AbiDecodingZeroDataError =
            t.AbiDecodingDataSizeTooSmallError =
            t.AbiDecodingDataSizeInvalidError =
            t.AbiConstructorParamsNotFoundError =
            t.AbiConstructorNotFoundError =
            t.presignMessagePrefix =
            t.zeroHash =
            t.minInt256 =
            t.minInt248 =
            t.minInt240 =
            t.minInt232 =
            t.minInt224 =
            t.minInt216 =
            t.minInt208 =
            t.minInt200 =
            t.minInt192 =
            t.minInt184 =
            t.minInt176 =
            t.minInt168 =
            t.minInt160 =
            t.minInt152 =
            t.minInt144 =
            t.minInt136 =
            t.minInt128 =
            t.minInt120 =
            t.minInt112 =
            t.minInt104 =
            t.minInt96 =
            t.minInt88 =
            t.minInt80 =
            t.minInt72 =
            t.minInt64 =
            t.minInt56 =
            t.minInt48 =
            t.minInt40 =
            t.minInt32 =
            t.minInt24 =
            t.minInt16 =
            t.minInt8 =
              void 0),
          (t.InvalidHexBooleanError =
            t.IntegerOutOfRangeError =
            t.InvalidBytesBooleanError =
            t.DataLengthTooShortError =
            t.DataLengthTooLongError =
            t.InvalidChainIdError =
            t.ClientChainNotConfiguredError =
            t.ChainNotFoundError =
            t.ChainMismatchError =
            t.ChainDoesNotSupportContract =
            t.UserRejectedRequestError =
            t.UnsupportedProviderMethodError =
            t.UnknownRpcError =
            t.UnauthorizedProviderError =
            t.TransactionRejectedRpcError =
            t.SwitchChainError =
            t.RpcError =
            t.ResourceUnavailableRpcError =
            t.ResourceNotFoundRpcError =
            t.ProviderRpcError =
            t.ProviderDisconnectedError =
            t.ParseRpcError =
            t.MethodNotSupportedRpcError =
            t.MethodNotFoundRpcError =
            t.LimitExceededRpcError =
            t.JsonRpcVersionUnsupportedError =
            t.InvalidRequestRpcError =
            t.InvalidParamsRpcError =
            t.InvalidInputRpcError =
            t.InternalRpcError =
            t.ChainDisconnectedError =
            t.MaxFeePerGasTooLowError =
            t.Eip1559FeesNotSupportedError =
            t.BaseFeeScalarError =
            t.RawContractError =
            t.ContractFunctionZeroDataError =
            t.ContractFunctionRevertedError =
            t.ContractFunctionExecutionError =
            t.CallExecutionError =
            t.BlockNotFoundError =
            t.BaseError =
            t.UnsupportedPackedAbiType =
            t.InvalidDefinitionTypeError =
            t.InvalidArrayError =
            t.InvalidAbiEncodingTypeError =
            t.InvalidAbiDecodingTypeError =
            t.DecodeLogTopicsMismatch =
            t.DecodeLogDataMismatch =
            t.BytesSizeMismatchError =
            t.AbiFunctionSignatureNotFoundError =
              void 0),
          (t.encodeAbiParameters =
            t.decodeFunctionResult =
            t.decodeFunctionData =
            t.decodeEventLog =
            t.decodeErrorResult =
            t.decodeDeployData =
            t.decodeAbiParameters =
            t.formatLog =
            t.formatBlock =
            t.defineBlock =
            t.namehash =
            t.labelhash =
            t.UrlRequiredError =
            t.SliceOffsetOutOfBoundsError =
            t.SizeExceedsPaddingSizeError =
            t.WaitForTransactionReceiptTimeoutError =
            t.TransactionReceiptNotFoundError =
            t.TransactionNotFoundError =
            t.TransactionExecutionError =
            t.InvalidStorageKeySizeError =
            t.InvalidSerializedTransactionTypeError =
            t.InvalidSerializedTransactionError =
            t.InvalidSerializableTransactionError =
            t.InvalidLegacyVError =
            t.FeeConflictError =
            t.InvalidAddressError =
            t.WebSocketRequestError =
            t.TimeoutError =
            t.RpcRequestError =
            t.HttpRequestError =
            t.FilterTypeNotSupportedError =
            t.UnknownNodeError =
            t.TransactionTypeNotSupportedError =
            t.TipAboveFeeCapError =
            t.NonceTooLowError =
            t.NonceTooHighError =
            t.NonceMaxValueError =
            t.IntrinsicGasTooLowError =
            t.IntrinsicGasTooHighError =
            t.InsufficientFundsError =
            t.FeeCapTooLowError =
            t.FeeCapTooHighError =
            t.ExecutionRevertedError =
            t.EstimateGasExecutionError =
            t.EnsAvatarUnsupportedNamespaceError =
            t.EnsAvatarInvalidNftUriError =
            t.EnsAvatarUriResolutionError =
            t.SizeOverflowError =
            t.OffsetOutOfBoundsError =
            t.InvalidHexValueError =
              void 0),
          (t.toHex =
            t.stringToHex =
            t.numberToHex =
            t.bytesToHex =
            t.boolToHex =
            t.toBytes =
            t.stringToBytes =
            t.numberToBytes =
            t.hexToBytes =
            t.boolToBytes =
            t.assertTransactionLegacy =
            t.assertTransactionEIP2930 =
            t.assertTransactionEIP1559 =
            t.assertRequest =
            t.verifyTypedData =
            t.verifyMessage =
            t.toRlp =
            t.hexToRlp =
            t.bytesToRlp =
            t.signatureToHex =
            t.compactSignatureToHex =
            t.signatureToCompactSignature =
            t.recoverTypedDataAddress =
            t.recoverPublicKey =
            t.recoverMessageAddress =
            t.recoverAddress =
            t.hexToSignature =
            t.hexToCompactSignature =
            t.compactSignatureToSignature =
            t.hashTypedData =
            t.hashDomain =
            t.getTransactionType =
            t.getSerializedTransactionType =
            t.getCreateAddress =
            t.getCreate2Address =
            t.getContractAddress =
            t.getAbiItem =
            t.rpcTransactionType =
            t.formatTransactionRequest =
            t.defineTransactionRequest =
            t.formatTransactionReceipt =
            t.defineTransactionReceipt =
            t.transactionType =
            t.formatTransaction =
            t.defineTransaction =
            t.encodeFunctionResult =
            t.encodeFunctionData =
            t.encodeEventTopics =
            t.encodeErrorResult =
            t.encodeDeployData =
              void 0),
          (t.parseUnits =
            t.parseTransaction =
            t.parseGwei =
            t.parseEther =
            t.padHex =
            t.padBytes =
            t.pad =
            t.ripemd160 =
            t.sha256 =
            t.keccak256 =
            t.isHex =
            t.isHash =
            t.isBytes =
            t.isAddressEqual =
            t.isAddress =
            t.hashMessage =
            t.getFunctionSignature =
            t.getFunctionSelector =
            t.getEventSignature =
            t.getEventSelector =
            t.getContractError =
            t.getAddress =
            t.checksumAddress =
            t.fromRlp =
            t.hexToString =
            t.hexToNumber =
            t.hexToBool =
            t.hexToBigInt =
            t.fromHex =
            t.formatUnits =
            t.formatGwei =
            t.formatEther =
            t.encodePacked =
            t.getChainContractAddress =
            t.extractChain =
            t.defineChain =
            t.assertCurrentChain =
            t.concatHex =
            t.concatBytes =
            t.concat =
            t.offchainLookupSignature =
            t.offchainLookupAbiItem =
            t.offchainLookup =
            t.ccipFetch =
            t.fromBytes =
            t.bytesToString =
            t.bytesToNumber =
            t.bytesToBool =
            t.bytesToBigint =
            t.bytesToBigInt =
              void 0),
          (t.getTypesForEIP712Domain =
            t.domainSeparator =
            t.validateTypedData =
            t.trim =
            t.stringify =
            t.sliceHex =
            t.sliceBytes =
            t.slice =
            t.size =
            t.serializeTransaction =
            t.serializeAccessList =
              void 0);
        var r = n(99620);
        Object.defineProperty(t, "CircularReferenceError", {
          enumerable: !0,
          get: function () {
            return r.CircularReferenceError;
          },
        }),
          Object.defineProperty(t, "InvalidAbiParameterError", {
            enumerable: !0,
            get: function () {
              return r.InvalidAbiParameterError;
            },
          }),
          Object.defineProperty(t, "InvalidAbiParametersError", {
            enumerable: !0,
            get: function () {
              return r.InvalidAbiParametersError;
            },
          }),
          Object.defineProperty(t, "InvalidAbiItemError", {
            enumerable: !0,
            get: function () {
              return r.InvalidAbiItemError;
            },
          }),
          Object.defineProperty(t, "InvalidAbiTypeParameterError", {
            enumerable: !0,
            get: function () {
              return r.InvalidAbiTypeParameterError;
            },
          }),
          Object.defineProperty(t, "InvalidFunctionModifierError", {
            enumerable: !0,
            get: function () {
              return r.InvalidFunctionModifierError;
            },
          }),
          Object.defineProperty(t, "InvalidModifierError", {
            enumerable: !0,
            get: function () {
              return r.InvalidModifierError;
            },
          }),
          Object.defineProperty(t, "InvalidParameterError", {
            enumerable: !0,
            get: function () {
              return r.InvalidParameterError;
            },
          }),
          Object.defineProperty(t, "InvalidParenthesisError", {
            enumerable: !0,
            get: function () {
              return r.InvalidParenthesisError;
            },
          }),
          Object.defineProperty(t, "InvalidSignatureError", {
            enumerable: !0,
            get: function () {
              return r.InvalidSignatureError;
            },
          }),
          Object.defineProperty(t, "InvalidStructSignatureError", {
            enumerable: !0,
            get: function () {
              return r.InvalidStructSignatureError;
            },
          }),
          Object.defineProperty(t, "SolidityProtectedKeywordError", {
            enumerable: !0,
            get: function () {
              return r.SolidityProtectedKeywordError;
            },
          }),
          Object.defineProperty(t, "UnknownTypeError", {
            enumerable: !0,
            get: function () {
              return r.UnknownTypeError;
            },
          }),
          Object.defineProperty(t, "UnknownSignatureError", {
            enumerable: !0,
            get: function () {
              return r.UnknownSignatureError;
            },
          }),
          Object.defineProperty(t, "parseAbi", {
            enumerable: !0,
            get: function () {
              return r.parseAbi;
            },
          }),
          Object.defineProperty(t, "parseAbiItem", {
            enumerable: !0,
            get: function () {
              return r.parseAbiItem;
            },
          }),
          Object.defineProperty(t, "parseAbiParameter", {
            enumerable: !0,
            get: function () {
              return r.parseAbiParameter;
            },
          }),
          Object.defineProperty(t, "parseAbiParameters", {
            enumerable: !0,
            get: function () {
              return r.parseAbiParameters;
            },
          });
        var i = n(8880);
        Object.defineProperty(t, "getContract", {
          enumerable: !0,
          get: function () {
            return i.getContract;
          },
        });
        var a = n(74485);
        Object.defineProperty(t, "createClient", {
          enumerable: !0,
          get: function () {
            return a.createClient;
          },
        });
        var o = n(52883);
        Object.defineProperty(t, "custom", {
          enumerable: !0,
          get: function () {
            return o.custom;
          },
        });
        var s = n(35010);
        Object.defineProperty(t, "fallback", {
          enumerable: !0,
          get: function () {
            return s.fallback;
          },
        });
        var u = n(69800);
        Object.defineProperty(t, "http", {
          enumerable: !0,
          get: function () {
            return u.http;
          },
        });
        var l = n(18579);
        Object.defineProperty(t, "createPublicClient", {
          enumerable: !0,
          get: function () {
            return l.createPublicClient;
          },
        });
        var c = n(551);
        Object.defineProperty(t, "createTestClient", {
          enumerable: !0,
          get: function () {
            return c.createTestClient;
          },
        });
        var d = n(81986);
        Object.defineProperty(t, "publicActions", {
          enumerable: !0,
          get: function () {
            return d.publicActions;
          },
        });
        var f = n(67213);
        Object.defineProperty(t, "testActions", {
          enumerable: !0,
          get: function () {
            return f.testActions;
          },
        });
        var p = n(87054);
        Object.defineProperty(t, "walletActions", {
          enumerable: !0,
          get: function () {
            return p.walletActions;
          },
        });
        var h = n(67641);
        Object.defineProperty(t, "createTransport", {
          enumerable: !0,
          get: function () {
            return h.createTransport;
          },
        });
        var m = n(87410);
        Object.defineProperty(t, "createWalletClient", {
          enumerable: !0,
          get: function () {
            return m.createWalletClient;
          },
        });
        var y = n(99102);
        Object.defineProperty(t, "webSocket", {
          enumerable: !0,
          get: function () {
            return y.webSocket;
          },
        });
        var g = n(86725);
        Object.defineProperty(t, "multicall3Abi", {
          enumerable: !0,
          get: function () {
            return g.multicall3Abi;
          },
        });
        var b = n(78104);
        Object.defineProperty(t, "zeroAddress", {
          enumerable: !0,
          get: function () {
            return b.zeroAddress;
          },
        });
        var v = n(12966);
        Object.defineProperty(t, "etherUnits", {
          enumerable: !0,
          get: function () {
            return v.etherUnits;
          },
        }),
          Object.defineProperty(t, "gweiUnits", {
            enumerable: !0,
            get: function () {
              return v.gweiUnits;
            },
          }),
          Object.defineProperty(t, "weiUnits", {
            enumerable: !0,
            get: function () {
              return v.weiUnits;
            },
          });
        var w = n(75081);
        Object.defineProperty(t, "maxInt8", {
          enumerable: !0,
          get: function () {
            return w.maxInt8;
          },
        }),
          Object.defineProperty(t, "maxInt16", {
            enumerable: !0,
            get: function () {
              return w.maxInt16;
            },
          }),
          Object.defineProperty(t, "maxInt24", {
            enumerable: !0,
            get: function () {
              return w.maxInt24;
            },
          }),
          Object.defineProperty(t, "maxInt32", {
            enumerable: !0,
            get: function () {
              return w.maxInt32;
            },
          }),
          Object.defineProperty(t, "maxInt40", {
            enumerable: !0,
            get: function () {
              return w.maxInt40;
            },
          }),
          Object.defineProperty(t, "maxInt48", {
            enumerable: !0,
            get: function () {
              return w.maxInt48;
            },
          }),
          Object.defineProperty(t, "maxInt56", {
            enumerable: !0,
            get: function () {
              return w.maxInt56;
            },
          }),
          Object.defineProperty(t, "maxInt64", {
            enumerable: !0,
            get: function () {
              return w.maxInt64;
            },
          }),
          Object.defineProperty(t, "maxInt72", {
            enumerable: !0,
            get: function () {
              return w.maxInt72;
            },
          }),
          Object.defineProperty(t, "maxInt80", {
            enumerable: !0,
            get: function () {
              return w.maxInt80;
            },
          }),
          Object.defineProperty(t, "maxInt88", {
            enumerable: !0,
            get: function () {
              return w.maxInt88;
            },
          }),
          Object.defineProperty(t, "maxInt96", {
            enumerable: !0,
            get: function () {
              return w.maxInt96;
            },
          }),
          Object.defineProperty(t, "maxInt104", {
            enumerable: !0,
            get: function () {
              return w.maxInt104;
            },
          }),
          Object.defineProperty(t, "maxInt112", {
            enumerable: !0,
            get: function () {
              return w.maxInt112;
            },
          }),
          Object.defineProperty(t, "maxInt120", {
            enumerable: !0,
            get: function () {
              return w.maxInt120;
            },
          }),
          Object.defineProperty(t, "maxInt128", {
            enumerable: !0,
            get: function () {
              return w.maxInt128;
            },
          }),
          Object.defineProperty(t, "maxInt136", {
            enumerable: !0,
            get: function () {
              return w.maxInt136;
            },
          }),
          Object.defineProperty(t, "maxInt144", {
            enumerable: !0,
            get: function () {
              return w.maxInt144;
            },
          }),
          Object.defineProperty(t, "maxInt152", {
            enumerable: !0,
            get: function () {
              return w.maxInt152;
            },
          }),
          Object.defineProperty(t, "maxInt160", {
            enumerable: !0,
            get: function () {
              return w.maxInt160;
            },
          }),
          Object.defineProperty(t, "maxInt168", {
            enumerable: !0,
            get: function () {
              return w.maxInt168;
            },
          }),
          Object.defineProperty(t, "maxInt176", {
            enumerable: !0,
            get: function () {
              return w.maxInt176;
            },
          }),
          Object.defineProperty(t, "maxInt184", {
            enumerable: !0,
            get: function () {
              return w.maxInt184;
            },
          }),
          Object.defineProperty(t, "maxInt192", {
            enumerable: !0,
            get: function () {
              return w.maxInt192;
            },
          }),
          Object.defineProperty(t, "maxInt200", {
            enumerable: !0,
            get: function () {
              return w.maxInt200;
            },
          }),
          Object.defineProperty(t, "maxInt208", {
            enumerable: !0,
            get: function () {
              return w.maxInt208;
            },
          }),
          Object.defineProperty(t, "maxInt216", {
            enumerable: !0,
            get: function () {
              return w.maxInt216;
            },
          }),
          Object.defineProperty(t, "maxInt224", {
            enumerable: !0,
            get: function () {
              return w.maxInt224;
            },
          }),
          Object.defineProperty(t, "maxInt232", {
            enumerable: !0,
            get: function () {
              return w.maxInt232;
            },
          }),
          Object.defineProperty(t, "maxInt240", {
            enumerable: !0,
            get: function () {
              return w.maxInt240;
            },
          }),
          Object.defineProperty(t, "maxInt248", {
            enumerable: !0,
            get: function () {
              return w.maxInt248;
            },
          }),
          Object.defineProperty(t, "maxInt256", {
            enumerable: !0,
            get: function () {
              return w.maxInt256;
            },
          }),
          Object.defineProperty(t, "maxUint8", {
            enumerable: !0,
            get: function () {
              return w.maxUint8;
            },
          }),
          Object.defineProperty(t, "maxUint16", {
            enumerable: !0,
            get: function () {
              return w.maxUint16;
            },
          }),
          Object.defineProperty(t, "maxUint24", {
            enumerable: !0,
            get: function () {
              return w.maxUint24;
            },
          }),
          Object.defineProperty(t, "maxUint32", {
            enumerable: !0,
            get: function () {
              return w.maxUint32;
            },
          }),
          Object.defineProperty(t, "maxUint40", {
            enumerable: !0,
            get: function () {
              return w.maxUint40;
            },
          }),
          Object.defineProperty(t, "maxUint48", {
            enumerable: !0,
            get: function () {
              return w.maxUint48;
            },
          }),
          Object.defineProperty(t, "maxUint56", {
            enumerable: !0,
            get: function () {
              return w.maxUint56;
            },
          }),
          Object.defineProperty(t, "maxUint64", {
            enumerable: !0,
            get: function () {
              return w.maxUint64;
            },
          }),
          Object.defineProperty(t, "maxUint72", {
            enumerable: !0,
            get: function () {
              return w.maxUint72;
            },
          }),
          Object.defineProperty(t, "maxUint80", {
            enumerable: !0,
            get: function () {
              return w.maxUint80;
            },
          }),
          Object.defineProperty(t, "maxUint88", {
            enumerable: !0,
            get: function () {
              return w.maxUint88;
            },
          }),
          Object.defineProperty(t, "maxUint96", {
            enumerable: !0,
            get: function () {
              return w.maxUint96;
            },
          }),
          Object.defineProperty(t, "maxUint104", {
            enumerable: !0,
            get: function () {
              return w.maxUint104;
            },
          }),
          Object.defineProperty(t, "maxUint112", {
            enumerable: !0,
            get: function () {
              return w.maxUint112;
            },
          }),
          Object.defineProperty(t, "maxUint120", {
            enumerable: !0,
            get: function () {
              return w.maxUint120;
            },
          }),
          Object.defineProperty(t, "maxUint128", {
            enumerable: !0,
            get: function () {
              return w.maxUint128;
            },
          }),
          Object.defineProperty(t, "maxUint136", {
            enumerable: !0,
            get: function () {
              return w.maxUint136;
            },
          }),
          Object.defineProperty(t, "maxUint144", {
            enumerable: !0,
            get: function () {
              return w.maxUint144;
            },
          }),
          Object.defineProperty(t, "maxUint152", {
            enumerable: !0,
            get: function () {
              return w.maxUint152;
            },
          }),
          Object.defineProperty(t, "maxUint160", {
            enumerable: !0,
            get: function () {
              return w.maxUint160;
            },
          }),
          Object.defineProperty(t, "maxUint168", {
            enumerable: !0,
            get: function () {
              return w.maxUint168;
            },
          }),
          Object.defineProperty(t, "maxUint176", {
            enumerable: !0,
            get: function () {
              return w.maxUint176;
            },
          }),
          Object.defineProperty(t, "maxUint184", {
            enumerable: !0,
            get: function () {
              return w.maxUint184;
            },
          }),
          Object.defineProperty(t, "maxUint192", {
            enumerable: !0,
            get: function () {
              return w.maxUint192;
            },
          }),
          Object.defineProperty(t, "maxUint200", {
            enumerable: !0,
            get: function () {
              return w.maxUint200;
            },
          }),
          Object.defineProperty(t, "maxUint208", {
            enumerable: !0,
            get: function () {
              return w.maxUint208;
            },
          }),
          Object.defineProperty(t, "maxUint216", {
            enumerable: !0,
            get: function () {
              return w.maxUint216;
            },
          }),
          Object.defineProperty(t, "maxUint224", {
            enumerable: !0,
            get: function () {
              return w.maxUint224;
            },
          }),
          Object.defineProperty(t, "maxUint232", {
            enumerable: !0,
            get: function () {
              return w.maxUint232;
            },
          }),
          Object.defineProperty(t, "maxUint240", {
            enumerable: !0,
            get: function () {
              return w.maxUint240;
            },
          }),
          Object.defineProperty(t, "maxUint248", {
            enumerable: !0,
            get: function () {
              return w.maxUint248;
            },
          }),
          Object.defineProperty(t, "maxUint256", {
            enumerable: !0,
            get: function () {
              return w.maxUint256;
            },
          }),
          Object.defineProperty(t, "minInt8", {
            enumerable: !0,
            get: function () {
              return w.minInt8;
            },
          }),
          Object.defineProperty(t, "minInt16", {
            enumerable: !0,
            get: function () {
              return w.minInt16;
            },
          }),
          Object.defineProperty(t, "minInt24", {
            enumerable: !0,
            get: function () {
              return w.minInt24;
            },
          }),
          Object.defineProperty(t, "minInt32", {
            enumerable: !0,
            get: function () {
              return w.minInt32;
            },
          }),
          Object.defineProperty(t, "minInt40", {
            enumerable: !0,
            get: function () {
              return w.minInt40;
            },
          }),
          Object.defineProperty(t, "minInt48", {
            enumerable: !0,
            get: function () {
              return w.minInt48;
            },
          }),
          Object.defineProperty(t, "minInt56", {
            enumerable: !0,
            get: function () {
              return w.minInt56;
            },
          }),
          Object.defineProperty(t, "minInt64", {
            enumerable: !0,
            get: function () {
              return w.minInt64;
            },
          }),
          Object.defineProperty(t, "minInt72", {
            enumerable: !0,
            get: function () {
              return w.minInt72;
            },
          }),
          Object.defineProperty(t, "minInt80", {
            enumerable: !0,
            get: function () {
              return w.minInt80;
            },
          }),
          Object.defineProperty(t, "minInt88", {
            enumerable: !0,
            get: function () {
              return w.minInt88;
            },
          }),
          Object.defineProperty(t, "minInt96", {
            enumerable: !0,
            get: function () {
              return w.minInt96;
            },
          }),
          Object.defineProperty(t, "minInt104", {
            enumerable: !0,
            get: function () {
              return w.minInt104;
            },
          }),
          Object.defineProperty(t, "minInt112", {
            enumerable: !0,
            get: function () {
              return w.minInt112;
            },
          }),
          Object.defineProperty(t, "minInt120", {
            enumerable: !0,
            get: function () {
              return w.minInt120;
            },
          }),
          Object.defineProperty(t, "minInt128", {
            enumerable: !0,
            get: function () {
              return w.minInt128;
            },
          }),
          Object.defineProperty(t, "minInt136", {
            enumerable: !0,
            get: function () {
              return w.minInt136;
            },
          }),
          Object.defineProperty(t, "minInt144", {
            enumerable: !0,
            get: function () {
              return w.minInt144;
            },
          }),
          Object.defineProperty(t, "minInt152", {
            enumerable: !0,
            get: function () {
              return w.minInt152;
            },
          }),
          Object.defineProperty(t, "minInt160", {
            enumerable: !0,
            get: function () {
              return w.minInt160;
            },
          }),
          Object.defineProperty(t, "minInt168", {
            enumerable: !0,
            get: function () {
              return w.minInt168;
            },
          }),
          Object.defineProperty(t, "minInt176", {
            enumerable: !0,
            get: function () {
              return w.minInt176;
            },
          }),
          Object.defineProperty(t, "minInt184", {
            enumerable: !0,
            get: function () {
              return w.minInt184;
            },
          }),
          Object.defineProperty(t, "minInt192", {
            enumerable: !0,
            get: function () {
              return w.minInt192;
            },
          }),
          Object.defineProperty(t, "minInt200", {
            enumerable: !0,
            get: function () {
              return w.minInt200;
            },
          }),
          Object.defineProperty(t, "minInt208", {
            enumerable: !0,
            get: function () {
              return w.minInt208;
            },
          }),
          Object.defineProperty(t, "minInt216", {
            enumerable: !0,
            get: function () {
              return w.minInt216;
            },
          }),
          Object.defineProperty(t, "minInt224", {
            enumerable: !0,
            get: function () {
              return w.minInt224;
            },
          }),
          Object.defineProperty(t, "minInt232", {
            enumerable: !0,
            get: function () {
              return w.minInt232;
            },
          }),
          Object.defineProperty(t, "minInt240", {
            enumerable: !0,
            get: function () {
              return w.minInt240;
            },
          }),
          Object.defineProperty(t, "minInt248", {
            enumerable: !0,
            get: function () {
              return w.minInt248;
            },
          }),
          Object.defineProperty(t, "minInt256", {
            enumerable: !0,
            get: function () {
              return w.minInt256;
            },
          });
        var E = n(82357);
        Object.defineProperty(t, "zeroHash", {
          enumerable: !0,
          get: function () {
            return E.zeroHash;
          },
        });
        var x = n(95011);
        Object.defineProperty(t, "presignMessagePrefix", {
          enumerable: !0,
          get: function () {
            return x.presignMessagePrefix;
          },
        });
        var C = n(65413);
        Object.defineProperty(t, "AbiConstructorNotFoundError", {
          enumerable: !0,
          get: function () {
            return C.AbiConstructorNotFoundError;
          },
        }),
          Object.defineProperty(t, "AbiConstructorParamsNotFoundError", {
            enumerable: !0,
            get: function () {
              return C.AbiConstructorParamsNotFoundError;
            },
          }),
          Object.defineProperty(t, "AbiDecodingDataSizeInvalidError", {
            enumerable: !0,
            get: function () {
              return C.AbiDecodingDataSizeInvalidError;
            },
          }),
          Object.defineProperty(t, "AbiDecodingDataSizeTooSmallError", {
            enumerable: !0,
            get: function () {
              return C.AbiDecodingDataSizeTooSmallError;
            },
          }),
          Object.defineProperty(t, "AbiDecodingZeroDataError", {
            enumerable: !0,
            get: function () {
              return C.AbiDecodingZeroDataError;
            },
          }),
          Object.defineProperty(t, "AbiEncodingArrayLengthMismatchError", {
            enumerable: !0,
            get: function () {
              return C.AbiEncodingArrayLengthMismatchError;
            },
          }),
          Object.defineProperty(t, "AbiEncodingLengthMismatchError", {
            enumerable: !0,
            get: function () {
              return C.AbiEncodingLengthMismatchError;
            },
          }),
          Object.defineProperty(t, "AbiEncodingBytesSizeMismatchError", {
            enumerable: !0,
            get: function () {
              return C.AbiEncodingBytesSizeMismatchError;
            },
          }),
          Object.defineProperty(t, "AbiErrorInputsNotFoundError", {
            enumerable: !0,
            get: function () {
              return C.AbiErrorInputsNotFoundError;
            },
          }),
          Object.defineProperty(t, "AbiErrorNotFoundError", {
            enumerable: !0,
            get: function () {
              return C.AbiErrorNotFoundError;
            },
          }),
          Object.defineProperty(t, "AbiErrorSignatureNotFoundError", {
            enumerable: !0,
            get: function () {
              return C.AbiErrorSignatureNotFoundError;
            },
          }),
          Object.defineProperty(t, "AbiEventNotFoundError", {
            enumerable: !0,
            get: function () {
              return C.AbiEventNotFoundError;
            },
          }),
          Object.defineProperty(t, "AbiEventSignatureEmptyTopicsError", {
            enumerable: !0,
            get: function () {
              return C.AbiEventSignatureEmptyTopicsError;
            },
          }),
          Object.defineProperty(t, "AbiEventSignatureNotFoundError", {
            enumerable: !0,
            get: function () {
              return C.AbiEventSignatureNotFoundError;
            },
          }),
          Object.defineProperty(t, "AbiFunctionNotFoundError", {
            enumerable: !0,
            get: function () {
              return C.AbiFunctionNotFoundError;
            },
          }),
          Object.defineProperty(t, "AbiFunctionOutputsNotFoundError", {
            enumerable: !0,
            get: function () {
              return C.AbiFunctionOutputsNotFoundError;
            },
          }),
          Object.defineProperty(t, "AbiFunctionSignatureNotFoundError", {
            enumerable: !0,
            get: function () {
              return C.AbiFunctionSignatureNotFoundError;
            },
          }),
          Object.defineProperty(t, "BytesSizeMismatchError", {
            enumerable: !0,
            get: function () {
              return C.BytesSizeMismatchError;
            },
          }),
          Object.defineProperty(t, "DecodeLogDataMismatch", {
            enumerable: !0,
            get: function () {
              return C.DecodeLogDataMismatch;
            },
          }),
          Object.defineProperty(t, "DecodeLogTopicsMismatch", {
            enumerable: !0,
            get: function () {
              return C.DecodeLogTopicsMismatch;
            },
          }),
          Object.defineProperty(t, "InvalidAbiDecodingTypeError", {
            enumerable: !0,
            get: function () {
              return C.InvalidAbiDecodingTypeError;
            },
          }),
          Object.defineProperty(t, "InvalidAbiEncodingTypeError", {
            enumerable: !0,
            get: function () {
              return C.InvalidAbiEncodingTypeError;
            },
          }),
          Object.defineProperty(t, "InvalidArrayError", {
            enumerable: !0,
            get: function () {
              return C.InvalidArrayError;
            },
          }),
          Object.defineProperty(t, "InvalidDefinitionTypeError", {
            enumerable: !0,
            get: function () {
              return C.InvalidDefinitionTypeError;
            },
          }),
          Object.defineProperty(t, "UnsupportedPackedAbiType", {
            enumerable: !0,
            get: function () {
              return C.UnsupportedPackedAbiType;
            },
          });
        var _ = n(24304);
        Object.defineProperty(t, "BaseError", {
          enumerable: !0,
          get: function () {
            return _.BaseError;
          },
        });
        var T = n(88577);
        Object.defineProperty(t, "BlockNotFoundError", {
          enumerable: !0,
          get: function () {
            return T.BlockNotFoundError;
          },
        });
        var S = n(4924);
        Object.defineProperty(t, "CallExecutionError", {
          enumerable: !0,
          get: function () {
            return S.CallExecutionError;
          },
        }),
          Object.defineProperty(t, "ContractFunctionExecutionError", {
            enumerable: !0,
            get: function () {
              return S.ContractFunctionExecutionError;
            },
          }),
          Object.defineProperty(t, "ContractFunctionRevertedError", {
            enumerable: !0,
            get: function () {
              return S.ContractFunctionRevertedError;
            },
          }),
          Object.defineProperty(t, "ContractFunctionZeroDataError", {
            enumerable: !0,
            get: function () {
              return S.ContractFunctionZeroDataError;
            },
          }),
          Object.defineProperty(t, "RawContractError", {
            enumerable: !0,
            get: function () {
              return S.RawContractError;
            },
          });
        var P = n(3242);
        Object.defineProperty(t, "BaseFeeScalarError", {
          enumerable: !0,
          get: function () {
            return P.BaseFeeScalarError;
          },
        }),
          Object.defineProperty(t, "Eip1559FeesNotSupportedError", {
            enumerable: !0,
            get: function () {
              return P.Eip1559FeesNotSupportedError;
            },
          }),
          Object.defineProperty(t, "MaxFeePerGasTooLowError", {
            enumerable: !0,
            get: function () {
              return P.MaxFeePerGasTooLowError;
            },
          });
        var O = n(73812);
        Object.defineProperty(t, "ChainDisconnectedError", {
          enumerable: !0,
          get: function () {
            return O.ChainDisconnectedError;
          },
        }),
          Object.defineProperty(t, "InternalRpcError", {
            enumerable: !0,
            get: function () {
              return O.InternalRpcError;
            },
          }),
          Object.defineProperty(t, "InvalidInputRpcError", {
            enumerable: !0,
            get: function () {
              return O.InvalidInputRpcError;
            },
          }),
          Object.defineProperty(t, "InvalidParamsRpcError", {
            enumerable: !0,
            get: function () {
              return O.InvalidParamsRpcError;
            },
          }),
          Object.defineProperty(t, "InvalidRequestRpcError", {
            enumerable: !0,
            get: function () {
              return O.InvalidRequestRpcError;
            },
          }),
          Object.defineProperty(t, "JsonRpcVersionUnsupportedError", {
            enumerable: !0,
            get: function () {
              return O.JsonRpcVersionUnsupportedError;
            },
          }),
          Object.defineProperty(t, "LimitExceededRpcError", {
            enumerable: !0,
            get: function () {
              return O.LimitExceededRpcError;
            },
          }),
          Object.defineProperty(t, "MethodNotFoundRpcError", {
            enumerable: !0,
            get: function () {
              return O.MethodNotFoundRpcError;
            },
          }),
          Object.defineProperty(t, "MethodNotSupportedRpcError", {
            enumerable: !0,
            get: function () {
              return O.MethodNotSupportedRpcError;
            },
          }),
          Object.defineProperty(t, "ParseRpcError", {
            enumerable: !0,
            get: function () {
              return O.ParseRpcError;
            },
          }),
          Object.defineProperty(t, "ProviderDisconnectedError", {
            enumerable: !0,
            get: function () {
              return O.ProviderDisconnectedError;
            },
          }),
          Object.defineProperty(t, "ProviderRpcError", {
            enumerable: !0,
            get: function () {
              return O.ProviderRpcError;
            },
          }),
          Object.defineProperty(t, "ResourceNotFoundRpcError", {
            enumerable: !0,
            get: function () {
              return O.ResourceNotFoundRpcError;
            },
          }),
          Object.defineProperty(t, "ResourceUnavailableRpcError", {
            enumerable: !0,
            get: function () {
              return O.ResourceUnavailableRpcError;
            },
          }),
          Object.defineProperty(t, "RpcError", {
            enumerable: !0,
            get: function () {
              return O.RpcError;
            },
          }),
          Object.defineProperty(t, "SwitchChainError", {
            enumerable: !0,
            get: function () {
              return O.SwitchChainError;
            },
          }),
          Object.defineProperty(t, "TransactionRejectedRpcError", {
            enumerable: !0,
            get: function () {
              return O.TransactionRejectedRpcError;
            },
          }),
          Object.defineProperty(t, "UnauthorizedProviderError", {
            enumerable: !0,
            get: function () {
              return O.UnauthorizedProviderError;
            },
          }),
          Object.defineProperty(t, "UnknownRpcError", {
            enumerable: !0,
            get: function () {
              return O.UnknownRpcError;
            },
          }),
          Object.defineProperty(t, "UnsupportedProviderMethodError", {
            enumerable: !0,
            get: function () {
              return O.UnsupportedProviderMethodError;
            },
          }),
          Object.defineProperty(t, "UserRejectedRequestError", {
            enumerable: !0,
            get: function () {
              return O.UserRejectedRequestError;
            },
          });
        var I = n(28890);
        Object.defineProperty(t, "ChainDoesNotSupportContract", {
          enumerable: !0,
          get: function () {
            return I.ChainDoesNotSupportContract;
          },
        }),
          Object.defineProperty(t, "ChainMismatchError", {
            enumerable: !0,
            get: function () {
              return I.ChainMismatchError;
            },
          }),
          Object.defineProperty(t, "ChainNotFoundError", {
            enumerable: !0,
            get: function () {
              return I.ChainNotFoundError;
            },
          }),
          Object.defineProperty(t, "ClientChainNotConfiguredError", {
            enumerable: !0,
            get: function () {
              return I.ClientChainNotConfiguredError;
            },
          }),
          Object.defineProperty(t, "InvalidChainIdError", {
            enumerable: !0,
            get: function () {
              return I.InvalidChainIdError;
            },
          });
        var A = n(11602);
        Object.defineProperty(t, "DataLengthTooLongError", {
          enumerable: !0,
          get: function () {
            return A.DataLengthTooLongError;
          },
        }),
          Object.defineProperty(t, "DataLengthTooShortError", {
            enumerable: !0,
            get: function () {
              return A.DataLengthTooShortError;
            },
          }),
          Object.defineProperty(t, "InvalidBytesBooleanError", {
            enumerable: !0,
            get: function () {
              return A.InvalidBytesBooleanError;
            },
          }),
          Object.defineProperty(t, "IntegerOutOfRangeError", {
            enumerable: !0,
            get: function () {
              return A.IntegerOutOfRangeError;
            },
          }),
          Object.defineProperty(t, "InvalidHexBooleanError", {
            enumerable: !0,
            get: function () {
              return A.InvalidHexBooleanError;
            },
          }),
          Object.defineProperty(t, "InvalidHexValueError", {
            enumerable: !0,
            get: function () {
              return A.InvalidHexValueError;
            },
          }),
          Object.defineProperty(t, "OffsetOutOfBoundsError", {
            enumerable: !0,
            get: function () {
              return A.OffsetOutOfBoundsError;
            },
          }),
          Object.defineProperty(t, "SizeOverflowError", {
            enumerable: !0,
            get: function () {
              return A.SizeOverflowError;
            },
          });
        var k = n(48710);
        Object.defineProperty(t, "EnsAvatarUriResolutionError", {
          enumerable: !0,
          get: function () {
            return k.EnsAvatarUriResolutionError;
          },
        }),
          Object.defineProperty(t, "EnsAvatarInvalidNftUriError", {
            enumerable: !0,
            get: function () {
              return k.EnsAvatarInvalidNftUriError;
            },
          }),
          Object.defineProperty(t, "EnsAvatarUnsupportedNamespaceError", {
            enumerable: !0,
            get: function () {
              return k.EnsAvatarUnsupportedNamespaceError;
            },
          });
        var j = n(20028);
        Object.defineProperty(t, "EstimateGasExecutionError", {
          enumerable: !0,
          get: function () {
            return j.EstimateGasExecutionError;
          },
        });
        var B = n(31027);
        Object.defineProperty(t, "ExecutionRevertedError", {
          enumerable: !0,
          get: function () {
            return B.ExecutionRevertedError;
          },
        }),
          Object.defineProperty(t, "FeeCapTooHighError", {
            enumerable: !0,
            get: function () {
              return B.FeeCapTooHighError;
            },
          }),
          Object.defineProperty(t, "FeeCapTooLowError", {
            enumerable: !0,
            get: function () {
              return B.FeeCapTooLowError;
            },
          }),
          Object.defineProperty(t, "InsufficientFundsError", {
            enumerable: !0,
            get: function () {
              return B.InsufficientFundsError;
            },
          }),
          Object.defineProperty(t, "IntrinsicGasTooHighError", {
            enumerable: !0,
            get: function () {
              return B.IntrinsicGasTooHighError;
            },
          }),
          Object.defineProperty(t, "IntrinsicGasTooLowError", {
            enumerable: !0,
            get: function () {
              return B.IntrinsicGasTooLowError;
            },
          }),
          Object.defineProperty(t, "NonceMaxValueError", {
            enumerable: !0,
            get: function () {
              return B.NonceMaxValueError;
            },
          }),
          Object.defineProperty(t, "NonceTooHighError", {
            enumerable: !0,
            get: function () {
              return B.NonceTooHighError;
            },
          }),
          Object.defineProperty(t, "NonceTooLowError", {
            enumerable: !0,
            get: function () {
              return B.NonceTooLowError;
            },
          }),
          Object.defineProperty(t, "TipAboveFeeCapError", {
            enumerable: !0,
            get: function () {
              return B.TipAboveFeeCapError;
            },
          }),
          Object.defineProperty(t, "TransactionTypeNotSupportedError", {
            enumerable: !0,
            get: function () {
              return B.TransactionTypeNotSupportedError;
            },
          }),
          Object.defineProperty(t, "UnknownNodeError", {
            enumerable: !0,
            get: function () {
              return B.UnknownNodeError;
            },
          });
        var M = n(21631);
        Object.defineProperty(t, "FilterTypeNotSupportedError", {
          enumerable: !0,
          get: function () {
            return M.FilterTypeNotSupportedError;
          },
        });
        var N = n(4880);
        Object.defineProperty(t, "HttpRequestError", {
          enumerable: !0,
          get: function () {
            return N.HttpRequestError;
          },
        }),
          Object.defineProperty(t, "RpcRequestError", {
            enumerable: !0,
            get: function () {
              return N.RpcRequestError;
            },
          }),
          Object.defineProperty(t, "TimeoutError", {
            enumerable: !0,
            get: function () {
              return N.TimeoutError;
            },
          }),
          Object.defineProperty(t, "WebSocketRequestError", {
            enumerable: !0,
            get: function () {
              return N.WebSocketRequestError;
            },
          });
        var D = n(77295);
        Object.defineProperty(t, "InvalidAddressError", {
          enumerable: !0,
          get: function () {
            return D.InvalidAddressError;
          },
        });
        var R = n(72861);
        Object.defineProperty(t, "FeeConflictError", {
          enumerable: !0,
          get: function () {
            return R.FeeConflictError;
          },
        }),
          Object.defineProperty(t, "InvalidLegacyVError", {
            enumerable: !0,
            get: function () {
              return R.InvalidLegacyVError;
            },
          }),
          Object.defineProperty(t, "InvalidSerializableTransactionError", {
            enumerable: !0,
            get: function () {
              return R.InvalidSerializableTransactionError;
            },
          }),
          Object.defineProperty(t, "InvalidSerializedTransactionError", {
            enumerable: !0,
            get: function () {
              return R.InvalidSerializedTransactionError;
            },
          }),
          Object.defineProperty(t, "InvalidSerializedTransactionTypeError", {
            enumerable: !0,
            get: function () {
              return R.InvalidSerializedTransactionTypeError;
            },
          }),
          Object.defineProperty(t, "InvalidStorageKeySizeError", {
            enumerable: !0,
            get: function () {
              return R.InvalidStorageKeySizeError;
            },
          }),
          Object.defineProperty(t, "TransactionExecutionError", {
            enumerable: !0,
            get: function () {
              return R.TransactionExecutionError;
            },
          }),
          Object.defineProperty(t, "TransactionNotFoundError", {
            enumerable: !0,
            get: function () {
              return R.TransactionNotFoundError;
            },
          }),
          Object.defineProperty(t, "TransactionReceiptNotFoundError", {
            enumerable: !0,
            get: function () {
              return R.TransactionReceiptNotFoundError;
            },
          }),
          Object.defineProperty(t, "WaitForTransactionReceiptTimeoutError", {
            enumerable: !0,
            get: function () {
              return R.WaitForTransactionReceiptTimeoutError;
            },
          });
        var F = n(60771);
        Object.defineProperty(t, "SizeExceedsPaddingSizeError", {
          enumerable: !0,
          get: function () {
            return F.SizeExceedsPaddingSizeError;
          },
        }),
          Object.defineProperty(t, "SliceOffsetOutOfBoundsError", {
            enumerable: !0,
            get: function () {
              return F.SliceOffsetOutOfBoundsError;
            },
          });
        var L = n(3927);
        Object.defineProperty(t, "UrlRequiredError", {
          enumerable: !0,
          get: function () {
            return L.UrlRequiredError;
          },
        });
        var U = n(82955);
        Object.defineProperty(t, "labelhash", {
          enumerable: !0,
          get: function () {
            return U.labelhash;
          },
        });
        var $ = n(41177);
        Object.defineProperty(t, "namehash", {
          enumerable: !0,
          get: function () {
            return $.namehash;
          },
        });
        var q = n(49906);
        Object.defineProperty(t, "defineBlock", {
          enumerable: !0,
          get: function () {
            return q.defineBlock;
          },
        }),
          Object.defineProperty(t, "formatBlock", {
            enumerable: !0,
            get: function () {
              return q.formatBlock;
            },
          });
        var H = n(47960);
        Object.defineProperty(t, "formatLog", {
          enumerable: !0,
          get: function () {
            return H.formatLog;
          },
        });
        var z = n(42716);
        Object.defineProperty(t, "decodeAbiParameters", {
          enumerable: !0,
          get: function () {
            return z.decodeAbiParameters;
          },
        });
        var G = n(27906);
        Object.defineProperty(t, "decodeDeployData", {
          enumerable: !0,
          get: function () {
            return G.decodeDeployData;
          },
        });
        var W = n(73843);
        Object.defineProperty(t, "decodeErrorResult", {
          enumerable: !0,
          get: function () {
            return W.decodeErrorResult;
          },
        });
        var V = n(57573);
        Object.defineProperty(t, "decodeEventLog", {
          enumerable: !0,
          get: function () {
            return V.decodeEventLog;
          },
        });
        var K = n(59453);
        Object.defineProperty(t, "decodeFunctionData", {
          enumerable: !0,
          get: function () {
            return K.decodeFunctionData;
          },
        });
        var Z = n(52366);
        Object.defineProperty(t, "decodeFunctionResult", {
          enumerable: !0,
          get: function () {
            return Z.decodeFunctionResult;
          },
        });
        var J = n(79885);
        Object.defineProperty(t, "encodeAbiParameters", {
          enumerable: !0,
          get: function () {
            return J.encodeAbiParameters;
          },
        });
        var Y = n(1099);
        Object.defineProperty(t, "encodeDeployData", {
          enumerable: !0,
          get: function () {
            return Y.encodeDeployData;
          },
        });
        var X = n(55663);
        Object.defineProperty(t, "encodeErrorResult", {
          enumerable: !0,
          get: function () {
            return X.encodeErrorResult;
          },
        });
        var Q = n(86778);
        Object.defineProperty(t, "encodeEventTopics", {
          enumerable: !0,
          get: function () {
            return Q.encodeEventTopics;
          },
        });
        var ee = n(71124);
        Object.defineProperty(t, "encodeFunctionData", {
          enumerable: !0,
          get: function () {
            return ee.encodeFunctionData;
          },
        });
        var et = n(41325);
        Object.defineProperty(t, "encodeFunctionResult", {
          enumerable: !0,
          get: function () {
            return et.encodeFunctionResult;
          },
        });
        var en = n(64056);
        Object.defineProperty(t, "defineTransaction", {
          enumerable: !0,
          get: function () {
            return en.defineTransaction;
          },
        }),
          Object.defineProperty(t, "formatTransaction", {
            enumerable: !0,
            get: function () {
              return en.formatTransaction;
            },
          }),
          Object.defineProperty(t, "transactionType", {
            enumerable: !0,
            get: function () {
              return en.transactionType;
            },
          });
        var er = n(37262);
        Object.defineProperty(t, "defineTransactionReceipt", {
          enumerable: !0,
          get: function () {
            return er.defineTransactionReceipt;
          },
        }),
          Object.defineProperty(t, "formatTransactionReceipt", {
            enumerable: !0,
            get: function () {
              return er.formatTransactionReceipt;
            },
          });
        var ei = n(14928);
        Object.defineProperty(t, "defineTransactionRequest", {
          enumerable: !0,
          get: function () {
            return ei.defineTransactionRequest;
          },
        }),
          Object.defineProperty(t, "formatTransactionRequest", {
            enumerable: !0,
            get: function () {
              return ei.formatTransactionRequest;
            },
          }),
          Object.defineProperty(t, "rpcTransactionType", {
            enumerable: !0,
            get: function () {
              return ei.rpcTransactionType;
            },
          });
        var ea = n(65775);
        Object.defineProperty(t, "getAbiItem", {
          enumerable: !0,
          get: function () {
            return ea.getAbiItem;
          },
        });
        var eo = n(37247);
        Object.defineProperty(t, "getContractAddress", {
          enumerable: !0,
          get: function () {
            return eo.getContractAddress;
          },
        }),
          Object.defineProperty(t, "getCreate2Address", {
            enumerable: !0,
            get: function () {
              return eo.getCreate2Address;
            },
          }),
          Object.defineProperty(t, "getCreateAddress", {
            enumerable: !0,
            get: function () {
              return eo.getCreateAddress;
            },
          });
        var es = n(8711);
        Object.defineProperty(t, "getSerializedTransactionType", {
          enumerable: !0,
          get: function () {
            return es.getSerializedTransactionType;
          },
        });
        var eu = n(57080);
        Object.defineProperty(t, "getTransactionType", {
          enumerable: !0,
          get: function () {
            return eu.getTransactionType;
          },
        });
        var el = n(90696);
        Object.defineProperty(t, "hashDomain", {
          enumerable: !0,
          get: function () {
            return el.hashDomain;
          },
        }),
          Object.defineProperty(t, "hashTypedData", {
            enumerable: !0,
            get: function () {
              return el.hashTypedData;
            },
          });
        var ec = n(63184);
        Object.defineProperty(t, "compactSignatureToSignature", {
          enumerable: !0,
          get: function () {
            return ec.compactSignatureToSignature;
          },
        });
        var ed = n(86394);
        Object.defineProperty(t, "hexToCompactSignature", {
          enumerable: !0,
          get: function () {
            return ed.hexToCompactSignature;
          },
        });
        var ef = n(88312);
        Object.defineProperty(t, "hexToSignature", {
          enumerable: !0,
          get: function () {
            return ef.hexToSignature;
          },
        });
        var ep = n(60830);
        Object.defineProperty(t, "recoverAddress", {
          enumerable: !0,
          get: function () {
            return ep.recoverAddress;
          },
        });
        var eh = n(59091);
        Object.defineProperty(t, "recoverMessageAddress", {
          enumerable: !0,
          get: function () {
            return eh.recoverMessageAddress;
          },
        });
        var em = n(58686);
        Object.defineProperty(t, "recoverPublicKey", {
          enumerable: !0,
          get: function () {
            return em.recoverPublicKey;
          },
        });
        var ey = n(34494);
        Object.defineProperty(t, "recoverTypedDataAddress", {
          enumerable: !0,
          get: function () {
            return ey.recoverTypedDataAddress;
          },
        });
        var eg = n(32444);
        Object.defineProperty(t, "signatureToCompactSignature", {
          enumerable: !0,
          get: function () {
            return eg.signatureToCompactSignature;
          },
        });
        var eb = n(59250);
        Object.defineProperty(t, "compactSignatureToHex", {
          enumerable: !0,
          get: function () {
            return eb.compactSignatureToHex;
          },
        });
        var ev = n(20178);
        Object.defineProperty(t, "signatureToHex", {
          enumerable: !0,
          get: function () {
            return ev.signatureToHex;
          },
        });
        var ew = n(21944);
        Object.defineProperty(t, "bytesToRlp", {
          enumerable: !0,
          get: function () {
            return ew.bytesToRlp;
          },
        }),
          Object.defineProperty(t, "hexToRlp", {
            enumerable: !0,
            get: function () {
              return ew.hexToRlp;
            },
          }),
          Object.defineProperty(t, "toRlp", {
            enumerable: !0,
            get: function () {
              return ew.toRlp;
            },
          });
        var eE = n(88444);
        Object.defineProperty(t, "verifyMessage", {
          enumerable: !0,
          get: function () {
            return eE.verifyMessage;
          },
        });
        var ex = n(38032);
        Object.defineProperty(t, "verifyTypedData", {
          enumerable: !0,
          get: function () {
            return ex.verifyTypedData;
          },
        });
        var eC = n(77365);
        Object.defineProperty(t, "assertRequest", {
          enumerable: !0,
          get: function () {
            return eC.assertRequest;
          },
        });
        var e_ = n(26121);
        Object.defineProperty(t, "assertTransactionEIP1559", {
          enumerable: !0,
          get: function () {
            return e_.assertTransactionEIP1559;
          },
        }),
          Object.defineProperty(t, "assertTransactionEIP2930", {
            enumerable: !0,
            get: function () {
              return e_.assertTransactionEIP2930;
            },
          }),
          Object.defineProperty(t, "assertTransactionLegacy", {
            enumerable: !0,
            get: function () {
              return e_.assertTransactionLegacy;
            },
          });
        var eT = n(10441);
        Object.defineProperty(t, "boolToBytes", {
          enumerable: !0,
          get: function () {
            return eT.boolToBytes;
          },
        }),
          Object.defineProperty(t, "hexToBytes", {
            enumerable: !0,
            get: function () {
              return eT.hexToBytes;
            },
          }),
          Object.defineProperty(t, "numberToBytes", {
            enumerable: !0,
            get: function () {
              return eT.numberToBytes;
            },
          }),
          Object.defineProperty(t, "stringToBytes", {
            enumerable: !0,
            get: function () {
              return eT.stringToBytes;
            },
          }),
          Object.defineProperty(t, "toBytes", {
            enumerable: !0,
            get: function () {
              return eT.toBytes;
            },
          });
        var eS = n(62002);
        Object.defineProperty(t, "boolToHex", {
          enumerable: !0,
          get: function () {
            return eS.boolToHex;
          },
        }),
          Object.defineProperty(t, "bytesToHex", {
            enumerable: !0,
            get: function () {
              return eS.bytesToHex;
            },
          }),
          Object.defineProperty(t, "numberToHex", {
            enumerable: !0,
            get: function () {
              return eS.numberToHex;
            },
          }),
          Object.defineProperty(t, "stringToHex", {
            enumerable: !0,
            get: function () {
              return eS.stringToHex;
            },
          }),
          Object.defineProperty(t, "toHex", {
            enumerable: !0,
            get: function () {
              return eS.toHex;
            },
          });
        var eP = n(35250);
        Object.defineProperty(t, "bytesToBigInt", {
          enumerable: !0,
          get: function () {
            return eP.bytesToBigInt;
          },
        }),
          Object.defineProperty(t, "bytesToBigint", {
            enumerable: !0,
            get: function () {
              return eP.bytesToBigInt;
            },
          }),
          Object.defineProperty(t, "bytesToBool", {
            enumerable: !0,
            get: function () {
              return eP.bytesToBool;
            },
          }),
          Object.defineProperty(t, "bytesToNumber", {
            enumerable: !0,
            get: function () {
              return eP.bytesToNumber;
            },
          }),
          Object.defineProperty(t, "bytesToString", {
            enumerable: !0,
            get: function () {
              return eP.bytesToString;
            },
          }),
          Object.defineProperty(t, "fromBytes", {
            enumerable: !0,
            get: function () {
              return eP.fromBytes;
            },
          });
        var eO = n(10062);
        Object.defineProperty(t, "ccipFetch", {
          enumerable: !0,
          get: function () {
            return eO.ccipFetch;
          },
        }),
          Object.defineProperty(t, "offchainLookup", {
            enumerable: !0,
            get: function () {
              return eO.offchainLookup;
            },
          }),
          Object.defineProperty(t, "offchainLookupAbiItem", {
            enumerable: !0,
            get: function () {
              return eO.offchainLookupAbiItem;
            },
          }),
          Object.defineProperty(t, "offchainLookupSignature", {
            enumerable: !0,
            get: function () {
              return eO.offchainLookupSignature;
            },
          });
        var eI = n(37456);
        Object.defineProperty(t, "concat", {
          enumerable: !0,
          get: function () {
            return eI.concat;
          },
        }),
          Object.defineProperty(t, "concatBytes", {
            enumerable: !0,
            get: function () {
              return eI.concatBytes;
            },
          }),
          Object.defineProperty(t, "concatHex", {
            enumerable: !0,
            get: function () {
              return eI.concatHex;
            },
          });
        var eA = n(81696);
        Object.defineProperty(t, "assertCurrentChain", {
          enumerable: !0,
          get: function () {
            return eA.assertCurrentChain;
          },
        });
        var ek = n(93060);
        Object.defineProperty(t, "defineChain", {
          enumerable: !0,
          get: function () {
            return ek.defineChain;
          },
        });
        var ej = n(36635);
        Object.defineProperty(t, "extractChain", {
          enumerable: !0,
          get: function () {
            return ej.extractChain;
          },
        });
        var eB = n(31693);
        Object.defineProperty(t, "getChainContractAddress", {
          enumerable: !0,
          get: function () {
            return eB.getChainContractAddress;
          },
        });
        var eM = n(20500);
        Object.defineProperty(t, "encodePacked", {
          enumerable: !0,
          get: function () {
            return eM.encodePacked;
          },
        });
        var eN = n(12183);
        Object.defineProperty(t, "formatEther", {
          enumerable: !0,
          get: function () {
            return eN.formatEther;
          },
        });
        var eD = n(60903);
        Object.defineProperty(t, "formatGwei", {
          enumerable: !0,
          get: function () {
            return eD.formatGwei;
          },
        });
        var eR = n(69719);
        Object.defineProperty(t, "formatUnits", {
          enumerable: !0,
          get: function () {
            return eR.formatUnits;
          },
        });
        var eF = n(39581);
        Object.defineProperty(t, "fromHex", {
          enumerable: !0,
          get: function () {
            return eF.fromHex;
          },
        }),
          Object.defineProperty(t, "hexToBigInt", {
            enumerable: !0,
            get: function () {
              return eF.hexToBigInt;
            },
          }),
          Object.defineProperty(t, "hexToBool", {
            enumerable: !0,
            get: function () {
              return eF.hexToBool;
            },
          }),
          Object.defineProperty(t, "hexToNumber", {
            enumerable: !0,
            get: function () {
              return eF.hexToNumber;
            },
          }),
          Object.defineProperty(t, "hexToString", {
            enumerable: !0,
            get: function () {
              return eF.hexToString;
            },
          });
        var eL = n(14498);
        Object.defineProperty(t, "fromRlp", {
          enumerable: !0,
          get: function () {
            return eL.fromRlp;
          },
        });
        var eU = n(3001);
        Object.defineProperty(t, "checksumAddress", {
          enumerable: !0,
          get: function () {
            return eU.checksumAddress;
          },
        }),
          Object.defineProperty(t, "getAddress", {
            enumerable: !0,
            get: function () {
              return eU.getAddress;
            },
          });
        var e$ = n(30548);
        Object.defineProperty(t, "getContractError", {
          enumerable: !0,
          get: function () {
            return e$.getContractError;
          },
        });
        var eq = n(29796);
        Object.defineProperty(t, "getEventSelector", {
          enumerable: !0,
          get: function () {
            return eq.getEventSelector;
          },
        });
        var eH = n(5396);
        Object.defineProperty(t, "getEventSignature", {
          enumerable: !0,
          get: function () {
            return eH.getEventSignature;
          },
        });
        var ez = n(45433);
        Object.defineProperty(t, "getFunctionSelector", {
          enumerable: !0,
          get: function () {
            return ez.getFunctionSelector;
          },
        });
        var eG = n(69682);
        Object.defineProperty(t, "getFunctionSignature", {
          enumerable: !0,
          get: function () {
            return eG.getFunctionSignature;
          },
        });
        var eW = n(19707);
        Object.defineProperty(t, "hashMessage", {
          enumerable: !0,
          get: function () {
            return eW.hashMessage;
          },
        });
        var eV = n(35129);
        Object.defineProperty(t, "isAddress", {
          enumerable: !0,
          get: function () {
            return eV.isAddress;
          },
        });
        var eK = n(93127);
        Object.defineProperty(t, "isAddressEqual", {
          enumerable: !0,
          get: function () {
            return eK.isAddressEqual;
          },
        });
        var eZ = n(76551);
        Object.defineProperty(t, "isBytes", {
          enumerable: !0,
          get: function () {
            return eZ.isBytes;
          },
        });
        var eJ = n(70213);
        Object.defineProperty(t, "isHash", {
          enumerable: !0,
          get: function () {
            return eJ.isHash;
          },
        });
        var eY = n(34323);
        Object.defineProperty(t, "isHex", {
          enumerable: !0,
          get: function () {
            return eY.isHex;
          },
        });
        var eX = n(12922);
        Object.defineProperty(t, "keccak256", {
          enumerable: !0,
          get: function () {
            return eX.keccak256;
          },
        });
        var eQ = n(91094);
        Object.defineProperty(t, "sha256", {
          enumerable: !0,
          get: function () {
            return eQ.sha256;
          },
        });
        var e0 = n(23854);
        Object.defineProperty(t, "ripemd160", {
          enumerable: !0,
          get: function () {
            return e0.ripemd160;
          },
        });
        var e1 = n(38454);
        Object.defineProperty(t, "pad", {
          enumerable: !0,
          get: function () {
            return e1.pad;
          },
        }),
          Object.defineProperty(t, "padBytes", {
            enumerable: !0,
            get: function () {
              return e1.padBytes;
            },
          }),
          Object.defineProperty(t, "padHex", {
            enumerable: !0,
            get: function () {
              return e1.padHex;
            },
          });
        var e2 = n(60285);
        Object.defineProperty(t, "parseEther", {
          enumerable: !0,
          get: function () {
            return e2.parseEther;
          },
        });
        var e6 = n(74448);
        Object.defineProperty(t, "parseGwei", {
          enumerable: !0,
          get: function () {
            return e6.parseGwei;
          },
        });
        var e3 = n(69531);
        Object.defineProperty(t, "parseTransaction", {
          enumerable: !0,
          get: function () {
            return e3.parseTransaction;
          },
        });
        var e5 = n(39190);
        Object.defineProperty(t, "parseUnits", {
          enumerable: !0,
          get: function () {
            return e5.parseUnits;
          },
        });
        var e4 = n(37200);
        Object.defineProperty(t, "serializeAccessList", {
          enumerable: !0,
          get: function () {
            return e4.serializeAccessList;
          },
        });
        var e8 = n(88165);
        Object.defineProperty(t, "serializeTransaction", {
          enumerable: !0,
          get: function () {
            return e8.serializeTransaction;
          },
        });
        var e7 = n(61539);
        Object.defineProperty(t, "size", {
          enumerable: !0,
          get: function () {
            return e7.size;
          },
        });
        var e9 = n(62870);
        Object.defineProperty(t, "slice", {
          enumerable: !0,
          get: function () {
            return e9.slice;
          },
        }),
          Object.defineProperty(t, "sliceBytes", {
            enumerable: !0,
            get: function () {
              return e9.sliceBytes;
            },
          }),
          Object.defineProperty(t, "sliceHex", {
            enumerable: !0,
            get: function () {
              return e9.sliceHex;
            },
          });
        var te = n(29803);
        Object.defineProperty(t, "stringify", {
          enumerable: !0,
          get: function () {
            return te.stringify;
          },
        });
        var tt = n(29957);
        Object.defineProperty(t, "trim", {
          enumerable: !0,
          get: function () {
            return tt.trim;
          },
        });
        var tn = n(85024);
        Object.defineProperty(t, "validateTypedData", {
          enumerable: !0,
          get: function () {
            return tn.validateTypedData;
          },
        }),
          Object.defineProperty(t, "domainSeparator", {
            enumerable: !0,
            get: function () {
              return tn.domainSeparator;
            },
          }),
          Object.defineProperty(t, "getTypesForEIP712Domain", {
            enumerable: !0,
            get: function () {
              return tn.getTypesForEIP712Domain;
            },
          });
      },
      42716: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.decodeAbiParameters = void 0);
        let r = n(65413),
          i = n(3001),
          a = n(61539),
          o = n(62870),
          s = n(29957),
          u = n(39581),
          l = n(79885);
        function c(e) {
          let { type: t } = e;
          if ("string" === t || "bytes" === t || t.endsWith("[]")) return !0;
          if ("tuple" === t) return e.components?.some(c);
          let n = (0, l.getArrayComponents)(e.type);
          return !!(n && c({ ...e, type: n[1] }));
        }
        t.decodeAbiParameters = function (e, t) {
          if ("0x" === t && e.length > 0)
            throw new r.AbiDecodingZeroDataError();
          if ((0, a.size)(t) && 32 > (0, a.size)(t))
            throw new r.AbiDecodingDataSizeTooSmallError({
              data: t,
              params: e,
              size: (0, a.size)(t),
            });
          return (function ({ data: e, params: t }) {
            let n = [],
              d = 0;
            for (let f = 0; f < t.length; f++) {
              if (d >= (0, a.size)(e))
                throw new r.AbiDecodingDataSizeTooSmallError({
                  data: e,
                  params: t,
                  size: (0, a.size)(e),
                });
              let p = t[f],
                { consumed: h, value: m } = (function e({
                  data: t,
                  param: n,
                  position: a,
                }) {
                  let d = (0, l.getArrayComponents)(n.type);
                  if (d) {
                    let [r, i] = d;
                    return (function (t, { param: n, length: r, position: i }) {
                      if (!r) {
                        let r = (0, u.hexToNumber)(
                            (0, o.slice)(t, i, i + 32, { strict: !0 })
                          ),
                          a = (0, u.hexToNumber)(
                            (0, o.slice)(t, r, r + 32, { strict: !0 })
                          ),
                          s = 0,
                          l = [];
                        for (let i = 0; i < a; ++i) {
                          let i = e({
                            data: (0, o.slice)(t, r + 32),
                            param: n,
                            position: s,
                          });
                          (s += i.consumed), l.push(i.value);
                        }
                        return { value: l, consumed: 32 };
                      }
                      if (c(n)) {
                        let a = (0, l.getArrayComponents)(n.type),
                          s = !a?.[0],
                          c = 0,
                          d = [];
                        for (let a = 0; a < r; ++a) {
                          let r = (0, u.hexToNumber)(
                              (0, o.slice)(t, i, i + 32, { strict: !0 })
                            ),
                            l = e({
                              data: (0, o.slice)(t, r),
                              param: n,
                              position: s ? c : 32 * a,
                            });
                          (c += l.consumed), d.push(l.value);
                        }
                        return { value: d, consumed: 32 };
                      }
                      let a = 0,
                        s = [];
                      for (let o = 0; o < r; ++o) {
                        let r = e({ data: t, param: n, position: i + a });
                        (a += r.consumed), s.push(r.value);
                      }
                      return { value: s, consumed: a };
                    })(t, { length: r, param: { ...n, type: i }, position: a });
                  }
                  if ("tuple" === n.type)
                    return (function (t, { param: n, position: r }) {
                      let i =
                          0 === n.components.length ||
                          n.components.some(({ name: e }) => !e),
                        a = i ? [] : {},
                        s = 0;
                      if (c(n)) {
                        let l = (0, u.hexToNumber)(
                          (0, o.slice)(t, r, r + 32, { strict: !0 })
                        );
                        for (let r = 0; r < n.components.length; ++r) {
                          let u = n.components[r],
                            c = e({
                              data: (0, o.slice)(t, l),
                              param: u,
                              position: s,
                            });
                          (s += c.consumed), (a[i ? r : u?.name] = c.value);
                        }
                        return { consumed: 32, value: a };
                      }
                      for (let o = 0; o < n.components.length; ++o) {
                        let u = n.components[o],
                          l = e({ data: t, param: u, position: r + s });
                        (s += l.consumed), (a[i ? o : u?.name] = l.value);
                      }
                      return { consumed: s, value: a };
                    })(t, { param: n, position: a });
                  if ("string" === n.type)
                    return (function (e, { position: t }) {
                      let n = (0, u.hexToNumber)(
                          (0, o.slice)(e, t, t + 32, { strict: !0 })
                        ),
                        r = (0, u.hexToNumber)(
                          (0, o.slice)(e, n, n + 32, { strict: !0 })
                        );
                      if (0 === r) return { consumed: 32, value: "" };
                      let i = (0, u.hexToString)(
                        (0, s.trim)(
                          (0, o.slice)(e, n + 32, n + 32 + r, { strict: !0 })
                        )
                      );
                      return { consumed: 32, value: i };
                    })(t, { position: a });
                  if (n.type.startsWith("bytes"))
                    return (function (e, { param: t, position: n }) {
                      let [r, i] = t.type.split("bytes");
                      if (!i) {
                        let t = (0, u.hexToNumber)(
                            (0, o.slice)(e, n, n + 32, { strict: !0 })
                          ),
                          r = (0, u.hexToNumber)(
                            (0, o.slice)(e, t, t + 32, { strict: !0 })
                          );
                        if (0 === r) return { consumed: 32, value: "0x" };
                        let i = (0, o.slice)(e, t + 32, t + 32 + r, {
                          strict: !0,
                        });
                        return { consumed: 32, value: i };
                      }
                      let a = (0, o.slice)(e, n, n + parseInt(i), {
                        strict: !0,
                      });
                      return { consumed: 32, value: a };
                    })(t, { param: n, position: a });
                  let f = (0, o.slice)(t, a, a + 32, { strict: !0 });
                  if (n.type.startsWith("uint") || n.type.startsWith("int"))
                    return (function (e, { param: t }) {
                      let n = t.type.startsWith("int"),
                        r = parseInt(t.type.split("int")[1] || "256");
                      return {
                        consumed: 32,
                        value:
                          r > 48
                            ? (0, u.hexToBigInt)(e, { signed: n })
                            : (0, u.hexToNumber)(e, { signed: n }),
                      };
                    })(f, { param: n });
                  if ("address" === n.type)
                    return {
                      consumed: 32,
                      value: (0, i.checksumAddress)((0, o.slice)(f, -20)),
                    };
                  if ("bool" === n.type)
                    return { consumed: 32, value: (0, u.hexToBool)(f) };
                  throw new r.InvalidAbiDecodingTypeError(n.type, {
                    docsPath: "/docs/contract/decodeAbiParameters",
                  });
                })({ data: e, param: p, position: d });
              n.push(m), (d += h);
            }
            return n;
          })({ data: t, params: e });
        };
      },
      27906: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.decodeDeployData = void 0);
        let r = n(65413),
          i = n(42716),
          a = "/docs/contract/decodeDeployData";
        t.decodeDeployData = function ({ abi: e, bytecode: t, data: n }) {
          if (n === t) return { bytecode: t };
          let o = e.find((e) => "type" in e && "constructor" === e.type);
          if (!o) throw new r.AbiConstructorNotFoundError({ docsPath: a });
          if (!("inputs" in o) || !o.inputs || 0 === o.inputs.length)
            throw new r.AbiConstructorParamsNotFoundError({ docsPath: a });
          let s = (0, i.decodeAbiParameters)(o.inputs, `0x${n.replace(t, "")}`);
          return { args: s, bytecode: t };
        };
      },
      73843: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.decodeErrorResult = void 0);
        let r = n(55300),
          i = n(65413),
          a = n(62870),
          o = n(45433),
          s = n(42716),
          u = n(99636);
        t.decodeErrorResult = function ({ abi: e, data: t }) {
          let n = (0, a.slice)(t, 0, 4);
          if ("0x" === n) throw new i.AbiDecodingZeroDataError();
          let l = [...(e || []), r.solidityError, r.solidityPanic],
            c = l.find(
              (e) =>
                "error" === e.type &&
                n === (0, o.getFunctionSelector)((0, u.formatAbiItem)(e))
            );
          if (!c)
            throw new i.AbiErrorSignatureNotFoundError(n, {
              docsPath: "/docs/contract/decodeErrorResult",
            });
          return {
            abiItem: c,
            args:
              "inputs" in c && c.inputs && c.inputs.length > 0
                ? (0, s.decodeAbiParameters)(c.inputs, (0, a.slice)(t, 4))
                : void 0,
            errorName: c.name,
          };
        };
      },
      57573: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.decodeEventLog = void 0);
        let r = n(65413),
          i = n(29796),
          a = n(42716),
          o = n(99636),
          s = "/docs/contract/decodeEventLog";
        t.decodeEventLog = function ({
          abi: e,
          data: t,
          strict: n,
          topics: u,
        }) {
          let l = n ?? !0,
            [c, ...d] = u;
          if (!c)
            throw new r.AbiEventSignatureEmptyTopicsError({ docsPath: s });
          let f = e.find(
            (e) =>
              "event" === e.type &&
              c === (0, i.getEventSelector)((0, o.formatAbiItem)(e))
          );
          if (!(f && "name" in f) || "event" !== f.type)
            throw new r.AbiEventSignatureNotFoundError(c, { docsPath: s });
          let { name: p, inputs: h } = f,
            m = h?.some((e) => !("name" in e && e.name)),
            y = m ? [] : {},
            g = h.filter((e) => "indexed" in e && e.indexed);
          for (let e = 0; e < g.length; e++) {
            let t = g[e],
              n = d[e];
            if (!n)
              throw new r.DecodeLogTopicsMismatch({ abiItem: f, param: t });
            y[t.name || e] = (function ({ param: e, value: t }) {
              if (
                "string" === e.type ||
                "bytes" === e.type ||
                "tuple" === e.type ||
                e.type.match(/^(.*)\[(\d+)?\]$/)
              )
                return t;
              let n = (0, a.decodeAbiParameters)([e], t) || [];
              return n[0];
            })({ param: t, value: n });
          }
          let b = h.filter((e) => !("indexed" in e && e.indexed));
          if (b.length > 0) {
            if (t && "0x" !== t)
              try {
                let e = (0, a.decodeAbiParameters)(b, t);
                if (e) {
                  if (m) y = [...y, ...e];
                  else for (let t = 0; t < b.length; t++) y[b[t].name] = e[t];
                }
              } catch (e) {
                if (l) {
                  if (e instanceof r.AbiDecodingDataSizeTooSmallError)
                    throw new r.DecodeLogDataMismatch({
                      abiItem: f,
                      data: e.data,
                      params: e.params,
                      size: e.size,
                    });
                  throw e;
                }
              }
            else if (l)
              throw new r.DecodeLogDataMismatch({
                abiItem: f,
                data: "0x",
                params: b,
                size: 0,
              });
          }
          return {
            eventName: p,
            args: Object.values(y).length > 0 ? y : void 0,
          };
        };
      },
      59453: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.decodeFunctionData = void 0);
        let r = n(65413),
          i = n(62870),
          a = n(45433),
          o = n(42716),
          s = n(99636);
        t.decodeFunctionData = function ({ abi: e, data: t }) {
          let n = (0, i.slice)(t, 0, 4),
            u = e.find(
              (e) =>
                "function" === e.type &&
                n === (0, a.getFunctionSelector)((0, s.formatAbiItem)(e))
            );
          if (!u)
            throw new r.AbiFunctionSignatureNotFoundError(n, {
              docsPath: "/docs/contract/decodeFunctionData",
            });
          return {
            functionName: u.name,
            args:
              "inputs" in u && u.inputs && u.inputs.length > 0
                ? (0, o.decodeAbiParameters)(u.inputs, (0, i.slice)(t, 4))
                : void 0,
          };
        };
      },
      52366: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.decodeFunctionResult = void 0);
        let r = n(65413),
          i = n(42716),
          a = n(65775),
          o = "/docs/contract/decodeFunctionResult";
        t.decodeFunctionResult = function ({
          abi: e,
          args: t,
          functionName: n,
          data: s,
        }) {
          let u = e[0];
          if (n && !(u = (0, a.getAbiItem)({ abi: e, args: t, name: n })))
            throw new r.AbiFunctionNotFoundError(n, { docsPath: o });
          if ("function" !== u.type)
            throw new r.AbiFunctionNotFoundError(void 0, { docsPath: o });
          if (!u.outputs)
            throw new r.AbiFunctionOutputsNotFoundError(u.name, {
              docsPath: o,
            });
          let l = (0, i.decodeAbiParameters)(u.outputs, s);
          return l && l.length > 1 ? l : l && 1 === l.length ? l[0] : void 0;
        };
      },
      79885: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getArrayComponents = t.encodeAbiParameters = void 0);
        let r = n(65413),
          i = n(77295),
          a = n(35129),
          o = n(37456),
          s = n(38454),
          u = n(61539),
          l = n(62870),
          c = n(62002);
        function d(e) {
          let t = 0;
          for (let n = 0; n < e.length; n++) {
            let { dynamic: r, encoded: i } = e[n];
            r ? (t += 32) : (t += (0, u.size)(i));
          }
          let n = [],
            r = [],
            i = 0;
          for (let a = 0; a < e.length; a++) {
            let { dynamic: o, encoded: s } = e[a];
            o
              ? (n.push((0, c.numberToHex)(t + i, { size: 32 })),
                r.push(s),
                (i += (0, u.size)(s)))
              : n.push(s);
          }
          return (0, o.concat)([...n, ...r]);
        }
        function f(e) {
          let t = e.match(/^(.*)\[(\d+)?\]$/);
          return t ? [t[2] ? Number(t[2]) : null, t[1]] : void 0;
        }
        (t.encodeAbiParameters = function (e, t) {
          if (e.length !== t.length)
            throw new r.AbiEncodingLengthMismatchError({
              expectedLength: e.length,
              givenLength: t.length,
            });
          let n = (function ({ params: e, values: t }) {
              let n = [];
              for (let p = 0; p < e.length; p++)
                n.push(
                  (function e({ param: t, value: n }) {
                    let p = f(t.type);
                    if (p) {
                      let [i, a] = p;
                      return (function (t, { length: n, param: i }) {
                        let a = null === n;
                        if (!Array.isArray(t)) throw new r.InvalidArrayError(t);
                        if (!a && t.length !== n)
                          throw new r.AbiEncodingArrayLengthMismatchError({
                            expectedLength: n,
                            givenLength: t.length,
                            type: `${i.type}[${n}]`,
                          });
                        let s = !1,
                          u = [];
                        for (let n = 0; n < t.length; n++) {
                          let r = e({ param: i, value: t[n] });
                          r.dynamic && (s = !0), u.push(r);
                        }
                        if (a || s) {
                          let e = d(u);
                          if (a) {
                            let t = (0, c.numberToHex)(u.length, { size: 32 });
                            return {
                              dynamic: !0,
                              encoded: u.length > 0 ? (0, o.concat)([t, e]) : t,
                            };
                          }
                          if (s) return { dynamic: !0, encoded: e };
                        }
                        return {
                          dynamic: !1,
                          encoded: (0, o.concat)(u.map(({ encoded: e }) => e)),
                        };
                      })(n, { length: i, param: { ...t, type: a } });
                    }
                    if ("tuple" === t.type)
                      return (function (t, { param: n }) {
                        let r = !1,
                          i = [];
                        for (let a = 0; a < n.components.length; a++) {
                          let o = n.components[a],
                            s = Array.isArray(t) ? a : o.name,
                            u = e({ param: o, value: t[s] });
                          i.push(u), u.dynamic && (r = !0);
                        }
                        return {
                          dynamic: r,
                          encoded: r
                            ? d(i)
                            : (0, o.concat)(i.map(({ encoded: e }) => e)),
                        };
                      })(n, { param: t });
                    if ("address" === t.type)
                      return (function (e) {
                        if (!(0, a.isAddress)(e))
                          throw new i.InvalidAddressError({ address: e });
                        return {
                          dynamic: !1,
                          encoded: (0, s.padHex)(e.toLowerCase()),
                        };
                      })(n);
                    if ("bool" === t.type)
                      return {
                        dynamic: !1,
                        encoded: (0, s.padHex)((0, c.boolToHex)(n)),
                      };
                    if (t.type.startsWith("uint") || t.type.startsWith("int")) {
                      let e = t.type.startsWith("int");
                      return (function (e, { signed: t }) {
                        return {
                          dynamic: !1,
                          encoded: (0, c.numberToHex)(e, {
                            size: 32,
                            signed: t,
                          }),
                        };
                      })(n, { signed: e });
                    }
                    if (t.type.startsWith("bytes"))
                      return (function (e, { param: t }) {
                        let [, n] = t.type.split("bytes"),
                          i = (0, u.size)(e);
                        if (!n) {
                          let t = e;
                          return (
                            i % 32 != 0 &&
                              (t = (0, s.padHex)(t, {
                                dir: "right",
                                size: 32 * Math.ceil((e.length - 2) / 2 / 32),
                              })),
                            {
                              dynamic: !0,
                              encoded: (0, o.concat)([
                                (0, s.padHex)(
                                  (0, c.numberToHex)(i, { size: 32 })
                                ),
                                t,
                              ]),
                            }
                          );
                        }
                        if (i !== parseInt(n))
                          throw new r.AbiEncodingBytesSizeMismatchError({
                            expectedSize: parseInt(n),
                            value: e,
                          });
                        return {
                          dynamic: !1,
                          encoded: (0, s.padHex)(e, { dir: "right" }),
                        };
                      })(n, { param: t });
                    if ("string" === t.type)
                      return (function (e) {
                        let t = (0, c.stringToHex)(e),
                          n = Math.ceil((0, u.size)(t) / 32),
                          r = [];
                        for (let e = 0; e < n; e++)
                          r.push(
                            (0, s.padHex)(
                              (0, l.slice)(t, 32 * e, (e + 1) * 32),
                              { dir: "right" }
                            )
                          );
                        return {
                          dynamic: !0,
                          encoded: (0, o.concat)([
                            (0, s.padHex)(
                              (0, c.numberToHex)((0, u.size)(t), { size: 32 })
                            ),
                            ...r,
                          ]),
                        };
                      })(n);
                    throw new r.InvalidAbiEncodingTypeError(t.type, {
                      docsPath: "/docs/contract/encodeAbiParameters",
                    });
                  })({ param: e[p], value: t[p] })
                );
              return n;
            })({ params: e, values: t }),
            p = d(n);
          return 0 === p.length ? "0x" : p;
        }),
          (t.getArrayComponents = f);
      },
      1099: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.encodeDeployData = void 0);
        let r = n(65413),
          i = n(37456),
          a = n(79885),
          o = "/docs/contract/encodeDeployData";
        t.encodeDeployData = function ({ abi: e, args: t, bytecode: n }) {
          if (!t || 0 === t.length) return n;
          let s = e.find((e) => "type" in e && "constructor" === e.type);
          if (!s) throw new r.AbiConstructorNotFoundError({ docsPath: o });
          if (!("inputs" in s) || !s.inputs || 0 === s.inputs.length)
            throw new r.AbiConstructorParamsNotFoundError({ docsPath: o });
          let u = (0, a.encodeAbiParameters)(s.inputs, t);
          return (0, i.concatHex)([n, u]);
        };
      },
      55663: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.encodeErrorResult = void 0);
        let r = n(65413),
          i = n(37456),
          a = n(45433),
          o = n(79885),
          s = n(99636),
          u = n(65775),
          l = "/docs/contract/encodeErrorResult";
        t.encodeErrorResult = function ({ abi: e, errorName: t, args: n }) {
          let c = e[0];
          if (t && !(c = (0, u.getAbiItem)({ abi: e, args: n, name: t })))
            throw new r.AbiErrorNotFoundError(t, { docsPath: l });
          if ("error" !== c.type)
            throw new r.AbiErrorNotFoundError(void 0, { docsPath: l });
          let d = (0, s.formatAbiItem)(c),
            f = (0, a.getFunctionSelector)(d),
            p = "0x";
          if (n && n.length > 0) {
            if (!c.inputs)
              throw new r.AbiErrorInputsNotFoundError(c.name, { docsPath: l });
            p = (0, o.encodeAbiParameters)(c.inputs, n);
          }
          return (0, i.concatHex)([f, p]);
        };
      },
      86778: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.encodeEventTopics = void 0);
        let r = n(65413),
          i = n(21631),
          a = n(10441),
          o = n(29796),
          s = n(12922),
          u = n(79885),
          l = n(99636),
          c = n(65775);
        function d({ param: e, value: t }) {
          if ("string" === e.type || "bytes" === e.type)
            return (0, s.keccak256)((0, a.toBytes)(t));
          if ("tuple" === e.type || e.type.match(/^(.*)\[(\d+)?\]$/))
            throw new i.FilterTypeNotSupportedError(e.type);
          return (0, u.encodeAbiParameters)([e], [t]);
        }
        t.encodeEventTopics = function ({ abi: e, eventName: t, args: n }) {
          let i = e[0];
          if (t && !(i = (0, c.getAbiItem)({ abi: e, args: n, name: t })))
            throw new r.AbiEventNotFoundError(t, {
              docsPath: "/docs/contract/encodeEventTopics",
            });
          if ("event" !== i.type)
            throw new r.AbiEventNotFoundError(void 0, {
              docsPath: "/docs/contract/encodeEventTopics",
            });
          let a = (0, l.formatAbiItem)(i),
            s = (0, o.getEventSelector)(a),
            u = [];
          if (n && "inputs" in i) {
            let e = i.inputs?.filter((e) => "indexed" in e && e.indexed),
              t = Array.isArray(n)
                ? n
                : Object.values(n).length > 0
                ? e?.map((e) => n[e.name]) ?? []
                : [];
            t.length > 0 &&
              (u =
                e?.map((e, n) =>
                  Array.isArray(t[n])
                    ? t[n].map((r, i) => d({ param: e, value: t[n][i] }))
                    : t[n]
                    ? d({ param: e, value: t[n] })
                    : null
                ) ?? []);
          }
          return [s, ...u];
        };
      },
      71124: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.encodeFunctionData = void 0);
        let r = n(65413),
          i = n(37456),
          a = n(45433),
          o = n(79885),
          s = n(99636),
          u = n(65775);
        t.encodeFunctionData = function ({ abi: e, args: t, functionName: n }) {
          let l = e[0];
          if (n && !(l = (0, u.getAbiItem)({ abi: e, args: t, name: n })))
            throw new r.AbiFunctionNotFoundError(n, {
              docsPath: "/docs/contract/encodeFunctionData",
            });
          if ("function" !== l.type)
            throw new r.AbiFunctionNotFoundError(void 0, {
              docsPath: "/docs/contract/encodeFunctionData",
            });
          let c = (0, s.formatAbiItem)(l),
            d = (0, a.getFunctionSelector)(c),
            f =
              "inputs" in l && l.inputs
                ? (0, o.encodeAbiParameters)(l.inputs, t ?? [])
                : void 0;
          return (0, i.concatHex)([d, f ?? "0x"]);
        };
      },
      41325: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.encodeFunctionResult = void 0);
        let r = n(65413),
          i = n(79885),
          a = n(65775);
        t.encodeFunctionResult = function ({
          abi: e,
          functionName: t,
          result: n,
        }) {
          let o = e[0];
          if (t && !(o = (0, a.getAbiItem)({ abi: e, name: t })))
            throw new r.AbiFunctionNotFoundError(t, {
              docsPath: "/docs/contract/encodeFunctionResult",
            });
          if ("function" !== o.type)
            throw new r.AbiFunctionNotFoundError(void 0, {
              docsPath: "/docs/contract/encodeFunctionResult",
            });
          if (!o.outputs)
            throw new r.AbiFunctionOutputsNotFoundError(o.name, {
              docsPath: "/docs/contract/encodeFunctionResult",
            });
          let s = Array.isArray(n) ? n : [n];
          return (
            0 !== o.outputs.length || s[0] || (s = []),
            (0, i.encodeAbiParameters)(o.outputs, s)
          );
        };
      },
      20500: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.encodePacked = void 0);
        let r = n(65413),
          i = n(77295),
          a = n(35129),
          o = n(37456),
          s = n(38454),
          u = n(62002),
          l = n(14983);
        t.encodePacked = function (e, t) {
          if (e.length !== t.length)
            throw new r.AbiEncodingLengthMismatchError({
              expectedLength: e.length,
              givenLength: t.length,
            });
          let n = [];
          for (let c = 0; c < e.length; c++) {
            let d = e[c],
              f = t[c];
            n.push(
              (function e(t, n, c = !1) {
                if ("address" === t) {
                  if (!(0, a.isAddress)(n))
                    throw new i.InvalidAddressError({ address: n });
                  return (0, s.pad)(n.toLowerCase(), { size: c ? 32 : null });
                }
                if ("string" === t) return (0, u.stringToHex)(n);
                if ("bytes" === t) return n;
                if ("bool" === t)
                  return (0, s.pad)((0, u.boolToHex)(n), { size: c ? 32 : 1 });
                let d = t.match(l.integerRegex);
                if (d) {
                  let [e, t, r = "256"] = d,
                    i = parseInt(r) / 8;
                  return (0, u.numberToHex)(n, {
                    size: c ? 32 : i,
                    signed: "int" === t,
                  });
                }
                let f = t.match(l.bytesRegex);
                if (f) {
                  let [e, t] = f;
                  if (parseInt(t) !== (n.length - 2) / 2)
                    throw new r.BytesSizeMismatchError({
                      expectedSize: parseInt(t),
                      givenSize: (n.length - 2) / 2,
                    });
                  return (0, s.pad)(n, { dir: "right", size: c ? 32 : null });
                }
                let p = t.match(l.arrayRegex);
                if (p && Array.isArray(n)) {
                  let [t, r] = p,
                    i = [];
                  for (let t = 0; t < n.length; t++) i.push(e(r, n[t], !0));
                  return 0 === i.length ? "0x" : (0, o.concatHex)(i);
                }
                throw new r.UnsupportedPackedAbiType(t);
              })(d, f)
            );
          }
          return (0, o.concatHex)(n);
        };
      },
      99636: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.formatAbiParams = t.formatAbiItem = void 0);
        let r = n(65413);
        function i(e, { includeName: t = !1 } = {}) {
          return e
            ? e
                .map((e) =>
                  (function (e, { includeName: t }) {
                    return e.type.startsWith("tuple")
                      ? `(${i(e.components, { includeName: t })})${e.type.slice(
                          5
                        )}`
                      : e.type + (t && e.name ? ` ${e.name}` : "");
                  })(e, { includeName: t })
                )
                .join(t ? ", " : ",")
            : "";
        }
        (t.formatAbiItem = function (e, { includeName: t = !1 } = {}) {
          if ("function" !== e.type && "event" !== e.type && "error" !== e.type)
            throw new r.InvalidDefinitionTypeError(e.type);
          return `${e.name}(${i(e.inputs, { includeName: t })})`;
        }),
          (t.formatAbiParams = i);
      },
      37253: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.formatAbiItemWithArgs = void 0);
        let r = n(29803);
        t.formatAbiItemWithArgs = function ({
          abiItem: e,
          args: t,
          includeFunctionName: n = !0,
          includeName: i = !1,
        }) {
          if ("name" in e && "inputs" in e && e.inputs)
            return `${n ? e.name : ""}(${e.inputs
              .map(
                (e, n) =>
                  `${i && e.name ? `${e.name}: ` : ""}${
                    "object" == typeof t[n] ? (0, r.stringify)(t[n]) : t[n]
                  }`
              )
              .join(", ")})`;
        };
      },
      65775: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getAmbiguousTypes = t.isArgOfType = t.getAbiItem = void 0);
        let r = n(65413),
          i = n(34323),
          a = n(29796),
          o = n(45433),
          s = n(35129);
        function u(e, t) {
          let n = typeof e,
            r = t.type;
          switch (r) {
            case "address":
              return (0, s.isAddress)(e);
            case "bool":
              return "boolean" === n;
            case "function":
            case "string":
              return "string" === n;
            default:
              if ("tuple" === r && "components" in t)
                return Object.values(t.components).every((t, n) =>
                  u(Object.values(e)[n], t)
                );
              if (
                /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(
                  r
                )
              )
                return "number" === n || "bigint" === n;
              if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(r))
                return "string" === n || e instanceof Uint8Array;
              if (/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(r))
                return (
                  Array.isArray(e) &&
                  e.every((e) =>
                    u(e, { ...t, type: r.replace(/(\[[0-9]{0,}\])$/, "") })
                  )
                );
              return !1;
          }
        }
        function l(e, t, n) {
          for (let r in e) {
            let i = e[r],
              a = t[r];
            if (
              "tuple" === i.type &&
              "tuple" === a.type &&
              "components" in i &&
              "components" in a
            )
              return l(i.components, a.components, n[r]);
            let o = [i.type, a.type],
              u =
                !!(o.includes("address") && o.includes("bytes20")) ||
                (!!(
                  (o.includes("address") && o.includes("string")) ||
                  (o.includes("address") && o.includes("bytes"))
                ) &&
                  (0, s.isAddress)(n[r]));
            if (u) return o;
          }
        }
        (t.getAbiItem = function ({ abi: e, args: t = [], name: n }) {
          let s;
          let c = (0, i.isHex)(n, { strict: !1 }),
            d = e.filter((e) =>
              c
                ? "function" === e.type
                  ? (0, o.getFunctionSelector)(e) === n
                  : "event" === e.type && (0, a.getEventSelector)(e) === n
                : "name" in e && e.name === n
            );
          if (0 !== d.length) {
            if (1 === d.length) return d[0];
            for (let e of d) {
              if (!("inputs" in e)) continue;
              if (!t || 0 === t.length) {
                if (!e.inputs || 0 === e.inputs.length) return e;
                continue;
              }
              if (
                !e.inputs ||
                0 === e.inputs.length ||
                e.inputs.length !== t.length
              )
                continue;
              let n = t.every((t, n) => {
                let r = "inputs" in e && e.inputs[n];
                return !!r && u(t, r);
              });
              if (n) {
                if (s && "inputs" in s && s.inputs) {
                  let n = l(e.inputs, s.inputs, t);
                  if (n)
                    throw new r.AbiItemAmbiguityError(
                      { abiItem: e, type: n[0] },
                      { abiItem: s, type: n[1] }
                    );
                }
                s = e;
              }
            }
            return s || d[0];
          }
        }),
          (t.isArgOfType = u),
          (t.getAmbiguousTypes = l);
      },
      5203: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.publicKeyToAddress = t.parseAccount = void 0);
        var r = n(18281);
        Object.defineProperty(t, "parseAccount", {
          enumerable: !0,
          get: function () {
            return r.parseAccount;
          },
        });
        var i = n(94873);
        Object.defineProperty(t, "publicKeyToAddress", {
          enumerable: !0,
          get: function () {
            return i.publicKeyToAddress;
          },
        });
      },
      3001: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getAddress = t.checksumAddress = void 0);
        let r = n(77295),
          i = n(10441),
          a = n(12922),
          o = n(35129);
        function s(e, t) {
          let n = t ? `${t}${e.toLowerCase()}` : e.substring(2).toLowerCase(),
            r = (0, a.keccak256)((0, i.stringToBytes)(n), "bytes"),
            o = (t ? n.substring(`${t}0x`.length) : n).split("");
          for (let e = 0; e < 40; e += 2)
            r[e >> 1] >> 4 >= 8 && o[e] && (o[e] = o[e].toUpperCase()),
              (15 & r[e >> 1]) >= 8 &&
                o[e + 1] &&
                (o[e + 1] = o[e + 1].toUpperCase());
          return `0x${o.join("")}`;
        }
        (t.checksumAddress = s),
          (t.getAddress = function (e, t) {
            if (!(0, o.isAddress)(e))
              throw new r.InvalidAddressError({ address: e });
            return s(e, t);
          });
      },
      37247: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getCreate2Address =
            t.getCreateAddress =
            t.getContractAddress =
              void 0);
        let r = n(37456),
          i = n(76551),
          a = n(38454),
          o = n(62870),
          s = n(10441),
          u = n(21944),
          l = n(12922),
          c = n(3001);
        function d(e) {
          let t = (0, s.toBytes)((0, c.getAddress)(e.from)),
            n = (0, s.toBytes)(e.nonce);
          return (
            0 === n[0] && (n = new Uint8Array([])),
            (0, c.getAddress)(
              `0x${(0, l.keccak256)((0, u.toRlp)([t, n], "bytes")).slice(26)}`
            )
          );
        }
        function f(e) {
          let t = (0, s.toBytes)((0, c.getAddress)(e.from)),
            n = (0, a.pad)(
              (0, i.isBytes)(e.salt) ? e.salt : (0, s.toBytes)(e.salt),
              { size: 32 }
            ),
            u =
              "bytecodeHash" in e
                ? (0, i.isBytes)(e.bytecodeHash)
                  ? e.bytecodeHash
                  : (0, s.toBytes)(e.bytecodeHash)
                : (0, l.keccak256)(e.bytecode, "bytes");
          return (0, c.getAddress)(
            (0, o.slice)(
              (0, l.keccak256)(
                (0, r.concat)([(0, s.toBytes)("0xff"), t, n, u])
              ),
              12
            )
          );
        }
        (t.getContractAddress = function (e) {
          return "CREATE2" === e.opcode ? f(e) : d(e);
        }),
          (t.getCreateAddress = d),
          (t.getCreate2Address = f);
      },
      35129: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.isAddress = void 0);
        let n = /^0x[a-fA-F0-9]{40}$/;
        t.isAddress = function (e) {
          return n.test(e);
        };
      },
      93127: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.isAddressEqual = void 0);
        let r = n(77295),
          i = n(35129);
        t.isAddressEqual = function (e, t) {
          if (!(0, i.isAddress)(e))
            throw new r.InvalidAddressError({ address: e });
          if (!(0, i.isAddress)(t))
            throw new r.InvalidAddressError({ address: t });
          return e.toLowerCase() === t.toLowerCase();
        };
      },
      42768: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.buildRequest = t.isDeterministicError = void 0);
        let r = n(24304),
          i = n(4880),
          a = n(73812),
          o = n(87593);
        (t.isDeterministicError = (e) =>
          "code" in e
            ? -1 !== e.code &&
              -32004 !== e.code &&
              -32005 !== e.code &&
              -32042 !== e.code &&
              -32603 !== e.code
            : e instanceof i.HttpRequestError &&
              !!e.status &&
              403 !== e.status &&
              408 !== e.status &&
              413 !== e.status &&
              429 !== e.status &&
              500 !== e.status &&
              502 !== e.status &&
              503 !== e.status &&
              504 !== e.status),
          (t.buildRequest = function (
            e,
            { retryDelay: n = 150, retryCount: s = 3 } = {}
          ) {
            return async (u) =>
              (0, o.withRetry)(
                async () => {
                  try {
                    return await e(u);
                  } catch (e) {
                    switch (e.code) {
                      case a.ParseRpcError.code:
                        throw new a.ParseRpcError(e);
                      case a.InvalidRequestRpcError.code:
                        throw new a.InvalidRequestRpcError(e);
                      case a.MethodNotFoundRpcError.code:
                        throw new a.MethodNotFoundRpcError(e);
                      case a.InvalidParamsRpcError.code:
                        throw new a.InvalidParamsRpcError(e);
                      case a.InternalRpcError.code:
                        throw new a.InternalRpcError(e);
                      case a.InvalidInputRpcError.code:
                        throw new a.InvalidInputRpcError(e);
                      case a.ResourceNotFoundRpcError.code:
                        throw new a.ResourceNotFoundRpcError(e);
                      case a.ResourceUnavailableRpcError.code:
                        throw new a.ResourceUnavailableRpcError(e);
                      case a.TransactionRejectedRpcError.code:
                        throw new a.TransactionRejectedRpcError(e);
                      case a.MethodNotSupportedRpcError.code:
                        throw new a.MethodNotSupportedRpcError(e);
                      case a.LimitExceededRpcError.code:
                        throw new a.LimitExceededRpcError(e);
                      case a.JsonRpcVersionUnsupportedError.code:
                        throw new a.JsonRpcVersionUnsupportedError(e);
                      case a.UserRejectedRequestError.code:
                        throw new a.UserRejectedRequestError(e);
                      case a.UnauthorizedProviderError.code:
                        throw new a.UnauthorizedProviderError(e);
                      case a.UnsupportedProviderMethodError.code:
                        throw new a.UnsupportedProviderMethodError(e);
                      case a.ProviderDisconnectedError.code:
                        throw new a.ProviderDisconnectedError(e);
                      case a.ChainDisconnectedError.code:
                        throw new a.ChainDisconnectedError(e);
                      case a.SwitchChainError.code:
                        throw new a.SwitchChainError(e);
                      case 5e3:
                        throw new a.UserRejectedRequestError(e);
                      default:
                        if (e instanceof r.BaseError) throw e;
                        throw new a.UnknownRpcError(e);
                    }
                  }
                },
                {
                  delay: ({ count: e, error: t }) => {
                    if (t && t instanceof i.HttpRequestError) {
                      let e = t?.headers?.get("Retry-After");
                      if (e?.match(/\d/)) return 1e3 * parseInt(e);
                    }
                    return ~~(1 << e) * n;
                  },
                  retryCount: s,
                  shouldRetry: ({ error: e }) =>
                    !(0, t.isDeterministicError)(e),
                }
              );
          });
      },
      10062: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ccipFetch =
            t.offchainLookup =
            t.offchainLookupAbiItem =
            t.offchainLookupSignature =
              void 0);
        let r = n(21739),
          i = n(61095),
          a = n(4880),
          o = n(73843),
          s = n(79885),
          u = n(93127),
          l = n(37456),
          c = n(34323),
          d = n(29803);
        async function f(e, { blockNumber: n, blockTag: a, data: c, to: d }) {
          let { args: f } = (0, o.decodeErrorResult)({
              data: c,
              abi: [t.offchainLookupAbiItem],
            }),
            [h, m, y, g, b] = f;
          try {
            if (!(0, u.isAddressEqual)(d, h))
              throw new i.OffchainLookupSenderMismatchError({
                sender: h,
                to: d,
              });
            let t = await p({ data: y, sender: h, urls: m }),
              { data: o } = await (0, r.call)(e, {
                blockNumber: n,
                blockTag: a,
                data: (0, l.concat)([
                  g,
                  (0, s.encodeAbiParameters)(
                    [{ type: "bytes" }, { type: "bytes" }],
                    [t, b]
                  ),
                ]),
                to: d,
              });
            return o;
          } catch (e) {
            throw new i.OffchainLookupError({
              callbackSelector: g,
              cause: e,
              data: c,
              extraData: b,
              sender: h,
              urls: m,
            });
          }
        }
        async function p({ data: e, sender: t, urls: n }) {
          let r = Error("An unknown error occurred.");
          for (let o = 0; o < n.length; o++) {
            let s = n[o],
              u = s.includes("{data}") ? "GET" : "POST",
              l = "POST" === u ? { data: e, sender: t } : void 0;
            try {
              let n;
              let o = await fetch(
                s.replace("{sender}", t).replace("{data}", e),
                { body: JSON.stringify(l), method: u }
              );
              if (
                ((n = o.headers
                  .get("Content-Type")
                  ?.startsWith("application/json")
                  ? (await o.json()).data
                  : await o.text()),
                !o.ok)
              ) {
                r = new a.HttpRequestError({
                  body: l,
                  details: n?.error ? (0, d.stringify)(n.error) : o.statusText,
                  headers: o.headers,
                  status: o.status,
                  url: s,
                });
                continue;
              }
              if (!(0, c.isHex)(n)) {
                r = new i.OffchainLookupResponseMalformedError({
                  result: n,
                  url: s,
                });
                continue;
              }
              return n;
            } catch (e) {
              r = new a.HttpRequestError({
                body: l,
                details: e.message,
                url: s,
              });
            }
          }
          throw r;
        }
        (t.offchainLookupSignature = "0x556f1830"),
          (t.offchainLookupAbiItem = {
            name: "OffchainLookup",
            type: "error",
            inputs: [
              { name: "sender", type: "address" },
              { name: "urls", type: "string[]" },
              { name: "callData", type: "bytes" },
              { name: "callbackFunction", type: "bytes4" },
              { name: "extraData", type: "bytes" },
            ],
          }),
          (t.offchainLookup = f),
          (t.ccipFetch = p);
      },
      81696: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.assertCurrentChain = void 0);
        let r = n(28890);
        t.assertCurrentChain = function ({ chain: e, currentChainId: t }) {
          if (!e) throw new r.ChainNotFoundError();
          if (t !== e.id)
            throw new r.ChainMismatchError({ chain: e, currentChainId: t });
        };
      },
      93060: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.defineChain = void 0),
          (t.defineChain = function (e, t = {}) {
            let {
              fees: n = e.fees,
              formatters: r = e.formatters,
              serializers: i = e.serializers,
            } = t;
            return { ...e, fees: n, formatters: r, serializers: i };
          });
      },
      36635: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.extractChain = void 0),
          (t.extractChain = function ({ chains: e, id: t }) {
            return e.find((e) => e.id === t);
          });
      },
      31693: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getChainContractAddress = void 0);
        let r = n(28890);
        t.getChainContractAddress = function ({
          blockNumber: e,
          chain: t,
          contract: n,
        }) {
          let i = t?.contracts?.[n];
          if (!i)
            throw new r.ChainDoesNotSupportContract({
              chain: t,
              contract: { name: n },
            });
          if (e && i.blockCreated && i.blockCreated > e)
            throw new r.ChainDoesNotSupportContract({
              blockNumber: e,
              chain: t,
              contract: { name: n, blockCreated: i.blockCreated },
            });
          return i.address;
        };
      },
      44328: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.extractFunctionType =
            t.extractFunctionParams =
            t.extractFunctionName =
            t.extractFunctionParts =
              void 0);
        let n = /((function|event)\s)?(.*)(\((.*)\))/;
        function r(e) {
          let t = e.match(n),
            r = t?.[2] || void 0,
            i = t?.[3],
            a = t?.[5] || void 0;
          return { type: r, name: i, params: a };
        }
        (t.extractFunctionParts = r),
          (t.extractFunctionName = function (e) {
            return r(e).name;
          }),
          (t.extractFunctionParams = function (e) {
            let t = r(e).params,
              n = t?.split(",").map((e) => e.trim().split(" "));
            return n?.map((e) => ({
              type: e[0],
              name: "indexed" === e[1] ? e[2] : e[1],
              ...("indexed" === e[1] ? { indexed: !0 } : {}),
            }));
          }),
          (t.extractFunctionType = function (e) {
            return r(e).type;
          });
      },
      87006: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.createCursor = void 0);
        let r = n(87328),
          i = {
            bytes: new Uint8Array(),
            dataView: new DataView(new ArrayBuffer(0)),
            position: 0,
            assertPosition(e) {
              if (e < 0 || e > this.bytes.length - 1)
                throw new r.PositionOutOfBoundsError({
                  length: this.bytes.length,
                  position: e,
                });
            },
            decrementPosition(e) {
              if (e < 0) throw new r.NegativeOffsetError({ offset: e });
              let t = this.position - e;
              this.assertPosition(t), (this.position = t);
            },
            incrementPosition(e) {
              if (e < 0) throw new r.NegativeOffsetError({ offset: e });
              let t = this.position + e;
              this.assertPosition(t), (this.position = t);
            },
            inspectByte(e) {
              let t = e ?? this.position;
              return this.assertPosition(t), this.bytes[t];
            },
            inspectBytes(e, t) {
              let n = t ?? this.position;
              return (
                this.assertPosition(n + e - 1), this.bytes.subarray(n, n + e)
              );
            },
            inspectUint8(e) {
              let t = e ?? this.position;
              return this.assertPosition(t), this.bytes[t];
            },
            inspectUint16(e) {
              let t = e ?? this.position;
              return this.assertPosition(t + 1), this.dataView.getUint16(t);
            },
            inspectUint24(e) {
              let t = e ?? this.position;
              return (
                this.assertPosition(t + 2),
                (this.dataView.getUint16(t) << 8) +
                  this.dataView.getUint8(t + 2)
              );
            },
            inspectUint32(e) {
              let t = e ?? this.position;
              return this.assertPosition(t + 3), this.dataView.getUint32(t);
            },
            pushByte(e) {
              this.assertPosition(this.position),
                (this.bytes[this.position] = e),
                this.position++;
            },
            pushBytes(e) {
              this.assertPosition(this.position + e.length - 1),
                this.bytes.set(e, this.position),
                (this.position += e.length);
            },
            pushUint8(e) {
              this.assertPosition(this.position),
                (this.bytes[this.position] = e),
                this.position++;
            },
            pushUint16(e) {
              this.assertPosition(this.position + 1),
                this.dataView.setUint16(this.position, e),
                (this.position += 2);
            },
            pushUint24(e) {
              this.assertPosition(this.position + 2),
                this.dataView.setUint16(this.position, e >> 8),
                this.dataView.setUint8(this.position + 2, 255 & e),
                (this.position += 3);
            },
            pushUint32(e) {
              this.assertPosition(this.position + 3),
                this.dataView.setUint32(this.position, e),
                (this.position += 4);
            },
            readByte() {
              let e = this.inspectByte();
              return this.position++, e;
            },
            readBytes(e) {
              let t = this.inspectBytes(e);
              return (this.position += e), t;
            },
            readUint8() {
              let e = this.inspectUint8();
              return (this.position += 1), e;
            },
            readUint16() {
              let e = this.inspectUint16();
              return (this.position += 2), e;
            },
            readUint24() {
              let e = this.inspectUint24();
              return (this.position += 3), e;
            },
            readUint32() {
              let e = this.inspectUint32();
              return (this.position += 4), e;
            },
            setPosition(e) {
              this.assertPosition(e), (this.position = e);
            },
          };
        t.createCursor = function (e) {
          let t = Object.create(i);
          return (
            (t.bytes = e),
            (t.dataView = new DataView(e.buffer, e.byteOffset, e.byteLength)),
            t
          );
        };
      },
      37456: function (e, t) {
        "use strict";
        function n(e) {
          let t = 0;
          for (let n of e) t += n.length;
          let n = new Uint8Array(t),
            r = 0;
          for (let t of e) n.set(t, r), (r += t.length);
          return n;
        }
        function r(e) {
          return `0x${e.reduce((e, t) => e + t.replace("0x", ""), "")}`;
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.concatHex = t.concatBytes = t.concat = void 0),
          (t.concat = function (e) {
            return "string" == typeof e[0] ? r(e) : n(e);
          }),
          (t.concatBytes = n),
          (t.concatHex = r);
      },
      76551: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.isBytes = void 0),
          (t.isBytes = function (e) {
            return (
              !!e &&
              "object" == typeof e &&
              "BYTES_PER_ELEMENT" in e &&
              1 === e.BYTES_PER_ELEMENT &&
              "Uint8Array" === e.constructor.name
            );
          });
      },
      68640: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.isBytesEqual = void 0);
        let r = n(40219),
          i = n(10441),
          a = n(34323);
        t.isBytesEqual = function (e, t) {
          let n = (0, a.isHex)(e) ? (0, i.toBytes)(e) : e,
            o = (0, a.isHex)(t) ? (0, i.toBytes)(t) : t;
          return (0, r.equalBytes)(n, o);
        };
      },
      34323: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.isHex = void 0),
          (t.isHex = function (e, { strict: t = !0 } = {}) {
            return (
              !!e &&
              "string" == typeof e &&
              (t ? /^0x[0-9a-fA-F]*$/.test(e) : e.startsWith("0x"))
            );
          });
      },
      38454: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.padBytes = t.padHex = t.pad = void 0);
        let r = n(60771);
        function i(e, { dir: t, size: n = 32 } = {}) {
          if (null === n) return e;
          let i = e.replace("0x", "");
          if (i.length > 2 * n)
            throw new r.SizeExceedsPaddingSizeError({
              size: Math.ceil(i.length / 2),
              targetSize: n,
              type: "hex",
            });
          return `0x${i["right" === t ? "padEnd" : "padStart"](2 * n, "0")}`;
        }
        function a(e, { dir: t, size: n = 32 } = {}) {
          if (null === n) return e;
          if (e.length > n)
            throw new r.SizeExceedsPaddingSizeError({
              size: e.length,
              targetSize: n,
              type: "bytes",
            });
          let i = new Uint8Array(n);
          for (let r = 0; r < n; r++) {
            let a = "right" === t;
            i[a ? r : n - r - 1] = e[a ? r : e.length - r - 1];
          }
          return i;
        }
        (t.pad = function (e, { dir: t, size: n = 32 } = {}) {
          return "string" == typeof e
            ? i(e, { dir: t, size: n })
            : a(e, { dir: t, size: n });
        }),
          (t.padHex = i),
          (t.padBytes = a);
      },
      61539: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.size = void 0);
        let r = n(34323);
        t.size = function (e) {
          return (0, r.isHex)(e, { strict: !1 })
            ? Math.ceil((e.length - 2) / 2)
            : e.length;
        };
      },
      62870: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.sliceHex = t.sliceBytes = t.slice = void 0);
        let r = n(60771),
          i = n(34323),
          a = n(61539);
        function o(e, t) {
          if ("number" == typeof t && t > 0 && t > (0, a.size)(e) - 1)
            throw new r.SliceOffsetOutOfBoundsError({
              offset: t,
              position: "start",
              size: (0, a.size)(e),
            });
        }
        function s(e, t, n) {
          if (
            "number" == typeof t &&
            "number" == typeof n &&
            (0, a.size)(e) !== n - t
          )
            throw new r.SliceOffsetOutOfBoundsError({
              offset: n,
              position: "end",
              size: (0, a.size)(e),
            });
        }
        function u(e, t, n, { strict: r } = {}) {
          o(e, t);
          let i = e.slice(t, n);
          return r && s(i, t, n), i;
        }
        function l(e, t, n, { strict: r } = {}) {
          o(e, t);
          let i = `0x${e
            .replace("0x", "")
            .slice((t ?? 0) * 2, (n ?? e.length) * 2)}`;
          return r && s(i, t, n), i;
        }
        (t.slice = function (e, t, n, { strict: r } = {}) {
          return (0, i.isHex)(e, { strict: !1 })
            ? l(e, t, n, { strict: r })
            : u(e, t, n, { strict: r });
        }),
          (t.sliceBytes = u),
          (t.sliceHex = l);
      },
      29957: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.trim = void 0),
          (t.trim = function (e, { dir: t = "left" } = {}) {
            let n = "string" == typeof e ? e.replace("0x", "") : e,
              r = 0;
            for (
              let e = 0;
              e < n.length - 1 &&
              "0" === n["left" === t ? e : n.length - e - 1].toString();
              e++
            )
              r++;
            return ((n = "left" === t ? n.slice(r) : n.slice(0, n.length - r)),
            "string" == typeof e)
              ? (1 === n.length && "right" === t && (n = `${n}0`),
                `0x${n.length % 2 == 1 ? `0${n}` : n}`)
              : n;
          });
      },
      35250: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.bytesToString =
            t.bytesToNumber =
            t.bytesToBool =
            t.bytesToBigInt =
            t.fromBytes =
              void 0);
        let r = n(11602),
          i = n(29957),
          a = n(39581),
          o = n(62002);
        function s(e, t = {}) {
          void 0 !== t.size && (0, a.assertSize)(e, { size: t.size });
          let n = (0, o.bytesToHex)(e, t);
          return (0, a.hexToBigInt)(n);
        }
        function u(e, t = {}) {
          let n = e;
          if (
            (void 0 !== t.size &&
              ((0, a.assertSize)(n, { size: t.size }), (n = (0, i.trim)(n))),
            n.length > 1 || n[0] > 1)
          )
            throw new r.InvalidBytesBooleanError(n);
          return !!n[0];
        }
        function l(e, t = {}) {
          void 0 !== t.size && (0, a.assertSize)(e, { size: t.size });
          let n = (0, o.bytesToHex)(e, t);
          return (0, a.hexToNumber)(n);
        }
        function c(e, t = {}) {
          let n = e;
          return (
            void 0 !== t.size &&
              ((0, a.assertSize)(n, { size: t.size }),
              (n = (0, i.trim)(n, { dir: "right" }))),
            new TextDecoder().decode(n)
          );
        }
        (t.fromBytes = function (e, t) {
          let n = "string" == typeof t ? { to: t } : t,
            r = n.to;
          return "number" === r
            ? l(e, n)
            : "bigint" === r
            ? s(e, n)
            : "boolean" === r
            ? u(e, n)
            : "string" === r
            ? c(e, n)
            : (0, o.bytesToHex)(e, n);
        }),
          (t.bytesToBigInt = s),
          (t.bytesToBool = u),
          (t.bytesToNumber = l),
          (t.bytesToString = c);
      },
      39581: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.hexToString =
            t.hexToNumber =
            t.hexToBool =
            t.hexToBigInt =
            t.fromHex =
            t.assertSize =
              void 0);
        let r = n(11602),
          i = n(61539),
          a = n(29957),
          o = n(10441);
        function s(e, { size: t }) {
          if ((0, i.size)(e) > t)
            throw new r.SizeOverflowError({
              givenSize: (0, i.size)(e),
              maxSize: t,
            });
        }
        function u(e, t = {}) {
          let { signed: n } = t;
          t.size && s(e, { size: t.size });
          let r = BigInt(e);
          if (!n) return r;
          let i = (e.length - 2) / 2,
            a = (1n << (8n * BigInt(i) - 1n)) - 1n;
          return r <= a ? r : r - BigInt(`0x${"f".padStart(2 * i, "f")}`) - 1n;
        }
        function l(e, t = {}) {
          let n = e;
          if (
            (t.size && (s(n, { size: t.size }), (n = (0, a.trim)(n))),
            "0x00" === (0, a.trim)(n))
          )
            return !1;
          if ("0x01" === (0, a.trim)(n)) return !0;
          throw new r.InvalidHexBooleanError(n);
        }
        function c(e, t = {}) {
          return Number(u(e, t));
        }
        function d(e, t = {}) {
          let n = (0, o.hexToBytes)(e);
          return (
            t.size &&
              (s(n, { size: t.size }), (n = (0, a.trim)(n, { dir: "right" }))),
            new TextDecoder().decode(n)
          );
        }
        (t.assertSize = s),
          (t.fromHex = function (e, t) {
            let n = "string" == typeof t ? { to: t } : t,
              r = n.to;
            return "number" === r
              ? c(e, n)
              : "bigint" === r
              ? u(e, n)
              : "string" === r
              ? d(e, n)
              : "boolean" === r
              ? l(e, n)
              : (0, o.hexToBytes)(e, n);
          }),
          (t.hexToBigInt = u),
          (t.hexToBool = l),
          (t.hexToNumber = c),
          (t.hexToString = d);
      },
      14498: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.rlpToHex = t.rlpToBytes = t.fromRlp = void 0);
        let r = n(24304),
          i = n(11602),
          a = n(87006),
          o = n(10441),
          s = n(62002);
        function u(e, t = "hex") {
          let n = (() => {
              if ("string" == typeof e) {
                if (e.length > 3 && e.length % 2 != 0)
                  throw new i.InvalidHexValueError(e);
                return (0, o.hexToBytes)(e);
              }
              return e;
            })(),
            r = (0, a.createCursor)(n),
            u = (function e(t, n = "hex") {
              if (0 === t.bytes.length)
                return "hex" === n ? (0, s.bytesToHex)(t.bytes) : t.bytes;
              let r = t.readByte();
              if ((r < 128 && t.decrementPosition(1), r < 192)) {
                let e = l(t, r, 128),
                  i = t.readBytes(e);
                return "hex" === n ? (0, s.bytesToHex)(i) : i;
              }
              let i = l(t, r, 192);
              return (function (t, n, r) {
                let i = t.position,
                  a = [];
                for (; t.position - i < n; ) a.push(e(t, r));
                return a;
              })(t, i, n);
            })(r, t);
          return u;
        }
        function l(e, t, n) {
          if (128 === n && t < 128) return 1;
          if (t <= n + 55) return t - n;
          if (t === n + 55 + 1) return e.readUint8();
          if (t === n + 55 + 2) return e.readUint16();
          if (t === n + 55 + 3) return e.readUint24();
          if (t === n + 55 + 4) return e.readUint32();
          throw new r.BaseError("Invalid RLP prefix");
        }
        (t.fromRlp = u),
          (t.rlpToBytes = function (e, t = "bytes") {
            return u(e, t);
          }),
          (t.rlpToHex = function (e, t = "hex") {
            return u(e, t);
          });
      },
      10441: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.stringToBytes =
            t.numberToBytes =
            t.hexToBytes =
            t.boolToBytes =
            t.toBytes =
              void 0);
        let r = n(24304),
          i = n(34323),
          a = n(38454),
          o = n(39581),
          s = n(62002),
          u = new TextEncoder();
        function l(e, t = {}) {
          let n = new Uint8Array(1);
          return ((n[0] = Number(e)), "number" == typeof t.size)
            ? ((0, o.assertSize)(n, { size: t.size }),
              (0, a.pad)(n, { size: t.size }))
            : n;
        }
        (t.toBytes = function (e, t = {}) {
          return "number" == typeof e || "bigint" == typeof e
            ? p(e, t)
            : "boolean" == typeof e
            ? l(e, t)
            : (0, i.isHex)(e)
            ? f(e, t)
            : h(e, t);
        }),
          (t.boolToBytes = l);
        let c = { zero: 48, nine: 57, A: 65, F: 70, a: 97, f: 102 };
        function d(e) {
          return e >= c.zero && e <= c.nine
            ? e - c.zero
            : e >= c.A && e <= c.F
            ? e - (c.A - 10)
            : e >= c.a && e <= c.f
            ? e - (c.a - 10)
            : void 0;
        }
        function f(e, t = {}) {
          let n = e;
          t.size &&
            ((0, o.assertSize)(n, { size: t.size }),
            (n = (0, a.pad)(n, { dir: "right", size: t.size })));
          let i = n.slice(2);
          i.length % 2 && (i = `0${i}`);
          let s = i.length / 2,
            u = new Uint8Array(s);
          for (let e = 0, t = 0; e < s; e++) {
            let n = d(i.charCodeAt(t++)),
              a = d(i.charCodeAt(t++));
            if (void 0 === n || void 0 === a)
              throw new r.BaseError(
                `Invalid byte sequence ("${i[t - 2]}${i[t - 1]}" in "${i}").`
              );
            u[e] = 16 * n + a;
          }
          return u;
        }
        function p(e, t) {
          let n = (0, s.numberToHex)(e, t);
          return f(n);
        }
        function h(e, t = {}) {
          let n = u.encode(e);
          return "number" == typeof t.size
            ? ((0, o.assertSize)(n, { size: t.size }),
              (0, a.pad)(n, { dir: "right", size: t.size }))
            : n;
        }
        (t.hexToBytes = f), (t.numberToBytes = p), (t.stringToBytes = h);
      },
      62002: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.stringToHex =
            t.numberToHex =
            t.bytesToHex =
            t.boolToHex =
            t.toHex =
              void 0);
        let r = n(11602),
          i = n(38454),
          a = n(39581),
          o = Array.from({ length: 256 }, (e, t) =>
            t.toString(16).padStart(2, "0")
          );
        function s(e, t = {}) {
          let n = `0x${Number(e)}`;
          return "number" == typeof t.size
            ? ((0, a.assertSize)(n, { size: t.size }),
              (0, i.pad)(n, { size: t.size }))
            : n;
        }
        function u(e, t = {}) {
          let n = "";
          for (let t = 0; t < e.length; t++) n += o[e[t]];
          let r = `0x${n}`;
          return "number" == typeof t.size
            ? ((0, a.assertSize)(r, { size: t.size }),
              (0, i.pad)(r, { dir: "right", size: t.size }))
            : r;
        }
        function l(e, t = {}) {
          let n;
          let { signed: a, size: o } = t,
            s = BigInt(e);
          o
            ? (n = a
                ? (1n << (8n * BigInt(o) - 1n)) - 1n
                : 2n ** (8n * BigInt(o)) - 1n)
            : "number" == typeof e && (n = BigInt(Number.MAX_SAFE_INTEGER));
          let u = "bigint" == typeof n && a ? -n - 1n : 0;
          if ((n && s > n) || s < u) {
            let t = "bigint" == typeof e ? "n" : "";
            throw new r.IntegerOutOfRangeError({
              max: n ? `${n}${t}` : void 0,
              min: `${u}${t}`,
              signed: a,
              size: o,
              value: `${e}${t}`,
            });
          }
          let l = `0x${(a && s < 0
            ? (1n << BigInt(8 * o)) + BigInt(s)
            : s
          ).toString(16)}`;
          return o ? (0, i.pad)(l, { size: o }) : l;
        }
        (t.toHex = function (e, t = {}) {
          return "number" == typeof e || "bigint" == typeof e
            ? l(e, t)
            : "string" == typeof e
            ? d(e, t)
            : "boolean" == typeof e
            ? s(e, t)
            : u(e, t);
        }),
          (t.boolToHex = s),
          (t.bytesToHex = u),
          (t.numberToHex = l);
        let c = new TextEncoder();
        function d(e, t = {}) {
          let n = c.encode(e);
          return u(n, t);
        }
        t.stringToHex = d;
      },
      21944: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.hexToRlp = t.bytesToRlp = t.toRlp = void 0);
        let r = n(15875),
          i = n(87006),
          a = n(10441),
          o = n(62002);
        function s(e, t = "hex") {
          let n = (function e(t) {
              return Array.isArray(t)
                ? (function (e) {
                    let t = e.reduce((e, t) => e + t.length, 0),
                      n = u(t),
                      r = t <= 55 ? 1 + t : 1 + n + t;
                    return {
                      length: r,
                      encode(r) {
                        for (let { encode: i } of (t <= 55
                          ? r.pushByte(192 + t)
                          : (r.pushByte(247 + n),
                            1 === n
                              ? r.pushUint8(t)
                              : 2 === n
                              ? r.pushUint16(t)
                              : 3 === n
                              ? r.pushUint24(t)
                              : r.pushUint32(t)),
                        e))
                          i(r);
                      },
                    };
                  })(t.map((t) => e(t)))
                : (function (e) {
                    let t = "string" == typeof e ? (0, a.hexToBytes)(e) : e,
                      n = u(t.length),
                      r =
                        1 === t.length && t[0] < 128
                          ? 1
                          : t.length <= 55
                          ? 1 + t.length
                          : 1 + n + t.length;
                    return {
                      length: r,
                      encode(e) {
                        (1 === t.length && t[0] < 128) ||
                          (t.length <= 55
                            ? e.pushByte(128 + t.length)
                            : (e.pushByte(183 + n),
                              1 === n
                                ? e.pushUint8(t.length)
                                : 2 === n
                                ? e.pushUint16(t.length)
                                : 3 === n
                                ? e.pushUint24(t.length)
                                : e.pushUint32(t.length))),
                          e.pushBytes(t);
                      },
                    };
                  })(t);
            })(e),
            r = (0, i.createCursor)(new Uint8Array(n.length));
          return (n.encode(r), "hex" === t)
            ? (0, o.bytesToHex)(r.bytes)
            : r.bytes;
        }
        function u(e) {
          if (e < 256) return 1;
          if (e < 65536) return 2;
          if (e < 16777216) return 3;
          if (e < 4294967296) return 4;
          throw new r.BaseError("Length is too large.");
        }
        (t.toRlp = s),
          (t.bytesToRlp = function (e, t = "bytes") {
            return s(e, t);
          }),
          (t.hexToRlp = function (e, t = "hex") {
            return s(e, t);
          });
      },
      28871: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.parseAvatarRecord = void 0);
        let r = n(86965);
        async function i(e, { gatewayUrls: t, record: n }) {
          return /eip155:/i.test(n)
            ? a(e, { gatewayUrls: t, record: n })
            : (0, r.parseAvatarUri)({ uri: n, gatewayUrls: t });
        }
        async function a(e, { gatewayUrls: t, record: n }) {
          let i = (0, r.parseNftUri)(n),
            a = await (0, r.getNftTokenUri)(e, { nft: i }),
            {
              uri: o,
              isOnChain: s,
              isEncoded: u,
            } = (0, r.resolveAvatarUri)({ uri: a, gatewayUrls: t });
          if (
            s &&
            (o.includes("data:application/json;base64,") || o.startsWith("{"))
          ) {
            let e = u
                ? atob(o.replace("data:application/json;base64,", ""))
                : o,
              n = JSON.parse(e);
            return (0, r.parseAvatarUri)({
              uri: (0, r.getJsonImage)(n),
              gatewayUrls: t,
            });
          }
          let l = i.tokenID;
          return (
            "erc1155" === i.namespace &&
              (l = l.replace("0x", "").padStart(64, "0")),
            (0, r.getMetadataAvatarUri)({
              gatewayUrls: t,
              uri: o.replace(/(?:0x)?{id}/, l),
            })
          );
        }
        t.parseAvatarRecord = i;
      },
      86965: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getNftTokenUri =
            t.parseNftUri =
            t.parseAvatarUri =
            t.getMetadataAvatarUri =
            t.getJsonImage =
            t.resolveAvatarUri =
            t.getGateway =
            t.isImageUri =
              void 0);
        let r = n(81746),
          i = n(48710),
          a =
            /(?<protocol>https?:\/\/[^\/]*|ipfs:\/|ipns:\/|ar:\/)?(?<root>\/)?(?<subpath>ipfs\/|ipns\/)?(?<target>[\w\-.]+)(?<subtarget>\/.*)?/,
          o =
            /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\/(?<target>[\w\-.]+))?(?<subtarget>\/.*)?$/,
          s = /^data:([a-zA-Z\-/+]*);base64,([^"].*)/,
          u = /^data:([a-zA-Z\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/;
        async function l(e) {
          try {
            let t = await fetch(e, { method: "HEAD" });
            if (200 === t.status) {
              let e = t.headers.get("content-type");
              return e?.startsWith("image/");
            }
            return !1;
          } catch (t) {
            if (
              ("object" == typeof t && void 0 !== t.response) ||
              !globalThis.hasOwnProperty("Image")
            )
              return !1;
            return new Promise((t) => {
              let n = new Image();
              (n.onload = () => {
                t(!0);
              }),
                (n.onerror = () => {
                  t(!1);
                }),
                (n.src = e);
            });
          }
        }
        function c(e, t) {
          return e ? (e.endsWith("/") ? e.slice(0, -1) : e) : t;
        }
        function d({ uri: e, gatewayUrls: t }) {
          let n = s.test(e);
          if (n) return { uri: e, isOnChain: !0, isEncoded: n };
          let r = c(t?.ipfs, "https://ipfs.io"),
            l = c(t?.arweave, "https://arweave.net"),
            d = e.match(a),
            {
              protocol: f,
              subpath: p,
              target: h,
              subtarget: m = "",
            } = d?.groups || {},
            y = "ipns:/" === f || "ipns/" === p,
            g = "ipfs:/" === f || "ipfs/" === p || o.test(e);
          if (e.startsWith("http") && !y && !g) {
            let n = e;
            return (
              t?.arweave &&
                (n = e.replace(/https:\/\/arweave.net/g, t?.arweave)),
              { uri: n, isOnChain: !1, isEncoded: !1 }
            );
          }
          if ((y || g) && h)
            return {
              uri: `${r}/${y ? "ipns" : "ipfs"}/${h}${m}`,
              isOnChain: !1,
              isEncoded: !1,
            };
          if ("ar:/" === f && h)
            return { uri: `${l}/${h}${m || ""}`, isOnChain: !1, isEncoded: !1 };
          let b = e.replace(u, "");
          if (
            (b.startsWith("<svg") &&
              (b = `data:image/svg+xml;base64,${btoa(b)}`),
            b.startsWith("data:") || b.startsWith("{"))
          )
            return { uri: b, isOnChain: !0, isEncoded: !1 };
          throw new i.EnsAvatarUriResolutionError({ uri: e });
        }
        function f(e) {
          if (
            "object" != typeof e ||
            (!("image" in e) && !("image_url" in e) && !("image_data" in e))
          )
            throw new i.EnsAvatarInvalidMetadataError({ data: e });
          return e.image || e.image_url || e.image_data;
        }
        async function p({ gatewayUrls: e, uri: t }) {
          try {
            let n = await fetch(t).then((e) => e.json()),
              r = await h({ gatewayUrls: e, uri: f(n) });
            return r;
          } catch {
            throw new i.EnsAvatarUriResolutionError({ uri: t });
          }
        }
        async function h({ gatewayUrls: e, uri: t }) {
          let { uri: n, isOnChain: r } = d({ uri: t, gatewayUrls: e });
          if (r) return n;
          let a = await l(n);
          if (a) return n;
          throw new i.EnsAvatarUriResolutionError({ uri: t });
        }
        async function m(e, { nft: t }) {
          if ("erc721" === t.namespace)
            return (0, r.readContract)(e, {
              address: t.contractAddress,
              abi: [
                {
                  name: "tokenURI",
                  type: "function",
                  stateMutability: "view",
                  inputs: [{ name: "tokenId", type: "uint256" }],
                  outputs: [{ name: "", type: "string" }],
                },
              ],
              functionName: "tokenURI",
              args: [BigInt(t.tokenID)],
            });
          if ("erc1155" === t.namespace)
            return (0, r.readContract)(e, {
              address: t.contractAddress,
              abi: [
                {
                  name: "uri",
                  type: "function",
                  stateMutability: "view",
                  inputs: [{ name: "_id", type: "uint256" }],
                  outputs: [{ name: "", type: "string" }],
                },
              ],
              functionName: "uri",
              args: [BigInt(t.tokenID)],
            });
          throw new i.EnsAvatarUnsupportedNamespaceError({
            namespace: t.namespace,
          });
        }
        (t.isImageUri = l),
          (t.getGateway = c),
          (t.resolveAvatarUri = d),
          (t.getJsonImage = f),
          (t.getMetadataAvatarUri = p),
          (t.parseAvatarUri = h),
          (t.parseNftUri = function (e) {
            let t = e;
            t.startsWith("did:nft:") &&
              (t = t.replace("did:nft:", "").replace(/_/g, "/"));
            let [n, r, a] = t.split("/"),
              [o, s] = n.split(":"),
              [u, l] = r.split(":");
            if (!o || "eip155" !== o.toLowerCase())
              throw new i.EnsAvatarInvalidNftUriError({
                reason: "Only EIP-155 supported",
              });
            if (!s)
              throw new i.EnsAvatarInvalidNftUriError({
                reason: "Chain ID not found",
              });
            if (!l)
              throw new i.EnsAvatarInvalidNftUriError({
                reason: "Contract address not found",
              });
            if (!a)
              throw new i.EnsAvatarInvalidNftUriError({
                reason: "Token ID not found",
              });
            if (!u)
              throw new i.EnsAvatarInvalidNftUriError({
                reason: "ERC namespace not found",
              });
            return {
              chainID: parseInt(s),
              namespace: u.toLowerCase(),
              contractAddress: l,
              tokenID: a,
            };
          }),
          (t.getNftTokenUri = m);
      },
      14684: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.encodeLabelhash = void 0),
          (t.encodeLabelhash = function (e) {
            return `[${e.slice(2)}]`;
          });
      },
      91511: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.encodedLabelToLabelhash = void 0);
        let r = n(34323);
        t.encodedLabelToLabelhash = function (e) {
          if (66 !== e.length || 0 !== e.indexOf("[") || 65 !== e.indexOf("]"))
            return null;
          let t = `0x${e.slice(1, 65)}`;
          return (0, r.isHex)(t) ? t : null;
        };
      },
      57961: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.isNullUniversalResolverError = void 0);
        let r = n(55300),
          i = n(24304),
          a = n(4924);
        t.isNullUniversalResolverError = function (e, t) {
          if (!(e instanceof i.BaseError)) return !1;
          let n = e.walk((e) => e instanceof a.ContractFunctionRevertedError);
          return (
            n instanceof a.ContractFunctionRevertedError &&
            (!!(
              n.data?.errorName === "ResolverNotFound" ||
              n.data?.errorName === "ResolverWildcardNotSupported" ||
              n.reason?.includes(
                "Wildcard on non-extended resolvers is not supported"
              )
            ) ||
              ("reverse" === t && n.reason === r.panicReasons[50]))
          );
        };
      },
      82955: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.labelhash = void 0);
        let r = n(10441),
          i = n(62002),
          a = n(12922),
          o = n(91511);
        t.labelhash = function (e) {
          let t = new Uint8Array(32).fill(0);
          return e
            ? (0, o.encodedLabelToLabelhash)(e) ||
                (0, a.keccak256)((0, r.stringToBytes)(e))
            : (0, i.bytesToHex)(t);
        };
      },
      41177: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.namehash = void 0);
        let r = n(37456),
          i = n(10441),
          a = n(62002),
          o = n(12922),
          s = n(91511);
        t.namehash = function (e) {
          let t = new Uint8Array(32).fill(0);
          if (!e) return (0, a.bytesToHex)(t);
          let n = e.split(".");
          for (let e = n.length - 1; e >= 0; e -= 1) {
            let a = (0, s.encodedLabelToLabelhash)(n[e]),
              u = a
                ? (0, i.toBytes)(a)
                : (0, o.keccak256)((0, i.stringToBytes)(n[e]), "bytes");
            t = (0, o.keccak256)((0, r.concat)([t, u]), "bytes");
          }
          return (0, a.bytesToHex)(t);
        };
      },
      75007: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.packetToBytes = void 0);
        let r = n(10441),
          i = n(14684),
          a = n(82955);
        t.packetToBytes = function (e) {
          let t = e.replace(/^\.|\.$/gm, "");
          if (0 === t.length) return new Uint8Array(1);
          let n = new Uint8Array((0, r.stringToBytes)(t).byteLength + 2),
            o = 0,
            s = t.split(".");
          for (let e = 0; e < s.length; e++) {
            let t = (0, r.stringToBytes)(s[e]);
            t.byteLength > 255 &&
              (t = (0, r.stringToBytes)(
                (0, i.encodeLabelhash)((0, a.labelhash)(s[e]))
              )),
              (n[o] = t.length),
              n.set(t, o + 1),
              (o += t.length + 1);
          }
          return n.byteLength !== o + 1 ? n.slice(0, o + 1) : n;
        };
      },
      25950: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getCallError = void 0);
        let r = n(4924),
          i = n(31027),
          a = n(30470);
        t.getCallError = function (e, { docsPath: t, ...n }) {
          let o = (() => {
            let t = (0, a.getNodeError)(e, n);
            return t instanceof i.UnknownNodeError ? e : t;
          })();
          return new r.CallExecutionError(o, { docsPath: t, ...n });
        };
      },
      30548: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getContractError = void 0);
        let r = n(65413),
          i = n(24304),
          a = n(4924),
          o = n(73812);
        t.getContractError = function (
          e,
          {
            abi: t,
            address: n,
            args: s,
            docsPath: u,
            functionName: l,
            sender: c,
          }
        ) {
          let {
              code: d,
              data: f,
              message: p,
              shortMessage: h,
            } = e instanceof a.RawContractError
              ? e
              : e instanceof i.BaseError
              ? e.walk((e) => "data" in e) || e.walk()
              : {},
            m =
              e instanceof r.AbiDecodingZeroDataError
                ? new a.ContractFunctionZeroDataError({ functionName: l })
                : [3, o.InternalRpcError.code].includes(d) && (f || p || h)
                ? new a.ContractFunctionRevertedError({
                    abi: t,
                    data: "object" == typeof f ? f.data : f,
                    functionName: l,
                    message: h ?? p,
                  })
                : e;
          return new a.ContractFunctionExecutionError(m, {
            abi: t,
            args: s,
            contractAddress: n,
            docsPath: u,
            functionName: l,
            sender: c,
          });
        };
      },
      6559: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getEstimateGasError = void 0);
        let r = n(20028),
          i = n(31027),
          a = n(30470);
        t.getEstimateGasError = function (e, { docsPath: t, ...n }) {
          let o = (() => {
            let t = (0, a.getNodeError)(e, n);
            return t instanceof i.UnknownNodeError ? e : t;
          })();
          return new r.EstimateGasExecutionError(o, { docsPath: t, ...n });
        };
      },
      30470: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getNodeError = t.containsNodeError = void 0);
        let r = n(24304),
          i = n(31027),
          a = n(4880),
          o = n(73812);
        (t.containsNodeError = function (e) {
          return (
            e instanceof o.TransactionRejectedRpcError ||
            e instanceof o.InvalidInputRpcError ||
            (e instanceof a.RpcRequestError &&
              e.code === i.ExecutionRevertedError.code)
          );
        }),
          (t.getNodeError = function (e, t) {
            let n = (e.details || "").toLowerCase(),
              a = e.walk((e) => e.code === i.ExecutionRevertedError.code);
            return a instanceof r.BaseError
              ? new i.ExecutionRevertedError({ cause: e, message: a.details })
              : i.ExecutionRevertedError.nodeMessage.test(n)
              ? new i.ExecutionRevertedError({ cause: e, message: e.details })
              : i.FeeCapTooHighError.nodeMessage.test(n)
              ? new i.FeeCapTooHighError({
                  cause: e,
                  maxFeePerGas: t?.maxFeePerGas,
                })
              : i.FeeCapTooLowError.nodeMessage.test(n)
              ? new i.FeeCapTooLowError({
                  cause: e,
                  maxFeePerGas: t?.maxFeePerGas,
                })
              : i.NonceTooHighError.nodeMessage.test(n)
              ? new i.NonceTooHighError({ cause: e, nonce: t?.nonce })
              : i.NonceTooLowError.nodeMessage.test(n)
              ? new i.NonceTooLowError({ cause: e, nonce: t?.nonce })
              : i.NonceMaxValueError.nodeMessage.test(n)
              ? new i.NonceMaxValueError({ cause: e, nonce: t?.nonce })
              : i.InsufficientFundsError.nodeMessage.test(n)
              ? new i.InsufficientFundsError({ cause: e })
              : i.IntrinsicGasTooHighError.nodeMessage.test(n)
              ? new i.IntrinsicGasTooHighError({ cause: e, gas: t?.gas })
              : i.IntrinsicGasTooLowError.nodeMessage.test(n)
              ? new i.IntrinsicGasTooLowError({ cause: e, gas: t?.gas })
              : i.TransactionTypeNotSupportedError.nodeMessage.test(n)
              ? new i.TransactionTypeNotSupportedError({ cause: e })
              : i.TipAboveFeeCapError.nodeMessage.test(n)
              ? new i.TipAboveFeeCapError({
                  cause: e,
                  maxFeePerGas: t?.maxFeePerGas,
                  maxPriorityFeePerGas: t?.maxPriorityFeePerGas,
                })
              : new i.UnknownNodeError({ cause: e });
          });
      },
      61350: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getTransactionError = void 0);
        let r = n(31027),
          i = n(72861),
          a = n(30470);
        t.getTransactionError = function (e, { docsPath: t, ...n }) {
          let o = (() => {
            let t = (0, a.getNodeError)(e, n);
            return t instanceof r.UnknownNodeError ? e : t;
          })();
          return new i.TransactionExecutionError(o, { docsPath: t, ...n });
        };
      },
      75693: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.createFilterRequestScope = void 0),
          (t.createFilterRequestScope = function (e, { method: t }) {
            let n = {};
            return (
              "fallback" === e.transport.type &&
                e.transport.onResponse?.(
                  ({ method: e, response: r, status: i, transport: a }) => {
                    "success" === i && t === e && (n[r] = a.request);
                  }
                ),
              (t) => n[t] || e.request
            );
          });
      },
      49906: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.defineBlock = t.formatBlock = void 0);
        let r = n(36280),
          i = n(64056);
        function a(e) {
          let t = e.transactions?.map((e) =>
            "string" == typeof e ? e : i.formatTransaction(e)
          );
          return {
            ...e,
            baseFeePerGas: e.baseFeePerGas ? BigInt(e.baseFeePerGas) : null,
            difficulty: e.difficulty ? BigInt(e.difficulty) : void 0,
            gasLimit: e.gasLimit ? BigInt(e.gasLimit) : void 0,
            gasUsed: e.gasUsed ? BigInt(e.gasUsed) : void 0,
            hash: e.hash ? e.hash : null,
            logsBloom: e.logsBloom ? e.logsBloom : null,
            nonce: e.nonce ? e.nonce : null,
            number: e.number ? BigInt(e.number) : null,
            size: e.size ? BigInt(e.size) : void 0,
            timestamp: e.timestamp ? BigInt(e.timestamp) : void 0,
            transactions: t,
            totalDifficulty: e.totalDifficulty
              ? BigInt(e.totalDifficulty)
              : null,
          };
        }
        (t.formatBlock = a),
          (t.defineBlock = (0, r.defineFormatter)("block", a));
      },
      29824: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.extract = void 0),
          (t.extract = function (e, { format: t }) {
            if (!t) return {};
            let n = {},
              r = t(e || {});
            return (
              (function t(r) {
                let i = Object.keys(r);
                for (let a of i)
                  a in e && (n[a] = e[a]),
                    r[a] &&
                      "object" == typeof r[a] &&
                      !Array.isArray(r[a]) &&
                      t(r[a]);
              })(r),
              n
            );
          });
      },
      31197: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.formatFeeHistory = void 0),
          (t.formatFeeHistory = function (e) {
            return {
              baseFeePerGas: e.baseFeePerGas.map((e) => BigInt(e)),
              gasUsedRatio: e.gasUsedRatio,
              oldestBlock: BigInt(e.oldestBlock),
              reward: e.reward?.map((e) => e.map((e) => BigInt(e))),
            };
          });
      },
      36280: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.defineFormatter = void 0),
          (t.defineFormatter = function (e, t) {
            return ({ exclude: n, format: r }) => ({
              exclude: n,
              format: (e) => {
                let i = t(e);
                if (n) for (let e of n) delete i[e];
                return { ...i, ...r(e) };
              },
              type: e,
            });
          });
      },
      47960: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.formatLog = void 0),
          (t.formatLog = function (e, { args: t, eventName: n } = {}) {
            return {
              ...e,
              blockHash: e.blockHash ? e.blockHash : null,
              blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
              logIndex: e.logIndex ? Number(e.logIndex) : null,
              transactionHash: e.transactionHash ? e.transactionHash : null,
              transactionIndex: e.transactionIndex
                ? Number(e.transactionIndex)
                : null,
              ...(n ? { args: t, eventName: n } : {}),
            };
          });
      },
      11360: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.formatProof = void 0);
        let r = n(17493);
        t.formatProof = function (e) {
          return {
            ...e,
            balance: e.balance ? BigInt(e.balance) : void 0,
            nonce: e.nonce ? (0, r.hexToNumber)(e.nonce) : void 0,
            storageProof: e.storageProof
              ? e.storageProof.map((e) => ({ ...e, value: BigInt(e.value) }))
              : void 0,
          };
        };
      },
      64056: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.defineTransaction =
            t.formatTransaction =
            t.transactionType =
              void 0);
        let r = n(39581),
          i = n(36280);
        function a(e) {
          let n = {
            ...e,
            blockHash: e.blockHash ? e.blockHash : null,
            blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
            chainId: e.chainId ? (0, r.hexToNumber)(e.chainId) : void 0,
            gas: e.gas ? BigInt(e.gas) : void 0,
            gasPrice: e.gasPrice ? BigInt(e.gasPrice) : void 0,
            maxFeePerGas: e.maxFeePerGas ? BigInt(e.maxFeePerGas) : void 0,
            maxPriorityFeePerGas: e.maxPriorityFeePerGas
              ? BigInt(e.maxPriorityFeePerGas)
              : void 0,
            nonce: e.nonce ? (0, r.hexToNumber)(e.nonce) : void 0,
            to: e.to ? e.to : null,
            transactionIndex: e.transactionIndex
              ? Number(e.transactionIndex)
              : null,
            type: e.type ? t.transactionType[e.type] : void 0,
            typeHex: e.type ? e.type : void 0,
            value: e.value ? BigInt(e.value) : void 0,
            v: e.v ? BigInt(e.v) : void 0,
          };
          return (
            (n.yParity = (() => {
              if (e.yParity) return Number(e.yParity);
              if ("bigint" == typeof n.v) {
                if (0n === n.v || 27n === n.v) return 0;
                if (1n === n.v || 28n === n.v) return 1;
                if (n.v >= 35n) return n.v % 2n === 0n ? 1 : 0;
              }
            })()),
            "legacy" === n.type &&
              (delete n.accessList,
              delete n.maxFeePerGas,
              delete n.maxPriorityFeePerGas,
              delete n.yParity),
            "eip2930" === n.type &&
              (delete n.maxFeePerGas, delete n.maxPriorityFeePerGas),
            n
          );
        }
        (t.transactionType = {
          "0x0": "legacy",
          "0x1": "eip2930",
          "0x2": "eip1559",
        }),
          (t.formatTransaction = a),
          (t.defineTransaction = (0, i.defineFormatter)("transaction", a));
      },
      37262: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.defineTransactionReceipt = t.formatTransactionReceipt = void 0);
        let r = n(39581),
          i = n(36280),
          a = n(47960),
          o = n(64056),
          s = { "0x0": "reverted", "0x1": "success" };
        function u(e) {
          return {
            ...e,
            blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
            contractAddress: e.contractAddress ? e.contractAddress : null,
            cumulativeGasUsed: e.cumulativeGasUsed
              ? BigInt(e.cumulativeGasUsed)
              : null,
            effectiveGasPrice: e.effectiveGasPrice
              ? BigInt(e.effectiveGasPrice)
              : null,
            gasUsed: e.gasUsed ? BigInt(e.gasUsed) : null,
            logs: e.logs ? e.logs.map((e) => (0, a.formatLog)(e)) : null,
            to: e.to ? e.to : null,
            transactionIndex: e.transactionIndex
              ? (0, r.hexToNumber)(e.transactionIndex)
              : null,
            status: e.status ? s[e.status] : null,
            type: e.type ? o.transactionType[e.type] || e.type : null,
          };
        }
        (t.formatTransactionReceipt = u),
          (t.defineTransactionReceipt = (0, i.defineFormatter)(
            "transactionReceipt",
            u
          ));
      },
      14928: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.defineTransactionRequest =
            t.formatTransactionRequest =
            t.rpcTransactionType =
              void 0);
        let r = n(62002),
          i = n(36280);
        function a(e) {
          return {
            ...e,
            gas: void 0 !== e.gas ? (0, r.numberToHex)(e.gas) : void 0,
            gasPrice:
              void 0 !== e.gasPrice ? (0, r.numberToHex)(e.gasPrice) : void 0,
            maxFeePerGas:
              void 0 !== e.maxFeePerGas
                ? (0, r.numberToHex)(e.maxFeePerGas)
                : void 0,
            maxPriorityFeePerGas:
              void 0 !== e.maxPriorityFeePerGas
                ? (0, r.numberToHex)(e.maxPriorityFeePerGas)
                : void 0,
            nonce: void 0 !== e.nonce ? (0, r.numberToHex)(e.nonce) : void 0,
            type: void 0 !== e.type ? t.rpcTransactionType[e.type] : void 0,
            value: void 0 !== e.value ? (0, r.numberToHex)(e.value) : void 0,
          };
        }
        (t.rpcTransactionType = {
          legacy: "0x0",
          eip2930: "0x1",
          eip1559: "0x2",
        }),
          (t.formatTransactionRequest = a),
          (t.defineTransactionRequest = (0, i.defineFormatter)(
            "transactionRequest",
            a
          ));
      },
      94303: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getAction = void 0),
          (t.getAction = function (e, t, n) {
            return (r) => e[t.name || n]?.(r) ?? t(e, r);
          });
      },
      29796: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getEventSelector = void 0);
        let r = n(10441),
          i = n(5396),
          a = n(12922),
          o = (e) => (0, a.keccak256)((0, r.toBytes)(e));
        t.getEventSelector = (e) => o((0, i.getEventSignature)(e));
      },
      5396: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getEventSignature = void 0);
        let r = n(69682);
        t.getEventSignature = (e) => (0, r.getFunctionSignature)(e);
      },
      45433: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getFunctionSelector = void 0);
        let r = n(62870),
          i = n(10441),
          a = n(69682),
          o = n(12922),
          s = (e) => (0, o.keccak256)((0, i.toBytes)(e));
        t.getFunctionSelector = (e) =>
          (0, r.slice)(s((0, a.getFunctionSignature)(e)), 0, 4);
      },
      69682: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getFunctionSignature = void 0);
        let r = n(99620),
          i = n(97506);
        t.getFunctionSignature = (e) => {
          let t = "string" == typeof e ? e : (0, r.formatAbiItem)(e);
          return (0, i.normalizeSignature)(t);
        };
      },
      70213: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.isHash = void 0);
        let r = n(34323),
          i = n(61539);
        t.isHash = function (e) {
          return (0, r.isHex)(e) && 32 === (0, i.size)(e);
        };
      },
      12922: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.keccak256 = void 0);
        let r = n(7217),
          i = n(34323),
          a = n(10441),
          o = n(62002);
        t.keccak256 = function (e, t) {
          let n = (0, r.keccak_256)(
            (0, i.isHex)(e, { strict: !1 }) ? (0, a.toBytes)(e) : e
          );
          return "bytes" === (t || "hex") ? n : (0, o.toHex)(n);
        };
      },
      97506: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.normalizeSignature = void 0);
        let r = n(24304);
        t.normalizeSignature = function (e) {
          let t = !0,
            n = "",
            i = 0,
            a = "",
            o = !1;
          for (let r = 0; r < e.length; r++) {
            let s = e[r];
            if (
              (["(", ")", ","].includes(s) && (t = !0),
              "(" === s && i++,
              ")" === s && i--,
              t)
            ) {
              if (0 === i) {
                if (" " === s && ["event", "function", ""].includes(a)) a = "";
                else if (((a += s), ")" === s)) {
                  o = !0;
                  break;
                }
                continue;
              }
              if (" " === s) {
                "," !== e[r - 1] &&
                  "," !== n &&
                  ",(" !== n &&
                  ((n = ""), (t = !1));
                continue;
              }
              (a += s), (n += s);
            }
          }
          if (!o) throw new r.BaseError("Unable to normalize signature.");
          return a;
        };
      },
      23854: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ripemd160 = void 0);
        let r = n(67266),
          i = n(34323),
          a = n(10441),
          o = n(62002);
        t.ripemd160 = function (e, t) {
          let n = (0, r.ripemd160)(
            (0, i.isHex)(e, { strict: !1 }) ? (0, a.toBytes)(e) : e
          );
          return "bytes" === (t || "hex") ? n : (0, o.toHex)(n);
        };
      },
      91094: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.sha256 = void 0);
        let r = n(81205),
          i = n(34323),
          a = n(10441),
          o = n(62002);
        t.sha256 = function (e, t) {
          let n = (0, r.sha256)(
            (0, i.isHex)(e, { strict: !1 }) ? (0, a.toBytes)(e) : e
          );
          return "bytes" === (t || "hex") ? n : (0, o.toHex)(n);
        };
      },
      17493: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.concat =
            t.extractFunctionParts =
            t.extractFunctionType =
            t.extractFunctionParams =
            t.extractFunctionName =
            t.isAddressEqual =
            t.isAddress =
            t.getAddress =
            t.getCreate2Address =
            t.getCreateAddress =
            t.getContractAddress =
            t.publicKeyToAddress =
            t.parseAccount =
            t.formatAbiParams =
            t.formatAbiItem =
            t.formatAbiItemWithArgs =
            t.encodePacked =
            t.parseAbiParameters =
            t.parseAbiParameter =
            t.parseAbiItem =
            t.parseAbi =
            t.getAbiItem =
            t.encodeFunctionResult =
            t.encodeFunctionData =
            t.encodeEventTopics =
            t.encodeErrorResult =
            t.encodeDeployData =
            t.encodeAbiParameters =
            t.decodeFunctionResult =
            t.decodeFunctionData =
            t.decodeEventLog =
            t.decodeErrorResult =
            t.decodeAbiParameters =
            t.validateTypedData =
            t.stringify =
            t.rpc =
            t.getSocket =
            t.integerRegex =
            t.bytesRegex =
            t.arrayRegex =
            t.getChainContractAddress =
            t.extractChain =
            t.defineChain =
            t.assertCurrentChain =
            t.offchainLookupSignature =
            t.offchainLookupAbiItem =
            t.offchainLookup =
            t.ccipFetch =
            t.buildRequest =
            t.isDeterministicError =
              void 0),
          (t.getEstimateGasError =
            t.getContractError =
            t.getCallError =
            t.getNodeError =
            t.containsNodeError =
            t.fromRlp =
            t.hexToString =
            t.hexToNumber =
            t.hexToBigInt =
            t.hexToBool =
            t.fromHex =
            t.fromBytes =
            t.bytesToString =
            t.bytesToNumber =
            t.bytesToBool =
            t.bytesToBigint =
            t.bytesToBigInt =
            t.stringToHex =
            t.numberToHex =
            t.toHex =
            t.bytesToHex =
            t.boolToHex =
            t.stringToBytes =
            t.numberToBytes =
            t.hexToBytes =
            t.toBytes =
            t.boolToBytes =
            t.toRlp =
            t.extract =
            t.formatTransactionRequest =
            t.defineTransactionRequest =
            t.defineTransactionReceipt =
            t.formatLog =
            t.transactionType =
            t.formatTransaction =
            t.defineTransaction =
            t.formatBlock =
            t.defineBlock =
            t.trim =
            t.sliceHex =
            t.sliceBytes =
            t.slice =
            t.size =
            t.padHex =
            t.padBytes =
            t.pad =
            t.isHex =
            t.isBytes =
            t.concatHex =
            t.concatBytes =
              void 0),
          (t.parseGwei =
            t.parseEther =
            t.parseUnits =
            t.formatUnits =
            t.formatGwei =
            t.formatEther =
            t.serializeAccessList =
            t.serializeTransaction =
            t.prepareTransactionRequest =
            t.parseTransaction =
            t.assertTransactionLegacy =
            t.assertTransactionEIP2930 =
            t.assertTransactionEIP1559 =
            t.assertRequest =
            t.getTransactionType =
            t.getSerializedTransactionType =
            t.hashMessage =
            t.verifyTypedData =
            t.verifyMessage =
            t.recoverTypedDataAddress =
            t.recoverPublicKey =
            t.recoverMessageAddress =
            t.recoverAddress =
            t.hashTypedData =
            t.ripemd160 =
            t.sha256 =
            t.keccak256 =
            t.isHash =
            t.getFunctionSelector =
            t.getEventSelector =
            t.defineFormatter =
            t.getTransactionError =
              void 0);
        var r = n(42768);
        Object.defineProperty(t, "isDeterministicError", {
          enumerable: !0,
          get: function () {
            return r.isDeterministicError;
          },
        }),
          Object.defineProperty(t, "buildRequest", {
            enumerable: !0,
            get: function () {
              return r.buildRequest;
            },
          });
        var i = n(10062);
        Object.defineProperty(t, "ccipFetch", {
          enumerable: !0,
          get: function () {
            return i.ccipFetch;
          },
        }),
          Object.defineProperty(t, "offchainLookup", {
            enumerable: !0,
            get: function () {
              return i.offchainLookup;
            },
          }),
          Object.defineProperty(t, "offchainLookupAbiItem", {
            enumerable: !0,
            get: function () {
              return i.offchainLookupAbiItem;
            },
          }),
          Object.defineProperty(t, "offchainLookupSignature", {
            enumerable: !0,
            get: function () {
              return i.offchainLookupSignature;
            },
          });
        var a = n(81696);
        Object.defineProperty(t, "assertCurrentChain", {
          enumerable: !0,
          get: function () {
            return a.assertCurrentChain;
          },
        });
        var o = n(93060);
        Object.defineProperty(t, "defineChain", {
          enumerable: !0,
          get: function () {
            return o.defineChain;
          },
        });
        var s = n(36635);
        Object.defineProperty(t, "extractChain", {
          enumerable: !0,
          get: function () {
            return s.extractChain;
          },
        });
        var u = n(31693);
        Object.defineProperty(t, "getChainContractAddress", {
          enumerable: !0,
          get: function () {
            return u.getChainContractAddress;
          },
        });
        var l = n(14983);
        Object.defineProperty(t, "arrayRegex", {
          enumerable: !0,
          get: function () {
            return l.arrayRegex;
          },
        }),
          Object.defineProperty(t, "bytesRegex", {
            enumerable: !0,
            get: function () {
              return l.bytesRegex;
            },
          }),
          Object.defineProperty(t, "integerRegex", {
            enumerable: !0,
            get: function () {
              return l.integerRegex;
            },
          });
        var c = n(93087);
        Object.defineProperty(t, "getSocket", {
          enumerable: !0,
          get: function () {
            return c.getSocket;
          },
        }),
          Object.defineProperty(t, "rpc", {
            enumerable: !0,
            get: function () {
              return c.rpc;
            },
          });
        var d = n(29803);
        Object.defineProperty(t, "stringify", {
          enumerable: !0,
          get: function () {
            return d.stringify;
          },
        });
        var f = n(85024);
        Object.defineProperty(t, "validateTypedData", {
          enumerable: !0,
          get: function () {
            return f.validateTypedData;
          },
        });
        var p = n(42716);
        Object.defineProperty(t, "decodeAbiParameters", {
          enumerable: !0,
          get: function () {
            return p.decodeAbiParameters;
          },
        });
        var h = n(73843);
        Object.defineProperty(t, "decodeErrorResult", {
          enumerable: !0,
          get: function () {
            return h.decodeErrorResult;
          },
        });
        var m = n(57573);
        Object.defineProperty(t, "decodeEventLog", {
          enumerable: !0,
          get: function () {
            return m.decodeEventLog;
          },
        });
        var y = n(59453);
        Object.defineProperty(t, "decodeFunctionData", {
          enumerable: !0,
          get: function () {
            return y.decodeFunctionData;
          },
        });
        var g = n(52366);
        Object.defineProperty(t, "decodeFunctionResult", {
          enumerable: !0,
          get: function () {
            return g.decodeFunctionResult;
          },
        });
        var b = n(79885);
        Object.defineProperty(t, "encodeAbiParameters", {
          enumerable: !0,
          get: function () {
            return b.encodeAbiParameters;
          },
        });
        var v = n(1099);
        Object.defineProperty(t, "encodeDeployData", {
          enumerable: !0,
          get: function () {
            return v.encodeDeployData;
          },
        });
        var w = n(55663);
        Object.defineProperty(t, "encodeErrorResult", {
          enumerable: !0,
          get: function () {
            return w.encodeErrorResult;
          },
        });
        var E = n(86778);
        Object.defineProperty(t, "encodeEventTopics", {
          enumerable: !0,
          get: function () {
            return E.encodeEventTopics;
          },
        });
        var x = n(71124);
        Object.defineProperty(t, "encodeFunctionData", {
          enumerable: !0,
          get: function () {
            return x.encodeFunctionData;
          },
        });
        var C = n(41325);
        Object.defineProperty(t, "encodeFunctionResult", {
          enumerable: !0,
          get: function () {
            return C.encodeFunctionResult;
          },
        });
        var _ = n(65775);
        Object.defineProperty(t, "getAbiItem", {
          enumerable: !0,
          get: function () {
            return _.getAbiItem;
          },
        });
        var T = n(99620);
        Object.defineProperty(t, "parseAbi", {
          enumerable: !0,
          get: function () {
            return T.parseAbi;
          },
        }),
          Object.defineProperty(t, "parseAbiItem", {
            enumerable: !0,
            get: function () {
              return T.parseAbiItem;
            },
          }),
          Object.defineProperty(t, "parseAbiParameter", {
            enumerable: !0,
            get: function () {
              return T.parseAbiParameter;
            },
          }),
          Object.defineProperty(t, "parseAbiParameters", {
            enumerable: !0,
            get: function () {
              return T.parseAbiParameters;
            },
          });
        var S = n(20500);
        Object.defineProperty(t, "encodePacked", {
          enumerable: !0,
          get: function () {
            return S.encodePacked;
          },
        });
        var P = n(37253);
        Object.defineProperty(t, "formatAbiItemWithArgs", {
          enumerable: !0,
          get: function () {
            return P.formatAbiItemWithArgs;
          },
        });
        var O = n(99636);
        Object.defineProperty(t, "formatAbiItem", {
          enumerable: !0,
          get: function () {
            return O.formatAbiItem;
          },
        }),
          Object.defineProperty(t, "formatAbiParams", {
            enumerable: !0,
            get: function () {
              return O.formatAbiParams;
            },
          });
        var I = n(18281);
        Object.defineProperty(t, "parseAccount", {
          enumerable: !0,
          get: function () {
            return I.parseAccount;
          },
        });
        var A = n(94873);
        Object.defineProperty(t, "publicKeyToAddress", {
          enumerable: !0,
          get: function () {
            return A.publicKeyToAddress;
          },
        });
        var k = n(37247);
        Object.defineProperty(t, "getContractAddress", {
          enumerable: !0,
          get: function () {
            return k.getContractAddress;
          },
        }),
          Object.defineProperty(t, "getCreateAddress", {
            enumerable: !0,
            get: function () {
              return k.getCreateAddress;
            },
          }),
          Object.defineProperty(t, "getCreate2Address", {
            enumerable: !0,
            get: function () {
              return k.getCreate2Address;
            },
          });
        var j = n(3001);
        Object.defineProperty(t, "getAddress", {
          enumerable: !0,
          get: function () {
            return j.getAddress;
          },
        });
        var B = n(35129);
        Object.defineProperty(t, "isAddress", {
          enumerable: !0,
          get: function () {
            return B.isAddress;
          },
        });
        var M = n(93127);
        Object.defineProperty(t, "isAddressEqual", {
          enumerable: !0,
          get: function () {
            return M.isAddressEqual;
          },
        });
        var N = n(44328);
        Object.defineProperty(t, "extractFunctionName", {
          enumerable: !0,
          get: function () {
            return N.extractFunctionName;
          },
        }),
          Object.defineProperty(t, "extractFunctionParams", {
            enumerable: !0,
            get: function () {
              return N.extractFunctionParams;
            },
          }),
          Object.defineProperty(t, "extractFunctionType", {
            enumerable: !0,
            get: function () {
              return N.extractFunctionType;
            },
          }),
          Object.defineProperty(t, "extractFunctionParts", {
            enumerable: !0,
            get: function () {
              return N.extractFunctionParts;
            },
          });
        var D = n(37456);
        Object.defineProperty(t, "concat", {
          enumerable: !0,
          get: function () {
            return D.concat;
          },
        }),
          Object.defineProperty(t, "concatBytes", {
            enumerable: !0,
            get: function () {
              return D.concatBytes;
            },
          }),
          Object.defineProperty(t, "concatHex", {
            enumerable: !0,
            get: function () {
              return D.concatHex;
            },
          });
        var R = n(76551);
        Object.defineProperty(t, "isBytes", {
          enumerable: !0,
          get: function () {
            return R.isBytes;
          },
        });
        var F = n(34323);
        Object.defineProperty(t, "isHex", {
          enumerable: !0,
          get: function () {
            return F.isHex;
          },
        });
        var L = n(38454);
        Object.defineProperty(t, "pad", {
          enumerable: !0,
          get: function () {
            return L.pad;
          },
        }),
          Object.defineProperty(t, "padBytes", {
            enumerable: !0,
            get: function () {
              return L.padBytes;
            },
          }),
          Object.defineProperty(t, "padHex", {
            enumerable: !0,
            get: function () {
              return L.padHex;
            },
          });
        var U = n(61539);
        Object.defineProperty(t, "size", {
          enumerable: !0,
          get: function () {
            return U.size;
          },
        });
        var $ = n(62870);
        Object.defineProperty(t, "slice", {
          enumerable: !0,
          get: function () {
            return $.slice;
          },
        }),
          Object.defineProperty(t, "sliceBytes", {
            enumerable: !0,
            get: function () {
              return $.sliceBytes;
            },
          }),
          Object.defineProperty(t, "sliceHex", {
            enumerable: !0,
            get: function () {
              return $.sliceHex;
            },
          });
        var q = n(29957);
        Object.defineProperty(t, "trim", {
          enumerable: !0,
          get: function () {
            return q.trim;
          },
        });
        var H = n(49906);
        Object.defineProperty(t, "defineBlock", {
          enumerable: !0,
          get: function () {
            return H.defineBlock;
          },
        }),
          Object.defineProperty(t, "formatBlock", {
            enumerable: !0,
            get: function () {
              return H.formatBlock;
            },
          });
        var z = n(64056);
        Object.defineProperty(t, "defineTransaction", {
          enumerable: !0,
          get: function () {
            return z.defineTransaction;
          },
        }),
          Object.defineProperty(t, "formatTransaction", {
            enumerable: !0,
            get: function () {
              return z.formatTransaction;
            },
          }),
          Object.defineProperty(t, "transactionType", {
            enumerable: !0,
            get: function () {
              return z.transactionType;
            },
          });
        var G = n(47960);
        Object.defineProperty(t, "formatLog", {
          enumerable: !0,
          get: function () {
            return G.formatLog;
          },
        });
        var W = n(37262);
        Object.defineProperty(t, "defineTransactionReceipt", {
          enumerable: !0,
          get: function () {
            return W.defineTransactionReceipt;
          },
        });
        var V = n(14928);
        Object.defineProperty(t, "defineTransactionRequest", {
          enumerable: !0,
          get: function () {
            return V.defineTransactionRequest;
          },
        }),
          Object.defineProperty(t, "formatTransactionRequest", {
            enumerable: !0,
            get: function () {
              return V.formatTransactionRequest;
            },
          });
        var K = n(29824);
        Object.defineProperty(t, "extract", {
          enumerable: !0,
          get: function () {
            return K.extract;
          },
        });
        var Z = n(21944);
        Object.defineProperty(t, "toRlp", {
          enumerable: !0,
          get: function () {
            return Z.toRlp;
          },
        });
        var J = n(10441);
        Object.defineProperty(t, "boolToBytes", {
          enumerable: !0,
          get: function () {
            return J.boolToBytes;
          },
        }),
          Object.defineProperty(t, "toBytes", {
            enumerable: !0,
            get: function () {
              return J.toBytes;
            },
          }),
          Object.defineProperty(t, "hexToBytes", {
            enumerable: !0,
            get: function () {
              return J.hexToBytes;
            },
          }),
          Object.defineProperty(t, "numberToBytes", {
            enumerable: !0,
            get: function () {
              return J.numberToBytes;
            },
          }),
          Object.defineProperty(t, "stringToBytes", {
            enumerable: !0,
            get: function () {
              return J.stringToBytes;
            },
          });
        var Y = n(62002);
        Object.defineProperty(t, "boolToHex", {
          enumerable: !0,
          get: function () {
            return Y.boolToHex;
          },
        }),
          Object.defineProperty(t, "bytesToHex", {
            enumerable: !0,
            get: function () {
              return Y.bytesToHex;
            },
          }),
          Object.defineProperty(t, "toHex", {
            enumerable: !0,
            get: function () {
              return Y.toHex;
            },
          }),
          Object.defineProperty(t, "numberToHex", {
            enumerable: !0,
            get: function () {
              return Y.numberToHex;
            },
          }),
          Object.defineProperty(t, "stringToHex", {
            enumerable: !0,
            get: function () {
              return Y.stringToHex;
            },
          });
        var X = n(35250);
        Object.defineProperty(t, "bytesToBigInt", {
          enumerable: !0,
          get: function () {
            return X.bytesToBigInt;
          },
        }),
          Object.defineProperty(t, "bytesToBigint", {
            enumerable: !0,
            get: function () {
              return X.bytesToBigInt;
            },
          }),
          Object.defineProperty(t, "bytesToBool", {
            enumerable: !0,
            get: function () {
              return X.bytesToBool;
            },
          }),
          Object.defineProperty(t, "bytesToNumber", {
            enumerable: !0,
            get: function () {
              return X.bytesToNumber;
            },
          }),
          Object.defineProperty(t, "bytesToString", {
            enumerable: !0,
            get: function () {
              return X.bytesToString;
            },
          }),
          Object.defineProperty(t, "fromBytes", {
            enumerable: !0,
            get: function () {
              return X.fromBytes;
            },
          });
        var Q = n(39581);
        Object.defineProperty(t, "fromHex", {
          enumerable: !0,
          get: function () {
            return Q.fromHex;
          },
        }),
          Object.defineProperty(t, "hexToBool", {
            enumerable: !0,
            get: function () {
              return Q.hexToBool;
            },
          }),
          Object.defineProperty(t, "hexToBigInt", {
            enumerable: !0,
            get: function () {
              return Q.hexToBigInt;
            },
          }),
          Object.defineProperty(t, "hexToNumber", {
            enumerable: !0,
            get: function () {
              return Q.hexToNumber;
            },
          }),
          Object.defineProperty(t, "hexToString", {
            enumerable: !0,
            get: function () {
              return Q.hexToString;
            },
          });
        var ee = n(14498);
        Object.defineProperty(t, "fromRlp", {
          enumerable: !0,
          get: function () {
            return ee.fromRlp;
          },
        });
        var et = n(30470);
        Object.defineProperty(t, "containsNodeError", {
          enumerable: !0,
          get: function () {
            return et.containsNodeError;
          },
        }),
          Object.defineProperty(t, "getNodeError", {
            enumerable: !0,
            get: function () {
              return et.getNodeError;
            },
          });
        var en = n(25950);
        Object.defineProperty(t, "getCallError", {
          enumerable: !0,
          get: function () {
            return en.getCallError;
          },
        });
        var er = n(30548);
        Object.defineProperty(t, "getContractError", {
          enumerable: !0,
          get: function () {
            return er.getContractError;
          },
        });
        var ei = n(6559);
        Object.defineProperty(t, "getEstimateGasError", {
          enumerable: !0,
          get: function () {
            return ei.getEstimateGasError;
          },
        });
        var ea = n(61350);
        Object.defineProperty(t, "getTransactionError", {
          enumerable: !0,
          get: function () {
            return ea.getTransactionError;
          },
        });
        var eo = n(36280);
        Object.defineProperty(t, "defineFormatter", {
          enumerable: !0,
          get: function () {
            return eo.defineFormatter;
          },
        });
        var es = n(29796);
        Object.defineProperty(t, "getEventSelector", {
          enumerable: !0,
          get: function () {
            return es.getEventSelector;
          },
        });
        var eu = n(45433);
        Object.defineProperty(t, "getFunctionSelector", {
          enumerable: !0,
          get: function () {
            return eu.getFunctionSelector;
          },
        });
        var el = n(70213);
        Object.defineProperty(t, "isHash", {
          enumerable: !0,
          get: function () {
            return el.isHash;
          },
        });
        var ec = n(12922);
        Object.defineProperty(t, "keccak256", {
          enumerable: !0,
          get: function () {
            return ec.keccak256;
          },
        });
        var ed = n(91094);
        Object.defineProperty(t, "sha256", {
          enumerable: !0,
          get: function () {
            return ed.sha256;
          },
        });
        var ef = n(23854);
        Object.defineProperty(t, "ripemd160", {
          enumerable: !0,
          get: function () {
            return ef.ripemd160;
          },
        });
        var ep = n(90696);
        Object.defineProperty(t, "hashTypedData", {
          enumerable: !0,
          get: function () {
            return ep.hashTypedData;
          },
        });
        var eh = n(60830);
        Object.defineProperty(t, "recoverAddress", {
          enumerable: !0,
          get: function () {
            return eh.recoverAddress;
          },
        });
        var em = n(59091);
        Object.defineProperty(t, "recoverMessageAddress", {
          enumerable: !0,
          get: function () {
            return em.recoverMessageAddress;
          },
        });
        var ey = n(58686);
        Object.defineProperty(t, "recoverPublicKey", {
          enumerable: !0,
          get: function () {
            return ey.recoverPublicKey;
          },
        });
        var eg = n(34494);
        Object.defineProperty(t, "recoverTypedDataAddress", {
          enumerable: !0,
          get: function () {
            return eg.recoverTypedDataAddress;
          },
        });
        var eb = n(88444);
        Object.defineProperty(t, "verifyMessage", {
          enumerable: !0,
          get: function () {
            return eb.verifyMessage;
          },
        });
        var ev = n(38032);
        Object.defineProperty(t, "verifyTypedData", {
          enumerable: !0,
          get: function () {
            return ev.verifyTypedData;
          },
        });
        var ew = n(19707);
        Object.defineProperty(t, "hashMessage", {
          enumerable: !0,
          get: function () {
            return ew.hashMessage;
          },
        });
        var eE = n(8711);
        Object.defineProperty(t, "getSerializedTransactionType", {
          enumerable: !0,
          get: function () {
            return eE.getSerializedTransactionType;
          },
        });
        var ex = n(57080);
        Object.defineProperty(t, "getTransactionType", {
          enumerable: !0,
          get: function () {
            return ex.getTransactionType;
          },
        });
        var eC = n(77365);
        Object.defineProperty(t, "assertRequest", {
          enumerable: !0,
          get: function () {
            return eC.assertRequest;
          },
        });
        var e_ = n(26121);
        Object.defineProperty(t, "assertTransactionEIP1559", {
          enumerable: !0,
          get: function () {
            return e_.assertTransactionEIP1559;
          },
        }),
          Object.defineProperty(t, "assertTransactionEIP2930", {
            enumerable: !0,
            get: function () {
              return e_.assertTransactionEIP2930;
            },
          }),
          Object.defineProperty(t, "assertTransactionLegacy", {
            enumerable: !0,
            get: function () {
              return e_.assertTransactionLegacy;
            },
          });
        var eT = n(69531);
        Object.defineProperty(t, "parseTransaction", {
          enumerable: !0,
          get: function () {
            return eT.parseTransaction;
          },
        });
        var eS = n(8969);
        Object.defineProperty(t, "prepareTransactionRequest", {
          enumerable: !0,
          get: function () {
            return eS.prepareTransactionRequest;
          },
        });
        var eP = n(88165);
        Object.defineProperty(t, "serializeTransaction", {
          enumerable: !0,
          get: function () {
            return eP.serializeTransaction;
          },
        });
        var eO = n(37200);
        Object.defineProperty(t, "serializeAccessList", {
          enumerable: !0,
          get: function () {
            return eO.serializeAccessList;
          },
        });
        var eI = n(12183);
        Object.defineProperty(t, "formatEther", {
          enumerable: !0,
          get: function () {
            return eI.formatEther;
          },
        });
        var eA = n(60903);
        Object.defineProperty(t, "formatGwei", {
          enumerable: !0,
          get: function () {
            return eA.formatGwei;
          },
        });
        var ek = n(69719);
        Object.defineProperty(t, "formatUnits", {
          enumerable: !0,
          get: function () {
            return ek.formatUnits;
          },
        });
        var ej = n(39190);
        Object.defineProperty(t, "parseUnits", {
          enumerable: !0,
          get: function () {
            return ej.parseUnits;
          },
        });
        var eB = n(60285);
        Object.defineProperty(t, "parseEther", {
          enumerable: !0,
          get: function () {
            return eB.parseEther;
          },
        });
        var eM = n(74448);
        Object.defineProperty(t, "parseGwei", {
          enumerable: !0,
          get: function () {
            return eM.parseGwei;
          },
        });
      },
      31410: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.observe = t.cleanupCache = t.listenersCache = void 0),
          (t.listenersCache = new Map()),
          (t.cleanupCache = new Map());
        let n = 0;
        t.observe = function (e, r, i) {
          let a = ++n,
            o = () => t.listenersCache.get(e) || [],
            s = () => {
              let n = o();
              t.listenersCache.set(
                e,
                n.filter((e) => e.id !== a)
              );
            },
            u = () => {
              let n = t.cleanupCache.get(e);
              1 === o().length && n && n(), s();
            },
            l = o();
          if (
            (t.listenersCache.set(e, [...l, { id: a, fns: r }]),
            l && l.length > 0)
          )
            return u;
          let c = {};
          for (let e in r)
            c[e] = (...t) => {
              let n = o();
              if (0 !== n.length) for (let r of n) r.fns[e]?.(...t);
            };
          let d = i(c);
          return "function" == typeof d && t.cleanupCache.set(e, d), u;
        };
      },
      3312: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.poll = void 0);
        let r = n(95501);
        t.poll = function (
          e,
          { emitOnBegin: t, initialWaitTime: n, interval: i }
        ) {
          let a = !0,
            o = () => (a = !1),
            s = async () => {
              let s;
              t && (s = await e({ unpoll: o }));
              let u = (await n?.(s)) ?? i;
              await (0, r.wait)(u);
              let l = async () => {
                a && (await e({ unpoll: o }), await (0, r.wait)(i), l());
              };
              l();
            };
          return s(), o;
        };
      },
      30251: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.createBatchScheduler = void 0);
        let n = new Map();
        t.createBatchScheduler = function ({
          fn: e,
          id: t,
          shouldSplitBatch: r,
          wait: i = 0,
          sort: a,
        }) {
          let o = async () => {
              let t = l();
              s();
              let n = t.map(({ args: e }) => e);
              0 !== n.length &&
                e(n)
                  .then((e) => {
                    a && Array.isArray(e) && e.sort(a);
                    for (let n = 0; n < t.length; n++) {
                      let { pendingPromise: r } = t[n];
                      r.resolve?.([e[n], e]);
                    }
                  })
                  .catch((e) => {
                    for (let n = 0; n < t.length; n++) {
                      let { pendingPromise: r } = t[n];
                      r.reject?.(e);
                    }
                  });
            },
            s = () => n.delete(t),
            u = () => l().map(({ args: e }) => e),
            l = () => n.get(t) || [],
            c = (e) => n.set(t, [...l(), e]);
          return {
            flush: s,
            async schedule(e) {
              let t = {},
                n = new Promise((e, n) => {
                  (t.resolve = e), (t.reject = n);
                }),
                a = r?.([...u(), e]);
              a && o();
              let s = l().length > 0;
              return (
                s
                  ? c({ args: e, pendingPromise: t })
                  : (c({ args: e, pendingPromise: t }), setTimeout(o, i)),
                n
              );
            },
          };
        };
      },
      70330: function (e, t) {
        "use strict";
        function n(e) {
          let n = (e, t) => ({
              clear: () => t.delete(e),
              get: () => t.get(e),
              set: (n) => t.set(e, n),
            }),
            r = n(e, t.promiseCache),
            i = n(e, t.responseCache);
          return {
            clear: () => {
              r.clear(), i.clear();
            },
            promise: r,
            response: i,
          };
        }
        async function r(e, { cacheKey: t, cacheTime: r = 1 / 0 }) {
          let i = n(t),
            a = i.response.get();
          if (a && r > 0) {
            let e = new Date().getTime() - a.created.getTime();
            if (e < r) return a.data;
          }
          let o = i.promise.get();
          o || ((o = e()), i.promise.set(o));
          try {
            let e = await o;
            return i.response.set({ created: new Date(), data: e }), e;
          } finally {
            i.promise.clear();
          }
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.withCache =
            t.getCache =
            t.responseCache =
            t.promiseCache =
              void 0),
          (t.promiseCache = new Map()),
          (t.responseCache = new Map()),
          (t.getCache = n),
          (t.withCache = r);
      },
      87593: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.withRetry = void 0);
        let r = n(95501);
        t.withRetry = function (
          e,
          { delay: t = 100, retryCount: n = 2, shouldRetry: i = () => !0 } = {}
        ) {
          return new Promise((a, o) => {
            let s = async ({ count: u = 0 } = {}) => {
              let l = async ({ error: e }) => {
                let n = "function" == typeof t ? t({ count: u, error: e }) : t;
                n && (await (0, r.wait)(n)), s({ count: u + 1 });
              };
              try {
                let t = await e();
                a(t);
              } catch (e) {
                if (u < n && (await i({ count: u, error: e })))
                  return l({ error: e });
                o(e);
              }
            };
            s();
          });
        };
      },
      76787: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.withTimeout = void 0),
          (t.withTimeout = function (
            e,
            { errorInstance: t = Error("timed out"), timeout: n, signal: r }
          ) {
            return new Promise((i, a) => {
              (async () => {
                let o;
                try {
                  let s = new AbortController();
                  n > 0 &&
                    (o = setTimeout(() => {
                      r ? s.abort() : a(t);
                    }, n)),
                    i(await e({ signal: s?.signal }));
                } catch (e) {
                  "AbortError" === e.name && a(t), a(e);
                } finally {
                  clearTimeout(o);
                }
              })();
            });
          });
      },
      14983: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.integerRegex = t.bytesRegex = t.arrayRegex = void 0),
          (t.arrayRegex = /^(.*)\[([0-9]*)\]$/),
          (t.bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/),
          (t.integerRegex =
            /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/);
      },
      93087: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.rpc = t.getSocket = t.socketsCache = void 0);
        let r = n(54943),
          i = n(4880),
          a = n(30251),
          o = n(76787),
          s = n(29803),
          u = 0;
        async function l(
          e,
          { body: t, fetchOptions: n = {}, timeout: r = 1e4 }
        ) {
          let { headers: a, method: l, signal: c } = n;
          try {
            let d;
            let f = await (0, o.withTimeout)(
              async ({ signal: i }) => {
                let o = await fetch(e, {
                  ...n,
                  body: Array.isArray(t)
                    ? (0, s.stringify)(
                        t.map((e) => ({
                          jsonrpc: "2.0",
                          id: e.id ?? u++,
                          ...e,
                        }))
                      )
                    : (0, s.stringify)({
                        jsonrpc: "2.0",
                        id: t.id ?? u++,
                        ...t,
                      }),
                  headers: { ...a, "Content-Type": "application/json" },
                  method: l || "POST",
                  signal: c || (r > 0 ? i : void 0),
                });
                return o;
              },
              {
                errorInstance: new i.TimeoutError({ body: t, url: e }),
                timeout: r,
                signal: !0,
              }
            );
            if (
              ((d = f.headers
                .get("Content-Type")
                ?.startsWith("application/json")
                ? await f.json()
                : await f.text()),
              !f.ok)
            )
              throw new i.HttpRequestError({
                body: t,
                details: (0, s.stringify)(d.error) || f.statusText,
                headers: f.headers,
                status: f.status,
                url: e,
              });
            return d;
          } catch (n) {
            if (n instanceof i.HttpRequestError || n instanceof i.TimeoutError)
              throw n;
            throw new i.HttpRequestError({
              body: t,
              details: n.message,
              url: e,
            });
          }
        }
        async function c(e) {
          let n = t.socketsCache.get(e);
          if (n) return n;
          let { schedule: i } = (0, a.createBatchScheduler)({
              id: e,
              fn: async () => {
                let i = new r.WebSocket(e),
                  a = new Map(),
                  o = new Map(),
                  s = ({ data: e }) => {
                    let t = JSON.parse(e),
                      n = "eth_subscription" === t.method,
                      r = n ? t.params.subscription : t.id,
                      i = n ? o : a,
                      s = i.get(r);
                    s && s({ data: e }), n || i.delete(r);
                  },
                  u = () => {
                    t.socketsCache.delete(e),
                      i.removeEventListener("close", u),
                      i.removeEventListener("message", s);
                  };
                return (
                  i.addEventListener("close", u),
                  i.addEventListener("message", s),
                  i.readyState === r.WebSocket.CONNECTING &&
                    (await new Promise((e, t) => {
                      i && ((i.onopen = e), (i.onerror = t));
                    })),
                  (n = Object.assign(i, { requests: a, subscriptions: o })),
                  t.socketsCache.set(e, n),
                  [n]
                );
              },
            }),
            [o, [s]] = await i();
          return s;
        }
        async function d(e, { body: n, timeout: r = 1e4 }) {
          return (0, o.withTimeout)(
            () =>
              new Promise((r) =>
                t.rpc.webSocket(e, { body: n, onResponse: r })
              ),
            {
              errorInstance: new i.TimeoutError({ body: n, url: e.url }),
              timeout: r,
            }
          );
        }
        (t.socketsCache = new Map()),
          (t.getSocket = c),
          (t.rpc = {
            http: l,
            webSocket: function (e, { body: t, onResponse: n }) {
              if (e.readyState === e.CLOSED || e.readyState === e.CLOSING)
                throw new i.WebSocketRequestError({
                  body: t,
                  url: e.url,
                  details: "Socket is closed.",
                });
              let r = u++,
                a = ({ data: i }) => {
                  let o = JSON.parse(i);
                  ("number" != typeof o.id || r === o.id) &&
                    (n?.(o),
                    "eth_subscribe" === t.method &&
                      "string" == typeof o.result &&
                      e.subscriptions.set(o.result, a),
                    "eth_unsubscribe" === t.method &&
                      e.subscriptions.delete(t.params?.[0]));
                };
              return (
                e.requests.set(r, a),
                e.send(JSON.stringify({ jsonrpc: "2.0", ...t, id: r })),
                e
              );
            },
            webSocketAsync: d,
          });
      },
      59250: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.compactSignatureToHex = void 0);
        let r = n(33497),
          i = n(39581);
        t.compactSignatureToHex = function ({ r: e, yParityAndS: t }) {
          return `0x${new r.secp256k1.Signature(
            (0, i.hexToBigInt)(e),
            (0, i.hexToBigInt)(t)
          ).toCompactHex()}`;
        };
      },
      63184: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.compactSignatureToSignature = void 0);
        let r = n(10441),
          i = n(62002);
        t.compactSignatureToSignature = function ({ r: e, yParityAndS: t }) {
          let n = (0, r.hexToBytes)(t),
            a = 128 & n[0] ? 28n : 27n;
          return (
            28n === a && (n[0] &= 127), { r: e, s: (0, i.bytesToHex)(n), v: a }
          );
        };
      },
      19707: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.hashMessage = void 0);
        let r = n(95011),
          i = n(37456),
          a = n(10441),
          o = n(12922);
        t.hashMessage = function (e, t) {
          let n =
              "string" == typeof e
                ? (0, a.stringToBytes)(e)
                : e.raw instanceof Uint8Array
                ? e.raw
                : (0, a.toBytes)(e.raw),
            s = (0, a.stringToBytes)(`${r.presignMessagePrefix}${n.length}`);
          return (0, o.keccak256)((0, i.concat)([s, n]), t);
        };
      },
      90696: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.hashDomain = t.hashTypedData = void 0);
        let r = n(79885),
          i = n(37456),
          a = n(62002),
          o = n(12922),
          s = n(85024);
        function u({ domain: e, types: t }) {
          return l({ data: e, primaryType: "EIP712Domain", types: t });
        }
        function l({ data: e, primaryType: t, types: n }) {
          let i = (function e({ data: t, primaryType: n, types: i }) {
            let s = [{ type: "bytes32" }],
              u = [
                (function ({ primaryType: e, types: t }) {
                  let n = (0, a.toHex)(
                    (function ({ primaryType: e, types: t }) {
                      let n = "",
                        r = (function e(
                          { primaryType: t, types: n },
                          r = new Set()
                        ) {
                          let i = t.match(/^\w*/u)?.[0];
                          if (r.has(i) || void 0 === n[i]) return r;
                          for (let t of (r.add(i), n[i]))
                            e({ primaryType: t.type, types: n }, r);
                          return r;
                        })({ primaryType: e, types: t });
                      r.delete(e);
                      let i = [e, ...Array.from(r).sort()];
                      for (let e of i)
                        n += `${e}(${t[e]
                          .map(({ name: e, type: t }) => `${t} ${e}`)
                          .join(",")})`;
                      return n;
                    })({ primaryType: e, types: t })
                  );
                  return (0, o.keccak256)(n);
                })({ primaryType: n, types: i }),
              ];
            for (let l of i[n]) {
              let [n, c] = (function t({
                types: n,
                name: i,
                type: s,
                value: u,
              }) {
                if (void 0 !== n[s])
                  return [
                    { type: "bytes32" },
                    (0, o.keccak256)(e({ data: u, primaryType: s, types: n })),
                  ];
                if ("bytes" === s) {
                  let e = u.length % 2 ? "0" : "";
                  return (
                    (u = `0x${e + u.slice(2)}`),
                    [{ type: "bytes32" }, (0, o.keccak256)(u)]
                  );
                }
                if ("string" === s)
                  return [
                    { type: "bytes32" },
                    (0, o.keccak256)((0, a.toHex)(u)),
                  ];
                if (s.lastIndexOf("]") === s.length - 1) {
                  let e = s.slice(0, s.lastIndexOf("[")),
                    a = u.map((r) =>
                      t({ name: i, type: e, types: n, value: r })
                    );
                  return [
                    { type: "bytes32" },
                    (0, o.keccak256)(
                      (0, r.encodeAbiParameters)(
                        a.map(([e]) => e),
                        a.map(([, e]) => e)
                      )
                    ),
                  ];
                }
                return [{ type: s }, u];
              })({ types: i, name: l.name, type: l.type, value: t[l.name] });
              s.push(n), u.push(c);
            }
            return (0, r.encodeAbiParameters)(s, u);
          })({ data: e, primaryType: t, types: n });
          return (0, o.keccak256)(i);
        }
        (t.hashTypedData = function ({
          domain: e,
          message: t,
          primaryType: n,
          types: r,
        }) {
          let a = void 0 === e ? {} : e,
            c = {
              EIP712Domain: (0, s.getTypesForEIP712Domain)({ domain: a }),
              ...r,
            };
          (0, s.validateTypedData)({
            domain: a,
            message: t,
            primaryType: n,
            types: c,
          });
          let d = ["0x1901"];
          return (
            a && d.push(u({ domain: a, types: c })),
            "EIP712Domain" !== n &&
              d.push(l({ data: t, primaryType: n, types: c })),
            (0, o.keccak256)((0, i.concat)(d))
          );
        }),
          (t.hashDomain = u);
      },
      86394: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.hexToCompactSignature = void 0);
        let r = n(33497),
          i = n(62002);
        t.hexToCompactSignature = function (e) {
          let { r: t, s: n } = r.secp256k1.Signature.fromCompact(
            e.slice(2, 130)
          );
          return {
            r: (0, i.numberToHex)(t, { size: 32 }),
            yParityAndS: (0, i.numberToHex)(n, { size: 32 }),
          };
        };
      },
      88312: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.hexToSignature = void 0);
        let r = n(33497),
          i = n(62002);
        t.hexToSignature = function (e) {
          let { r: t, s: n } = r.secp256k1.Signature.fromCompact(
              e.slice(2, 130)
            ),
            a = BigInt(`0x${e.slice(130)}`);
          return {
            r: (0, i.numberToHex)(t, { size: 32 }),
            s: (0, i.numberToHex)(n, { size: 32 }),
            v: a,
          };
        };
      },
      60830: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.recoverAddress = void 0);
        let r = n(94873),
          i = n(58686);
        async function a({ hash: e, signature: t }) {
          return (0, r.publicKeyToAddress)(
            await (0, i.recoverPublicKey)({ hash: e, signature: t })
          );
        }
        t.recoverAddress = a;
      },
      59091: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.recoverMessageAddress = void 0);
        let r = n(19707),
          i = n(60830);
        async function a({ message: e, signature: t }) {
          return (0, i.recoverAddress)({
            hash: (0, r.hashMessage)(e),
            signature: t,
          });
        }
        t.recoverMessageAddress = a;
      },
      58686: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.recoverPublicKey = void 0);
        let r = n(34323),
          i = n(39581),
          a = n(62002);
        async function o({ hash: e, signature: t }) {
          let o = (0, r.isHex)(t) ? t : (0, a.toHex)(t),
            s = (0, r.isHex)(e) ? e : (0, a.toHex)(e),
            u = (0, i.hexToNumber)(`0x${o.slice(130)}`);
          (0 === u || 1 === u) && (u += 27);
          let { secp256k1: l } = await Promise.resolve().then(() => n(33497)),
            c = l.Signature.fromCompact(o.substring(2, 130))
              .addRecoveryBit(u - 27)
              .recoverPublicKey(s.substring(2))
              .toHex(!1);
          return `0x${c}`;
        }
        t.recoverPublicKey = o;
      },
      34494: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.recoverTypedDataAddress = void 0);
        let r = n(90696),
          i = n(60830);
        async function a({
          domain: e,
          message: t,
          primaryType: n,
          signature: a,
          types: o,
        }) {
          return (0, i.recoverAddress)({
            hash: (0, r.hashTypedData)({
              domain: e,
              message: t,
              primaryType: n,
              types: o,
            }),
            signature: a,
          });
        }
        t.recoverTypedDataAddress = a;
      },
      32444: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.signatureToCompactSignature = void 0);
        let r = n(17493);
        t.signatureToCompactSignature = function (e) {
          let { r: t, s: n, v: i } = e,
            a = n;
          if (1n === i - 27n) {
            let e = (0, r.hexToBytes)(n);
            (e[0] |= 128), (a = (0, r.bytesToHex)(e));
          }
          return { r: t, yParityAndS: a };
        };
      },
      20178: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.signatureToHex = void 0);
        let r = n(33497),
          i = n(39581),
          a = n(62002);
        t.signatureToHex = function ({ r: e, s: t, v: n }) {
          return `0x${new r.secp256k1.Signature(
            (0, i.hexToBigInt)(e),
            (0, i.hexToBigInt)(t)
          ).toCompactHex()}${(0, a.toHex)(n).slice(2)}`;
        };
      },
      88444: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.verifyMessage = void 0);
        let r = n(3001),
          i = n(93127),
          a = n(59091);
        async function o({ address: e, message: t, signature: n }) {
          return (0, i.isAddressEqual)(
            (0, r.getAddress)(e),
            await (0, a.recoverMessageAddress)({ message: t, signature: n })
          );
        }
        t.verifyMessage = o;
      },
      38032: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.verifyTypedData = void 0);
        let r = n(3001),
          i = n(93127),
          a = n(34494);
        async function o({
          address: e,
          domain: t,
          message: n,
          primaryType: o,
          signature: s,
          types: u,
        }) {
          return (0, i.isAddressEqual)(
            (0, r.getAddress)(e),
            await (0, a.recoverTypedDataAddress)({
              domain: t,
              message: n,
              primaryType: o,
              signature: s,
              types: u,
            })
          );
        }
        t.verifyTypedData = o;
      },
      29803: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.stringify = void 0),
          (t.stringify = (e, t, n) =>
            JSON.stringify(
              e,
              (e, n) => {
                let r = "bigint" == typeof n ? n.toString() : n;
                return "function" == typeof t ? t(e, r) : r;
              },
              n
            ));
      },
      77365: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.assertRequest = void 0);
        let r = n(18281),
          i = n(77295),
          a = n(31027),
          o = n(72861),
          s = n(35129);
        t.assertRequest = function (e) {
          let {
              account: t,
              gasPrice: n,
              maxFeePerGas: u,
              maxPriorityFeePerGas: l,
              to: c,
            } = e,
            d = t ? (0, r.parseAccount)(t) : void 0;
          if (d && !(0, s.isAddress)(d.address))
            throw new i.InvalidAddressError({ address: d.address });
          if (c && !(0, s.isAddress)(c))
            throw new i.InvalidAddressError({ address: c });
          if (void 0 !== n && (void 0 !== u || void 0 !== l))
            throw new o.FeeConflictError();
          if (u && u > 2n ** 256n - 1n)
            throw new a.FeeCapTooHighError({ maxFeePerGas: u });
          if (l && u && l > u)
            throw new a.TipAboveFeeCapError({
              maxFeePerGas: u,
              maxPriorityFeePerGas: l,
            });
        };
      },
      26121: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.assertTransactionLegacy =
            t.assertTransactionEIP2930 =
            t.assertTransactionEIP1559 =
              void 0);
        let r = n(77295),
          i = n(24304),
          a = n(28890),
          o = n(31027),
          s = n(35129);
        (t.assertTransactionEIP1559 = function (e) {
          let {
            chainId: t,
            maxPriorityFeePerGas: n,
            gasPrice: u,
            maxFeePerGas: l,
            to: c,
          } = e;
          if (t <= 0) throw new a.InvalidChainIdError({ chainId: t });
          if (c && !(0, s.isAddress)(c))
            throw new r.InvalidAddressError({ address: c });
          if (u)
            throw new i.BaseError(
              "`gasPrice` is not a valid EIP-1559 Transaction attribute."
            );
          if (l && l > 2n ** 256n - 1n)
            throw new o.FeeCapTooHighError({ maxFeePerGas: l });
          if (n && l && n > l)
            throw new o.TipAboveFeeCapError({
              maxFeePerGas: l,
              maxPriorityFeePerGas: n,
            });
        }),
          (t.assertTransactionEIP2930 = function (e) {
            let {
              chainId: t,
              maxPriorityFeePerGas: n,
              gasPrice: u,
              maxFeePerGas: l,
              to: c,
            } = e;
            if (t <= 0) throw new a.InvalidChainIdError({ chainId: t });
            if (c && !(0, s.isAddress)(c))
              throw new r.InvalidAddressError({ address: c });
            if (n || l)
              throw new i.BaseError(
                "`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute."
              );
            if (u && u > 2n ** 256n - 1n)
              throw new o.FeeCapTooHighError({ maxFeePerGas: u });
          }),
          (t.assertTransactionLegacy = function (e) {
            let {
              chainId: t,
              maxPriorityFeePerGas: n,
              gasPrice: u,
              maxFeePerGas: l,
              to: c,
              accessList: d,
            } = e;
            if (c && !(0, s.isAddress)(c))
              throw new r.InvalidAddressError({ address: c });
            if (void 0 !== t && t <= 0)
              throw new a.InvalidChainIdError({ chainId: t });
            if (n || l)
              throw new i.BaseError(
                "`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute."
              );
            if (u && u > 2n ** 256n - 1n)
              throw new o.FeeCapTooHighError({ maxFeePerGas: u });
            if (d)
              throw new i.BaseError(
                "`accessList` is not a valid Legacy Transaction attribute."
              );
          });
      },
      8711: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getSerializedTransactionType = void 0);
        let r = n(72861),
          i = n(62870),
          a = n(39581);
        t.getSerializedTransactionType = function (e) {
          let t = (0, i.sliceHex)(e, 0, 1);
          if ("0x02" === t) return "eip1559";
          if ("0x01" === t) return "eip2930";
          if ("0x" !== t && (0, a.hexToNumber)(t) >= 192) return "legacy";
          throw new r.InvalidSerializedTransactionTypeError({
            serializedType: t,
          });
        };
      },
      57080: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getTransactionType = void 0);
        let r = n(72861);
        t.getTransactionType = function (e) {
          if (e.type) return e.type;
          if (void 0 !== e.maxFeePerGas || void 0 !== e.maxPriorityFeePerGas)
            return "eip1559";
          if (void 0 !== e.gasPrice)
            return void 0 !== e.accessList ? "eip2930" : "legacy";
          throw new r.InvalidSerializableTransactionError({ transaction: e });
        };
      },
      69531: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.parseAccessList =
            t.toTransactionArray =
            t.parseTransaction =
              void 0);
        let r = n(77295),
          i = n(72861),
          a = n(35129),
          o = n(34323),
          s = n(38454),
          u = n(29957),
          l = n(39581),
          c = n(14498),
          d = n(70213),
          f = n(26121),
          p = n(8711);
        function h(e) {
          return (0, c.fromRlp)(`0x${e.slice(4)}`, "hex");
        }
        function m(e) {
          let t = [];
          for (let n = 0; n < e.length; n++) {
            let [i, o] = e[n];
            if (!(0, a.isAddress)(i))
              throw new r.InvalidAddressError({ address: i });
            t.push({
              address: i,
              storageKeys: o.map((e) =>
                (0, d.isHash)(e) ? e : (0, u.trim)(e)
              ),
            });
          }
          return t;
        }
        function y(e) {
          let t = e.slice(-3),
            n = "0x" === t[0] || 0n === (0, l.hexToBigInt)(t[0]) ? 27n : 28n;
          return {
            r: (0, s.padHex)(t[1], { size: 32 }),
            s: (0, s.padHex)(t[2], { size: 32 }),
            v: n,
            yParity: 27n === n ? 0 : 1,
          };
        }
        (t.parseTransaction = function (e) {
          let t = (0, p.getSerializedTransactionType)(e);
          return "eip1559" === t
            ? (function (e) {
                let t = h(e),
                  [n, r, a, s, u, c, d, p, g, b, v, w] = t;
                if (!(9 === t.length || 12 === t.length))
                  throw new i.InvalidSerializedTransactionError({
                    attributes: {
                      chainId: n,
                      nonce: r,
                      maxPriorityFeePerGas: a,
                      maxFeePerGas: s,
                      gas: u,
                      to: c,
                      value: d,
                      data: p,
                      accessList: g,
                      ...(t.length > 9 ? { v: b, r: v, s: w } : {}),
                    },
                    serializedTransaction: e,
                    type: "eip1559",
                  });
                let E = { chainId: (0, l.hexToNumber)(n), type: "eip1559" };
                (0, o.isHex)(c) && "0x" !== c && (E.to = c),
                  (0, o.isHex)(u) &&
                    "0x" !== u &&
                    (E.gas = (0, l.hexToBigInt)(u)),
                  (0, o.isHex)(p) && "0x" !== p && (E.data = p),
                  (0, o.isHex)(r) &&
                    "0x" !== r &&
                    (E.nonce = (0, l.hexToNumber)(r)),
                  (0, o.isHex)(d) &&
                    "0x" !== d &&
                    (E.value = (0, l.hexToBigInt)(d)),
                  (0, o.isHex)(s) &&
                    "0x" !== s &&
                    (E.maxFeePerGas = (0, l.hexToBigInt)(s)),
                  (0, o.isHex)(a) &&
                    "0x" !== a &&
                    (E.maxPriorityFeePerGas = (0, l.hexToBigInt)(a)),
                  0 !== g.length && "0x" !== g && (E.accessList = m(g)),
                  (0, f.assertTransactionEIP1559)(E);
                let x = 12 === t.length ? y(t) : void 0;
                return { ...x, ...E };
              })(e)
            : "eip2930" === t
            ? (function (e) {
                let t = h(e),
                  [n, r, a, s, u, c, d, p, g, b, v] = t;
                if (!(8 === t.length || 11 === t.length))
                  throw new i.InvalidSerializedTransactionError({
                    attributes: {
                      chainId: n,
                      nonce: r,
                      gasPrice: a,
                      gas: s,
                      to: u,
                      value: c,
                      data: d,
                      accessList: p,
                      ...(t.length > 8 ? { v: g, r: b, s: v } : {}),
                    },
                    serializedTransaction: e,
                    type: "eip2930",
                  });
                let w = { chainId: (0, l.hexToNumber)(n), type: "eip2930" };
                (0, o.isHex)(u) && "0x" !== u && (w.to = u),
                  (0, o.isHex)(s) &&
                    "0x" !== s &&
                    (w.gas = (0, l.hexToBigInt)(s)),
                  (0, o.isHex)(d) && "0x" !== d && (w.data = d),
                  (0, o.isHex)(r) &&
                    "0x" !== r &&
                    (w.nonce = (0, l.hexToNumber)(r)),
                  (0, o.isHex)(c) &&
                    "0x" !== c &&
                    (w.value = (0, l.hexToBigInt)(c)),
                  (0, o.isHex)(a) &&
                    "0x" !== a &&
                    (w.gasPrice = (0, l.hexToBigInt)(a)),
                  0 !== p.length && "0x" !== p && (w.accessList = m(p)),
                  (0, f.assertTransactionEIP2930)(w);
                let E = 11 === t.length ? y(t) : void 0;
                return { ...E, ...w };
              })(e)
            : (function (e) {
                let t = (0, c.fromRlp)(e, "hex"),
                  [n, r, a, s, u, d, p, h, m] = t;
                if (!(6 === t.length || 9 === t.length))
                  throw new i.InvalidSerializedTransactionError({
                    attributes: {
                      nonce: n,
                      gasPrice: r,
                      gas: a,
                      to: s,
                      value: u,
                      data: d,
                      ...(t.length > 6 ? { v: p, r: h, s: m } : {}),
                    },
                    serializedTransaction: e,
                    type: "legacy",
                  });
                let y = { type: "legacy" };
                if (
                  ((0, o.isHex)(s) && "0x" !== s && (y.to = s),
                  (0, o.isHex)(a) &&
                    "0x" !== a &&
                    (y.gas = (0, l.hexToBigInt)(a)),
                  (0, o.isHex)(d) && "0x" !== d && (y.data = d),
                  (0, o.isHex)(n) &&
                    "0x" !== n &&
                    (y.nonce = (0, l.hexToNumber)(n)),
                  (0, o.isHex)(u) &&
                    "0x" !== u &&
                    (y.value = (0, l.hexToBigInt)(u)),
                  (0, o.isHex)(r) &&
                    "0x" !== r &&
                    (y.gasPrice = (0, l.hexToBigInt)(r)),
                  (0, f.assertTransactionLegacy)(y),
                  6 === t.length)
                )
                  return y;
                let g =
                  (0, o.isHex)(p) && "0x" !== p ? (0, l.hexToBigInt)(p) : 0n;
                if ("0x" === m && "0x" === h)
                  return g > 0 && (y.chainId = Number(g)), y;
                let b = Number((g - 35n) / 2n);
                if (b > 0) y.chainId = b;
                else if (27n !== g && 28n !== g)
                  throw new i.InvalidLegacyVError({ v: g });
                return (y.v = g), (y.s = m), (y.r = h), y;
              })(e);
        }),
          (t.toTransactionArray = h),
          (t.parseAccessList = m);
      },
      37200: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.serializeAccessList = void 0);
        let r = n(77295),
          i = n(72861),
          a = n(35129);
        t.serializeAccessList = function (e) {
          if (!e || 0 === e.length) return [];
          let t = [];
          for (let n = 0; n < e.length; n++) {
            let { address: o, storageKeys: s } = e[n];
            for (let e = 0; e < s.length; e++)
              if (s[e].length - 2 != 64)
                throw new i.InvalidStorageKeySizeError({ storageKey: s[e] });
            if (!(0, a.isAddress)(o))
              throw new r.InvalidAddressError({ address: o });
            t.push([o, s]);
          }
          return t;
        };
      },
      88165: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.serializeTransaction = void 0);
        let r = n(72861),
          i = n(37456),
          a = n(29957),
          o = n(62002),
          s = n(21944),
          u = n(26121),
          l = n(57080),
          c = n(37200);
        t.serializeTransaction = function (e, t) {
          let n = (0, l.getTransactionType)(e);
          return "eip1559" === n
            ? (function (e, t) {
                let {
                  chainId: n,
                  gas: r,
                  nonce: l,
                  to: d,
                  value: f,
                  maxFeePerGas: p,
                  maxPriorityFeePerGas: h,
                  accessList: m,
                  data: y,
                } = e;
                (0, u.assertTransactionEIP1559)(e);
                let g = (0, c.serializeAccessList)(m),
                  b = [
                    (0, o.toHex)(n),
                    l ? (0, o.toHex)(l) : "0x",
                    h ? (0, o.toHex)(h) : "0x",
                    p ? (0, o.toHex)(p) : "0x",
                    r ? (0, o.toHex)(r) : "0x",
                    d ?? "0x",
                    f ? (0, o.toHex)(f) : "0x",
                    y ?? "0x",
                    g,
                  ];
                if (t) {
                  let e =
                    0n === t.v
                      ? "0x"
                      : 1n === t.v
                      ? (0, o.toHex)(1)
                      : 27n === t.v
                      ? "0x"
                      : (0, o.toHex)(1);
                  b.push(e, (0, a.trim)(t.r), (0, a.trim)(t.s));
                }
                return (0, i.concatHex)(["0x02", (0, s.toRlp)(b)]);
              })(e, t)
            : "eip2930" === n
            ? (function (e, t) {
                let {
                  chainId: n,
                  gas: r,
                  data: l,
                  nonce: d,
                  to: f,
                  value: p,
                  accessList: h,
                  gasPrice: m,
                } = e;
                (0, u.assertTransactionEIP2930)(e);
                let y = (0, c.serializeAccessList)(h),
                  g = [
                    (0, o.toHex)(n),
                    d ? (0, o.toHex)(d) : "0x",
                    m ? (0, o.toHex)(m) : "0x",
                    r ? (0, o.toHex)(r) : "0x",
                    f ?? "0x",
                    p ? (0, o.toHex)(p) : "0x",
                    l ?? "0x",
                    y,
                  ];
                if (t) {
                  let e =
                    0n === t.v
                      ? "0x"
                      : 1n === t.v
                      ? (0, o.toHex)(1)
                      : 27n === t.v
                      ? "0x"
                      : (0, o.toHex)(1);
                  g.push(e, (0, a.trim)(t.r), (0, a.trim)(t.s));
                }
                return (0, i.concatHex)(["0x01", (0, s.toRlp)(g)]);
              })(e, t)
            : (function (e, t) {
                let {
                  chainId: n = 0,
                  gas: i,
                  data: a,
                  nonce: l,
                  to: c,
                  value: d,
                  gasPrice: f,
                } = e;
                (0, u.assertTransactionLegacy)(e);
                let p = [
                  l ? (0, o.toHex)(l) : "0x",
                  f ? (0, o.toHex)(f) : "0x",
                  i ? (0, o.toHex)(i) : "0x",
                  c ?? "0x",
                  d ? (0, o.toHex)(d) : "0x",
                  a ?? "0x",
                ];
                if (t) {
                  let e = (() => {
                    if (n > 0) return BigInt(2 * n) + BigInt(35n + t.v - 27n);
                    if (t.v >= 35n) {
                      let e = (t.v - 35n) / 2n;
                      return e > 0 ? t.v : 27n + (35n === t.v ? 0n : 1n);
                    }
                    let e = 27n + (27n === t.v ? 0n : 1n);
                    if (t.v !== e) throw new r.InvalidLegacyVError({ v: t.v });
                    return e;
                  })();
                  p = [...p, (0, o.toHex)(e), t.r, t.s];
                } else n > 0 && (p = [...p, (0, o.toHex)(n), "0x", "0x"]);
                return (0, s.toRlp)(p);
              })(e, t);
        };
      },
      85024: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.domainSeparator =
            t.getTypesForEIP712Domain =
            t.validateTypedData =
              void 0);
        let r = n(65413),
          i = n(77295),
          a = n(35129),
          o = n(61539),
          s = n(62002),
          u = n(14983),
          l = n(90696);
        function c({ domain: e }) {
          return [
            "string" == typeof e?.name && { name: "name", type: "string" },
            e?.version && { name: "version", type: "string" },
            "number" == typeof e?.chainId && {
              name: "chainId",
              type: "uint256",
            },
            e?.verifyingContract && {
              name: "verifyingContract",
              type: "address",
            },
            e?.salt && { name: "salt", type: "bytes32" },
          ].filter(Boolean);
        }
        (t.validateTypedData = function ({
          domain: e,
          message: t,
          primaryType: n,
          types: l,
        }) {
          let c = (e, t) => {
            for (let n of e) {
              let { name: e, type: d } = n,
                f = t[e],
                p = d.match(u.integerRegex);
              if (p && ("number" == typeof f || "bigint" == typeof f)) {
                let [e, t, n] = p;
                (0, s.numberToHex)(f, {
                  signed: "int" === t,
                  size: parseInt(n) / 8,
                });
              }
              if (
                "address" === d &&
                "string" == typeof f &&
                !(0, a.isAddress)(f)
              )
                throw new i.InvalidAddressError({ address: f });
              let h = d.match(u.bytesRegex);
              if (h) {
                let [e, t] = h;
                if (t && (0, o.size)(f) !== parseInt(t))
                  throw new r.BytesSizeMismatchError({
                    expectedSize: parseInt(t),
                    givenSize: (0, o.size)(f),
                  });
              }
              let m = l[d];
              m && c(m, f);
            }
          };
          if (
            (l.EIP712Domain && e && c(l.EIP712Domain, e), "EIP712Domain" !== n)
          ) {
            let e = l[n];
            c(e, t);
          }
        }),
          (t.getTypesForEIP712Domain = c),
          (t.domainSeparator = function ({ domain: e }) {
            return (0, l.hashDomain)({
              domain: e,
              types: { EIP712Domain: c({ domain: e }) },
            });
          });
      },
      18614: function (e, t) {
        "use strict";
        let n;
        Object.defineProperty(t, "__esModule", { value: !0 }), (t.uid = void 0);
        let r = 256;
        t.uid = function (e = 11) {
          if (!n || r + e > 512) {
            (n = ""), (r = 0);
            for (let e = 0; e < 256; e++)
              n += ((256 + 256 * Math.random()) | 0).toString(16).substring(1);
          }
          return n.substring(r, r++ + e);
        };
      },
      12183: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.formatEther = void 0);
        let r = n(12966),
          i = n(69719);
        t.formatEther = function (e, t = "wei") {
          return (0, i.formatUnits)(e, r.etherUnits[t]);
        };
      },
      60903: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.formatGwei = void 0);
        let r = n(12966),
          i = n(69719);
        t.formatGwei = function (e, t = "wei") {
          return (0, i.formatUnits)(e, r.gweiUnits[t]);
        };
      },
      69719: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.formatUnits = void 0),
          (t.formatUnits = function (e, t) {
            let n = e.toString(),
              r = n.startsWith("-");
            r && (n = n.slice(1));
            let [i, a] = [
              (n = n.padStart(t, "0")).slice(0, n.length - t),
              n.slice(n.length - t),
            ];
            return (
              (a = a.replace(/(0+)$/, "")),
              `${r ? "-" : ""}${i || "0"}${a ? `.${a}` : ""}`
            );
          });
      },
      60285: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.parseEther = void 0);
        let r = n(12966),
          i = n(39190);
        t.parseEther = function (e, t = "wei") {
          return (0, i.parseUnits)(e, r.etherUnits[t]);
        };
      },
      74448: function (e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.parseGwei = void 0);
        let r = n(12966),
          i = n(39190);
        t.parseGwei = function (e, t = "wei") {
          return (0, i.parseUnits)(e, r.gweiUnits[t]);
        };
      },
      39190: function (e, t) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.parseUnits = void 0),
          (t.parseUnits = function (e, t) {
            let [n, r = "0"] = e.split("."),
              i = n.startsWith("-");
            if ((i && (n = n.slice(1)), (r = r.replace(/(0+)$/, "")), 0 === t))
              1 === Math.round(Number(`.${r}`)) && (n = `${BigInt(n) + 1n}`),
                (r = "");
            else if (r.length > t) {
              let [e, i, a] = [
                  r.slice(0, t - 1),
                  r.slice(t - 1, t),
                  r.slice(t),
                ],
                o = Math.round(Number(`${i}.${a}`));
              (r =
                o > 9
                  ? `${BigInt(e) + BigInt(1)}0`.padStart(e.length + 1, "0")
                  : `${e}${o}`).length > t &&
                ((r = r.slice(1)), (n = `${BigInt(n) + 1n}`)),
                (r = r.slice(0, t));
            } else r = r.padEnd(t, "0");
            return BigInt(`${i ? "-" : ""}${n}${r}`);
          });
      },
      95501: function (e, t) {
        "use strict";
        async function n(e) {
          return new Promise((t) => setTimeout(t, e));
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.wait = void 0),
          (t.wait = n);
      },
      25444: function (e, t, n) {
        "use strict";
        n.d(t, {
          g: function () {
            return r;
          },
        });
        let r = [
          {
            inputs: [
              {
                internalType: "contract IBookManager",
                name: "bookManager_",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialOwner_",
                type: "address",
              },
            ],
            stateMutability: "nonpayable",
            type: "constructor",
          },
          {
            inputs: [
              { internalType: "address", name: "target", type: "address" },
            ],
            name: "AddressEmptyCode",
            type: "error",
          },
          { inputs: [], name: "AlreadyOpened", type: "error" },
          { inputs: [], name: "ERC20TransferFailed", type: "error" },
          { inputs: [], name: "FailedCall", type: "error" },
          {
            inputs: [
              { internalType: "uint256", name: "balance", type: "uint256" },
              { internalType: "uint256", name: "needed", type: "uint256" },
            ],
            name: "InsufficientBalance",
            type: "error",
          },
          { inputs: [], name: "InvalidAmount", type: "error" },
          { inputs: [], name: "InvalidBookPair", type: "error" },
          { inputs: [], name: "InvalidHook", type: "error" },
          { inputs: [], name: "InvalidLockAcquiredSender", type: "error" },
          { inputs: [], name: "InvalidLockCaller", type: "error" },
          { inputs: [], name: "InvalidMaker", type: "error" },
          { inputs: [], name: "InvalidStrategy", type: "error" },
          { inputs: [], name: "InvalidTick", type: "error" },
          { inputs: [], name: "InvalidValue", type: "error" },
          { inputs: [], name: "LockFailure", type: "error" },
          { inputs: [], name: "NativeTransferFailed", type: "error" },
          { inputs: [], name: "NotSelf", type: "error" },
          {
            inputs: [
              { internalType: "address", name: "owner", type: "address" },
            ],
            name: "OwnableInvalidOwner",
            type: "error",
          },
          {
            inputs: [
              { internalType: "address", name: "account", type: "address" },
            ],
            name: "OwnableUnauthorizedAccount",
            type: "error",
          },
          {
            inputs: [
              { internalType: "uint8", name: "bits", type: "uint8" },
              { internalType: "uint256", name: "value", type: "uint256" },
            ],
            name: "SafeCastOverflowedUintDowncast",
            type: "error",
          },
          {
            inputs: [
              { internalType: "address", name: "token", type: "address" },
            ],
            name: "SafeERC20FailedOperation",
            type: "error",
          },
          { inputs: [], name: "Slippage", type: "error" },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                indexed: !0,
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                indexed: !0,
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                indexed: !1,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            name: "Approval",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "address",
                name: "user",
                type: "address",
              },
              {
                indexed: !0,
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "uint256",
                name: "amountA",
                type: "uint256",
              },
              {
                indexed: !1,
                internalType: "uint256",
                name: "amountB",
                type: "uint256",
              },
              {
                indexed: !1,
                internalType: "uint256",
                name: "lpAmount",
                type: "uint256",
              },
            ],
            name: "Burn",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "uint256",
                name: "canceledAmountA",
                type: "uint256",
              },
              {
                indexed: !1,
                internalType: "uint256",
                name: "canceledAmountB",
                type: "uint256",
              },
            ],
            name: "Cancel",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "uint256",
                name: "claimedAmountA",
                type: "uint256",
              },
              {
                indexed: !1,
                internalType: "uint256",
                name: "claimedAmountB",
                type: "uint256",
              },
            ],
            name: "Claim",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "address",
                name: "user",
                type: "address",
              },
              {
                indexed: !0,
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "uint256",
                name: "amountA",
                type: "uint256",
              },
              {
                indexed: !1,
                internalType: "uint256",
                name: "amountB",
                type: "uint256",
              },
              {
                indexed: !1,
                internalType: "uint256",
                name: "lpAmount",
                type: "uint256",
              },
            ],
            name: "Mint",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
              },
              {
                indexed: !0,
                internalType: "BookId",
                name: "bookIdA",
                type: "uint192",
              },
              {
                indexed: !0,
                internalType: "BookId",
                name: "bookIdB",
                type: "uint192",
              },
              {
                indexed: !1,
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "address",
                name: "strategy",
                type: "address",
              },
            ],
            name: "Open",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                indexed: !0,
                internalType: "address",
                name: "operator",
                type: "address",
              },
              {
                indexed: !1,
                internalType: "bool",
                name: "approved",
                type: "bool",
              },
            ],
            name: "OperatorSet",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "address",
                name: "previousOwner",
                type: "address",
              },
              {
                indexed: !0,
                internalType: "address",
                name: "newOwner",
                type: "address",
              },
            ],
            name: "OwnershipTransferStarted",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "address",
                name: "previousOwner",
                type: "address",
              },
              {
                indexed: !0,
                internalType: "address",
                name: "newOwner",
                type: "address",
              },
            ],
            name: "OwnershipTransferred",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
              },
            ],
            name: "Rebalance",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !1,
                internalType: "address",
                name: "caller",
                type: "address",
              },
              {
                indexed: !0,
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                indexed: !0,
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                indexed: !0,
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                indexed: !1,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            name: "Transfer",
            type: "event",
          },
          {
            inputs: [],
            name: "RATE_PRECISION",
            outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "key", type: "bytes32" },
              { internalType: "address", name: "user", type: "address" },
              { internalType: "uint256", name: "burnAmount", type: "uint256" },
            ],
            name: "_burn",
            outputs: [
              { internalType: "uint256", name: "withdrawalA", type: "uint256" },
              { internalType: "uint256", name: "withdrawalB", type: "uint256" },
            ],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [
              {
                components: [
                  { internalType: "Currency", name: "base", type: "address" },
                  { internalType: "uint64", name: "unitSize", type: "uint64" },
                  { internalType: "Currency", name: "quote", type: "address" },
                  {
                    internalType: "FeePolicy",
                    name: "makerPolicy",
                    type: "uint24",
                  },
                  {
                    internalType: "contract IHooks",
                    name: "hooks",
                    type: "address",
                  },
                  {
                    internalType: "FeePolicy",
                    name: "takerPolicy",
                    type: "uint24",
                  },
                ],
                internalType: "struct IBookManager.BookKey",
                name: "bookKeyA",
                type: "tuple",
              },
              {
                components: [
                  { internalType: "Currency", name: "base", type: "address" },
                  { internalType: "uint64", name: "unitSize", type: "uint64" },
                  { internalType: "Currency", name: "quote", type: "address" },
                  {
                    internalType: "FeePolicy",
                    name: "makerPolicy",
                    type: "uint24",
                  },
                  {
                    internalType: "contract IHooks",
                    name: "hooks",
                    type: "address",
                  },
                  {
                    internalType: "FeePolicy",
                    name: "takerPolicy",
                    type: "uint24",
                  },
                ],
                internalType: "struct IBookManager.BookKey",
                name: "bookKeyB",
                type: "tuple",
              },
              { internalType: "bytes32", name: "salt", type: "bytes32" },
              { internalType: "address", name: "strategy", type: "address" },
            ],
            name: "_open",
            outputs: [
              { internalType: "bytes32", name: "key", type: "bytes32" },
            ],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [{ internalType: "bytes32", name: "key", type: "bytes32" }],
            name: "_rebalance",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [],
            name: "acceptOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "", type: "address" },
              { internalType: "address", name: "", type: "address" },
              { internalType: "uint256", name: "", type: "uint256" },
            ],
            name: "allowance",
            outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "spender", type: "address" },
              { internalType: "uint256", name: "id", type: "uint256" },
              { internalType: "uint256", name: "amount", type: "uint256" },
            ],
            name: "approve",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "", type: "address" },
              { internalType: "uint256", name: "", type: "uint256" },
            ],
            name: "balanceOf",
            outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [],
            name: "bookManager",
            outputs: [
              {
                internalType: "contract IBookManager",
                name: "",
                type: "address",
              },
            ],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [{ internalType: "BookId", name: "", type: "uint192" }],
            name: "bookPair",
            outputs: [{ internalType: "BookId", name: "", type: "uint192" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "key", type: "bytes32" },
              { internalType: "uint256", name: "amount", type: "uint256" },
              { internalType: "uint256", name: "minAmountA", type: "uint256" },
              { internalType: "uint256", name: "minAmountB", type: "uint256" },
            ],
            name: "burn",
            outputs: [
              { internalType: "uint256", name: "withdrawalA", type: "uint256" },
              { internalType: "uint256", name: "withdrawalB", type: "uint256" },
            ],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
            name: "decimals",
            outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
            stateMutability: "pure",
            type: "function",
          },
          {
            inputs: [{ internalType: "bytes32", name: "key", type: "bytes32" }],
            name: "getBookPairs",
            outputs: [
              { internalType: "BookId", name: "", type: "uint192" },
              { internalType: "BookId", name: "", type: "uint192" },
            ],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [{ internalType: "bytes32", name: "key", type: "bytes32" }],
            name: "getLiquidity",
            outputs: [
              {
                components: [
                  { internalType: "uint256", name: "reserve", type: "uint256" },
                  {
                    internalType: "uint256",
                    name: "claimable",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "cancelable",
                    type: "uint256",
                  },
                ],
                internalType: "struct IRebalancer.Liquidity",
                name: "liquidityA",
                type: "tuple",
              },
              {
                components: [
                  { internalType: "uint256", name: "reserve", type: "uint256" },
                  {
                    internalType: "uint256",
                    name: "claimable",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "cancelable",
                    type: "uint256",
                  },
                ],
                internalType: "struct IRebalancer.Liquidity",
                name: "liquidityB",
                type: "tuple",
              },
            ],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [{ internalType: "bytes32", name: "key", type: "bytes32" }],
            name: "getPool",
            outputs: [
              {
                components: [
                  { internalType: "BookId", name: "bookIdA", type: "uint192" },
                  { internalType: "BookId", name: "bookIdB", type: "uint192" },
                  {
                    internalType: "contract IStrategy",
                    name: "strategy",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "reserveA",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "reserveB",
                    type: "uint256",
                  },
                  {
                    internalType: "OrderId[]",
                    name: "orderListA",
                    type: "uint256[]",
                  },
                  {
                    internalType: "OrderId[]",
                    name: "orderListB",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct IRebalancer.Pool",
                name: "",
                type: "tuple",
              },
            ],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "", type: "address" },
              { internalType: "address", name: "", type: "address" },
            ],
            name: "isOperator",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "lockCaller", type: "address" },
              { internalType: "bytes", name: "data", type: "bytes" },
            ],
            name: "lockAcquired",
            outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "key", type: "bytes32" },
              { internalType: "uint256", name: "amountA", type: "uint256" },
              { internalType: "uint256", name: "amountB", type: "uint256" },
              { internalType: "uint256", name: "minLpAmount", type: "uint256" },
            ],
            name: "mint",
            outputs: [
              { internalType: "uint256", name: "mintAmount", type: "uint256" },
            ],
            stateMutability: "payable",
            type: "function",
          },
          {
            inputs: [
              {
                components: [
                  { internalType: "Currency", name: "base", type: "address" },
                  { internalType: "uint64", name: "unitSize", type: "uint64" },
                  { internalType: "Currency", name: "quote", type: "address" },
                  {
                    internalType: "FeePolicy",
                    name: "makerPolicy",
                    type: "uint24",
                  },
                  {
                    internalType: "contract IHooks",
                    name: "hooks",
                    type: "address",
                  },
                  {
                    internalType: "FeePolicy",
                    name: "takerPolicy",
                    type: "uint24",
                  },
                ],
                internalType: "struct IBookManager.BookKey",
                name: "bookKeyA",
                type: "tuple",
              },
              {
                components: [
                  { internalType: "Currency", name: "base", type: "address" },
                  { internalType: "uint64", name: "unitSize", type: "uint64" },
                  { internalType: "Currency", name: "quote", type: "address" },
                  {
                    internalType: "FeePolicy",
                    name: "makerPolicy",
                    type: "uint24",
                  },
                  {
                    internalType: "contract IHooks",
                    name: "hooks",
                    type: "address",
                  },
                  {
                    internalType: "FeePolicy",
                    name: "takerPolicy",
                    type: "uint24",
                  },
                ],
                internalType: "struct IBookManager.BookKey",
                name: "bookKeyB",
                type: "tuple",
              },
              { internalType: "bytes32", name: "salt", type: "bytes32" },
              { internalType: "address", name: "strategy", type: "address" },
            ],
            name: "open",
            outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [],
            name: "owner",
            outputs: [{ internalType: "address", name: "", type: "address" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [],
            name: "pendingOwner",
            outputs: [{ internalType: "address", name: "", type: "address" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [{ internalType: "bytes32", name: "key", type: "bytes32" }],
            name: "rebalance",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [],
            name: "renounceOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "operator", type: "address" },
              { internalType: "bool", name: "approved", type: "bool" },
            ],
            name: "setOperator",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes4", name: "interfaceId", type: "bytes4" },
            ],
            name: "supportsInterface",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
            name: "totalSupply",
            outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "receiver", type: "address" },
              { internalType: "uint256", name: "id", type: "uint256" },
              { internalType: "uint256", name: "amount", type: "uint256" },
            ],
            name: "transfer",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "sender", type: "address" },
              { internalType: "address", name: "receiver", type: "address" },
              { internalType: "uint256", name: "id", type: "uint256" },
              { internalType: "uint256", name: "amount", type: "uint256" },
            ],
            name: "transferFrom",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "newOwner", type: "address" },
            ],
            name: "transferOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          { stateMutability: "payable", type: "receive" },
        ];
      },
      92454: function (e, t, n) {
        "use strict";
        n.d(t, {
          B: function () {
            return P;
          },
        });
        var r = n(87272),
          i = n(87145),
          a = n(24361),
          o = n(86627),
          s = n(9445),
          u = n(12071),
          l = n(45229);
        class c {
          constructor({ chainId: e, tokens: t, bidBook: n, askBook: c }) {
            Object.defineProperty(this, "chainId", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
              Object.defineProperty(this, "makerFee", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "takerFee", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "id", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "quote", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "base", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "bids", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "asks", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "bidBook", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "askBook", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "take", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: ({ takeQuote: e, limitTick: t, amountOut: n }) =>
                  e
                    ? {
                        bookId: this.bidBook.id,
                        ...this.bidBook.take({ limitTick: t, amountOut: n }),
                      }
                    : {
                        bookId: this.askBook.id,
                        ...this.askBook.take({
                          limitTick: (0, o.E6)(t),
                          amountOut: n,
                        }),
                      },
              }),
              Object.defineProperty(this, "spend", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: ({ spentBase: e, limitTick: t, amountIn: n }) =>
                  e
                    ? {
                        bookId: this.bidBook.id,
                        ...this.bidBook.spend({ limitTick: t, amountIn: n }),
                      }
                    : {
                        bookId: this.askBook.id,
                        ...this.askBook.spend({
                          limitTick: (0, o.E6)(t),
                          amountIn: n,
                        }),
                      },
              }),
              Object.defineProperty(this, "toJson", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: () => ({
                  chainId: this.chainId,
                  quote: this.quote,
                  base: this.base,
                  makerFee: this.makerFee,
                  takerFee: this.takerFee,
                  bids: this.bids.map(
                    ({ price: e, tick: t, baseAmount: n }) => ({
                      price: e,
                      tick: Number(t),
                      baseAmount: (0, r.b)(n, this.base.decimals),
                    })
                  ),
                  bidBook: {
                    id: this.bidBook.id.toString(),
                    base: this.bidBook.base,
                    unitSize: this.bidBook.unitSize.toString(),
                    quote: this.bidBook.quote,
                    isOpened: this.bidBook.isOpened,
                  },
                  asks: this.asks.map(
                    ({ price: e, tick: t, baseAmount: n }) => ({
                      price: e,
                      tick: Number(t),
                      baseAmount: (0, r.b)(n, this.base.decimals),
                    })
                  ),
                  askBook: {
                    id: this.askBook.id.toString(),
                    base: this.askBook.base,
                    unitSize: this.askBook.unitSize.toString(),
                    quote: this.askBook.quote,
                    isOpened: this.askBook.isOpened,
                  },
                }),
              }),
              (this.chainId = e);
            let {
              marketId: d,
              quoteTokenAddress: f,
              baseTokenAddress: p,
            } = (0, a.u)(
              e,
              t.map((e) => e.address)
            );
            (this.id = d),
              (this.quote = t.find((e) => (0, i.E)(e.address, f))),
              (this.base = t.find((e) => (0, i.E)(e.address, p))),
              (this.makerFee = (100 * Number(u.Z[e].rate)) / 1e6),
              (this.takerFee = (100 * Number(u.n[e].rate)) / 1e6),
              (this.bids = n.depths.map((e) => ({
                price: (0, s.T4)(
                  (0, o.pU)(e.tick),
                  this.quote.decimals,
                  this.base.decimals
                ),
                tick: e.tick,
                baseAmount: (0, l.i)(e.tick, e.unitAmount * n.unitSize, !1),
              }))),
              (this.asks = c.depths.map((e) => {
                let t = (0, o.pU)((0, o.E6)(e.tick)),
                  n = (0, s.T4)(t, this.quote.decimals, this.base.decimals),
                  r = e.unitAmount * c.unitSize;
                return { price: n, tick: e.tick, baseAmount: r };
              })),
              (this.bidBook = n),
              (this.askBook = c);
          }
        }
        var d = n(87839),
          f = n(20289);
        class p {
          constructor({
            chainId: e,
            id: t,
            base: n,
            quote: r,
            unitSize: i,
            depths: a,
            isOpened: o,
          }) {
            Object.defineProperty(this, "chainId", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: void 0,
            }),
              Object.defineProperty(this, "id", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "base", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "unitSize", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "quote", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "depths", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "isOpened", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "take", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: ({ limitTick: e, amountOut: t }) => {
                  let n = [],
                    r = 0n,
                    i = 0n;
                  if (0 === this.depths.length)
                    return {
                      takenQuoteAmount: r,
                      spentBaseAmount: i,
                      events: n,
                    };
                  let a = this.depths
                      .sort((e, t) => Number(t.tick) - Number(e.tick))
                      .map((e) => e.tick),
                    o = 0,
                    s = a[0];
                  for (; s >= f.r && !(e > s); ) {
                    let e = u.n[this.chainId].usesQuote
                      ? u.n[this.chainId].calculateOriginalAmount(t - r, !0)
                      : t - r;
                    if (0n === (e = (0, d.cs)(e, this.unitSize, !0))) break;
                    let c = this.depths.find((e) => e.tick === s),
                      f = (c.unitAmount > e ? e : c.unitAmount) * this.unitSize,
                      p = (0, l.i)(s, f, !0);
                    if (
                      (u.n[this.chainId].usesQuote
                        ? (f -= u.n[this.chainId].calculateFee(f, !1))
                        : (p += u.n[this.chainId].calculateFee(p, !1)),
                      0n === f ||
                        (n.push({
                          tick: s,
                          takenQuoteAmount: f,
                          spentBaseAmount: p,
                        }),
                        (r += f),
                        (i += p),
                        t <= r))
                    )
                      break;
                    s = a[++o];
                  }
                  return { takenQuoteAmount: r, spentBaseAmount: i, events: n };
                },
              }),
              Object.defineProperty(this, "spend", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: ({ limitTick: e, amountIn: t }) => {
                  let n = [],
                    r = 0n,
                    i = 0n;
                  if (0 === this.depths.length)
                    return {
                      takenQuoteAmount: r,
                      spentBaseAmount: i,
                      events: n,
                    };
                  let a = this.depths
                      .sort((e, t) => Number(t.tick) - Number(e.tick))
                      .map((e) => e.tick),
                    o = 0,
                    s = a[0];
                  for (; i <= t && s >= f.r && !(e > s); ) {
                    let e = u.n[this.chainId].usesQuote
                      ? t - i
                      : u.n[this.chainId].calculateOriginalAmount(t - i, !1);
                    if (0n === (e = (0, l.c)(s, e, !1) / this.unitSize)) break;
                    let c = this.depths.find((e) => e.tick === s),
                      d = (c.unitAmount > e ? e : c.unitAmount) * this.unitSize,
                      f = (0, l.i)(s, d, !0);
                    if (
                      (u.n[this.chainId].usesQuote
                        ? (d -= u.n[this.chainId].calculateFee(d, !1))
                        : (f += u.n[this.chainId].calculateFee(f, !1)),
                      0n === f)
                    )
                      break;
                    n.push({
                      tick: s,
                      takenQuoteAmount: d,
                      spentBaseAmount: f,
                    }),
                      (r += d),
                      (i += f),
                      (s = a[++o]);
                  }
                  return { takenQuoteAmount: r, spentBaseAmount: i, events: n };
                },
              }),
              (this.chainId = e),
              (this.id = t),
              (this.base = n),
              (this.unitSize = i),
              (this.quote = r),
              (this.depths = a),
              (this.isOpened = o);
          }
        }
        var h = n(57437),
          m = n(24069),
          y = n(58218);
        let g = [
            {
              anonymous: !1,
              inputs: [
                {
                  indexed: !0,
                  internalType: "address",
                  name: "previousOwner",
                  type: "address",
                },
                {
                  indexed: !0,
                  internalType: "address",
                  name: "newOwner",
                  type: "address",
                },
              ],
              name: "OwnershipTransferred",
              type: "event",
            },
            {
              anonymous: !1,
              inputs: [
                {
                  indexed: !0,
                  internalType: "address",
                  name: "previousImplementation",
                  type: "address",
                },
                {
                  indexed: !0,
                  internalType: "address",
                  name: "newImplementation",
                  type: "address",
                },
              ],
              name: "ProxyImplementationUpdated",
              type: "event",
            },
            { stateMutability: "payable", type: "fallback" },
            {
              inputs: [],
              name: "owner",
              outputs: [{ internalType: "address", name: "", type: "address" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [{ internalType: "bytes4", name: "id", type: "bytes4" }],
              name: "supportsInterface",
              outputs: [{ internalType: "bool", name: "", type: "bool" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "newOwner", type: "address" },
              ],
              name: "transferOwnership",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [
                {
                  internalType: "address",
                  name: "newImplementation",
                  type: "address",
                },
              ],
              name: "upgradeTo",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [
                {
                  internalType: "address",
                  name: "newImplementation",
                  type: "address",
                },
                { internalType: "bytes", name: "data", type: "bytes" },
              ],
              name: "upgradeToAndCall",
              outputs: [],
              stateMutability: "payable",
              type: "function",
            },
            { stateMutability: "payable", type: "receive" },
            { inputs: [], name: "InvalidTick", type: "error" },
            {
              inputs: [
                { internalType: "uint256", name: "value", type: "uint256" },
              ],
              name: "SafeCastOverflowedUintToInt",
              type: "error",
            },
            {
              inputs: [],
              name: "bookManager",
              outputs: [
                {
                  internalType: "contract IBookManager",
                  name: "",
                  type: "address",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                {
                  components: [
                    { internalType: "BookId", name: "id", type: "uint192" },
                    {
                      internalType: "uint256",
                      name: "limitPrice",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "quoteAmount",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "maxBaseAmount",
                      type: "uint256",
                    },
                    { internalType: "bytes", name: "hookData", type: "bytes" },
                  ],
                  internalType: "struct IController.TakeOrderParams",
                  name: "params",
                  type: "tuple",
                },
              ],
              name: "getExpectedInput",
              outputs: [
                {
                  internalType: "uint256",
                  name: "takenQuoteAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "spentBaseAmount",
                  type: "uint256",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                {
                  components: [
                    { internalType: "BookId", name: "id", type: "uint192" },
                    {
                      internalType: "uint256",
                      name: "limitPrice",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "baseAmount",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "minQuoteAmount",
                      type: "uint256",
                    },
                    { internalType: "bytes", name: "hookData", type: "bytes" },
                  ],
                  internalType: "struct IController.SpendOrderParams",
                  name: "params",
                  type: "tuple",
                },
              ],
              name: "getExpectedOutput",
              outputs: [
                {
                  internalType: "uint256",
                  name: "takenQuoteAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "spentBaseAmount",
                  type: "uint256",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "BookId", name: "id", type: "uint192" },
                { internalType: "Tick", name: "tick", type: "int24" },
                { internalType: "uint256", name: "n", type: "uint256" },
              ],
              name: "getLiquidity",
              outputs: [
                {
                  components: [
                    { internalType: "Tick", name: "tick", type: "int24" },
                    { internalType: "uint64", name: "depth", type: "uint64" },
                  ],
                  internalType: "struct IBookViewer.Liquidity[]",
                  name: "liquidity",
                  type: "tuple[]",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                {
                  internalType: "address",
                  name: "implementationAddress",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "ownerAddress",
                  type: "address",
                },
                { internalType: "bytes", name: "data", type: "bytes" },
              ],
              stateMutability: "payable",
              type: "constructor",
            },
          ],
          b = (e, t) => `${e}:${t}`,
          v = new Map(),
          w = (e, t) => v.get(b(e, t)),
          E = (e, t, n) => v.set(b(e, t), n);
        async function x(e, t, n) {
          let r = w(t, n);
          if (void 0 !== r) return r;
          let i = await e.readContract({
            address: y.x[t].BookManager,
            abi: [
              {
                inputs: [
                  { internalType: "BookId", name: "id", type: "uint192" },
                ],
                name: "isOpened",
                outputs: [{ internalType: "bool", name: "", type: "bool" }],
                stateMutability: "view",
                type: "function",
              },
            ],
            functionName: "isOpened",
            args: [n],
          });
          return i && E(t, n, i), i;
        }
        var C = n(46763),
          _ = n(11176);
        let T = async (e, t) =>
            _.G.get(
              e,
              "getBook",
              "query getBook($bookId: ID!) { book(id: $bookId){ depths { tick unitAmount } } }",
              { bookId: t }
            ),
          S = async (e, t, n, r, i, a) => {
            let o = await (0, m.j)(e, t, n),
              s = (0, h.O)(t, n.address, r.address, o);
            if (i) {
              let {
                data: { book: e },
              } = await T(t, s.toString());
              return new p({
                chainId: t,
                id: s,
                base: r,
                quote: n,
                unitSize: o,
                depths: e
                  ? e.depths.map(({ tick: e, unitAmount: t }) => ({
                      tick: BigInt(e),
                      unitAmount: BigInt(t),
                    }))
                  : [],
                isOpened: null !== e,
              });
            }
            let [u, l] = await Promise.all([
              e.readContract({
                address: y.x[t].BookViewer,
                abi: g,
                functionName: "getLiquidity",
                args: [s, Number(2n ** 19n - 1n), BigInt(a)],
              }),
              x(e, t, s),
            ]);
            return new p({
              chainId: t,
              id: s,
              base: r,
              quote: n,
              unitSize: o,
              depths: u.map(({ tick: e, depth: t }) => ({
                tick: BigInt(e),
                unitAmount: t,
              })),
              isOpened: l,
            });
          };
        async function P(e, t, n, r, i = 100) {
          if (2 !== n.length) throw Error("Invalid token pair");
          let { quoteTokenAddress: o, baseTokenAddress: s } = (0, a.u)(t, [
              n[0],
              n[1],
            ]),
            [u, l] = await Promise.all([(0, C.k)(e, t, o), (0, C.k)(e, t, s)]),
            [d, f] = await Promise.all([
              S(e, t, u, l, r, i),
              S(e, t, l, u, r, i),
            ]);
          return new c({ chainId: t, tokens: [u, l], bidBook: d, askBook: f });
        }
      },
      33869: function (e, t, n) {
        "use strict";
        n.d(t, {
          tY: function () {
            return g;
          },
          zG: function () {
            return y;
          },
        });
        var r = n(1642),
          i = n(87145),
          a = n(87272),
          o = n(24361),
          s = n(45229),
          u = n(9445),
          l = n(86627),
          c = n(46763),
          d = n(95851),
          f = n(12071),
          p = n(11176);
        let h = async (e, t) =>
            p.G.get(
              e,
              "getOpenOrders",
              "query getOpenOrders($orderIds: [ID!]!) { openOrders(where: {id_in: $orderIds}) { id user book { id base { id name symbol decimals } quote { id name symbol decimals } unitSize } tick txHash createdAt unitAmount unitFilledAmount unitClaimedAmount unitClaimableAmount orderIndex } }",
              { orderIds: t }
            ),
          m = async (e, t) =>
            p.G.get(
              e,
              "getOpenOrdersByUserAddress",
              "query getOpenOrdersByUserAddress($userAddress: String!) { openOrders(where: { user: $userAddress }) { id user book { id base { id name symbol decimals } quote { id name symbol decimals } unitSize } tick txHash createdAt unitAmount unitFilledAmount unitClaimedAmount unitClaimableAmount orderIndex } }",
              { userAddress: t.toLowerCase() }
            );
        async function y(e, t, n) {
          let {
              data: { openOrders: a },
            } = await m(t, n),
            o = await Promise.all(
              a
                .map((e) => [
                  (0, r.K)(e.book.base.id),
                  (0, r.K)(e.book.quote.id),
                ])
                .flat()
                .filter((e, t, n) => n.findIndex((t) => (0, i.E)(t, e)) === t)
                .map((n) => (0, c.k)(e, t, n))
            );
          return a.map((e) => b(t, o, e));
        }
        async function g(e, t, n) {
          let {
              data: { openOrders: a },
            } = await h(t, n),
            o = await Promise.all(
              a
                .map((e) => [
                  (0, r.K)(e.book.base.id),
                  (0, r.K)(e.book.quote.id),
                ])
                .flat()
                .filter((e, t, n) => n.findIndex((t) => (0, i.E)(t, e)) === t)
                .map((n) => (0, c.k)(e, t, n))
            );
          return a.map((e) => b(t, o, e));
        }
        let b = (e, t, n) => {
          let c = t.find((e) => (0, i.E)(e.address, (0, r.K)(n.book.quote.id))),
            p = t.find((e) => (0, i.E)(e.address, (0, r.K)(n.book.base.id))),
            { quoteTokenAddress: h } = (0, o.u)(e, [c.address, p.address]),
            m = (0, i.E)(h, c.address),
            y = m ? c : p,
            g = m ? p : c,
            b = BigInt(n.tick),
            v = BigInt(n.unitAmount),
            w = BigInt(n.unitFilledAmount),
            E = BigInt(n.book.unitSize),
            x = BigInt(n.unitClaimedAmount),
            C = BigInt(n.unitClaimableAmount),
            _ = m ? (0, s.i)(b, E * v, !1) : E * v,
            T = m ? (0, s.i)(b, E * w, !1) : E * w,
            S = (0, l.E6)(b),
            P = m ? (0, s.i)(b, E * x, !1) : (0, s.c)(S, E * x, !1),
            O = m ? (0, s.i)(b, E * C, !1) : (0, s.c)(S, E * C, !1),
            I = E * (v - w);
          return {
            id: n.id,
            user: (0, r.K)(n.user),
            isBid: m,
            inputCurrency: c,
            outputCurrency: p,
            txHash: n.txHash,
            createdAt: Number(n.createdAt),
            price: (0, u.T4)(
              (0, l.pU)(m ? b : (0, l.E6)(b)),
              y.decimals,
              g.decimals
            ),
            tick: Number(b),
            orderIndex: n.orderIndex,
            amount: { currency: g, value: (0, a.b)(_, g.decimals) },
            filled: { currency: g, value: (0, a.b)(T, g.decimals) },
            claimed: { currency: p, value: (0, a.b)(P, p.decimals) },
            claimable: { currency: p, value: (0, a.b)(O, p.decimals) },
            cancelable: {
              currency: c,
              value: (0, a.b)(
                (0, d.Db)(
                  I,
                  100 +
                    (100 * Number(f.Z[e].rate)) / Number(f.Z[e].RATE_PRECISION),
                  6
                ),
                c.decimals
              ),
            },
          };
        };
      },
      49681: function (e, t, n) {
        "use strict";
        n.d(t, {
          X: function () {
            return E;
          },
          h: function () {
            return w;
          },
        });
        var r = n(87272),
          i = n(58218),
          a = n(74912),
          o = n(90280),
          s = n(17013),
          u = n(89930),
          l = n(79017),
          c = n(60702),
          d = n(88769),
          f = n(51230);
        let p = (e, t, n) => (
            e > t && ([e, t] = [t, e]),
            (0, a.w)(
              (function (e, t) {
                if (e.length !== t.length)
                  throw new o.fs({
                    expectedLength: e.length,
                    givenLength: t.length,
                  });
                let n = [];
                for (let r = 0; r < e.length; r++) {
                  let i = e[r],
                    a = t[r];
                  n.push(
                    (function e(t, n, r = !1) {
                      if ("address" === t) {
                        if (!(0, u.U)(n)) throw new s.b({ address: n });
                        return (0, c.vk)(n.toLowerCase(), {
                          size: r ? 32 : null,
                        });
                      }
                      if ("string" === t) return (0, d.$G)(n);
                      if ("bytes" === t) return n;
                      if ("bool" === t)
                        return (0, c.vk)((0, d.C4)(n), { size: r ? 32 : 1 });
                      let i = t.match(f.lh);
                      if (i) {
                        let [e, t, a = "256"] = i,
                          o = parseInt(a) / 8;
                        return (0, d.eC)(n, {
                          size: r ? 32 : o,
                          signed: "int" === t,
                        });
                      }
                      let a = t.match(f.eL);
                      if (a) {
                        let [e, t] = a;
                        if (parseInt(t) !== (n.length - 2) / 2)
                          throw new o.KY({
                            expectedSize: parseInt(t),
                            givenSize: (n.length - 2) / 2,
                          });
                        return (0, c.vk)(n, {
                          dir: "right",
                          size: r ? 32 : null,
                        });
                      }
                      let p = t.match(f.Ow);
                      if (p && Array.isArray(n)) {
                        let [t, r] = p,
                          i = [];
                        for (let t = 0; t < n.length; t++)
                          i.push(e(r, n[t], !0));
                        return 0 === i.length ? "0x" : (0, l.SM)(i);
                      }
                      throw new o.Mi(t);
                    })(i, a)
                  );
                }
                return (0, l.SM)(n);
              })(["uint192", "uint192", "bytes32"], [e, t, h(n)])
            )
          ),
          h = (e) => `0x${e.slice(2, 66).padStart(64, "0")}`;
        class m {
          constructor({
            chainId: e,
            market: t,
            isOpened: n,
            bookIdA: a,
            bookIdB: o,
            salt: s,
            poolKey: u,
            totalSupply: l,
            decimals: c,
            reserveA: d,
            reserveB: f,
            liquidityA: h,
            liquidityB: m,
            cancelableA: y,
            cancelableB: g,
            claimableA: b,
            claimableB: v,
            orderListA: w,
            orderListB: E,
            paused: x,
          }) {
            if (
              (Object.defineProperty(this, "chainId", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "key", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "market", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "isOpened", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "strategy", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "currencyA", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "currencyB", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "currencyLp", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "totalSupply", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "decimals", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "reserveA", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "reserveB", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "liquidityA", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "liquidityB", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "cancelableA", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "cancelableB", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "claimableA", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "claimableB", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "orderListA", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "orderListB", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "paused", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "toJson", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: () => ({
                  chainId: this.chainId,
                  key: this.key,
                  market: this.market,
                  isOpened: this.isOpened,
                  strategy: this.strategy,
                  currencyA: this.currencyA,
                  currencyB: this.currencyB,
                  currencyLp: this.currencyLp,
                  liquidityA: {
                    total: {
                      currency: this.currencyA,
                      value: (0, r.b)(this.liquidityA, this.currencyA.decimals),
                    },
                    reserve: {
                      currency: this.currencyA,
                      value: (0, r.b)(this.reserveA, this.currencyA.decimals),
                    },
                    cancelable: {
                      currency: this.currencyA,
                      value: (0, r.b)(
                        this.cancelableA,
                        this.currencyA.decimals
                      ),
                    },
                    claimable: {
                      currency: this.currencyA,
                      value: (0, r.b)(this.claimableA, this.currencyA.decimals),
                    },
                  },
                  liquidityB: {
                    total: {
                      currency: this.currencyB,
                      value: (0, r.b)(this.liquidityB, this.currencyB.decimals),
                    },
                    reserve: {
                      currency: this.currencyB,
                      value: (0, r.b)(this.reserveB, this.currencyB.decimals),
                    },
                    cancelable: {
                      currency: this.currencyB,
                      value: (0, r.b)(
                        this.cancelableB,
                        this.currencyB.decimals
                      ),
                    },
                    claimable: {
                      currency: this.currencyB,
                      value: (0, r.b)(this.claimableB, this.currencyB.decimals),
                    },
                  },
                  totalSupply: {
                    currency: this.currencyLp,
                    value: (0, r.b)(this.totalSupply, this.decimals),
                  },
                  orderListA: this.orderListA.map((e) => e.toString()),
                  orderListB: this.orderListB.map((e) => e.toString()),
                  paused: this.paused,
                }),
              }),
              (this.chainId = e),
              (this.key = p(a, o, s)),
              (this.market = t),
              (this.isOpened = n),
              (this.strategy = i.x[e].Strategy),
              a === BigInt(t.bidBook.id) && o === BigInt(t.askBook.id))
            )
              (this.currencyA = t.bidBook.quote),
                (this.currencyB = t.bidBook.base);
            else if (a === BigInt(t.askBook.id) && o === BigInt(t.bidBook.id))
              (this.currencyA = t.askBook.quote),
                (this.currencyB = t.askBook.base);
            else if (0n === a && 0n === o)
              (this.currencyA = t.bidBook.base),
                (this.currencyB = t.askBook.base);
            else throw Error("Invalid book id");
            (this.currencyLp = {
              address: i.x[e].Rebalancer,
              id: BigInt(u),
              name: `${this.currencyA.symbol}-${this.currencyB.symbol} LP Token`,
              symbol: `${this.currencyA.symbol}-${this.currencyB.symbol}`,
              decimals: c,
            }),
              (this.totalSupply = l),
              (this.decimals = c),
              (this.liquidityA = h),
              (this.liquidityB = m),
              (this.cancelableA = y),
              (this.cancelableB = g),
              (this.claimableA = b),
              (this.claimableB = v),
              (this.reserveA = d),
              (this.reserveB = f),
              (this.orderListA = w),
              (this.orderListB = E),
              (this.paused = x);
          }
        }
        var y = n(25444),
          g = n(11176);
        let b = [
          {
            inputs: [
              {
                internalType: "contract IOracle",
                name: "referenceOracle_",
                type: "address",
              },
              {
                internalType: "contract IRebalancer",
                name: "rebalancer_",
                type: "address",
              },
              {
                internalType: "contract IBookManager",
                name: "bookManager_",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialOwner",
                type: "address",
              },
            ],
            stateMutability: "nonpayable",
            type: "constructor",
          },
          { inputs: [], name: "ExceedsThreshold", type: "error" },
          { inputs: [], name: "InvalidAccess", type: "error" },
          { inputs: [], name: "InvalidConfig", type: "error" },
          { inputs: [], name: "InvalidOraclePrice", type: "error" },
          { inputs: [], name: "InvalidPrice", type: "error" },
          { inputs: [], name: "InvalidTick", type: "error" },
          { inputs: [], name: "InvalidValue", type: "error" },
          { inputs: [], name: "NotOperator", type: "error" },
          {
            inputs: [
              { internalType: "address", name: "owner", type: "address" },
            ],
            name: "OwnableInvalidOwner",
            type: "error",
          },
          {
            inputs: [
              { internalType: "address", name: "account", type: "address" },
            ],
            name: "OwnableUnauthorizedAccount",
            type: "error",
          },
          { inputs: [], name: "Paused", type: "error" },
          {
            inputs: [
              { internalType: "uint8", name: "bits", type: "uint8" },
              { internalType: "uint256", name: "value", type: "uint256" },
            ],
            name: "SafeCastOverflowedUintDowncast",
            type: "error",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "address",
                name: "previousOwner",
                type: "address",
              },
              {
                indexed: !0,
                internalType: "address",
                name: "newOwner",
                type: "address",
              },
            ],
            name: "OwnershipTransferStarted",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "address",
                name: "previousOwner",
                type: "address",
              },
              {
                indexed: !0,
                internalType: "address",
                name: "newOwner",
                type: "address",
              },
            ],
            name: "OwnershipTransferred",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
              },
            ],
            name: "Pause",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "address",
                name: "operator",
                type: "address",
              },
              {
                indexed: !1,
                internalType: "bool",
                name: "status",
                type: "bool",
              },
            ],
            name: "SetOperator",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
              },
            ],
            name: "Unpause",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "uint24",
                    name: "referenceThreshold",
                    type: "uint24",
                  },
                  {
                    internalType: "uint24",
                    name: "rebalanceThreshold",
                    type: "uint24",
                  },
                  { internalType: "uint24", name: "rateA", type: "uint24" },
                  { internalType: "uint24", name: "rateB", type: "uint24" },
                  { internalType: "uint24", name: "minRateA", type: "uint24" },
                  { internalType: "uint24", name: "minRateB", type: "uint24" },
                  {
                    internalType: "uint24",
                    name: "priceThresholdA",
                    type: "uint24",
                  },
                  {
                    internalType: "uint24",
                    name: "priceThresholdB",
                    type: "uint24",
                  },
                ],
                indexed: !1,
                internalType: "struct ISimpleOracleStrategy.Config",
                name: "config",
                type: "tuple",
              },
            ],
            name: "UpdateConfig",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              {
                indexed: !0,
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
              },
              {
                indexed: !1,
                internalType: "uint256",
                name: "oraclePrice",
                type: "uint256",
              },
              {
                indexed: !1,
                internalType: "Tick",
                name: "tickA",
                type: "int24",
              },
              {
                indexed: !1,
                internalType: "Tick",
                name: "tickB",
                type: "int24",
              },
              {
                indexed: !1,
                internalType: "uint256",
                name: "rate",
                type: "uint256",
              },
            ],
            name: "UpdatePosition",
            type: "event",
          },
          {
            inputs: [],
            name: "LAST_RAW_AMOUNT_MASK",
            outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [],
            name: "RATE_PRECISION",
            outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [],
            name: "acceptOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [],
            name: "bookManager",
            outputs: [
              {
                internalType: "contract IBookManager",
                name: "",
                type: "address",
              },
            ],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "", type: "address" },
              { internalType: "bytes32", name: "key", type: "bytes32" },
              { internalType: "uint256", name: "burnAmount", type: "uint256" },
              {
                internalType: "uint256",
                name: "lastTotalSupply",
                type: "uint256",
              },
            ],
            name: "burnHook",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [{ internalType: "bytes32", name: "key", type: "bytes32" }],
            name: "computeOrders",
            outputs: [
              {
                components: [
                  { internalType: "Tick", name: "tick", type: "int24" },
                  { internalType: "uint64", name: "rawAmount", type: "uint64" },
                ],
                internalType: "struct IStrategy.Order[]",
                name: "ordersA",
                type: "tuple[]",
              },
              {
                components: [
                  { internalType: "Tick", name: "tick", type: "int24" },
                  { internalType: "uint64", name: "rawAmount", type: "uint64" },
                ],
                internalType: "struct IStrategy.Order[]",
                name: "ordersB",
                type: "tuple[]",
              },
            ],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [{ internalType: "bytes32", name: "key", type: "bytes32" }],
            name: "getConfig",
            outputs: [
              {
                components: [
                  {
                    internalType: "uint24",
                    name: "referenceThreshold",
                    type: "uint24",
                  },
                  {
                    internalType: "uint24",
                    name: "rebalanceThreshold",
                    type: "uint24",
                  },
                  { internalType: "uint24", name: "rateA", type: "uint24" },
                  { internalType: "uint24", name: "rateB", type: "uint24" },
                  { internalType: "uint24", name: "minRateA", type: "uint24" },
                  { internalType: "uint24", name: "minRateB", type: "uint24" },
                  {
                    internalType: "uint24",
                    name: "priceThresholdA",
                    type: "uint24",
                  },
                  {
                    internalType: "uint24",
                    name: "priceThresholdB",
                    type: "uint24",
                  },
                ],
                internalType: "struct ISimpleOracleStrategy.Config",
                name: "",
                type: "tuple",
              },
            ],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [{ internalType: "bytes32", name: "key", type: "bytes32" }],
            name: "getLastRawAmount",
            outputs: [
              { internalType: "uint256", name: "", type: "uint256" },
              { internalType: "uint256", name: "", type: "uint256" },
            ],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [{ internalType: "bytes32", name: "key", type: "bytes32" }],
            name: "getPosition",
            outputs: [
              {
                components: [
                  { internalType: "bool", name: "paused", type: "bool" },
                  {
                    internalType: "uint128",
                    name: "oraclePrice",
                    type: "uint128",
                  },
                  { internalType: "uint24", name: "rate", type: "uint24" },
                  { internalType: "Tick", name: "tickA", type: "int24" },
                  { internalType: "Tick", name: "tickB", type: "int24" },
                ],
                internalType: "struct ISimpleOracleStrategy.Position",
                name: "",
                type: "tuple",
              },
            ],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [{ internalType: "address", name: "", type: "address" }],
            name: "isOperator",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [{ internalType: "bytes32", name: "key", type: "bytes32" }],
            name: "isOraclePriceValid",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [{ internalType: "bytes32", name: "key", type: "bytes32" }],
            name: "isPaused",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "", type: "address" },
              { internalType: "bytes32", name: "", type: "bytes32" },
              { internalType: "uint256", name: "", type: "uint256" },
              { internalType: "uint256", name: "", type: "uint256" },
            ],
            name: "mintHook",
            outputs: [],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [],
            name: "owner",
            outputs: [{ internalType: "address", name: "", type: "address" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [{ internalType: "bytes32", name: "key", type: "bytes32" }],
            name: "pause",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [],
            name: "pendingOwner",
            outputs: [{ internalType: "address", name: "", type: "address" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "", type: "address" },
              { internalType: "bytes32", name: "key", type: "bytes32" },
              {
                components: [
                  { internalType: "Tick", name: "tick", type: "int24" },
                  { internalType: "uint64", name: "rawAmount", type: "uint64" },
                ],
                internalType: "struct IStrategy.Order[]",
                name: "liquidityA",
                type: "tuple[]",
              },
              {
                components: [
                  { internalType: "Tick", name: "tick", type: "int24" },
                  { internalType: "uint64", name: "rawAmount", type: "uint64" },
                ],
                internalType: "struct IStrategy.Order[]",
                name: "liquidityB",
                type: "tuple[]",
              },
            ],
            name: "rebalanceHook",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [],
            name: "rebalancer",
            outputs: [
              {
                internalType: "contract IRebalancer",
                name: "",
                type: "address",
              },
            ],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [],
            name: "referenceOracle",
            outputs: [
              { internalType: "contract IOracle", name: "", type: "address" },
            ],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [],
            name: "renounceOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "key", type: "bytes32" },
              {
                components: [
                  {
                    internalType: "uint24",
                    name: "referenceThreshold",
                    type: "uint24",
                  },
                  {
                    internalType: "uint24",
                    name: "rebalanceThreshold",
                    type: "uint24",
                  },
                  { internalType: "uint24", name: "rateA", type: "uint24" },
                  { internalType: "uint24", name: "rateB", type: "uint24" },
                  { internalType: "uint24", name: "minRateA", type: "uint24" },
                  { internalType: "uint24", name: "minRateB", type: "uint24" },
                  {
                    internalType: "uint24",
                    name: "priceThresholdA",
                    type: "uint24",
                  },
                  {
                    internalType: "uint24",
                    name: "priceThresholdB",
                    type: "uint24",
                  },
                ],
                internalType: "struct ISimpleOracleStrategy.Config",
                name: "config",
                type: "tuple",
              },
            ],
            name: "setConfig",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "operator", type: "address" },
              { internalType: "bool", name: "status", type: "bool" },
            ],
            name: "setOperator",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "newOwner", type: "address" },
            ],
            name: "transferOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [{ internalType: "bytes32", name: "key", type: "bytes32" }],
            name: "unpause",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [
              { internalType: "bytes32", name: "key", type: "bytes32" },
              { internalType: "uint256", name: "oraclePrice", type: "uint256" },
              { internalType: "Tick", name: "tickA", type: "int24" },
              { internalType: "Tick", name: "tickB", type: "int24" },
              { internalType: "uint24", name: "rate", type: "uint24" },
            ],
            name: "updatePosition",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
        ];
        var v = n(92454);
        let w = async (e, t, n, r, i, a) => {
          let o = await g.G.get(
            e,
            "getPoolPerformanceData",
            'query getPoolPerformanceData($poolKey: String!, $volumeFrom: BigInt!, $snapshotFrom: BigInt!, $snapshotIntervalType: String!, $spreadProfitFrom: BigInt!) { poolVolumes( first: 1000, skip: 0, orderBy: timestamp orderDirection: asc where: {poolKey: $poolKey, intervalType: "5m", timestamp_gte: $volumeFrom} ) { id poolKey intervalType timestamp currencyAVolume currencyBVolume bookACurrencyAVolume bookACurrencyBVolume bookBCurrencyAVolume bookBCurrencyBVolume } poolSnapshots( first: 1000 skip: 0 orderBy: timestamp orderDirection: asc where: {poolKey: $poolKey, intervalType: $snapshotIntervalType, timestamp_gte: $snapshotFrom} ) { id poolKey intervalType timestamp price liquidityA liquidityB totalSupply } poolSnapshotBefore: poolSnapshots( first: 1 skip: 0 orderBy: timestamp orderDirection: desc where: {poolKey: $poolKey, intervalType: $snapshotIntervalType, timestamp_lt: $snapshotFrom} ) { id poolKey intervalType timestamp price liquidityA liquidityB totalSupply } poolSnapshots2: poolSnapshots( first: 1000 skip: 1000 orderBy: timestamp orderDirection: asc where: {poolKey: $poolKey, intervalType: $snapshotIntervalType, timestamp_gte: $snapshotFrom} ) { id poolKey intervalType timestamp price liquidityA liquidityB totalSupply } poolSnapshots3: poolSnapshots( first: 1000 skip: 2000 orderBy: timestamp orderDirection: asc where: {poolKey: $poolKey, intervalType: $snapshotIntervalType, timestamp_gte: $snapshotFrom} ) { id poolKey intervalType timestamp price liquidityA liquidityB totalSupply } poolSpreadProfits( first: 1000, skip: 0, orderBy: timestamp orderDirection: asc where: {intervalType: "5m", timestamp_gte: $spreadProfitFrom} ) { id intervalType timestamp accumulatedProfitInUsd } }',
            {
              poolKey: t,
              volumeFrom: n,
              snapshotFrom: r,
              snapshotIntervalType: i.valueOf(),
              spreadProfitFrom: a,
            }
          );
          return {
            poolVolumes: o.data.poolVolumes,
            poolSnapshots: o.data.poolSnapshotBefore
              .concat(o.data.poolSnapshots)
              .concat(o.data.poolSnapshots2)
              .concat(o.data.poolSnapshots3),
            poolSpreadProfits: o.data.poolSpreadProfits,
          };
        };
        async function E(e, t, n, r, a, o) {
          if (2 !== n.length) throw Error("Invalid token pair");
          o || (o = (await (0, v.B)(e, t, n, a)).toJson());
          let s = p(BigInt(o.bidBook.id), BigInt(o.askBook.id), r),
            [
              {
                bookIdA: u,
                bookIdB: l,
                reserveA: c,
                reserveB: d,
                orderListA: f,
                orderListB: h,
              },
              g,
              [w, E],
              x,
            ] = await e.multicall({
              allowFailure: !1,
              contracts: [
                {
                  address: i.x[t].Rebalancer,
                  abi: y.g,
                  functionName: "getPool",
                  args: [s],
                },
                {
                  address: i.x[t].Rebalancer,
                  abi: y.g,
                  functionName: "totalSupply",
                  args: [BigInt(s)],
                },
                {
                  address: i.x[t].Rebalancer,
                  abi: y.g,
                  functionName: "getLiquidity",
                  args: [s],
                },
                {
                  address: i.x[t].Strategy,
                  abi: b,
                  functionName: "isPaused",
                  args: [s],
                },
              ],
            }),
            C = w.reserve + w.cancelable + w.claimable,
            _ = E.reserve + E.cancelable + E.claimable;
          return new m({
            chainId: t,
            market: o,
            isOpened: u > 0 && l > 0,
            bookIdA: u,
            bookIdB: l,
            salt: r,
            poolKey: s,
            totalSupply: BigInt(g),
            decimals: 18,
            liquidityA: BigInt(C),
            liquidityB: BigInt(_),
            cancelableA: BigInt(w.cancelable),
            cancelableB: BigInt(E.cancelable),
            claimableA: BigInt(w.claimable),
            claimableB: BigInt(E.claimable),
            reserveA: BigInt(c),
            reserveB: BigInt(d),
            orderListA: f.map((e) => BigInt(e)),
            orderListB: h.map((e) => BigInt(e)),
            paused: x,
          });
        }
      },
      10341: function (e, t, n) {
        "use strict";
        n.d(t, {
          EB: function () {
            return V;
          },
          _e: function () {
            return W;
          },
          _X: function () {
            return G;
          },
          DW: function () {
            return z;
          },
          t2: function () {
            return H;
          },
          PM: function () {
            return K;
          },
        });
        var r = n(27841),
          i = n(38464),
          a = n(87145),
          o = n(66834);
        let s =
          "0x0000000000000000000000000000000000000000000000000000000000000000";
        var u = n(82267),
          l = n(87272),
          c = n(1642),
          d = n(17019),
          f = n(24069);
        let p = [
            {
              inputs: [
                {
                  internalType: "address",
                  name: "bookManager",
                  type: "address",
                },
              ],
              stateMutability: "nonpayable",
              type: "constructor",
            },
            {
              inputs: [
                { internalType: "address", name: "target", type: "address" },
              ],
              name: "AddressEmptyCode",
              type: "error",
            },
            { inputs: [], name: "ControllerSlippage", type: "error" },
            { inputs: [], name: "Deadline", type: "error" },
            { inputs: [], name: "ERC20TransferFailed", type: "error" },
            { inputs: [], name: "FailedCall", type: "error" },
            {
              inputs: [
                { internalType: "uint256", name: "balance", type: "uint256" },
                { internalType: "uint256", name: "needed", type: "uint256" },
              ],
              name: "InsufficientBalance",
              type: "error",
            },
            { inputs: [], name: "InvalidAccess", type: "error" },
            { inputs: [], name: "InvalidAction", type: "error" },
            { inputs: [], name: "InvalidLength", type: "error" },
            { inputs: [], name: "InvalidPrice", type: "error" },
            { inputs: [], name: "InvalidTick", type: "error" },
            { inputs: [], name: "NativeTransferFailed", type: "error" },
            { inputs: [], name: "ReentrancyGuardReentrantCall", type: "error" },
            {
              inputs: [
                { internalType: "uint8", name: "bits", type: "uint8" },
                { internalType: "uint256", name: "value", type: "uint256" },
              ],
              name: "SafeCastOverflowedUintDowncast",
              type: "error",
            },
            {
              inputs: [
                { internalType: "address", name: "token", type: "address" },
              ],
              name: "SafeERC20FailedOperation",
              type: "error",
            },
            {
              inputs: [
                {
                  components: [
                    { internalType: "OrderId", name: "id", type: "uint256" },
                    {
                      internalType: "uint256",
                      name: "leftQuoteAmount",
                      type: "uint256",
                    },
                    { internalType: "bytes", name: "hookData", type: "bytes" },
                  ],
                  internalType: "struct IController.CancelOrderParams[]",
                  name: "orderParamsList",
                  type: "tuple[]",
                },
                {
                  internalType: "address[]",
                  name: "tokensToSettle",
                  type: "address[]",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "tokenId",
                      type: "uint256",
                    },
                    {
                      components: [
                        {
                          internalType: "uint256",
                          name: "deadline",
                          type: "uint256",
                        },
                        { internalType: "uint8", name: "v", type: "uint8" },
                        { internalType: "bytes32", name: "r", type: "bytes32" },
                        { internalType: "bytes32", name: "s", type: "bytes32" },
                      ],
                      internalType: "struct IController.PermitSignature",
                      name: "signature",
                      type: "tuple",
                    },
                  ],
                  internalType: "struct IController.ERC721PermitParams[]",
                  name: "permitParamsList",
                  type: "tuple[]",
                },
                { internalType: "uint64", name: "deadline", type: "uint64" },
              ],
              name: "cancel",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [
                {
                  components: [
                    { internalType: "OrderId", name: "id", type: "uint256" },
                    { internalType: "bytes", name: "hookData", type: "bytes" },
                  ],
                  internalType: "struct IController.ClaimOrderParams[]",
                  name: "orderParamsList",
                  type: "tuple[]",
                },
                {
                  internalType: "address[]",
                  name: "tokensToSettle",
                  type: "address[]",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "tokenId",
                      type: "uint256",
                    },
                    {
                      components: [
                        {
                          internalType: "uint256",
                          name: "deadline",
                          type: "uint256",
                        },
                        { internalType: "uint8", name: "v", type: "uint8" },
                        { internalType: "bytes32", name: "r", type: "bytes32" },
                        { internalType: "bytes32", name: "s", type: "bytes32" },
                      ],
                      internalType: "struct IController.PermitSignature",
                      name: "signature",
                      type: "tuple",
                    },
                  ],
                  internalType: "struct IController.ERC721PermitParams[]",
                  name: "permitParamsList",
                  type: "tuple[]",
                },
                { internalType: "uint64", name: "deadline", type: "uint64" },
              ],
              name: "claim",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [
                {
                  internalType: "enum IController.Action[]",
                  name: "actionList",
                  type: "uint8[]",
                },
                {
                  internalType: "bytes[]",
                  name: "paramsDataList",
                  type: "bytes[]",
                },
                {
                  internalType: "address[]",
                  name: "tokensToSettle",
                  type: "address[]",
                },
                {
                  components: [
                    { internalType: "address", name: "token", type: "address" },
                    {
                      internalType: "uint256",
                      name: "permitAmount",
                      type: "uint256",
                    },
                    {
                      components: [
                        {
                          internalType: "uint256",
                          name: "deadline",
                          type: "uint256",
                        },
                        { internalType: "uint8", name: "v", type: "uint8" },
                        { internalType: "bytes32", name: "r", type: "bytes32" },
                        { internalType: "bytes32", name: "s", type: "bytes32" },
                      ],
                      internalType: "struct IController.PermitSignature",
                      name: "signature",
                      type: "tuple",
                    },
                  ],
                  internalType: "struct IController.ERC20PermitParams[]",
                  name: "erc20PermitParamsList",
                  type: "tuple[]",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "tokenId",
                      type: "uint256",
                    },
                    {
                      components: [
                        {
                          internalType: "uint256",
                          name: "deadline",
                          type: "uint256",
                        },
                        { internalType: "uint8", name: "v", type: "uint8" },
                        { internalType: "bytes32", name: "r", type: "bytes32" },
                        { internalType: "bytes32", name: "s", type: "bytes32" },
                      ],
                      internalType: "struct IController.PermitSignature",
                      name: "signature",
                      type: "tuple",
                    },
                  ],
                  internalType: "struct IController.ERC721PermitParams[]",
                  name: "erc721PermitParamsList",
                  type: "tuple[]",
                },
                { internalType: "uint64", name: "deadline", type: "uint64" },
              ],
              name: "execute",
              outputs: [
                { internalType: "OrderId[]", name: "ids", type: "uint256[]" },
              ],
              stateMutability: "payable",
              type: "function",
            },
            {
              inputs: [
                { internalType: "uint256", name: "price", type: "uint256" },
              ],
              name: "fromPrice",
              outputs: [{ internalType: "Tick", name: "", type: "int24" }],
              stateMutability: "pure",
              type: "function",
            },
            {
              inputs: [
                { internalType: "BookId", name: "id", type: "uint192" },
                { internalType: "Tick", name: "tick", type: "int24" },
              ],
              name: "getDepth",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [{ internalType: "BookId", name: "id", type: "uint192" }],
              name: "getHighestPrice",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "OrderId", name: "orderId", type: "uint256" },
              ],
              name: "getOrder",
              outputs: [
                { internalType: "address", name: "provider", type: "address" },
                { internalType: "uint256", name: "price", type: "uint256" },
                {
                  internalType: "uint256",
                  name: "openAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "claimableAmount",
                  type: "uint256",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                {
                  components: [
                    {
                      internalType: "BookId",
                      name: "takeBookId",
                      type: "uint192",
                    },
                    {
                      internalType: "BookId",
                      name: "makeBookId",
                      type: "uint192",
                    },
                    {
                      internalType: "uint256",
                      name: "limitPrice",
                      type: "uint256",
                    },
                    { internalType: "Tick", name: "tick", type: "int24" },
                    {
                      internalType: "uint256",
                      name: "quoteAmount",
                      type: "uint256",
                    },
                    {
                      internalType: "bytes",
                      name: "takeHookData",
                      type: "bytes",
                    },
                    {
                      internalType: "bytes",
                      name: "makeHookData",
                      type: "bytes",
                    },
                  ],
                  internalType: "struct IController.LimitOrderParams[]",
                  name: "orderParamsList",
                  type: "tuple[]",
                },
                {
                  internalType: "address[]",
                  name: "tokensToSettle",
                  type: "address[]",
                },
                {
                  components: [
                    { internalType: "address", name: "token", type: "address" },
                    {
                      internalType: "uint256",
                      name: "permitAmount",
                      type: "uint256",
                    },
                    {
                      components: [
                        {
                          internalType: "uint256",
                          name: "deadline",
                          type: "uint256",
                        },
                        { internalType: "uint8", name: "v", type: "uint8" },
                        { internalType: "bytes32", name: "r", type: "bytes32" },
                        { internalType: "bytes32", name: "s", type: "bytes32" },
                      ],
                      internalType: "struct IController.PermitSignature",
                      name: "signature",
                      type: "tuple",
                    },
                  ],
                  internalType: "struct IController.ERC20PermitParams[]",
                  name: "permitParamsList",
                  type: "tuple[]",
                },
                { internalType: "uint64", name: "deadline", type: "uint64" },
              ],
              name: "limit",
              outputs: [
                { internalType: "OrderId[]", name: "ids", type: "uint256[]" },
              ],
              stateMutability: "payable",
              type: "function",
            },
            {
              inputs: [
                { internalType: "address", name: "sender", type: "address" },
                { internalType: "bytes", name: "data", type: "bytes" },
              ],
              name: "lockAcquired",
              outputs: [
                { internalType: "bytes", name: "returnData", type: "bytes" },
              ],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [
                {
                  components: [
                    { internalType: "BookId", name: "id", type: "uint192" },
                    { internalType: "Tick", name: "tick", type: "int24" },
                    {
                      internalType: "uint256",
                      name: "quoteAmount",
                      type: "uint256",
                    },
                    { internalType: "bytes", name: "hookData", type: "bytes" },
                  ],
                  internalType: "struct IController.MakeOrderParams[]",
                  name: "orderParamsList",
                  type: "tuple[]",
                },
                {
                  internalType: "address[]",
                  name: "tokensToSettle",
                  type: "address[]",
                },
                {
                  components: [
                    { internalType: "address", name: "token", type: "address" },
                    {
                      internalType: "uint256",
                      name: "permitAmount",
                      type: "uint256",
                    },
                    {
                      components: [
                        {
                          internalType: "uint256",
                          name: "deadline",
                          type: "uint256",
                        },
                        { internalType: "uint8", name: "v", type: "uint8" },
                        { internalType: "bytes32", name: "r", type: "bytes32" },
                        { internalType: "bytes32", name: "s", type: "bytes32" },
                      ],
                      internalType: "struct IController.PermitSignature",
                      name: "signature",
                      type: "tuple",
                    },
                  ],
                  internalType: "struct IController.ERC20PermitParams[]",
                  name: "permitParamsList",
                  type: "tuple[]",
                },
                { internalType: "uint64", name: "deadline", type: "uint64" },
              ],
              name: "make",
              outputs: [
                { internalType: "OrderId[]", name: "ids", type: "uint256[]" },
              ],
              stateMutability: "payable",
              type: "function",
            },
            {
              inputs: [
                {
                  components: [
                    {
                      components: [
                        {
                          internalType: "Currency",
                          name: "base",
                          type: "address",
                        },
                        {
                          internalType: "uint64",
                          name: "unitSize",
                          type: "uint64",
                        },
                        {
                          internalType: "Currency",
                          name: "quote",
                          type: "address",
                        },
                        {
                          internalType: "FeePolicy",
                          name: "makerPolicy",
                          type: "uint24",
                        },
                        {
                          internalType: "contract IHooks",
                          name: "hooks",
                          type: "address",
                        },
                        {
                          internalType: "FeePolicy",
                          name: "takerPolicy",
                          type: "uint24",
                        },
                      ],
                      internalType: "struct IBookManager.BookKey",
                      name: "key",
                      type: "tuple",
                    },
                    { internalType: "bytes", name: "hookData", type: "bytes" },
                  ],
                  internalType: "struct IController.OpenBookParams[]",
                  name: "openBookParamsList",
                  type: "tuple[]",
                },
                { internalType: "uint64", name: "deadline", type: "uint64" },
              ],
              name: "open",
              outputs: [],
              stateMutability: "nonpayable",
              type: "function",
            },
            {
              inputs: [
                {
                  components: [
                    { internalType: "BookId", name: "id", type: "uint192" },
                    {
                      internalType: "uint256",
                      name: "limitPrice",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "baseAmount",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "minQuoteAmount",
                      type: "uint256",
                    },
                    { internalType: "bytes", name: "hookData", type: "bytes" },
                  ],
                  internalType: "struct IController.SpendOrderParams[]",
                  name: "orderParamsList",
                  type: "tuple[]",
                },
                {
                  internalType: "address[]",
                  name: "tokensToSettle",
                  type: "address[]",
                },
                {
                  components: [
                    { internalType: "address", name: "token", type: "address" },
                    {
                      internalType: "uint256",
                      name: "permitAmount",
                      type: "uint256",
                    },
                    {
                      components: [
                        {
                          internalType: "uint256",
                          name: "deadline",
                          type: "uint256",
                        },
                        { internalType: "uint8", name: "v", type: "uint8" },
                        { internalType: "bytes32", name: "r", type: "bytes32" },
                        { internalType: "bytes32", name: "s", type: "bytes32" },
                      ],
                      internalType: "struct IController.PermitSignature",
                      name: "signature",
                      type: "tuple",
                    },
                  ],
                  internalType: "struct IController.ERC20PermitParams[]",
                  name: "permitParamsList",
                  type: "tuple[]",
                },
                { internalType: "uint64", name: "deadline", type: "uint64" },
              ],
              name: "spend",
              outputs: [],
              stateMutability: "payable",
              type: "function",
            },
            {
              inputs: [
                {
                  components: [
                    { internalType: "BookId", name: "id", type: "uint192" },
                    {
                      internalType: "uint256",
                      name: "limitPrice",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "quoteAmount",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "maxBaseAmount",
                      type: "uint256",
                    },
                    { internalType: "bytes", name: "hookData", type: "bytes" },
                  ],
                  internalType: "struct IController.TakeOrderParams[]",
                  name: "orderParamsList",
                  type: "tuple[]",
                },
                {
                  internalType: "address[]",
                  name: "tokensToSettle",
                  type: "address[]",
                },
                {
                  components: [
                    { internalType: "address", name: "token", type: "address" },
                    {
                      internalType: "uint256",
                      name: "permitAmount",
                      type: "uint256",
                    },
                    {
                      components: [
                        {
                          internalType: "uint256",
                          name: "deadline",
                          type: "uint256",
                        },
                        { internalType: "uint8", name: "v", type: "uint8" },
                        { internalType: "bytes32", name: "r", type: "bytes32" },
                        { internalType: "bytes32", name: "s", type: "bytes32" },
                      ],
                      internalType: "struct IController.PermitSignature",
                      name: "signature",
                      type: "tuple",
                    },
                  ],
                  internalType: "struct IController.ERC20PermitParams[]",
                  name: "permitParamsList",
                  type: "tuple[]",
                },
                { internalType: "uint64", name: "deadline", type: "uint64" },
              ],
              name: "take",
              outputs: [],
              stateMutability: "payable",
              type: "function",
            },
            {
              inputs: [{ internalType: "Tick", name: "tick", type: "int24" }],
              name: "toPrice",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "pure",
              type: "function",
            },
            { stateMutability: "payable", type: "receive" },
          ],
          h = () => Math.floor(new Date().getTime() / 1e3),
          m = () => BigInt(Math.floor(h() + 1200));
        var y = n(24279);
        let g = async (e, t, n, r) => {
          let i = (0, y.R)(t),
            [a, o] = await Promise.all([
              n ??
                e.estimateGas({
                  account: t.account,
                  data: i,
                  to: t.address,
                  value: t.value || 0n,
                }),
              r ?? e.getGasPrice(),
            ]);
          return {
            gas: a,
            gasPrice: o,
            data: i,
            value: t.value || 0n,
            to: t.address,
            from: t.account,
          };
        };
        var b = n(58218),
          v = n(12071),
          w = n(92454),
          E = n(9445),
          x = n(86627),
          C = n(84898),
          _ = n(57437),
          T = n(15833),
          S = n(33869);
        let P = [
          {
            inputs: [{ internalType: "OrderId", name: "id", type: "uint256" }],
            name: "getOrder",
            outputs: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "provider",
                    type: "address",
                  },
                  { internalType: "uint64", name: "open", type: "uint64" },
                  { internalType: "uint64", name: "claimable", type: "uint64" },
                ],
                internalType: "struct IBookManager.OrderInfo",
                name: "",
                type: "tuple",
              },
            ],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              { internalType: "uint256", name: "tokenId", type: "uint256" },
            ],
            name: "ownerOf",
            outputs: [{ internalType: "address", name: "", type: "address" }],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [{ internalType: "BookId", name: "id", type: "uint192" }],
            name: "getBookKey",
            outputs: [
              {
                components: [
                  { internalType: "Currency", name: "base", type: "address" },
                  { internalType: "uint64", name: "unitSize", type: "uint64" },
                  { internalType: "Currency", name: "quote", type: "address" },
                  {
                    internalType: "FeePolicy",
                    name: "makerPolicy",
                    type: "uint24",
                  },
                  {
                    internalType: "contract IHooks",
                    name: "hooks",
                    type: "address",
                  },
                  {
                    internalType: "FeePolicy",
                    name: "takerPolicy",
                    type: "uint24",
                  },
                ],
                internalType: "struct IBookManager.BookKey",
                name: "",
                type: "tuple",
              },
            ],
            stateMutability: "view",
            type: "function",
          },
        ];
        var O = n(46763),
          I = n(45229),
          A = n(24361),
          k = n(95851);
        let j = async (e, t, n, r) => {
            if (r) {
              let r = await (0, S.tY)(
                e,
                t,
                n.map((e) => e.toString())
              );
              return r.map(
                ({
                  id: e,
                  user: t,
                  isBid: n,
                  price: r,
                  tick: i,
                  orderIndex: a,
                  inputCurrency: o,
                  outputCurrency: s,
                  cancelable: u,
                  claimable: l,
                }) => ({
                  id: e,
                  user: t,
                  isBid: n,
                  price: r,
                  tick: i,
                  orderIndex: a,
                  inputCurrency: o,
                  outputCurrency: s,
                  cancelable: u,
                  claimable: l,
                })
              );
            }
            let i = await e.multicall({
                contracts: [
                  ...n.map((e) => ({
                    address: b.x[t].BookManager,
                    abi: P,
                    functionName: "getOrder",
                    args: [e],
                  })),
                  ...n.map((e) => ({
                    address: b.x[t].BookManager,
                    abi: P,
                    functionName: "ownerOf",
                    args: [e],
                  })),
                  ...n.map((e) => ({
                    address: b.x[t].BookManager,
                    abi: P,
                    functionName: "getBookKey",
                    args: [B(e).bookId],
                  })),
                ],
              }),
              o = n
                .map((e, t) => {
                  let { base: r, quote: a } = i[t + 2 * n.length].result;
                  return [r, a];
                })
                .flat(),
              s = await (0, O.u)(e, t, o);
            return n.map((e, r) => {
              let o = i[r].result,
                u = i[r + n.length].result,
                { base: d, quote: f, unitSize: p } = i[r + 2 * n.length].result,
                h = (0, k.Db)(
                  p * o.open,
                  100 +
                    (100 * Number(v.Z[t].rate)) / Number(v.Z[t].RATE_PRECISION),
                  6
                ),
                m = (0, I.i)(B(e).tick, p * o.claimable, !1),
                y = (0, a.E)(f, (0, A.u)(t, [d, f]).quoteTokenAddress),
                { tick: g, index: b } = B(e),
                [w, x] = y ? [s[f], s[d]] : [s[d], s[f]];
              return {
                id: e.toString(),
                user: u,
                isBid: y,
                price: y
                  ? (0, E.sq)({
                      marketQuoteCurrency: w,
                      marketBaseCurrency: x,
                      bidTick: g,
                    })
                  : (0, E.sq)({
                      marketQuoteCurrency: w,
                      marketBaseCurrency: x,
                      askTick: g,
                    }),
                tick: Number(g),
                orderIndex: b.toString(),
                inputCurrency: s[(0, c.K)(f)],
                outputCurrency: s[(0, c.K)(d)],
                cancelable: {
                  currency: s[(0, c.K)(f)],
                  value: (0, l.b)(h, s[(0, c.K)(f)].decimals),
                },
                claimable: {
                  currency: s[(0, c.K)(d)],
                  value: (0, l.b)(m, s[(0, c.K)(d)].decimals),
                },
              };
            });
          },
          B = (e) => {
            let t = (e >> 40n) & (2n ** 24n - 1n);
            return {
              bookId: e >> 64n,
              tick: t & (2n ** 23n) ? -(2n ** 24n - t) : t,
              index: e & (2n ** 40n - 1n),
            };
          };
        var M = n(49681),
          N = n(25444);
        let D = [
          {
            inputs: [
              { internalType: "address", name: "target", type: "address" },
            ],
            name: "AddressEmptyCode",
            type: "error",
          },
          { inputs: [], name: "FailedCall", type: "error" },
          {
            inputs: [
              { internalType: "uint256", name: "balance", type: "uint256" },
              { internalType: "uint256", name: "needed", type: "uint256" },
            ],
            name: "InsufficientBalance",
            type: "error",
          },
          {
            inputs: [
              { internalType: "address", name: "token", type: "address" },
            ],
            name: "SafeERC20FailedOperation",
            type: "error",
          },
          {
            inputs: [
              { internalType: "address", name: "tokenIn", type: "address" },
              { internalType: "uint256", name: "amountIn", type: "uint256" },
              { internalType: "address", name: "tokenOut", type: "address" },
              { internalType: "uint256", name: "amountOut", type: "uint256" },
            ],
            name: "swap",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [
              { internalType: "address", name: "tokenOut", type: "address" },
              { internalType: "uint256", name: "amountOut", type: "uint256" },
            ],
            name: "swapEthForToken",
            outputs: [],
            stateMutability: "payable",
            type: "function",
          },
        ];
        async function R(e, t) {
          let n = `https://api.odos.xyz/${e}`,
            r = await fetch(n, t);
          if (r.ok) return r.json();
          {
            let e = await r.json();
            throw Error(e.message || "Unknown Error");
          }
        }
        async function F({
          chainId: e,
          amountIn: t,
          tokenIn: n,
          tokenOut: r,
          slippageLimitPercent: i,
          userAddress: a,
          testnetPrice: o,
        }) {
          if ((0, d.NQ)(e)) {
            if (!o) throw Error("Missing testnetPrice for testnet chain");
            return {
              amountOut: (0, u.v)(
                (Number((0, l.b)(t, n.decimals)) * o).toString(),
                r.decimals
              ),
              pathId: "0x",
            };
          }
          let { outAmounts: s, pathId: c } = await R("sor/quote/v2", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              accept: "application/json",
            },
            body: JSON.stringify({
              chainId: e,
              inputTokens: [{ tokenAddress: n.address, amount: t.toString() }],
              outputTokens: [{ tokenAddress: r.address, proportion: 1 }],
              userAddr: a,
              slippageLimitPercent: i,
            }),
          });
          return { amountOut: BigInt(s[0]), pathId: c };
        }
        async function L({
          chainId: e,
          amountIn: t,
          tokenIn: n,
          tokenOut: r,
          slippageLimitPercent: i,
          userAddress: a,
          testnetPrice: o,
        }) {
          if ((0, d.NQ)(e)) {
            if (!o) throw Error("Missing testnetPrice for testnet chain");
            let e = (0, u.v)(
              (Number((0, l.b)(t, n.decimals)) * o).toString(),
              r.decimals
            );
            return {
              amountOut: e,
              data: (0, y.R)({
                abi: D,
                functionName: "swap",
                args: [n.address, t, r.address, e],
              }),
            };
          }
          let { pathId: s, amountOut: c } = await F({
              chainId: e,
              amountIn: t,
              tokenIn: n,
              tokenOut: r,
              slippageLimitPercent: i,
              userAddress: a,
            }),
            { transaction: f } = await R("sor/assemble", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                accept: "application/json",
              },
              body: JSON.stringify({ pathId: s, simulate: !1, userAddr: a }),
            });
          return { amountOut: c, data: f.data };
        }
        let U = [
            {
              inputs: [
                {
                  internalType: "address",
                  name: "_bookManager",
                  type: "address",
                },
                {
                  internalType: "address payable",
                  name: "_rebalancer",
                  type: "address",
                },
                { internalType: "address", name: "_router", type: "address" },
              ],
              stateMutability: "nonpayable",
              type: "constructor",
            },
            {
              inputs: [
                { internalType: "address", name: "target", type: "address" },
              ],
              name: "AddressEmptyCode",
              type: "error",
            },
            { inputs: [], name: "ERC20TransferFailed", type: "error" },
            { inputs: [], name: "FailedCall", type: "error" },
            {
              inputs: [
                { internalType: "uint256", name: "balance", type: "uint256" },
                { internalType: "uint256", name: "needed", type: "uint256" },
              ],
              name: "InsufficientBalance",
              type: "error",
            },
            { inputs: [], name: "NativeTransferFailed", type: "error" },
            {
              inputs: [
                { internalType: "bytes", name: "message", type: "bytes" },
              ],
              name: "RouterSwapFailed",
              type: "error",
            },
            {
              inputs: [
                { internalType: "address", name: "token", type: "address" },
              ],
              name: "SafeERC20FailedOperation",
              type: "error",
            },
            {
              inputs: [],
              name: "bookManager",
              outputs: [
                {
                  internalType: "contract IBookManager",
                  name: "",
                  type: "address",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [
                { internalType: "bytes32", name: "key", type: "bytes32" },
                { internalType: "uint256", name: "amountA", type: "uint256" },
                { internalType: "uint256", name: "amountB", type: "uint256" },
                {
                  internalType: "uint256",
                  name: "minLpAmount",
                  type: "uint256",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "permitAmount",
                      type: "uint256",
                    },
                    {
                      components: [
                        {
                          internalType: "uint256",
                          name: "deadline",
                          type: "uint256",
                        },
                        { internalType: "uint8", name: "v", type: "uint8" },
                        { internalType: "bytes32", name: "r", type: "bytes32" },
                        { internalType: "bytes32", name: "s", type: "bytes32" },
                      ],
                      internalType: "struct PermitSignature",
                      name: "signature",
                      type: "tuple",
                    },
                  ],
                  internalType: "struct ERC20PermitParams",
                  name: "currencyAPermitParams",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "permitAmount",
                      type: "uint256",
                    },
                    {
                      components: [
                        {
                          internalType: "uint256",
                          name: "deadline",
                          type: "uint256",
                        },
                        { internalType: "uint8", name: "v", type: "uint8" },
                        { internalType: "bytes32", name: "r", type: "bytes32" },
                        { internalType: "bytes32", name: "s", type: "bytes32" },
                      ],
                      internalType: "struct PermitSignature",
                      name: "signature",
                      type: "tuple",
                    },
                  ],
                  internalType: "struct ERC20PermitParams",
                  name: "currencyBPermitParams",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "Currency",
                      name: "inCurrency",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "amount",
                      type: "uint256",
                    },
                    { internalType: "bytes", name: "data", type: "bytes" },
                  ],
                  internalType: "struct IMinter.SwapParams",
                  name: "swapParams",
                  type: "tuple",
                },
              ],
              name: "mint",
              outputs: [],
              stateMutability: "payable",
              type: "function",
            },
            {
              inputs: [],
              name: "rebalancer",
              outputs: [
                {
                  internalType: "contract Rebalancer",
                  name: "",
                  type: "address",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "router",
              outputs: [{ internalType: "address", name: "", type: "address" }],
              stateMutability: "view",
              type: "function",
            },
            { stateMutability: "payable", type: "receive" },
          ],
          $ = {
            permitAmount: 0n,
            signature: { deadline: 0n, v: 0, r: s, s: s },
          };
        var q = n(87839);
        let H = async ({
            chainId: e,
            userAddress: t,
            inputToken: n,
            outputToken: u,
            options: l,
          }) => {
            let c = (0, r.v)({
                chain: d.EO[e],
                transport: l?.rpcUrl ? (0, i.d)(l.rpcUrl) : (0, i.d)(),
              }),
              h = await (0, w.B)(c, e, [n, u], !!(l && l.useSubgraph)),
              y = (0, a.E)(h.quote.address, n);
            if ((y && !h.bidBook.isOpened) || (!y && !h.askBook.isOpened)) {
              let r = await (0, f.j)(c, e, y ? h.quote : h.base);
              return g(
                c,
                {
                  chain: d.EO[e],
                  address: b.x[e].Controller,
                  account: t,
                  abi: p,
                  functionName: "open",
                  args: [
                    [
                      {
                        key: {
                          base: u,
                          unitSize: r,
                          quote: n,
                          makerPolicy: v.Z[e].value,
                          hooks: o.D,
                          takerPolicy: v.n[e].value,
                        },
                        hookData: s,
                      },
                    ],
                    m(),
                  ],
                },
                l?.gasLimit
              );
            }
          },
          z = async ({
            chainId: e,
            userAddress: t,
            inputToken: n,
            outputToken: c,
            amount: h,
            price: y,
            options: v,
          }) => {
            let [T, S, P, O] = [
                !!v?.roundingUpMakeBid && v.roundingUpMakeBid,
                !!v?.roundingDownMakeAsk && v.roundingDownMakeAsk,
                !!v?.roundingDownTakenBid && v.roundingDownTakenBid,
                !!v?.roundingUpTakenAsk && v.roundingUpTakenAsk,
              ],
              I = (0, r.v)({
                chain: d.EO[e],
                transport: v?.rpcUrl ? (0, i.d)(v.rpcUrl) : (0, i.d)(),
              }),
              A = await (0, w.B)(I, e, [n, c], !!(v && v.useSubgraph)),
              k = (0, a.E)(A.quote.address, n),
              [j, B] = k ? [A.quote, A.base] : [A.base, A.quote];
            if ((k && !A.bidBook.isOpened) || (!k && !A.askBook.isOpened))
              throw Error(`
       Open the market before placing a limit order.
       import { openMarket } from '@clober/v2-sdk'

       const transaction = await openMarket({
            chainId: ${e},
            inputToken: '${n}',
            outputToken: '${c}',
       })
    `);
            let { roundingDownTick: M, roundingUpTick: N } = (0, E.z)(
                Number(y),
                A.quote.decimals,
                A.base.decimals
              ),
              D = [n, c].filter((e) => !(0, a.E)(e, o.D)),
              R = (0, u.v)(h, j.decimals),
              [F, { takenAmount: L, spentAmount: U, bookId: $, events: q }] =
                await Promise.all([
                  (0, f.j)(I, e, j),
                  (0, C.pu)({
                    chainId: e,
                    inputToken: n,
                    outputToken: c,
                    amountIn: h,
                    options: { ...v, limitPrice: y },
                  }),
                ]),
              H = (0, a.E)(n, o.D),
              z = {
                id: (0, _.O)(e, n, c, F),
                tick: v?.makeTick
                  ? Number(v.makeTick)
                  : Number(k ? (T ? N : M) : (0, x.E6)(S ? M : N)),
                quoteAmount: R,
                hookData: s,
              };
            return v?.postOnly === !0 || "0" === U
              ? {
                  transaction: await g(
                    I,
                    {
                      chain: d.EO[e],
                      account: t,
                      address: b.x[e].Controller,
                      abi: p,
                      functionName: "make",
                      args: [
                        [z],
                        D,
                        v?.erc20PermitParam ? [v.erc20PermitParam] : [],
                        m(),
                      ],
                      value: H ? R : 0n,
                    },
                    v?.gasLimit
                  ),
                  result: {
                    make: {
                      amount: (0, l.b)(R, j.decimals),
                      currency: j,
                      direction: "in",
                      price: (0, E.T4)(
                        k
                          ? (0, x.pU)(BigInt(z.tick))
                          : (0, x.pU)((0, x.E6)(BigInt(z.tick))),
                        A.quote.decimals,
                        A.base.decimals
                      ),
                    },
                    spent: {
                      amount: "0",
                      currency: j,
                      direction: "in",
                      events: [],
                    },
                    taken: {
                      amount: "0",
                      currency: B,
                      direction: "out",
                      events: [],
                    },
                  },
                }
              : {
                  transaction: await g(
                    I,
                    {
                      chain: d.EO[e],
                      account: t,
                      address: b.x[e].Controller,
                      abi: p,
                      functionName: "limit",
                      args: [
                        [
                          {
                            takeBookId: $,
                            makeBookId: z.id,
                            limitPrice: v?.takeLimitTick
                              ? (0, x.pU)(v.takeLimitTick)
                              : (0, x.pU)(k ? (0, x.E6)(O ? N : M) : P ? M : N),
                            tick: z.tick,
                            quoteAmount: R,
                            takeHookData: s,
                            makeHookData: z.hookData,
                          },
                        ],
                        D,
                        v?.erc20PermitParam ? [v.erc20PermitParam] : [],
                        m(),
                      ],
                      value: H ? R : 0n,
                    },
                    v?.gasLimit
                  ),
                  result: {
                    make: {
                      amount: (0, l.b)(R - (0, u.v)(U, j.decimals), j.decimals),
                      currency: j,
                      direction: "in",
                      price: (0, E.T4)(
                        k
                          ? (0, x.pU)(BigInt(z.tick))
                          : (0, x.pU)((0, x.E6)(BigInt(z.tick))),
                        A.quote.decimals,
                        A.base.decimals
                      ),
                    },
                    spent: {
                      amount: U,
                      currency: j,
                      direction: "in",
                      events: q.map(({ price: e, spentAmount: t }) => ({
                        price: e,
                        amount: t,
                      })),
                    },
                    taken: {
                      amount: L,
                      currency: B,
                      direction: "out",
                      events: q.map(({ price: e, takenAmount: t }) => ({
                        price: e,
                        amount: t,
                      })),
                    },
                  },
                };
          },
          G = async ({ chainId: e, userAddress: t, ids: n, options: u }) => {
            let l = (0, r.v)({
                chain: d.EO[e],
                transport: u?.rpcUrl ? (0, i.d)(u.rpcUrl) : (0, i.d)(),
              }),
              c = await (0, T.S)(l, e, t);
            if (!c)
              throw Error(`
       Set ApprovalForAll before calling this function.
       import { setApprovalOfOpenOrdersForAll } from '@clober/v2-sdk'

       const hash = await setApprovalOfOpenOrdersForAll({
            chainId: ${e},
            walletClient, // use viem
       })
    `);
            let f = (
                await j(
                  l,
                  e,
                  n.map((e) => BigInt(e)),
                  !!(u && u.useSubgraph)
                )
              ).filter((e) => (0, a.E)(e.user, t) && "0" !== e.claimable.value),
              h = f
                .map((e) => [e.inputCurrency.address, e.outputCurrency.address])
                .flat()
                .filter((e, t, n) => n.findIndex((t) => (0, a.E)(t, e)) === t)
                .filter((e) => !(0, a.E)(e, o.D));
            return {
              transaction: await g(
                l,
                {
                  chain: d.EO[e],
                  account: t,
                  address: b.x[e].Controller,
                  abi: p,
                  functionName: "claim",
                  args: [
                    f.map(({ id: e }) => ({ id: e, hookData: s })),
                    h,
                    [],
                    m(),
                  ],
                },
                u?.gasLimit
              ),
              result: f.reduce(
                (e, { claimable: { currency: t, value: n } }) => {
                  let r = e.findIndex((e) =>
                    (0, a.E)(e.currency.address, t.address)
                  );
                  return -1 === r
                    ? [...e, { currency: t, amount: n, direction: "out" }]
                    : ((e[r].amount = (
                        Number(e[r].amount) + Number(n)
                      ).toString()),
                      e);
                },
                []
              ),
            };
          },
          W = async ({ chainId: e, userAddress: t, ids: n, options: u }) => {
            let l = (0, r.v)({
                chain: d.EO[e],
                transport: u?.rpcUrl ? (0, i.d)(u.rpcUrl) : (0, i.d)(),
              }),
              c = await (0, T.S)(l, e, t);
            if (!c)
              throw Error(`
       Set ApprovalForAll before calling this function.
       import { setApprovalOfOpenOrdersForAll } from '@clober/v2-sdk'

       const hash = await setApprovalOfOpenOrdersForAll({
            chainId: ${e},
            walletClient, // use viem
       })
    `);
            let f = (
                await j(
                  l,
                  e,
                  n.map((e) => BigInt(e)),
                  !!(u && u.useSubgraph)
                )
              ).filter(
                (e) => (0, a.E)(e.user, t) && "0" !== e.cancelable.value
              ),
              h = f
                .map((e) => [e.inputCurrency.address, e.outputCurrency.address])
                .flat()
                .filter((e, t, n) => n.findIndex((t) => (0, a.E)(t, e)) === t)
                .filter((e) => !(0, a.E)(e, o.D));
            return {
              transaction: await g(
                l,
                {
                  chain: d.EO[e],
                  account: t,
                  address: b.x[e].Controller,
                  abi: p,
                  functionName: "cancel",
                  args: [
                    f.map(({ id: e }) => ({
                      id: e,
                      leftQuoteAmount: 0n,
                      hookData: s,
                    })),
                    h,
                    [],
                    m(),
                  ],
                },
                u?.gasLimit
              ),
              result: f.reduce(
                (e, { cancelable: { currency: t, value: n } }) => {
                  let r = e.findIndex((e) =>
                    (0, a.E)(e.currency.address, t.address)
                  );
                  return -1 === r
                    ? [...e, { currency: t, amount: n, direction: "out" }]
                    : ((e[r].amount = (
                        Number(e[r].amount) + Number(n)
                      ).toString()),
                      e);
                },
                []
              ),
            };
          },
          V = async ({
            chainId: e,
            userAddress: t,
            token0: n,
            token1: s,
            salt: f,
            amount0: p,
            amount1: h,
            options: m,
          }) => {
            if ((0, a.E)(n, o.D) || (0, a.E)(s, o.D))
              throw Error("ETH is not supported for adding liquidity");
            let y = (0, r.v)({
                chain: d.EO[e],
                transport: m?.rpcUrl ? (0, i.d)(m.rpcUrl) : (0, i.d)(),
              }),
              v = await (0, M.X)(y, e, [n, s], f, !!(m && m.useSubgraph));
            if (!v.isOpened)
              throw Error(`
       Open the pool before adding liquidity.
       import { openPool } from '@clober/v2-sdk'

       const transaction = await openPool({
            chainId: ${e},
            tokenA: '${n}',
            tokenB: '${s}',
            salt: '0x0000000000000000000000000000000000000000000000000000000000000000',
       })
    `);
            let [w, E] = (0, a.E)(v.currencyA.address, (0, c.K)(n))
                ? [
                    (0, u.v)(p ?? "0", v.currencyA.decimals),
                    (0, u.v)(h ?? "0", v.currencyB.decimals),
                  ]
                : [
                    (0, u.v)(h ?? "0", v.currencyA.decimals),
                    (0, u.v)(p ?? "0", v.currencyB.decimals),
                  ],
              [x, _] = [w, E],
              T = (0, a.E)(v.currencyA.address, (0, c.K)(n))
                ? m?.token0PermitParams ?? $
                : m?.token1PermitParams ?? $,
              S = (0, a.E)(v.currencyA.address, (0, c.K)(n))
                ? m?.token1PermitParams ?? $
                : m?.token0PermitParams ?? $,
              P = !!(m && m.disableSwap);
            (0n === v.totalSupply ||
              (0n === v.liquidityA && 0n === v.liquidityB)) &&
              (P = !0);
            let O = m?.slippage ?? 2,
              I = { inCurrency: o.D, amount: 0n, data: "0x" };
            if (!P) {
              let t = m?.testnetPrice
                  ? (0, a.E)(
                      (0, C.qh)({ chainId: e, token0: n, token1: s }),
                      v.currencyA.address
                    )
                    ? 1 / Number(m.testnetPrice)
                    : Number(m.testnetPrice)
                  : void 0,
                r = (0, u.v)("1", v.currencyA.decimals),
                { amountOut: i } = await F({
                  chainId: e,
                  amountIn: r,
                  tokenIn: v.currencyA,
                  tokenOut: v.currencyB,
                  slippageLimitPercent: 20,
                  userAddress: b.x[e].Minter,
                  testnetPrice: t,
                }),
                { deltaA: o, deltaB: l } = (function (e, t, n, r, i, a) {
                  if (0n === i || 0n === a)
                    throw Error("Invalid swap amount information");
                  return 0n === n && 0n === r
                    ? { deltaA: 0n, deltaB: 0n }
                    : {
                        deltaA: ((n * t - r * e) * i) / (i * r + a * n),
                        deltaB: -((n * t - r * e) * a) / (i * r + a * n),
                      };
                })(x, _, v.liquidityA, v.liquidityB, r, i);
              if (o < 0n) {
                (I.inCurrency = v.currencyA.address), (I.amount = -o);
                let { amountOut: n, data: r } = await L({
                  chainId: e,
                  amountIn: I.amount,
                  tokenIn: v.currencyA,
                  tokenOut: v.currencyB,
                  slippageLimitPercent: O,
                  userAddress: b.x[e].Minter,
                  testnetPrice: t,
                });
                (I.data = r), (x += o), (_ += n);
              } else if (l < 0n) {
                (I.inCurrency = v.currencyB.address), (I.amount = -l);
                let { amountOut: n, data: r } = await L({
                  chainId: e,
                  amountIn: I.amount,
                  tokenIn: v.currencyB,
                  tokenOut: v.currencyA,
                  slippageLimitPercent: O,
                  userAddress: b.x[e].Minter,
                  testnetPrice: t ? 1 / t : void 0,
                });
                (I.data = r), (x += n), (_ += l);
              }
            }
            let {
              mintAmount: A,
              inAmountA: j,
              inAmountB: B,
            } = (function (e, t, n, r, i, a, o) {
              if (0n === e) {
                if (0n === r || 0n === i)
                  return { mintAmount: 0n, inAmountA: 0n, inAmountB: 0n };
                let e = BigInt(10 ** (18 - a.decimals)),
                  t = BigInt(10 ** (18 - o.decimals)),
                  n = r * e,
                  s = i * t;
                return {
                  mintAmount: n > s ? n : s,
                  inAmountA: r,
                  inAmountB: i,
                };
              }
              if (0n === t && 0n === n)
                return { mintAmount: 0n, inAmountA: 0n, inAmountB: 0n };
              if (0n === t)
                return { mintAmount: (i * e) / n, inAmountA: 0n, inAmountB: i };
              {
                if (0n === n)
                  return {
                    mintAmount: (r * e) / t,
                    inAmountA: r,
                    inAmountB: 0n,
                  };
                let a = (r * e) / t,
                  o = (i * e) / n;
                return a > o
                  ? { mintAmount: o, inAmountA: (t * o) / e, inAmountB: i }
                  : { mintAmount: a, inAmountA: r, inAmountB: (n * a) / e };
              }
            })(
              v.totalSupply,
              v.liquidityA,
              v.liquidityB,
              x,
              _,
              v.currencyA,
              v.currencyB
            );
            if (0n === A)
              return {
                transaction: void 0,
                result: {
                  currencyA: {
                    currency: v.currencyA,
                    amount: "0",
                    direction: "in",
                  },
                  currencyB: {
                    currency: v.currencyB,
                    amount: "0",
                    direction: "in",
                  },
                  lpCurrency: {
                    currency: v.currencyLp,
                    amount: "0",
                    direction: "out",
                  },
                },
              };
            let N = (0, k.Db)(A, 100 - O),
              D = await g(
                y,
                {
                  chain: d.EO[e],
                  account: t,
                  address: b.x[e].Minter,
                  abi: U,
                  functionName: "mint",
                  args: [
                    v.key,
                    w,
                    E,
                    N,
                    { permitAmount: T.permitAmount, signature: T.signature },
                    { permitAmount: S.permitAmount, signature: S.signature },
                    I,
                  ],
                },
                m?.gasLimit
              ),
              R = x - j,
              H = _ - B,
              z = w - R,
              G = E - H;
            return {
              transaction: D,
              result: {
                currencyA: {
                  currency: v.currencyA,
                  amount: (0, l.b)((0, q.Wn)(z), v.currencyA.decimals),
                  direction: z >= 0 ? "in" : "out",
                },
                currencyB: {
                  currency: v.currencyB,
                  amount: (0, l.b)((0, q.Wn)(G), v.currencyB.decimals),
                  direction: G >= 0 ? "in" : "out",
                },
                lpCurrency: {
                  currency: v.currencyLp,
                  amount: (0, l.b)(A, v.currencyLp.decimals),
                  direction: "out",
                },
              },
            };
          },
          K = async ({
            chainId: e,
            userAddress: t,
            token0: n,
            token1: a,
            salt: o,
            amount: s,
            options: c,
          }) => {
            let f = (0, r.v)({
                chain: d.EO[e],
                transport: c?.rpcUrl ? (0, i.d)(c.rpcUrl) : (0, i.d)(),
              }),
              p = await (0, M.X)(f, e, [n, a], o, !!(c && c.useSubgraph));
            if (!p.isOpened)
              throw Error(`
       Open the pool before removing liquidity.
       import { openPool } from '@clober/v2-sdk'

       const transaction = await openPool({
            chainId: ${e},
            tokenA: '${n}',
            tokenB: '${a}',
            salt: '0x0000000000000000000000000000000000000000000000000000000000000000',
       })
    `);
            let h = (0, u.v)(s, p.currencyLp.decimals),
              m = c?.slippage ?? 2,
              y = (h * p.liquidityA) / p.totalSupply,
              v = (h * p.liquidityB) / p.totalSupply,
              w = (0, k.Db)(y, 100 - m),
              E = (0, k.Db)(v, 100 - m);
            if (0n === h)
              return {
                transaction: void 0,
                result: {
                  currencyA: {
                    currency: p.currencyA,
                    amount: "0",
                    direction: "out",
                  },
                  currencyB: {
                    currency: p.currencyB,
                    amount: "0",
                    direction: "out",
                  },
                  lpCurrency: {
                    currency: p.currencyLp,
                    amount: "0",
                    direction: "in",
                  },
                },
              };
            let x = await g(
              f,
              {
                chain: d.EO[e],
                account: t,
                address: b.x[e].Rebalancer,
                abi: N.g,
                functionName: "burn",
                args: [p.key, h, w, E],
              },
              c?.gasLimit
            );
            return {
              transaction: x,
              result: {
                currencyA: {
                  currency: p.currencyA,
                  amount: (0, l.b)(y, p.currencyA.decimals),
                  direction: "out",
                },
                currencyB: {
                  currency: p.currencyB,
                  amount: (0, l.b)(v, p.currencyB.decimals),
                  direction: "out",
                },
                lpCurrency: {
                  currency: p.currencyLp,
                  amount: s,
                  direction: "in",
                },
              },
            };
          };
      },
      58218: function (e, t, n) {
        "use strict";
        n.d(t, {
          x: function () {
            return o;
          },
        });
        var r = n(1642),
          i = n(66834),
          a = n(17019);
        let o = {
          [a.vo.CLOBER_TESTNET]: {
            Controller: (0, r.K)("0xfAe4A04fa491DC21F77796394532a1B62d8331BF"),
            BookManager: (0, r.K)("0x4a4eaF7382821da4Fb85e8A8d515f5555383d58A"),
            BookViewer: (0, r.K)("0xA7603C4c895a533E66c30EA76cC6F6A6A0c5cbFe"),
            Rebalancer: (0, r.K)("0xCF556d850277BC579c99C0729F4E72e62C57D811"),
            Strategy: (0, r.K)("0x8aDF62b0b6078EaE5a2D54e9e5DD2AA71F6748C4"),
            Minter: (0, r.K)("0xF2f51B00C2e9b77F23fD66649bbabf8a025c39eF"),
            Operator: (0, r.K)("0x33559576B062D08230b467ea7DC7Ce75aFcbdE92"),
            VoteLockedCloberToken: (0, r.K)(
              "0xA8d4E6BC755b3ed8DCE2FaFE4104Bdad645763A5"
            ),
            ElectionGovernor: (0, r.K)(
              "0xE002A871B314Cc253d4e25E43Afca0557df9577f"
            ),
            KeepersRegistry: (0, r.K)(
              "0x683E045f5b318d343d6f5E9fF83AF4BB0f6fd026"
            ),
          },
          [a.vo.CLOBER_TESTNET_2]: {
            Controller: (0, r.K)("0xE64aCE1bF550E57461cd4e24706633d7faC9D7b0"),
            BookManager: (0, r.K)("0xAA9575d63dFC224b9583fC303dB3188C08d5C85A"),
            BookViewer: (0, r.K)("0x3e22d091F90ae759733B7CB06a6f7b440d84a425"),
            Rebalancer: (0, r.K)("0x30b4e9215322B5d0c290249126bCf96C2Ca8e948"),
            Strategy: (0, r.K)("0x540488b54c8DE6e44Db7553c3A2C4ABEb09Fc69C"),
            Minter: (0, r.K)("0x0b8361a2bbF853F5F6Aa0911a9d238d9CFDD9f1a"),
            Operator: (0, r.K)("0xFa47E8dD8F04BF23b238900e754041123a6bc6e2"),
            VoteLockedCloberToken: (0, r.K)(
              "0xA8d4E6BC755b3ed8DCE2FaFE4104Bdad645763A5"
            ),
            ElectionGovernor: (0, r.K)(
              "0xE002A871B314Cc253d4e25E43Afca0557df9577f"
            ),
            KeepersRegistry: (0, r.K)(
              "0x683E045f5b318d343d6f5E9fF83AF4BB0f6fd026"
            ),
          },
          [a.vo.ARBITRUM_SEPOLIA]: {
            Controller: (0, r.K)("0xE64aCE1bF550E57461cd4e24706633d7faC9D7b0"),
            BookManager: (0, r.K)("0xAA9575d63dFC224b9583fC303dB3188C08d5C85A"),
            BookViewer: (0, r.K)("0x3e22d091F90ae759733B7CB06a6f7b440d84a425"),
            Rebalancer: (0, r.K)("0x30b4e9215322B5d0c290249126bCf96C2Ca8e948"),
            Strategy: (0, r.K)("0x540488b54c8DE6e44Db7553c3A2C4ABEb09Fc69C"),
            Minter: (0, r.K)("0x0b8361a2bbF853F5F6Aa0911a9d238d9CFDD9f1a"),
            Operator: (0, r.K)("0xFa47E8dD8F04BF23b238900e754041123a6bc6e2"),
            VoteLockedCloberToken: (0, r.K)(
              "0xA8d4E6BC755b3ed8DCE2FaFE4104Bdad645763A5"
            ),
            ElectionGovernor: (0, r.K)(
              "0xE002A871B314Cc253d4e25E43Afca0557df9577f"
            ),
            KeepersRegistry: (0, r.K)(
              "0x683E045f5b318d343d6f5E9fF83AF4BB0f6fd026"
            ),
          },
          [a.vo.BASE]: {
            Controller: (0, r.K)("0xe4AB03992e214acfdCD05ccFB5C5C16e3d0Ca371"),
            BookManager: (0, r.K)("0x382CCccbD3b142D7DA063bF68cd0c89634767F76"),
            BookViewer: (0, r.K)("0xbfb608D67340fa54bA31614C293750EeB573c795"),
            Rebalancer: (0, r.K)("0x6A0b87D6b74F7D5C92722F6a11714DBeDa9F3895"),
            Strategy: (0, r.K)("0x9092e5f62b27c3eD78feB24A0F2ad6474D26DdA5"),
            Minter: (0, r.K)("0x732547BB8825eAb932Dcda030Fc446bf4A5552f3"),
            Operator: (0, r.K)("0xBB854e8C0f04d919aD770b27015Ee90a9EF31Bf0"),
            VoteLockedCloberToken: i.D,
            ElectionGovernor: i.D,
            KeepersRegistry: i.D,
          },
          [a.vo.BERACHAIN_TESTNET]: {
            Controller: (0, r.K)("0xce3F3C90970C08Fe451998441b30879560AA6757"),
            BookManager: (0, r.K)("0x874b1B795993653fbFC3f1c1fc0469214cC9F4A5"),
            BookViewer: (0, r.K)("0xb735FdD82497Dd9AbfEEAdc659b960473BF896E0"),
            Rebalancer: i.D,
            Strategy: i.D,
            Minter: i.D,
            Operator: i.D,
            VoteLockedCloberToken: i.D,
            ElectionGovernor: i.D,
            KeepersRegistry: i.D,
          },
          [a.vo.MITOSIS_TESTNET]: {
            Controller: (0, r.K)("0x6ef1c5D4cB1ebcC24d4BD7eB1b4467F26B6F2C1e"),
            BookManager: (0, r.K)("0x874b1B795993653fbFC3f1c1fc0469214cC9F4A5"),
            BookViewer: (0, r.K)("0x5C91A02B8B5D10597fc6cA23faF56F9718D1feD0"),
            Rebalancer: i.D,
            Strategy: i.D,
            Minter: i.D,
            Operator: i.D,
            VoteLockedCloberToken: i.D,
            ElectionGovernor: i.D,
            KeepersRegistry: i.D,
          },
          [a.vo.SONIC_MAINNET]: {
            Controller: (0, r.K)("0xADc0CC0c3Ea12e57b8BcB7d7C8ac03222487E337"),
            BookManager: (0, r.K)("0xD4aD5Ed9E1436904624b6dB8B1BE31f36317C636"),
            BookViewer: (0, r.K)("0xe81e78f946e34d13Dcb6fd46a78713E0FFDA5613"),
            Rebalancer: i.D,
            Strategy: i.D,
            Minter: i.D,
            Operator: i.D,
            VoteLockedCloberToken: i.D,
            ElectionGovernor: i.D,
            KeepersRegistry: i.D,
          },
          [a.vo.ZKSYNC]: {
            Controller: (0, r.K)("0x2Bd904F455928833F8E8C706d1cf01Eb5daaee7C"),
            BookManager: (0, r.K)("0xAc6AdB2727F99C309acd511D942c0b2812e03614"),
            BookViewer: (0, r.K)("0x6e717aA9BB48129aeDC408D435Cc54F79E8A747a"),
            Rebalancer: i.D,
            Strategy: i.D,
            Minter: i.D,
            Operator: i.D,
            VoteLockedCloberToken: i.D,
            ElectionGovernor: i.D,
            KeepersRegistry: i.D,
          },
        };
      },
      17019: function (e, t, n) {
        "use strict";
        function r(e) {
          return {
            formatters: void 0,
            fees: void 0,
            serializers: void 0,
            ...e,
          };
        }
        n.d(t, {
          vo: function () {
            return o;
          },
          EO: function () {
            return ei;
          },
          NQ: function () {
            return ea;
          },
        });
        let i = r({
          id: 421614,
          name: "Arbitrum Sepolia",
          nativeCurrency: {
            name: "Arbitrum Sepolia Ether",
            symbol: "ETH",
            decimals: 18,
          },
          rpcUrls: {
            default: { http: ["https://sepolia-rollup.arbitrum.io/rpc"] },
          },
          blockExplorers: {
            default: {
              name: "Arbiscan",
              url: "https://sepolia.arbiscan.io",
              apiUrl: "https://api-sepolia.arbiscan.io/api",
            },
          },
          contracts: {
            multicall3: {
              address: "0xca11bde05977b3631167028862be2a173976ca11",
              blockCreated: 81930,
            },
          },
          testnet: !0,
        });
        var a,
          o,
          s = n(5547),
          u = n(15536),
          l = n(17229),
          c = n(25865);
        let d = {
          block: (0, u.G)({
            format(e) {
              let t = e.transactions?.map((e) => {
                if ("string" == typeof e) return e;
                let t = l.Tr(e);
                return (
                  "0x7e" === t.typeHex &&
                    ((t.isSystemTx = e.isSystemTx),
                    (t.mint = e.mint ? s.y_(e.mint) : void 0),
                    (t.sourceHash = e.sourceHash),
                    (t.type = "deposit")),
                  t
                );
              });
              return { transactions: t, stateRoot: e.stateRoot };
            },
          }),
          transaction: (0, l.y_)({
            format(e) {
              let t = {};
              return (
                "0x7e" === e.type &&
                  ((t.isSystemTx = e.isSystemTx),
                  (t.mint = e.mint ? (0, s.y_)(e.mint) : void 0),
                  (t.sourceHash = e.sourceHash),
                  (t.type = "deposit")),
                t
              );
            },
          }),
          transactionReceipt: (0, c.dI)({
            format: (e) => ({
              l1GasPrice: e.l1GasPrice ? (0, s.y_)(e.l1GasPrice) : null,
              l1GasUsed: e.l1GasUsed ? (0, s.y_)(e.l1GasUsed) : null,
              l1Fee: e.l1Fee ? (0, s.y_)(e.l1Fee) : null,
              l1FeeScalar: e.l1FeeScalar ? Number(e.l1FeeScalar) : null,
            }),
          }),
        };
        var f = n(17013),
          p = n(89930),
          h = n(79017),
          m = n(88769),
          y = n(49964),
          g = n(14015),
          b = n(5644);
        function v(e, t = "hex") {
          let n = (function e(t) {
              return Array.isArray(t)
                ? (function (e) {
                    let t = e.reduce((e, t) => e + t.length, 0),
                      n = w(t),
                      r = t <= 55 ? 1 + t : 1 + n + t;
                    return {
                      length: r,
                      encode(r) {
                        for (let { encode: i } of (t <= 55
                          ? r.pushByte(192 + t)
                          : (r.pushByte(247 + n),
                            1 === n
                              ? r.pushUint8(t)
                              : 2 === n
                              ? r.pushUint16(t)
                              : 3 === n
                              ? r.pushUint24(t)
                              : r.pushUint32(t)),
                        e))
                          i(r);
                      },
                    };
                  })(t.map((t) => e(t)))
                : (function (e) {
                    let t = "string" == typeof e ? (0, b.nr)(e) : e,
                      n = w(t.length),
                      r =
                        1 === t.length && t[0] < 128
                          ? 1
                          : t.length <= 55
                          ? 1 + t.length
                          : 1 + n + t.length;
                    return {
                      length: r,
                      encode(e) {
                        (1 === t.length && t[0] < 128) ||
                          (t.length <= 55
                            ? e.pushByte(128 + t.length)
                            : (e.pushByte(183 + n),
                              1 === n
                                ? e.pushUint8(t.length)
                                : 2 === n
                                ? e.pushUint16(t.length)
                                : 3 === n
                                ? e.pushUint24(t.length)
                                : e.pushUint32(t.length))),
                          e.pushBytes(t);
                      },
                    };
                  })(t);
            })(e),
            r = (0, g.q)(new Uint8Array(n.length));
          return (n.encode(r), "hex" === t) ? (0, m.ci)(r.bytes) : r.bytes;
        }
        function w(e) {
          if (e < 256) return 1;
          if (e < 65536) return 2;
          if (e < 16777216) return 3;
          if (e < 4294967296) return 4;
          throw new y.G("Length is too large.");
        }
        var E = n(70392),
          x = n(38670),
          C = n(51379),
          _ = n(27035),
          T = n(59337),
          S = n(8229),
          P = n(75366),
          O = n(32959),
          I = n(14921),
          A = n(25590),
          k = n(98244),
          j = n(80695);
        function B(e) {
          let {
            chainId: t,
            maxPriorityFeePerGas: n,
            maxFeePerGas: r,
            to: i,
          } = e;
          if (t <= 0) throw new I.hJ({ chainId: t });
          if (i && !(0, p.U)(i)) throw new f.b({ address: i });
          if (r && r > 2n ** 256n - 1n) throw new A.Hh({ maxFeePerGas: r });
          if (n && r && n > r)
            throw new A.cs({ maxFeePerGas: r, maxPriorityFeePerGas: n });
        }
        var M = n(11205);
        function N(e) {
          if (!e || 0 === e.length) return [];
          let t = [];
          for (let n = 0; n < e.length; n++) {
            let { address: r, storageKeys: i } = e[n];
            for (let e = 0; e < i.length; e++)
              if (i[e].length - 2 != 64) throw new E.JC({ storageKey: i[e] });
            if (!(0, p.U)(r, { strict: !1 })) throw new f.b({ address: r });
            t.push([r, i]);
          }
          return t;
        }
        function D(e, t) {
          let n = (0, M.l)(e);
          return "eip1559" === n
            ? (function (e, t) {
                let {
                  chainId: n,
                  gas: r,
                  nonce: i,
                  to: a,
                  value: o,
                  maxFeePerGas: s,
                  maxPriorityFeePerGas: u,
                  accessList: l,
                  data: c,
                } = e;
                B(e);
                let d = N(l),
                  f = [
                    (0, m.NC)(n),
                    i ? (0, m.NC)(i) : "0x",
                    u ? (0, m.NC)(u) : "0x",
                    s ? (0, m.NC)(s) : "0x",
                    r ? (0, m.NC)(r) : "0x",
                    a ?? "0x",
                    o ? (0, m.NC)(o) : "0x",
                    c ?? "0x",
                    d,
                    ...R(e, t),
                  ];
                return (0, h.SM)(["0x02", v(f)]);
              })(e, t)
            : "eip2930" === n
            ? (function (e, t) {
                let {
                  chainId: n,
                  gas: r,
                  data: i,
                  nonce: a,
                  to: o,
                  value: s,
                  accessList: u,
                  gasPrice: l,
                } = e;
                !(function (e) {
                  let {
                    chainId: t,
                    maxPriorityFeePerGas: n,
                    gasPrice: r,
                    maxFeePerGas: i,
                    to: a,
                  } = e;
                  if (t <= 0) throw new I.hJ({ chainId: t });
                  if (a && !(0, p.U)(a)) throw new f.b({ address: a });
                  if (n || i)
                    throw new y.G(
                      "`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute."
                    );
                  if (r && r > 2n ** 256n - 1n)
                    throw new A.Hh({ maxFeePerGas: r });
                })(e);
                let c = N(u),
                  d = [
                    (0, m.NC)(n),
                    a ? (0, m.NC)(a) : "0x",
                    l ? (0, m.NC)(l) : "0x",
                    r ? (0, m.NC)(r) : "0x",
                    o ?? "0x",
                    s ? (0, m.NC)(s) : "0x",
                    i ?? "0x",
                    c,
                    ...R(e, t),
                  ];
                return (0, h.SM)(["0x01", v(d)]);
              })(e, t)
            : "eip4844" === n
            ? (function (e, t) {
                let {
                  chainId: n,
                  gas: r,
                  nonce: i,
                  to: a,
                  value: o,
                  maxFeePerBlobGas: u,
                  maxFeePerGas: l,
                  maxPriorityFeePerGas: c,
                  accessList: d,
                  data: f,
                } = e;
                !(function (e) {
                  let { blobVersionedHashes: t } = e;
                  if (t) {
                    if (0 === t.length) throw new O.RX();
                    for (let e of t) {
                      let t = (0, k.d)(e),
                        n = (0, s.ly)((0, j.tP)(e, 0, 1));
                      if (32 !== t) throw new O.xd({ hash: e, size: t });
                      if (n !== P.lc) throw new O.cJ({ hash: e, version: n });
                    }
                  }
                  B(e);
                })(e);
                let p = e.blobVersionedHashes,
                  y = e.sidecars;
                if (e.blobs && (void 0 === p || void 0 === y)) {
                  let t =
                      "string" == typeof e.blobs[0]
                        ? e.blobs
                        : e.blobs.map((e) => (0, m.ci)(e)),
                    n = e.kzg,
                    r = (0, x.P)({ blobs: t, kzg: n });
                  if (
                    (void 0 === p && (p = (0, _.C)({ commitments: r })),
                    void 0 === y)
                  ) {
                    let e = (0, C.y)({ blobs: t, commitments: r, kzg: n });
                    y = (0, T.j)({ blobs: t, commitments: r, proofs: e });
                  }
                }
                let g = N(d),
                  b = [
                    (0, m.NC)(n),
                    i ? (0, m.NC)(i) : "0x",
                    c ? (0, m.NC)(c) : "0x",
                    l ? (0, m.NC)(l) : "0x",
                    r ? (0, m.NC)(r) : "0x",
                    a ?? "0x",
                    o ? (0, m.NC)(o) : "0x",
                    f ?? "0x",
                    g,
                    u ? (0, m.NC)(u) : "0x",
                    p ?? [],
                    ...R(e, t),
                  ],
                  w = [],
                  E = [],
                  S = [];
                if (y)
                  for (let e = 0; e < y.length; e++) {
                    let { blob: t, commitment: n, proof: r } = y[e];
                    w.push(t), E.push(n), S.push(r);
                  }
                return (0, h.SM)(["0x03", y ? v([b, w, E, S]) : v(b)]);
              })(e, t)
            : (function (e, t) {
                let {
                  chainId: n = 0,
                  gas: r,
                  data: i,
                  nonce: a,
                  to: o,
                  value: s,
                  gasPrice: u,
                } = e;
                !(function (e) {
                  let {
                    chainId: t,
                    maxPriorityFeePerGas: n,
                    gasPrice: r,
                    maxFeePerGas: i,
                    to: a,
                    accessList: o,
                  } = e;
                  if (a && !(0, p.U)(a)) throw new f.b({ address: a });
                  if (void 0 !== t && t <= 0) throw new I.hJ({ chainId: t });
                  if (n || i)
                    throw new y.G(
                      "`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute."
                    );
                  if (r && r > 2n ** 256n - 1n)
                    throw new A.Hh({ maxFeePerGas: r });
                  if (o)
                    throw new y.G(
                      "`accessList` is not a valid Legacy Transaction attribute."
                    );
                })(e);
                let l = [
                  a ? (0, m.NC)(a) : "0x",
                  u ? (0, m.NC)(u) : "0x",
                  r ? (0, m.NC)(r) : "0x",
                  o ?? "0x",
                  s ? (0, m.NC)(s) : "0x",
                  i ?? "0x",
                ];
                if (t) {
                  let e = (() => {
                    if (t.v >= 35n) {
                      let e = (t.v - 35n) / 2n;
                      return e > 0 ? t.v : 27n + (35n === t.v ? 0n : 1n);
                    }
                    if (n > 0) return BigInt(2 * n) + BigInt(35n + t.v - 27n);
                    let e = 27n + (27n === t.v ? 0n : 1n);
                    if (t.v !== e) throw new E.vl({ v: t.v });
                    return e;
                  })();
                  l = [...l, (0, m.NC)(e), t.r, t.s];
                } else n > 0 && (l = [...l, (0, m.NC)(n), "0x", "0x"]);
                return v(l);
              })(e, t);
        }
        function R(e, t) {
          let { r: n, s: r, v: i, yParity: a } = t ?? e;
          if (void 0 === n || void 0 === r || (void 0 === i && void 0 === a))
            return [];
          let o =
            "number" == typeof a
              ? a
                ? (0, m.NC)(1)
                : "0x"
              : 0n === i
              ? "0x"
              : 1n === i
              ? (0, m.NC)(1)
              : 27n === i
              ? "0x"
              : (0, m.NC)(1);
          return [o, (0, S.f)(n), (0, S.f)(r)];
        }
        let F = {
            contracts: {
              gasPriceOracle: {
                address: "0x420000000000000000000000000000000000000F",
              },
              l1Block: {
                address: "0x4200000000000000000000000000000000000015",
              },
              l2CrossDomainMessenger: {
                address: "0x4200000000000000000000000000000000000007",
              },
              l2Erc721Bridge: {
                address: "0x4200000000000000000000000000000000000014",
              },
              l2StandardBridge: {
                address: "0x4200000000000000000000000000000000000010",
              },
              l2ToL1MessagePasser: {
                address: "0x4200000000000000000000000000000000000016",
              },
            },
            formatters: d,
            serializers: {
              transaction: function (e, t) {
                return "deposit" === e.type || void 0 !== e.sourceHash
                  ? (function (e) {
                      (function (e) {
                        let { from: t, to: n } = e;
                        if (t && !(0, p.U)(t)) throw new f.b({ address: t });
                        if (n && !(0, p.U)(n)) throw new f.b({ address: n });
                      })(e);
                      let {
                          sourceHash: t,
                          data: n,
                          from: r,
                          gas: i,
                          isSystemTx: a,
                          mint: o,
                          to: s,
                          value: u,
                        } = e,
                        l = [
                          t,
                          r,
                          s ?? "0x",
                          o ? (0, m.NC)(o) : "0x",
                          u ? (0, m.NC)(u) : "0x",
                          i ? (0, m.NC)(i) : "0x",
                          a ? "0x1" : "0x",
                          n ?? "0x",
                        ];
                      return (0, h.SM)(["0x7e", v(l)]);
                    })(e)
                  : D(e, t);
              },
            },
          },
          L = r({
            ...F,
            id: 1,
            name: "Ethereum",
            nativeCurrency: { name: "Ether", symbol: "ETH", decimals: 18 },
            rpcUrls: { default: { http: ["https://ethereum-rpc.publicnode.com"] } },
            blockExplorers: {
              default: {
                name: "Basescan",
                url: "https://basescan.org",
                apiUrl: "https://api.basescan.org/api",
              },
            },
            contracts: {
              ...F.contracts,
              l2OutputOracle: {
                1: { address: "0x56315b90c40730925ec5485cf004d835058518A0" },
              },
              multicall3: {
                address: "0xca11bde05977b3631167028862be2a173976ca11",
                blockCreated: 5022,
              },
              portal: {
                1: {
                  address: "0x49048044D57e1C92A77f79988d21Fa8fAF74E97e",
                  blockCreated: 17482143,
                },
              },
              l1StandardBridge: {
                1: {
                  address: "0x3154Cf16ccdb4C6d922629664174b904d80F2C35",
                  blockCreated: 17482143,
                },
              },
            },
            sourceId: 1,
          });
        var U = n(76606),
          $ = n(76008);
        let q = 32n * (2n ** 16n - 1n),
          H = {
            block: (0, u.G)({
              format(e) {
                let t = e.transactions?.map((e) => {
                  if ("string" == typeof e) return e;
                  let t = H.transaction?.format(e);
                  return (
                    "0x71" === t.typeHex
                      ? (t.type = "eip712")
                      : "0xff" === t.typeHex && (t.type = "priority"),
                    t
                  );
                });
                return {
                  l1BatchNumber: e.l1BatchNumber
                    ? (0, s.y_)(e.l1BatchNumber)
                    : null,
                  l1BatchTimestamp: e.l1BatchTimestamp
                    ? (0, s.y_)(e.l1BatchTimestamp)
                    : null,
                  transactions: t,
                };
              },
            }),
            transaction: (0, l.y_)({
              format(e) {
                let t = {};
                return (
                  "0x71" === e.type
                    ? (t.type = "eip712")
                    : "0xff" === e.type && (t.type = "priority"),
                  {
                    ...t,
                    l1BatchNumber: e.l1BatchNumber
                      ? (0, s.y_)(e.l1BatchNumber)
                      : null,
                    l1BatchTxIndex: e.l1BatchTxIndex
                      ? (0, s.y_)(e.l1BatchTxIndex)
                      : null,
                  }
                );
              },
            }),
            transactionReceipt: (0, c.dI)({
              format: (e) => ({
                l1BatchNumber: e.l1BatchNumber
                  ? (0, s.y_)(e.l1BatchNumber)
                  : null,
                l1BatchTxIndex: e.l1BatchTxIndex
                  ? (0, s.y_)(e.l1BatchTxIndex)
                  : null,
                logs: e.logs.map((e) => ({
                  ...(0, U.U)(e),
                  l1BatchNumber: e.l1BatchNumber
                    ? (0, s.y_)(e.l1BatchNumber)
                    : null,
                  transactionLogIndex: (0, s.ly)(e.transactionLogIndex),
                  logType: e.logType,
                })),
                l2ToL1Logs: e.l2ToL1Logs.map((e) => ({
                  blockNumber: (0, s.y_)(e.blockHash),
                  blockHash: e.blockHash,
                  l1BatchNumber: (0, s.y_)(e.l1BatchNumber),
                  transactionIndex: (0, s.y_)(e.transactionIndex),
                  shardId: (0, s.y_)(e.shardId),
                  isService: e.isService,
                  sender: e.sender,
                  key: e.key,
                  value: e.value,
                  transactionHash: e.transactionHash,
                  logIndex: (0, s.y_)(e.logIndex),
                })),
              }),
            }),
            transactionRequest: (0, $.iy)({
              exclude: [
                "customSignature",
                "factoryDeps",
                "gasPerPubdata",
                "paymaster",
                "paymasterInput",
              ],
              format: (e) =>
                e.gasPerPubdata ||
                (e.paymaster && e.paymasterInput) ||
                e.factoryDeps ||
                e.customSignature
                  ? {
                      eip712Meta: {
                        ...(e.gasPerPubdata
                          ? { gasPerPubdata: (0, m.NC)(e.gasPerPubdata) }
                          : { gasPerPubdata: (0, m.NC)(50000n) }),
                        ...(e.paymaster && e.paymasterInput
                          ? {
                              paymasterParams: {
                                paymaster: e.paymaster,
                                paymasterInput: Array.from(
                                  (0, b.nr)(e.paymasterInput)
                                ),
                              },
                            }
                          : {}),
                        ...(e.factoryDeps
                          ? {
                              factoryDeps: e.factoryDeps.map((e) =>
                                Array.from((0, b.nr)(e))
                              ),
                            }
                          : {}),
                        ...(e.customSignature
                          ? {
                              customSignature: Array.from(
                                (0, b.nr)(e.customSignature)
                              ),
                            }
                          : {}),
                      },
                      type: "0x71",
                    }
                  : {},
            }),
          };
        class z extends y.G {
          constructor() {
            super(
              'Transaction is not an EIP712 transaction.\n\nTransaction must:\n  - include `type: "eip712"`\n  - include one of the following: `customSignature`, `paymaster`, `paymasterInput`, `gasPerPubdata`, `factoryDeps`'
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidEip712TransactionError",
              });
          }
        }
        function G(e) {
          return (
            "eip712" === e.type ||
            ("customSignature" in e && !!e.customSignature) ||
            ("paymaster" in e && !!e.paymaster) ||
            ("paymasterInput" in e && !!e.paymasterInput) ||
            ("gasPerPubdata" in e && "bigint" == typeof e.gasPerPubdata) ||
            ("factoryDeps" in e && !!e.factoryDeps)
          );
        }
        function W(e) {
          let {
            chainId: t,
            to: n,
            from: r,
            paymaster: i,
            paymasterInput: a,
          } = e;
          if (!G(e)) throw new z();
          if (!t || t <= 0) throw new I.hJ({ chainId: t });
          if (n && !(0, p.U)(n)) throw new f.b({ address: n });
          if (r && !(0, p.U)(r)) throw new f.b({ address: r });
          if (i && !(0, p.U)(i)) throw new f.b({ address: i });
          if (i && !a)
            throw new y.G(
              "`paymasterInput` must be provided when `paymaster` is defined"
            );
          if (!i && a)
            throw new y.G(
              "`paymaster` must be provided when `paymasterInput` is defined"
            );
        }
        var V = n(60702),
          K = n(78831);
        class Z extends y.G {
          constructor({ givenLength: e, maxBytecodeSize: t }) {
            super(
              `Bytecode cannot be longer than ${t} bytes. Given length: ${e}`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "BytecodeLengthExceedsMaxSizeError",
              });
          }
        }
        class J extends y.G {
          constructor({ givenLengthInWords: e }) {
            super(
              `Bytecode length in 32-byte words must be odd. Given length in words: ${e}`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "BytecodeLengthInWordsMustBeOddError",
              });
          }
        }
        class Y extends y.G {
          constructor({ givenLength: e }) {
            super(
              `The bytecode length in bytes must be divisible by 32. Given length: ${e}`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "BytecodeLengthMustBeDivisibleBy32Error",
              });
          }
        }
        let X = r({
            formatters: H,
            serializers: {
              transaction: function (e, t) {
                return G(e)
                  ? (function (e) {
                      let {
                        chainId: t,
                        gas: n,
                        nonce: r,
                        to: i,
                        from: a,
                        value: o,
                        maxFeePerGas: s,
                        maxPriorityFeePerGas: u,
                        customSignature: l,
                        factoryDeps: c,
                        paymaster: d,
                        paymasterInput: f,
                        gasPerPubdata: p,
                        data: y,
                      } = e;
                      W(e);
                      let g = [
                        r ? (0, m.NC)(r) : "0x",
                        u ? (0, m.NC)(u) : "0x",
                        s ? (0, m.NC)(s) : "0x",
                        n ? (0, m.NC)(n) : "0x",
                        i ?? "0x",
                        o ? (0, m.NC)(o) : "0x",
                        y ?? "0x0",
                        (0, m.NC)(t),
                        (0, m.NC)(""),
                        (0, m.NC)(""),
                        (0, m.NC)(t),
                        a ?? "0x",
                        p ? (0, m.NC)(p) : (0, m.NC)(50000n),
                        c ?? [],
                        l ?? "0x",
                        d && f ? [d, f] : [],
                      ];
                      return (0, h.SM)(["0x71", v(g)]);
                    })(e)
                  : D(e, t);
              },
            },
            custom: {
              getEip712Domain: (e) => {
                W(e);
                let t = (function (e) {
                  let {
                    gas: t,
                    nonce: n,
                    to: r,
                    from: i,
                    value: a,
                    maxFeePerGas: o,
                    maxPriorityFeePerGas: s,
                    factoryDeps: u,
                    paymaster: l,
                    paymasterInput: c,
                    gasPerPubdata: d,
                    data: f,
                  } = e;
                  return {
                    txType: 113n,
                    from: BigInt(i),
                    to: r ? BigInt(r) : 0n,
                    gasLimit: t ?? 0n,
                    gasPerPubdataByteLimit: d ?? 50000n,
                    maxFeePerGas: o ?? 0n,
                    maxPriorityFeePerGas: s ?? 0n,
                    paymaster: l ? BigInt(l) : 0n,
                    nonce: n ? BigInt(n) : 0n,
                    value: a ?? 0n,
                    data: f || "0x0",
                    factoryDeps:
                      u?.map((e) =>
                        m.NC(
                          (function (e) {
                            let t = (0, b.O0)(e);
                            if (t.length % 32 != 0)
                              throw new Y({ givenLength: t.length });
                            if (t.length > q)
                              throw new Z({
                                givenLength: t.length,
                                maxBytecodeSize: q,
                              });
                            let n = (0, K.J)(t),
                              r = (0, b.O0)(n),
                              i = t.length / 32;
                            if (i % 2 == 0)
                              throw new J({ givenLengthInWords: i });
                            let a = (0, b.O0)(i),
                              o = (0, V.vk)(a, { size: 2 }),
                              s = new Uint8Array([1, 0]);
                            return r.set(s, 0), r.set(o, 2), r;
                          })(e)
                        )
                      ) ?? [],
                    paymasterInput: c || "0x",
                  };
                })(e);
                return {
                  domain: { name: "zkSync", version: "2", chainId: e.chainId },
                  types: {
                    Transaction: [
                      { name: "txType", type: "uint256" },
                      { name: "from", type: "uint256" },
                      { name: "to", type: "uint256" },
                      { name: "gasLimit", type: "uint256" },
                      { name: "gasPerPubdataByteLimit", type: "uint256" },
                      { name: "maxFeePerGas", type: "uint256" },
                      { name: "maxPriorityFeePerGas", type: "uint256" },
                      { name: "paymaster", type: "uint256" },
                      { name: "nonce", type: "uint256" },
                      { name: "value", type: "uint256" },
                      { name: "data", type: "bytes" },
                      { name: "factoryDeps", type: "bytes32[]" },
                      { name: "paymasterInput", type: "bytes" },
                    ],
                  },
                  primaryType: "Transaction",
                  message: t,
                };
              },
            },
            id: 324,
            name: "zkSync Era",
            network: "zksync-era",
            nativeCurrency: { decimals: 18, name: "Ether", symbol: "ETH" },
            rpcUrls: {
              default: {
                http: ["https://mainnet.era.zksync.io"],
                webSocket: ["wss://mainnet.era.zksync.io/ws"],
              },
            },
            blockExplorers: {
              default: {
                name: "Etherscan",
                url: "https://era.zksync.network/",
                apiUrl: "https://api-era.zksync.network/api",
              },
            },
            contracts: {
              multicall3: {
                address: "0xF9cda624FBC7e059355ce98a31693d299FACd963",
              },
            },
          }),
          Q = {
            id: 7777,
            name: "Clober Test Chain",
            nativeCurrency: { name: "Ether", symbol: "ETH", decimals: 18 },
            rpcUrls: {
              default: { http: ["http://127.0.0.1"] },
              public: { http: ["http://127.0.0.1"] },
            },
            contracts: {
              multicall3: {
                address: "0xca11bde05977b3631167028862be2a173976ca11",
                blockCreated: 81930,
              },
            },
          },
          ee = {
            id: 77772,
            name: "Clober Test Chain 2",
            nativeCurrency: { name: "Ether", symbol: "ETH", decimals: 18 },
            rpcUrls: {
              default: { http: ["http://127.0.0.1"] },
              public: { http: ["http://127.0.0.1"] },
            },
            contracts: {
              multicall3: {
                address: "0xca11bde05977b3631167028862be2a173976ca11",
                blockCreated: 81930,
              },
            },
          },
          et = r({
            id: 80084,
            name: "Berachain bArtio",
            nativeCurrency: {
              decimals: 18,
              name: "Berachain Token",
              symbol: "BERA",
            },
            rpcUrls: {
              default: { http: ["https://bartio.rpc.berachain.com"] },
            },
            blockExplorers: {
              default: {
                name: "Berachain",
                url: "https://bartio.beratrail.io",
              },
            },
            testnet: !0,
            contracts: {
              multicall3: {
                address: "0xcA11bde05977b3631167028862bE2a173976CA11",
                blockCreated: 109269,
              },
            },
          }),
          en = r({
            id: 124832,
            name: "Mitosis Testnet",
            nativeCurrency: {
              decimals: 18,
              name: "MITO Token",
              symbol: "MITO",
            },
            rpcUrls: { default: { http: ["https://rpc.testnet.mitosis.org"] } },
            blockExplorers: {
              default: {
                name: "Mitosis Testnet",
                url: "https://testnet.mitosiscan.xyz",
              },
            },
            testnet: !0,
            contracts: {
              multicall3: {
                address: "0xcA11bde05977b3631167028862bE2a173976CA11",
                blockCreated: 84239,
              },
            },
          }),
          er = r({
            id: 146,
            name: "Sonic Mainnet",
            nativeCurrency: { decimals: 18, name: "Sonic", symbol: "S" },
            rpcUrls: { default: { http: ["https://rpc.soniclabs.com"] } },
            blockExplorers: {
              default: { name: "Sonic Mainnet", url: "https://sonicscan.org" },
            },
            testnet: !1,
            contracts: {
              multicall3: {
                address: "0xcA11bde05977b3631167028862bE2a173976CA11",
                blockCreated: 60,
              },
            },
          });
        ((a = o || (o = {}))[(a.CLOBER_TESTNET = Q.id)] = "CLOBER_TESTNET"),
          (a[(a.CLOBER_TESTNET_2 = ee.id)] = "CLOBER_TESTNET_2"),
          (a[(a.ARBITRUM_SEPOLIA = i.id)] = "ARBITRUM_SEPOLIA"),
          (a[(a.BASE = L.id)] = "BASE"),
          (a[(a.BERACHAIN_TESTNET = et.id)] = "BERACHAIN_TESTNET"),
          (a[(a.MITOSIS_TESTNET = en.id)] = "MITOSIS_TESTNET"),
          (a[(a.SONIC_MAINNET = er.id)] = "SONIC_MAINNET"),
          (a[(a.ZKSYNC = X.id)] = "ZKSYNC");
        let ei = {
            [o.CLOBER_TESTNET]: Q,
            [o.CLOBER_TESTNET_2]: ee,
            [o.ARBITRUM_SEPOLIA]: i,
            [o.BASE]: L,
            [o.BERACHAIN_TESTNET]: et,
            [o.MITOSIS_TESTNET]: en,
            [o.SONIC_MAINNET]: er,
            [o.ZKSYNC]: X,
          },
          ea = (e) =>
            e === o.CLOBER_TESTNET ||
            e === o.CLOBER_TESTNET_2 ||
            e === o.ARBITRUM_SEPOLIA ||
            e === o.BERACHAIN_TESTNET ||
            e === o.MITOSIS_TESTNET;
      },
      72276: function (e, t, n) {
        "use strict";
        n.d(t, {
          Wm: function () {
            return l;
          },
          Xo: function () {
            return c;
          },
          hB: function () {
            return a;
          },
          u5: function () {
            return d;
          },
        });
        var r = n(66834),
          i = n(17019);
        let a = { address: r.D, name: "Ethereum", symbol: "ETH", decimals: 18 },
          o = {
            address: r.D,
            name: "BERA Token",
            symbol: "BERA",
            decimals: 18,
          },
          s = {
            address: r.D,
            name: "MITO Token",
            symbol: "MITO",
            decimals: 18,
          },
          u = { address: r.D, name: "Sonic", symbol: "S", decimals: 18 },
          l = {
            [i.vo.CLOBER_TESTNET]: a,
            [i.vo.CLOBER_TESTNET_2]: a,
            [i.vo.ARBITRUM_SEPOLIA]: a,
            [i.vo.BASE]: a,
            [i.vo.BERACHAIN_TESTNET]: o,
            [i.vo.MITOSIS_TESTNET]: s,
            [i.vo.SONIC_MAINNET]: u,
            [i.vo.ZKSYNC]: a,
          },
          c = {
            [i.vo.CLOBER_TESTNET]: [r.D],
            [i.vo.CLOBER_TESTNET_2]: [
              "0xF2e615A933825De4B39b497f6e6991418Fb31b78",
            ],
            [i.vo.ARBITRUM_SEPOLIA]: [
              "0xF2e615A933825De4B39b497f6e6991418Fb31b78",
            ],
            [i.vo.BASE]: ["0x4200000000000000000000000000000000000006"],
            [i.vo.BERACHAIN_TESTNET]: [
              "0x7507c1dc16935B82698e4C63f2746A2fCf994dF8",
            ],
            [i.vo.MITOSIS_TESTNET]: [
              "0x8B71fD76b23721d0D73CA14Ea6464AAD70149B67",
            ],
            [i.vo.SONIC_MAINNET]: [
              "0x039e2fB66102314Ce7b64Ce5Ce3E5183bc94aD38",
            ],
            [i.vo.ZKSYNC]: ["0x5AEa5775959fBC2557Cc8789bC1bf90A239D9a91"],
          },
          d = {
            [i.vo.CLOBER_TESTNET]: [
              "0x00BFD44e79FB7f6dd5887A9426c8EF85A0CD23e0",
            ],
            [i.vo.CLOBER_TESTNET_2]: [
              "0x00BFD44e79FB7f6dd5887A9426c8EF85A0CD23e0",
            ],
            [i.vo.ARBITRUM_SEPOLIA]: [
              "0x00BFD44e79FB7f6dd5887A9426c8EF85A0CD23e0",
            ],
            [i.vo.BASE]: [
              "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
              "0xd9aAEc86B65D86f6A7B5B1b0c42FFA531710b6CA",
              "0x4621b7A9c75199271F773Ebd9A499dbd165c3191",
              "0xB79DD08EA68A908A97220C76d19A6aA9cBDE4376",
              "0x50c5725949A6F0c72E6C4a641F24049A917DB0Cb",
            ],
            [i.vo.BERACHAIN_TESTNET]: [
              "0x0E4aaF1351de4c0264C5c7056Ef3777b41BD8e03",
              "0xd6D83aF58a19Cd14eF3CF6fe848C9A4d21e5727c",
              "0x05D0dD5135E3eF3aDE32a9eF9Cb06e8D37A6795D",
            ],
            [i.vo.MITOSIS_TESTNET]: [
              "0xCB0CedF61be0Bf4d5F6596b8ab296614b154db91",
              "0xb8f230Ea91516787F2cbB2c63b147Ec79988E3ED",
            ],
            [i.vo.SONIC_MAINNET]: [],
            [i.vo.ZKSYNC]: ["0x1d17CBcF0D6D143135aE902365D2E5e2A16538D4"],
          };
      },
      12071: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return o;
          },
          n: function () {
            return s;
          },
        });
        var r = n(87839);
        class i {
          constructor(e, t) {
            if (
              (Object.defineProperty(this, "RATE_PRECISION", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 10n ** 6n,
              }),
              Object.defineProperty(this, "usesQuote", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "value", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "rate", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "calculateFee", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: (e, t) => {
                  let n = this.rate > 0n,
                    i = n ? this.rate : -this.rate,
                    a = (0, r.cs)(e * i, this.RATE_PRECISION, t ? !n : n);
                  return n ? a : -a;
                },
              }),
              Object.defineProperty(this, "calculateOriginalAmount", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: (e, t) => {
                  let n = this.rate > 0,
                    i = this.RATE_PRECISION + (t ? -this.rate : this.rate);
                  return (0, r.cs)(e * this.RATE_PRECISION, i, n);
                },
              }),
              (this.usesQuote = e),
              (this.rate = t),
              t > i.MAX_FEE_RATE || t < i.MIN_FEE_RATE)
            )
              throw Error("InvalidFeePolicy");
            this.value = (t + i.MAX_FEE_RATE) | (e ? 1n << 23n : 0n);
          }
          static from(e) {
            let t = e >> 23n > 0n;
            return new i(t, i.getRateFromValue(e));
          }
        }
        Object.defineProperty(i, "MAX_FEE_RATE", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 500000n,
        }),
          Object.defineProperty(i, "MIN_FEE_RATE", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: -500000n,
          }),
          Object.defineProperty(i, "RATE_MASK", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: 8388607n,
          }),
          Object.defineProperty(i, "getRateFromValue", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: (e) => (e & i.RATE_MASK) - i.MAX_FEE_RATE,
          });
        var a = n(17019);
        let o = {
            [a.vo.CLOBER_TESTNET]: new i(!0, -300n),
            [a.vo.CLOBER_TESTNET_2]: new i(!0, -300n),
            [a.vo.ARBITRUM_SEPOLIA]: new i(!0, 0n),
            [a.vo.BASE]: new i(!0, 0n),
            [a.vo.BERACHAIN_TESTNET]: new i(!0, 0n),
            [a.vo.MITOSIS_TESTNET]: new i(!0, 0n),
            [a.vo.SONIC_MAINNET]: new i(!0, 0n),
            [a.vo.ZKSYNC]: new i(!0, 0n),
          },
          s = {
            [a.vo.CLOBER_TESTNET]: new i(!0, 1000n),
            [a.vo.CLOBER_TESTNET_2]: new i(!0, 1000n),
            [a.vo.ARBITRUM_SEPOLIA]: new i(!0, 100n),
            [a.vo.BASE]: new i(!0, 100n),
            [a.vo.BERACHAIN_TESTNET]: new i(!0, 100n),
            [a.vo.MITOSIS_TESTNET]: new i(!0, 100n),
            [a.vo.SONIC_MAINNET]: new i(!0, 100n),
            [a.vo.ZKSYNC]: new i(!0, 100n),
          };
      },
      54602: function (e, t, n) {
        "use strict";
        n.d(t, {
          Sv: function () {
            return a;
          },
          fX: function () {
            return i;
          },
          y2: function () {
            return r;
          },
        });
        let r = 0xc6c1313451aab317fb9b67e11777e9a5a6ccdb2ebaen,
          i = 1350587n,
          a = 96n;
      },
      11176: function (e, t, n) {
        "use strict";
        n.d(t, {
          G: function () {
            return o;
          },
        });
        var r = n(87066),
          i = n(17019);
        let a = {
          [i.vo.CLOBER_TESTNET]:
            "https://subgraph.satsuma-prod.com/f6a8c4889b7b/clober/v2-core-subgraph/api",
          [i.vo.CLOBER_TESTNET_2]:
            "https://subgraph.satsuma-prod.com/f6a8c4889b7b/clober/v2-core-subgraph/api",
          [i.vo.ARBITRUM_SEPOLIA]:
            "https://subgraph.satsuma-prod.com/f6a8c4889b7b/clober/v2-core-subgraph/api",
          [i.vo.BASE]:
            "https://subgraph.satsuma-prod.com/f6a8c4889b7b/clober/v2-core-subgraph-base/api",
          [i.vo.BERACHAIN_TESTNET]:
            "https://api.goldsky.com/api/public/project_clsljw95chutg01w45cio46j0/subgraphs/v2-core-subgraph-berachain-bartio/v1.8.1/gn",
          [i.vo.MITOSIS_TESTNET]:
            "https://api.goldsky.com/api/public/project_clsljw95chutg01w45cio46j0/subgraphs/v2-core-subgraph-mitosis-testnet/v1.8.1/gn",
          [i.vo.SONIC_MAINNET]:
            "https://subgraph.satsuma-prod.com/f6a8c4889b7b/clober/v2-core-subgraph-sonic-mainnet/api",
          [i.vo.ZKSYNC]:
            "https://api.goldsky.com/api/public/project_clsljw95chutg01w45cio46j0/subgraphs/v2-core-subgraph-zksync-era/v1.5.5/gn",
        };
        class o {
          static async get(e, t, n, i) {
            if (!a[e]) throw Error("Unsupported chain for subgraph");
            let o = await r.Z.post(
              a[e],
              { query: n, variables: i, operationName: t },
              { timeout: 2e3 }
            );
            if (200 === o.status) return o.data;
            throw Error(o.data.errors || "Failed to fetch data");
          }
        }
      },
      20289: function (e, t, n) {
        "use strict";
        n.d(t, {
          r: function () {
            return i;
          },
          v: function () {
            return r;
          },
        });
        let r = 2n ** 19n - 1n,
          i = -r;
      },
      32040: function (e, t, n) {
        "use strict";
        var r, i, a, o;
        n.d(t, {
          ox: function () {
            return r;
          },
        }),
          ((a = r || (r = {})).oneMinute = "1m"),
          (a.threeMinutes = "3m"),
          (a.fiveMinutes = "5m"),
          (a.tenMinutes = "10m"),
          (a.fifteenMinutes = "15m"),
          (a.thirtyMinutes = "30m"),
          (a.oneHour = "1h"),
          (a.twoHours = "2h"),
          (a.fourHours = "4h"),
          (a.sixHours = "6h"),
          (a.oneDay = "1d"),
          (a.oneWeek = "1w"),
          ((o = i || (i = {}))[(o.NotStarted = 0)] = "NotStarted"),
          (o[(o.Voting = 1)] = "Voting"),
          (o[(o.Registration = 2)] = "Registration"),
          (o[(o.Ended = 3)] = "Ended");
      },
      15833: function (e, t, n) {
        "use strict";
        n.d(t, {
          S: function () {
            return a;
          },
        });
        var r = n(58218);
        let i = [
          {
            inputs: [
              { internalType: "address", name: "owner", type: "address" },
              { internalType: "address", name: "operator", type: "address" },
            ],
            name: "isApprovedForAll",
            outputs: [{ internalType: "bool", name: "", type: "bool" }],
            stateMutability: "view",
            type: "function",
          },
        ];
        async function a(e, t, n) {
          return e.readContract({
            address: r.x[t].BookManager,
            abi: i,
            functionName: "isApprovedForAll",
            args: [n, r.x[t].Controller],
          });
        }
      },
      95851: function (e, t, n) {
        "use strict";
        n.d(t, {
          Db: function () {
            return a;
          },
          Fp: function () {
            return r;
          },
          VV: function () {
            return i;
          },
        });
        let r = (...e) => e.reduce((e, t) => (t > e ? t : e), 0n),
          i = (...e) => e.reduce((e, t) => (t < e ? t : e), 2n ** 256n - 1n),
          a = (e, t, n = 6) =>
            (e * BigInt(Math.floor(t * 10 ** n))) / BigInt(100 * 10 ** n);
      },
      57437: function (e, t, n) {
        "use strict";
        n.d(t, {
          O: function () {
            return s;
          },
        });
        var r = n(74912),
          i = n(90078),
          a = n(66834),
          o = n(12071);
        let s = (e, t, n, s) => {
          let u = (0, r.w)(
            (0, i.E)(
              [
                { name: "base", type: "address" },
                { name: "unitSize", type: "uint64" },
                { name: "quote", type: "address" },
                { name: "makerPolicy", type: "uint24" },
                { name: "hooks", type: "address" },
                { name: "takerPolicy", type: "uint24" },
              ],
              [n, s, t, Number(o.Z[e].value), a.D, Number(o.n[e].value)]
            )
          );
          return BigInt(u) & (2n ** 192n - 1n);
        };
      },
      46763: function (e, t, n) {
        "use strict";
        n.d(t, {
          k: function () {
            return f;
          },
          u: function () {
            return p;
          },
        });
        var r = n(87145),
          i = n(66834),
          a = n(1642),
          o = n(72276);
        let s = [
            {
              inputs: [],
              name: "name",
              outputs: [{ internalType: "string", name: "", type: "string" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "symbol",
              outputs: [{ internalType: "string", name: "", type: "string" }],
              stateMutability: "view",
              type: "function",
            },
            {
              inputs: [],
              name: "decimals",
              outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
              stateMutability: "view",
              type: "function",
            },
          ],
          u = (e, t) => `${e}:${t}`,
          l = new Map(),
          c = (e, t) => l.get(u(e, t)),
          d = (e, t, n) => l.set(u(e, t), n),
          f = async (e, t, n) => {
            let r = c(t, n);
            if (r) return r;
            let i = await h(e, n);
            return d(t, n, i), i;
          },
          p = async (e, t, n) => {
            n = n
              .filter((e) => !(0, r.E)(e, i.D))
              .filter((e, t, n) => n.indexOf(e) === t);
            let s = n.map((e) => c(t, e)).filter((e) => void 0 !== e),
              u = n.filter((e) => !s.some((t) => t.address === e)),
              l = await m(e, u);
            for (let e of Object.values(l)) d(t, e.address, e);
            return {
              ...s.reduce((e, t) => ((e[(0, a.K)(t.address)] = t), e), {}),
              ...l,
              [i.D]: o.Wm[t],
            };
          },
          h = async (e, t) => {
            if ((0, r.E)(t, i.D)) return e.chain ? o.Wm[e.chain.id] : o.hB;
            let [{ result: n }, { result: a }, { result: u }] =
              await e.multicall({
                contracts: [
                  { address: t, abi: s, functionName: "name" },
                  { address: t, abi: s, functionName: "symbol" },
                  { address: t, abi: s, functionName: "decimals" },
                ],
              });
            if (!n || !a || !u) throw Error(`Failed to fetch currency: ${t}`);
            return { address: t, name: n, symbol: a, decimals: u };
          },
          m = async (e, t) => {
            if (
              0 ===
              (t = t
                .filter((e) => !(0, r.E)(e, i.D))
                .filter((e, t, n) => n.indexOf(e) === t)).length
            )
              return {};
            let n = await e.multicall({
              contracts: [
                ...t.map((e) => ({ address: e, abi: s, functionName: "name" })),
                ...t.map((e) => ({
                  address: e,
                  abi: s,
                  functionName: "symbol",
                })),
                ...t.map((e) => ({
                  address: e,
                  abi: s,
                  functionName: "decimals",
                })),
              ],
            });
            return t
              .map((e, r) => {
                let i = n[r].result,
                  a = n[r + t.length].result,
                  o = n[r + 2 * t.length].result;
                return {
                  address: e,
                  name: i ?? "Unknown",
                  symbol: a ?? "Unknown",
                  decimals: o ?? 18,
                };
              })
              .reduce((e, t) => ((e[(0, a.K)(t.address)] = t), e), {});
          };
      },
      45229: function (e, t, n) {
        "use strict";
        n.d(t, {
          c: function () {
            return o;
          },
          i: function () {
            return s;
          },
        });
        var r = n(54602),
          i = n(87839),
          a = n(86627);
        let o = (e, t, n) => {
            let o = 1n << r.Sv;
            return (0, i.cs)(t * (0, a.pU)(e), o, n);
          },
          s = (e, t, n) => {
            let o = t << r.Sv;
            return (0, i.cs)(o, (0, a.pU)(e), n);
          };
      },
      24361: function (e, t, n) {
        "use strict";
        n.d(t, {
          u: function () {
            return s;
          },
        });
        var r = n(1642),
          i = n(87145),
          a = n(66834),
          o = n(72276);
        let s = (e, t) => {
          if (2 !== t.length) throw Error("Invalid token pair");
          t = t.map((e) => (0, r.K)(e)).sort();
          let n = t.find((t) =>
            o.u5[e].map((e) => (0, r.K)(e)).some((e) => e.includes(t))
          );
          if (n) {
            let e = t.find((e) => !(0, i.E)(e, n));
            return {
              marketId: `${e}/${n}`,
              quoteTokenAddress: n,
              baseTokenAddress: e,
            };
          }
          let s = t.find((e) => (0, i.E)(e, a.D));
          if (s) {
            let e = t.find((e) => !(0, i.E)(e, a.D));
            return {
              marketId: `${e}/${s}`,
              quoteTokenAddress: s,
              baseTokenAddress: e,
            };
          }
          let u = t.find((t) =>
            o.Xo[e].map((e) => (0, r.K)(e)).some((e) => e.includes(t))
          );
          if (u) {
            let e = t.find((e) => !(0, i.E)(e, u));
            return {
              marketId: `${e}/${u}`,
              quoteTokenAddress: u,
              baseTokenAddress: e,
            };
          }
          let l = t.sort((e, t) => e.localeCompare(t));
          return {
            marketId: `${l[0]}/${l[1]}`,
            quoteTokenAddress: l[0],
            baseTokenAddress: l[1],
          };
        };
      },
      87839: function (e, t, n) {
        "use strict";
        n.d(t, {
          Wn: function () {
            return r;
          },
          cI: function () {
            return a;
          },
          cs: function () {
            return i;
          },
        });
        let r = (e) => (e < 0n ? -e : e),
          i = (e, t, n) => (n ? (0n === e ? 0n : (e - 1n) / t + 1n) : e / t),
          a = (e) => {
            var t, n;
            let r = (e, t) => e + t,
              i = (e, t) => e - t,
              a = (e, t) => e * t,
              o = (e, t) => (e < t ? 1n : 0n),
              s = (e, t) => t << e,
              u = (e, t) => t >> e,
              l = (e, t) => t >> e,
              c = s(7n, o(0xffffffffffffffffffffffffffffffffn, e));
            (t = c =
              (c =
                (c =
                  (c |= s(6n, o(0xffffffffffffffffn, u(c, e)))) |
                  s(5n, o(4294967295n, u(c, e)))) | s(4n, o(65535n, u(c, e)))) |
              s(3n, o(255n, u(c, e)))),
              (n =
                (0xf8f9f9faf9fdfafbf9fdfcfdfafbfcfef9fafdfafcfcfbfefafafcfbffffffffn >>
                  (248n -
                    8n *
                      (31n &
                        u(u(c, e), 0x8421084210842108cc6318c6db6d54ben)))) &
                255n);
            let d = i(
              l(
                96n,
                a(
                  r(
                    0x2247f7a7b6594320649aa03aba1n,
                    l(
                      96n,
                      a(
                        r(
                          0x139601a2efabe717e604cbb4894n,
                          l(
                            96n,
                            a(
                              r(
                                0x29508e458543d8aa4df2abee78n,
                                (e = u(159n, s((c = t ^ n), e)))
                              ),
                              e
                            )
                          )
                        ),
                        e
                      )
                    )
                  ),
                  e
                )
              ),
              0x8c3f38e95a6b1ff2ab1c3b3437n
            );
            (d = i(l(96n, a(d, e)), 0x2384773bdf1ac5676facced6091n)),
              (d = i(l(96n, a(d, e)), 0xb9a025d814b29c212b8b1a07cen)),
              (d = i(a(d, e), s(96n, 0xa09507084cc699bb0e71ea86an)));
            let f = r(0x465772b2bbbb5f824b15207a30n, e);
            return (
              (f = r(0x388eaa27412d5aca026815d636en, l(96n, a(e, f)))),
              (f = r(0xdf99ac502031bf953eff472fdccn, l(96n, a(e, f)))),
              (f = r(0x13cdffb29d51d99322bdff5f2211n, l(96n, a(e, f)))),
              (f = r(0xa0f742023def783a307a986912en, l(96n, a(e, f)))),
              (f = r(0x1920d8043ca89b5239253284e42n, l(96n, a(e, f)))),
              (f = r(0xb7a86d7375468fac667a0a527n, l(96n, a(e, f)))),
              (d = a(0x1340daa0d5f769dba1915cef59f0815a5506n, (d /= f))),
              (c =
                (d = r(
                  a(
                    0x267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b3n,
                    i(159n, c)
                  ),
                  d
                )) / 0x3782dace9d9000000000000000000000000n)
            );
          };
      },
      9445: function (e, t, n) {
        "use strict";
        n.d(t, {
          T4: function () {
            return s;
          },
          sq: function () {
            return c;
          },
          z: function () {
            return l;
          },
        });
        var r = n(70794),
          i = n(54602),
          a = n(86627),
          o = n(95851);
        r.Z.config({ DECIMAL_PLACES: 100 });
        let s = (e, t, n) =>
            new r.Z(e.toString())
              .div(new r.Z(2).pow(i.Sv.toString()))
              .times(new r.Z(10).pow(n))
              .div(new r.Z(10).pow(t))
              .toFixed(),
          u = (e, t, n) => {
            let a = new r.Z(e)
                .times(new r.Z(2).pow(i.Sv.toString()))
                .times(new r.Z(10).pow(t))
                .div(new r.Z(10).pow(n)),
              o = BigInt(
                a.isInteger() ? a.toFixed() : a.integerValue().toFixed()
              );
            return o;
          },
          l = (e, t, n) => {
            let r = u(e, t, n),
              s = (0, o.Fp)(i.fX, (0, o.VV)(r, i.y2)),
              l = (0, a.HN)(s),
              c = (0, a.pU)(l);
            return r === c
              ? { roundingDownTick: l, roundingUpTick: l }
              : { roundingDownTick: l, roundingUpTick: l + 1n };
          },
          c = ({
            marketQuoteCurrency: e,
            marketBaseCurrency: t,
            bidTick: n,
            askTick: r,
          }) => {
            if (void 0 !== n) return s((0, a.pU)(n), e.decimals, t.decimals);
            if (void 0 !== r)
              return s((0, a.pU)((0, a.E6)(r)), e.decimals, t.decimals);
            throw Error("Either bidTick or askTick must be provided");
          };
      },
      86627: function (e, t, n) {
        "use strict";
        n.d(t, {
          E6: function () {
            return o;
          },
          HN: function () {
            return s;
          },
          pU: function () {
            return u;
          },
        });
        var r = n(54602),
          i = n(20289),
          a = n(87839);
        let o = (e) => -e,
          s = (e) => {
            if (e > r.y2 || e < r.fX) throw Error("price is out of range");
            let t = (42951820407860n * (0, a.cI)(e)) / 2n ** 128n;
            return u(t) > e ? t - 1n : t;
          },
          u = (e) => {
            if (e > i.v || e < i.r) throw Error("tick is out of range");
            let t = e < 0n ? -e : e,
              n = 0n;
            return (
              (n = (1n & t) !== 0n ? 0xfff97272373d413259a46990n : 1n << r.Sv),
              (2n & t) != 0n && (n = (0xfff2e50f5f656932ef12357cn * n) >> r.Sv),
              (4n & t) != 0n && (n = (0xffe5caca7e10e4e61c3624ean * n) >> r.Sv),
              (8n & t) != 0n && (n = (0xffcb9843d60f6159c9db5883n * n) >> r.Sv),
              (16n & t) != 0n &&
                (n = (0xff973b41fa98c081472e6896n * n) >> r.Sv),
              (32n & t) != 0n &&
                (n = (0xff2ea16466c96a3843ec78b3n * n) >> r.Sv),
              (64n & t) != 0n &&
                (n = (0xfe5dee046a99a2a811c461f1n * n) >> r.Sv),
              (128n & t) != 0n &&
                (n = (0xfcbe86c7900a88aedcffc83bn * n) >> r.Sv),
              (256n & t) != 0n &&
                (n = (0xf987a7253ac413176f2b074cn * n) >> r.Sv),
              (512n & t) != 0n &&
                (n = (0xf3392b0822b70005940c7a39n * n) >> r.Sv),
              (1024n & t) != 0n &&
                (n = (0xe7159475a2c29b7443b29c7fn * n) >> r.Sv),
              (2048n & t) != 0n &&
                (n = (0xd097f3bdfd2022b8845ad8f7n * n) >> r.Sv),
              (4096n & t) != 0n &&
                (n = (0xa9f746462d870fdf8a65dc1fn * n) >> r.Sv),
              (8192n & t) != 0n &&
                (n = (0x70d869a156d2a1b890bb3df6n * n) >> r.Sv),
              (16384n & t) != 0n &&
                (n = (0x31be135f97d08fd981231505n * n) >> r.Sv),
              (32768n & t) != 0n &&
                (n = (0x9aa508b5b7a84e1c677de54n * n) >> r.Sv),
              (65536n & t) != 0n &&
                (n = (0x5d6af8dedb81196699c329n * n) >> r.Sv),
              (131072n & t) != 0n &&
                (n = (0x2216e584f5fa1ea92604n * n) >> r.Sv),
              (262144n & t) != 0n && (n = (0x48a170391f7dc42n * n) >> r.Sv),
              e > 0n &&
                (n = 0x1000000000000000000000000000000000000000000000000n / n),
              n
            );
          };
      },
      24069: function (e, t, n) {
        "use strict";
        n.d(t, {
          j: function () {
            return d;
          },
        });
        var r = n(87145),
          i = n(66834),
          a = n(72276);
        let o = [
            {
              inputs: [],
              name: "totalSupply",
              outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
              stateMutability: "view",
              type: "function",
            },
          ],
          s = (e, t) => `${e}:${t}`,
          u = new Map(),
          l = (e, t) => u.get(s(e, t)),
          c = (e, t, n) => u.set(s(e, t), n),
          d = async (e, t, n) => {
            let r = l(t, n.address);
            if (void 0 !== r) return r;
            let i = await f(e, t, n);
            return c(t, n.address, i), i;
          },
          f = async (e, t, n) => {
            if ((0, r.E)(n.address, i.D) || a.Xo[t].includes(n.address))
              return 10n ** 12n;
            let s = await e.readContract({
              address: n.address,
              abi: o,
              functionName: "totalSupply",
            });
            return (
              10n ** BigInt(s <= 2n ** 64n ? 0n : Math.max(n.decimals - 6, 0))
            );
          };
      },
      84898: function (e, t, n) {
        "use strict";
        n.d(t, {
          Is: function () {
            return L;
          },
          oi: function () {
            return A;
          },
          pu: function () {
            return D;
          },
          $e: function () {
            return F;
          },
          YK: function () {
            return j;
          },
          x0: function () {
            return R;
          },
          Mj: function () {
            return B;
          },
          Zl: function () {
            return M;
          },
          h3: function () {
            return N;
          },
          qh: function () {
            return U;
          },
          Le: function () {
            return k;
          },
        });
        var r = n(87145),
          i = n(27841),
          a = n(38464),
          o = n(87272),
          s = n(82267),
          u = n(1642),
          l = n(92454),
          c = n(17019),
          d = n(9445),
          f = n(33869),
          p = n(32040),
          h = n(11176);
        let m = {
            [p.ox.oneMinute]: 60,
            [p.ox.threeMinutes]: 180,
            [p.ox.fiveMinutes]: 300,
            [p.ox.tenMinutes]: 600,
            [p.ox.fifteenMinutes]: 900,
            [p.ox.thirtyMinutes]: 1800,
            [p.ox.oneHour]: 3600,
            [p.ox.twoHours]: 7200,
            [p.ox.fourHours]: 14400,
            [p.ox.sixHours]: 21600,
            [p.ox.oneDay]: 86400,
            [p.ox.oneWeek]: 604800,
          },
          y = async ({
            chainId: e,
            first: t,
            skip: n,
            marketCode: r,
            intervalType: i,
            from: a,
            to: o,
          }) =>
            h.G.get(
              e,
              "getChartLogs",
              "query getChartLogs($first: Int!, $skip: Int!, $marketCode: String!, $intervalType: String!, $from: BigInt!, $to: BigInt!) { chartLogs( first: $first, skip: $skip, orderBy: timestamp, orderDirection: desc where: { marketCode: $marketCode, intervalType: $intervalType, timestamp_gte: $from, timestamp_lte: $to, }) { timestamp open high low close baseVolume } }",
              {
                first: t,
                from: a,
                intervalType: i,
                marketCode: r,
                skip: n,
                to: o,
              }
            ),
          g = async ({ chainId: e, marketCode: t }) =>
            h.G.get(
              e,
              "getLatestChartLog",
              "query getLatestChartLog($marketCode: String!) { chartLogs( first: 1, orderBy: timestamp, orderDirection: desc where: { marketCode: $marketCode, }) { timestamp open high low close baseVolume } }",
              { marketCode: t }
            );
        async function b(e, t) {
          let {
            data: { chartLogs: n },
          } = await g({ chainId: e, marketCode: t.toLowerCase() });
          return n.length > 0
            ? {
                timestamp: Number(n[0].timestamp),
                open: String(n[0].open),
                high: String(n[0].high),
                low: String(n[0].low),
                close: String(n[0].close),
                volume: String(n[0].baseVolume),
              }
            : {
                timestamp: Number(0),
                open: "0",
                high: "0",
                low: "0",
                close: "0",
                volume: "0",
              };
        }
        let v = (e, t, n, r, i) => `${e}:${t}:${n}:${r}:${i}`,
          w = new Map(),
          E = (e, t, n, r, i) => w.get(v(e, t, n, r, i)),
          x = (e, t, n, r, i, a) => w.set(v(e, t, n, r, i), a);
        async function C(e, t, n, r, i) {
          let a = m[n],
            o = Math.floor(r / a) * a,
            s = Math.floor(i / a) * a,
            u = Math.floor(Date.now() / 1e3),
            l = Math.floor(u / a) * a - a <= s;
          if (!l) {
            let a = E(e, t, n, r, i);
            if (void 0 !== a) return a;
          }
          let c = [],
            d = 0;
          for (;;) {
            let {
              data: { chartLogs: a },
            } = await y({
              chainId: e,
              first: 1e3,
              skip: d,
              marketCode: t.toLowerCase(),
              intervalType: n,
              from: r,
              to: i,
            });
            if (
              (c.push(
                ...a.map((e) => ({
                  timestamp: Number(e.timestamp),
                  open: String(e.open),
                  high: String(e.high),
                  low: String(e.low),
                  close: String(e.close),
                  volume: String(e.baseVolume),
                }))
              ),
              a.length < 1e3)
            )
              break;
            d += 1e3;
          }
          c.sort((e, t) => Number(e.timestamp) - Number(t.timestamp));
          let {
              data: { chartLogs: f },
            } = await y({
              chainId: e,
              first: 1,
              skip: 0,
              marketCode: t.toLowerCase(),
              intervalType: n,
              from: 0,
              to: r - 1,
            }),
            p =
              void 0 !== f[0]
                ? {
                    timestamp: Number(f[0].timestamp),
                    open: String(f[0].open),
                    high: String(f[0].high),
                    low: String(f[0].low),
                    close: String(f[0].close),
                    volume: String(f[0].baseVolume),
                  }
                : {
                    timestamp: 0n,
                    open: "0",
                    high: "0",
                    low: "0",
                    close: "0",
                    volume: "0",
                  },
            h = o,
            g = [];
          for (; h <= s; ) {
            let e = c.find((e) => e.timestamp === h);
            e
              ? ((g = [
                  ...g,
                  {
                    timestamp: e.timestamp,
                    open: p.close,
                    high: e.high,
                    low: e.low,
                    close: e.close,
                    volume: e.volume,
                  },
                ]),
                (p = e))
              : (g = [
                  ...g,
                  {
                    timestamp: h,
                    open: p.close,
                    high: p.close,
                    low: p.close,
                    close: p.close,
                    volume: "0",
                  },
                ]),
              (h += a);
          }
          return l || x(e, t, n, r, i, g), g;
        }
        var _ = n(24361),
          T = n(58218),
          S = n(86627),
          P = n(20289),
          O = n(49681);
        function I(e, t, n, r, i) {
          let a = e.sort((e, t) => Number(e.timestamp) - Number(t.timestamp));
          if (-1 === a.findIndex((e) => Number(e.timestamp) === n)) {
            let e = a.filter((e) => Number(e.timestamp) < n).pop() || null;
            a.unshift(i(n, e));
          }
          if (-1 === a.findIndex((e) => Number(e.timestamp) === r)) {
            let e = a.filter((e) => Number(e.timestamp) < r).pop() || null;
            a.push(i(r, e));
          }
          let o = [];
          for (let e = 0; e < a.length; e++)
            if ((o.push(a[e]), e < a.length - 1)) {
              let n = a[e].timestamp,
                r = a[e + 1].timestamp;
              for (let s = Number(n) + t; s < Number(r); s += t)
                o.push(i(s, a[e]));
            }
          return o.filter(
            (e) => Number(e.timestamp) >= n && Number(e.timestamp) <= r
          );
        }
        let A = ({ chainId: e }) => T.x[e],
          k = async ({ chainId: e }) => {
            let {
              data: {
                latestBlock: { blockNumber: t },
              },
            } = await h.G.get(
              e,
              "getLatestBlockNumber",
              'query getLatestBlockNumber { latestBlock(id: "latest") { blockNumber } }',
              {}
            );
            return Number(t);
          },
          j = async ({ chainId: e, token0: t, token1: n, options: o }) => {
            if ((0, r.E)(t, n))
              throw Error("Token0 and token1 must be different");
            let s = (0, i.v)({
                chain: c.EO[e],
                transport: o?.rpcUrl ? (0, a.d)(o.rpcUrl) : (0, a.d)(),
              }),
              u = await (0, l.B)(s, e, [t, n], !!(o && o.useSubgraph), o?.n);
            return u.toJson();
          },
          B = async ({
            chainId: e,
            token0: t,
            token1: n,
            salt: o,
            options: s,
          }) => {
            if ((0, r.E)(t, n))
              throw Error("Token0 and token1 must be different");
            let u = (0, i.v)({
                chain: c.EO[e],
                transport: s?.rpcUrl ? (0, a.d)(s.rpcUrl) : (0, a.d)(),
              }),
              l = await (0, O.X)(
                u,
                e,
                [t, n],
                o,
                !!(s && s.useSubgraph),
                s?.market
              );
            return l.toJson();
          },
          M = async ({
            chainId: e,
            token0: t,
            token1: n,
            salt: s,
            volumeFromTimestamp: u,
            volumeToTimestamp: l,
            snapshotFromTimestamp: d,
            snapshotToTimestamp: f,
            snapshotIntervalType: p,
            spreadProfitFromTimestamp: h,
            spreadProfitToTimestamp: y,
            options: g,
          }) => {
            let b;
            if ((0, r.E)(t, n))
              throw Error("Token0 and token1 must be different");
            if (!g?.useSubgraph) throw Error("useSubgraph must be true");
            if (g?.pool) b = g.pool;
            else {
              let r = (0, i.v)({
                chain: c.EO[e],
                transport: g?.rpcUrl ? (0, a.d)(g.rpcUrl) : (0, a.d)(),
              });
              b = (
                await (0, O.X)(r, e, [t, n], s, !!(g && g.useSubgraph), void 0)
              ).toJson();
            }
            let v = await (0, O.h)(e, b.key, u, d, p, h),
              w = I(v.poolVolumes, 300, u, l, (e) => {
                let t = {
                  id: "",
                  poolKey: b.key,
                  intervalType: "5m",
                  timestamp: BigInt(e),
                  currencyAVolume: 0n,
                  currencyBVolume: 0n,
                  bookACurrencyAVolume: 0n,
                  bookACurrencyBVolume: 0n,
                  bookBCurrencyAVolume: 0n,
                  bookBCurrencyBVolume: 0n,
                };
                return t;
              }),
              E = I(v.poolSnapshots, m[p], d, f, (e, t) => {
                let n = {
                  id: "",
                  poolKey: b.key,
                  intervalType: p,
                  timestamp: BigInt(e),
                  price: t ? t.price : 0n,
                  liquidityA: t ? t.liquidityA : 0n,
                  liquidityB: t ? t.liquidityB : 0n,
                  totalSupply: t ? t.totalSupply : 0n,
                };
                return n;
              }),
              x = I(v.poolSpreadProfits, 300, h, y, (e) => {
                let t = {
                  id: "",
                  intervalType: "5m",
                  timestamp: BigInt(e),
                  accumulatedProfitInUsd: "0",
                };
                return t;
              });
            return {
              poolVolumes: w.map((e) => ({
                poolKey: e.poolKey,
                intervalType: e.intervalType,
                timestamp: Number(e.timestamp),
                currencyAVolume: {
                  currency: b.currencyA,
                  value: (0, o.b)(e.currencyAVolume, b.currencyA.decimals),
                },
                currencyBVolume: {
                  currency: b.currencyB,
                  value: (0, o.b)(e.currencyBVolume, b.currencyB.decimals),
                },
              })),
              poolSnapshots: E.map((e) => ({
                poolKey: e.poolKey,
                intervalType: e.intervalType,
                timestamp: Number(e.timestamp),
                price: (0, o.b)(e.price, 18),
                liquidityA: {
                  currency: b.currencyA,
                  value: (0, o.b)(e.liquidityA, b.currencyA.decimals),
                },
                liquidityB: {
                  currency: b.currencyB,
                  value: (0, o.b)(e.liquidityB, b.currencyB.decimals),
                },
                totalSupply: {
                  currency: b.currencyLp,
                  value: (0, o.b)(e.totalSupply, b.currencyLp.decimals),
                },
              })),
              poolSpreadProfits: x.map((e) => ({
                intervalType: e.intervalType,
                timestamp: Number(e.timestamp),
                accumulatedProfitInUsd: e.accumulatedProfitInUsd,
              })),
            };
          },
          N = ({ chainId: e, price: t, currency0: n, currency1: i }) => {
            let a = U({ chainId: e, token0: n.address, token1: i.address }),
              o = (0, r.E)(a, n.address) ? n : i,
              s = (0, r.E)(a, n.address) ? i : n,
              { roundingDownTick: u, roundingUpTick: l } = (0, d.z)(
                Number(t),
                o.decimals,
                s.decimals
              ),
              c = (0, S.E6)(l);
            return {
              normal: {
                nextUp: {
                  tick: u + 2n,
                  price: (0, d.T4)((0, S.pU)(u + 2n), o.decimals, s.decimals),
                  marketPrice: (0, d.T4)(
                    (0, S.pU)(u + 2n),
                    o.decimals,
                    s.decimals
                  ),
                },
                up: {
                  tick: u + 1n,
                  price: (0, d.T4)((0, S.pU)(u + 1n), o.decimals, s.decimals),
                  marketPrice: (0, d.T4)(
                    (0, S.pU)(u + 1n),
                    o.decimals,
                    s.decimals
                  ),
                },
                now: {
                  tick: u,
                  price: (0, d.T4)((0, S.pU)(u), o.decimals, s.decimals),
                  marketPrice: (0, d.T4)((0, S.pU)(u), o.decimals, s.decimals),
                },
                down: {
                  tick: u - 1n,
                  price: (0, d.T4)((0, S.pU)(u - 1n), o.decimals, s.decimals),
                  marketPrice: (0, d.T4)(
                    (0, S.pU)(u - 1n),
                    o.decimals,
                    s.decimals
                  ),
                },
                nextDown: {
                  tick: u - 2n,
                  price: (0, d.T4)((0, S.pU)(u - 2n), o.decimals, s.decimals),
                  marketPrice: (0, d.T4)(
                    (0, S.pU)(u - 2n),
                    o.decimals,
                    s.decimals
                  ),
                },
              },
              inverted: {
                nextUp: {
                  tick: c + 2n,
                  price: (0, d.T4)((0, S.pU)(c + 2n), s.decimals, o.decimals),
                  marketPrice: (0, d.T4)(
                    (0, S.pU)((0, S.E6)(c + 2n)),
                    o.decimals,
                    s.decimals
                  ),
                },
                up: {
                  tick: c + 1n,
                  price: (0, d.T4)((0, S.pU)(c + 1n), s.decimals, o.decimals),
                  marketPrice: (0, d.T4)(
                    (0, S.pU)((0, S.E6)(c + 1n)),
                    o.decimals,
                    s.decimals
                  ),
                },
                now: {
                  tick: c,
                  price: (0, d.T4)((0, S.pU)(c), s.decimals, o.decimals),
                  marketPrice: (0, d.T4)(
                    (0, S.pU)((0, S.E6)(c)),
                    o.decimals,
                    s.decimals
                  ),
                },
                down: {
                  tick: c - 1n,
                  price: (0, d.T4)((0, S.pU)(c - 1n), s.decimals, o.decimals),
                  marketPrice: (0, d.T4)(
                    (0, S.pU)((0, S.E6)(c - 1n)),
                    o.decimals,
                    s.decimals
                  ),
                },
                nextDown: {
                  tick: c - 2n,
                  price: (0, d.T4)((0, S.pU)(c - 2n), s.decimals, o.decimals),
                  marketPrice: (0, d.T4)(
                    (0, S.pU)((0, S.E6)(c - 2n)),
                    o.decimals,
                    s.decimals
                  ),
                },
              },
            };
          },
          D = async ({
            chainId: e,
            inputToken: t,
            outputToken: n,
            amountIn: u,
            options: f,
          }) => {
            let [p, h] = [
                !!f?.roundingDownTakenBid && f.roundingDownTakenBid,
                !!f?.roundingUpTakenAsk && f.roundingUpTakenAsk,
              ],
              m = (0, i.v)({
                chain: c.EO[e],
                transport: f?.rpcUrl ? (0, a.d)(f.rpcUrl) : (0, a.d)(),
              }),
              y = await (0, l.B)(m, e, [t, n], !!(f && f.useSubgraph)),
              g = (0, r.E)(y.quote.address, t),
              { roundingDownTick: b, roundingUpTick: v } =
                f && f.limitPrice
                  ? (0, d.z)(
                      Number(f.limitPrice),
                      y.quote.decimals,
                      y.base.decimals
                    )
                  : g
                  ? { roundingDownTick: P.v, roundingUpTick: P.v }
                  : { roundingDownTick: P.r, roundingUpTick: P.r },
              w = g ? y.quote : y.base,
              E = !g,
              {
                takenQuoteAmount: x,
                spentBaseAmount: C,
                bookId: _,
                events: T,
              } = y.spend({
                spentBase: E,
                limitTick: E ? (p ? b : v) : h ? v : b,
                amountIn: (0, s.v)(u, w.decimals),
              });
            return {
              takenAmount: (0, o.b)(x, g ? y.base.decimals : y.quote.decimals),
              spentAmount: (0, o.b)(C, g ? y.quote.decimals : y.base.decimals),
              bookId: _,
              events: T.map(
                ({ tick: e, takenQuoteAmount: t, spentBaseAmount: n }) => ({
                  price: (0, d.T4)(
                    (0, S.pU)(g ? (0, S.E6)(BigInt(e)) : BigInt(e)),
                    y.quote.decimals,
                    y.base.decimals
                  ),
                  takenAmount: (0, o.b)(
                    t,
                    g ? y.base.decimals : y.quote.decimals
                  ),
                  spentAmount: (0, o.b)(
                    n,
                    g ? y.quote.decimals : y.base.decimals
                  ),
                })
              ),
            };
          },
          R = async ({ chainId: e, userAddress: t, options: n }) => {
            let r = (0, i.v)({
              chain: c.EO[e],
              transport: n?.rpcUrl ? (0, a.d)(n.rpcUrl) : (0, a.d)(),
            });
            return (0, f.zG)(r, e, t);
          },
          F = async ({ chainId: e, quote: t, base: n }) => b(e, `${n}/${t}`),
          L = async ({
            chainId: e,
            quote: t,
            base: n,
            intervalType: r,
            from: i,
            to: a,
          }) => C(e, `${n}/${t}`, r, i, a),
          U = ({ chainId: e, token0: t, token1: n }) =>
            (0, u.K)((0, _.u)(e, [t, n]).quoteTokenAddress);
      },
      96024: function (e, t, n) {
        "use strict";
        function r(e) {
          if (!Number.isSafeInteger(e) || e < 0)
            throw Error(`Wrong positive integer: ${e}`);
        }
        function i(e, ...t) {
          if (!(e instanceof Uint8Array)) throw Error("Expected Uint8Array");
          if (t.length > 0 && !t.includes(e.length))
            throw Error(
              `Expected Uint8Array of length ${t}, not of length=${e.length}`
            );
        }
        function a(e, t = !0) {
          if (e.destroyed) throw Error("Hash instance has been destroyed");
          if (t && e.finished)
            throw Error("Hash#digest() has already been called");
        }
        function o(e, t) {
          i(e);
          let n = t.outputLen;
          if (e.length < n)
            throw Error(
              `digestInto() expects output buffer of length at least ${n}`
            );
        }
        n.d(t, {
          Gg: function () {
            return a;
          },
          J8: function () {
            return o;
          },
          Rx: function () {
            return r;
          },
          aI: function () {
            return i;
          },
        });
      },
      88342: function (e, t, n) {
        "use strict";
        n.d(t, {
          GL: function () {
            return a;
          },
          Jq: function () {
            return i;
          },
          O0: function () {
            return u;
          },
          hE: function () {
            return c;
          },
          kb: function () {
            return l;
          },
          np: function () {
            return o;
          },
        });
        /*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */ let r =
            (e) => e instanceof Uint8Array,
          i = (e) =>
            new Uint32Array(
              e.buffer,
              e.byteOffset,
              Math.floor(e.byteLength / 4)
            ),
          a = (e) => new DataView(e.buffer, e.byteOffset, e.byteLength),
          o = (e, t) => (e << (32 - t)) | (e >>> t),
          s = 68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0];
        if (!s) throw Error("Non little-endian hardware is not supported");
        function u(e) {
          if (
            ("string" == typeof e &&
              (e = (function (e) {
                if ("string" != typeof e)
                  throw Error(`utf8ToBytes expected string, got ${typeof e}`);
                return new Uint8Array(new TextEncoder().encode(e));
              })(e)),
            !r(e))
          )
            throw Error(`expected Uint8Array, got ${typeof e}`);
          return e;
        }
        class l {
          clone() {
            return this._cloneInto();
          }
        }
        function c(e) {
          let t = (t) => e().update(u(t)).digest(),
            n = e();
          return (
            (t.outputLen = n.outputLen),
            (t.blockLen = n.blockLen),
            (t.create = () => e()),
            t
          );
        }
      },
      46176: function (e, t, n) {
        "use strict";
        function r(e) {
          return "string" == typeof e ? { address: e, type: "json-rpc" } : e;
        }
        n.d(t, {
          T: function () {
            return r;
          },
        });
      },
      6430: function (e, t, n) {
        "use strict";
        n.d(t, {
          RE: function () {
            return x;
          },
        });
        var r = n(46176),
          i = n(20033),
          a = n(17013),
          o = n(49964),
          s = n(14921),
          u = n(24981),
          l = n(62041),
          c = n(43059),
          d = n(75910),
          f = n(24279),
          p = n(89930),
          h = n(28103),
          m = n(88769),
          y = n(25590),
          g = n(38624),
          b = n(19804),
          v = n(76008),
          w = n(54790),
          E = n(52829);
        async function x(e, t) {
          let {
              account: i = e.account,
              batch: l = !!e.batch?.multicall,
              blockNumber: d,
              blockTag: f = "latest",
              accessList: h,
              blobs: w,
              data: x,
              gas: T,
              gasPrice: S,
              maxFeePerBlobGas: P,
              maxFeePerGas: O,
              maxPriorityFeePerGas: I,
              nonce: A,
              to: k,
              value: j,
              stateOverride: B,
              ...M
            } = t,
            N = i ? (0, r.T)(i) : void 0;
          try {
            (0, E.F)(t);
            let n = d ? (0, m.eC)(d) : void 0,
              r = n || f,
              i = (function (e) {
                if (!e) return;
                let t = {};
                for (let { address: n, ...r } of e) {
                  if (!(0, p.U)(n, { strict: !1 }))
                    throw new a.b({ address: n });
                  if (t[n]) throw new c.Nc({ address: n });
                  t[n] = (function (e) {
                    let {
                        balance: t,
                        nonce: n,
                        state: r,
                        stateDiff: i,
                        code: a,
                      } = e,
                      o = {};
                    if (
                      (void 0 !== a && (o.code = a),
                      void 0 !== t && (o.balance = (0, m.eC)(t)),
                      void 0 !== n && (o.nonce = (0, m.eC)(n)),
                      void 0 !== r && (o.state = _(r)),
                      void 0 !== i)
                    ) {
                      if (o.state) throw new c.Z8();
                      o.stateDiff = _(i);
                    }
                    return o;
                  })(r);
                }
                return t;
              })(B),
              o = e.chain?.formatters?.transactionRequest?.format,
              u = o || v.tG,
              y = u({
                ...(0, b.K)(M, { format: o }),
                from: N?.address,
                accessList: h,
                blobs: w,
                data: x,
                gas: T,
                gasPrice: S,
                maxFeePerBlobGas: P,
                maxFeePerGas: O,
                maxPriorityFeePerGas: I,
                nonce: A,
                to: k,
                value: j,
              });
            if (
              l &&
              (function ({ request: e }) {
                let { data: t, to: n, ...r } = e;
                return (
                  !(!t || t.startsWith("0x82ad56cb")) &&
                  !!n &&
                  !(Object.values(r).filter((e) => void 0 !== e).length > 0)
                );
              })({ request: y }) &&
              !i
            )
              try {
                return await C(e, { ...y, blockNumber: d, blockTag: f });
              } catch (e) {
                if (!(e instanceof s.pZ) && !(e instanceof s.mm)) throw e;
              }
            let g = await e.request({
              method: "eth_call",
              params: i ? [y, r, i] : [y, r],
            });
            if ("0x" === g) return { data: void 0 };
            return { data: g };
          } catch (s) {
            let r = (function (e) {
                if (!(e instanceof o.G)) return;
                let t = e.walk();
                return "object" == typeof t?.data ? t.data?.data : t.data;
              })(s),
              { offchainLookup: i, offchainLookupSignature: a } = await n
                .e(4900)
                .then(n.bind(n, 64900));
            if (!1 !== e.ccipRead && r?.slice(0, 10) === a && k)
              return { data: await i(e, { data: r, to: k }) };
            throw (function (e, { docsPath: t, ...n }) {
              let r = (() => {
                let t = (0, g.k)(e, n);
                return t instanceof y.cj ? e : t;
              })();
              return new u.cg(r, { docsPath: t, ...n });
            })(s, { ...t, account: N, chain: e.chain });
          }
        }
        async function C(e, t) {
          let { batchSize: n = 1024, wait: r = 0 } =
              "object" == typeof e.batch?.multicall ? e.batch.multicall : {},
            {
              blockNumber: a,
              blockTag: o = "latest",
              data: l,
              multicallAddress: c,
              to: p,
            } = t,
            y = c;
          if (!y) {
            if (!e.chain) throw new s.pZ();
            y = (0, h.L)({
              blockNumber: a,
              chain: e.chain,
              contract: "multicall3",
            });
          }
          let g = a ? (0, m.eC)(a) : void 0,
            b = g || o,
            { schedule: v } = (0, w.S)({
              id: `${e.uid}.${b}`,
              wait: r,
              shouldSplitBatch(e) {
                let t = e.reduce((e, { data: t }) => e + (t.length - 2), 0);
                return t > 2 * n;
              },
              fn: async (t) => {
                let n = t.map((e) => ({
                    allowFailure: !0,
                    callData: e.data,
                    target: e.to,
                  })),
                  r = (0, f.R)({
                    abi: i.F8,
                    args: [n],
                    functionName: "aggregate3",
                  }),
                  a = await e.request({
                    method: "eth_call",
                    params: [{ data: r, to: y }, b],
                  });
                return (0, d.k)({
                  abi: i.F8,
                  args: [n],
                  functionName: "aggregate3",
                  data: a || "0x",
                });
              },
            }),
            [{ returnData: E, success: x }] = await v({ data: l, to: p });
          if (!x) throw new u.VQ({ data: E });
          return "0x" === E ? { data: void 0 } : { data: E };
        }
        function _(e) {
          if (e && 0 !== e.length)
            return e.reduce((e, { slot: t, value: n }) => {
              if (66 !== t.length)
                throw new l.W_({ size: t.length, targetSize: 66, type: "hex" });
              if (66 !== n.length)
                throw new l.W_({ size: n.length, targetSize: 66, type: "hex" });
              return (e[t] = n), e;
            }, {});
        }
      },
      27841: function (e, t, n) {
        "use strict";
        let r;
        n.d(t, {
          v: function () {
            return ng;
          },
        });
        var i = n(46176);
        let a = 256;
        var o = n(20033),
          s = n(75910),
          u = n(24279),
          l = n(28103),
          c = n(8229),
          d = n(88769),
          f = n(21829),
          p = n(49964),
          h = n(24981);
        function m(e, t) {
          if (!(e instanceof p.G)) return !1;
          let n = e.walk((e) => e instanceof h.Lu);
          return (
            n instanceof h.Lu &&
            (!!(
              n.data?.errorName === "ResolverNotFound" ||
              n.data?.errorName === "ResolverWildcardNotSupported" ||
              n.data?.errorName === "ResolverNotContract" ||
              n.data?.errorName === "ResolverError" ||
              n.data?.errorName === "HttpError" ||
              n.reason?.includes(
                "Wildcard on non-extended resolvers is not supported"
              )
            ) ||
              ("reverse" === t && n.reason === f.$[50]))
          );
        }
        var y = n(79017),
          g = n(5644),
          b = n(74912),
          v = n(96942);
        function w(e) {
          if (66 !== e.length || 0 !== e.indexOf("[") || 65 !== e.indexOf("]"))
            return null;
          let t = `0x${e.slice(1, 65)}`;
          return (0, v.v)(t) ? t : null;
        }
        function E(e) {
          let t = new Uint8Array(32).fill(0);
          if (!e) return (0, d.ci)(t);
          let n = e.split(".");
          for (let e = n.length - 1; e >= 0; e -= 1) {
            let r = w(n[e]),
              i = r ? (0, g.O0)(r) : (0, b.w)((0, g.qX)(n[e]), "bytes");
            t = (0, b.w)((0, y.zo)([t, i]), "bytes");
          }
          return (0, d.ci)(t);
        }
        function x(e) {
          let t = e.replace(/^\.|\.$/gm, "");
          if (0 === t.length) return new Uint8Array(1);
          let n = new Uint8Array((0, g.qX)(t).byteLength + 2),
            r = 0,
            i = t.split(".");
          for (let e = 0; e < i.length; e++) {
            let t = (0, g.qX)(i[e]);
            t.byteLength > 255 &&
              (t = (0, g.qX)(
                `[${(function (e) {
                  let t = new Uint8Array(32).fill(0);
                  return e ? w(e) || (0, b.w)((0, g.qX)(e)) : (0, d.ci)(t);
                })(i[e]).slice(2)}]`
              )),
              (n[r] = t.length),
              n.set(t, r + 1),
              (r += t.length + 1);
          }
          return n.byteLength !== r + 1 ? n.slice(0, r + 1) : n;
        }
        function C(e, t, n) {
          return (r) => e[t.name]?.(r) ?? e[n]?.(r) ?? t(e, r);
        }
        var _ = n(90280),
          T = n(79326);
        function S(
          e,
          {
            abi: t,
            address: n,
            args: r,
            docsPath: i,
            functionName: a,
            sender: o,
          }
        ) {
          let {
              code: s,
              data: u,
              message: l,
              shortMessage: c,
            } = e instanceof h.VQ
              ? e
              : e instanceof p.G
              ? e.walk((e) => "data" in e) || e.walk()
              : {},
            d =
              e instanceof _.wb
                ? new h.Dk({ functionName: a })
                : [3, T.XS.code].includes(s) && (u || l || c)
                ? new h.Lu({
                    abi: t,
                    data: "object" == typeof u ? u.data : u,
                    functionName: a,
                    message: c ?? l,
                  })
                : e;
          return new h.uq(d, {
            abi: t,
            args: r,
            contractAddress: n,
            docsPath: i,
            functionName: a,
            sender: o,
          });
        }
        var P = n(6430);
        async function O(e, t) {
          let { abi: n, address: r, args: i, functionName: a, ...o } = t,
            l = (0, u.R)({ abi: n, args: i, functionName: a });
          try {
            let { data: t } = await C(
              e,
              P.RE,
              "call"
            )({ ...o, data: l, to: r });
            return (0, s.k)({
              abi: n,
              args: i,
              functionName: a,
              data: t || "0x",
            });
          } catch (e) {
            throw S(e, {
              abi: n,
              address: r,
              args: i,
              docsPath: "/docs/contract/readContract",
              functionName: a,
            });
          }
        }
        async function I(
          e,
          {
            blockNumber: t,
            blockTag: n,
            coinType: r,
            name: i,
            gatewayUrls: a,
            strict: f,
            universalResolverAddress: p,
          }
        ) {
          let h = p;
          if (!h) {
            if (!e.chain)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            h = (0, l.L)({
              blockNumber: t,
              chain: e.chain,
              contract: "ensUniversalResolver",
            });
          }
          try {
            let l = (0, u.R)({
                abi: o.X$,
                functionName: "addr",
                ...(null != r ? { args: [E(i), BigInt(r)] } : { args: [E(i)] }),
              }),
              f = {
                address: h,
                abi: o.k3,
                functionName: "resolve",
                args: [(0, d.NC)(x(i)), l],
                blockNumber: t,
                blockTag: n,
              },
              p = C(e, O, "readContract"),
              m = a ? await p({ ...f, args: [...f.args, a] }) : await p(f);
            if ("0x" === m[0]) return null;
            let y = (0, s.k)({
              abi: o.X$,
              args: null != r ? [E(i), BigInt(r)] : void 0,
              functionName: "addr",
              data: m[0],
            });
            if ("0x" === y || "0x00" === (0, c.f)(y)) return null;
            return y;
          } catch (e) {
            if (f) throw e;
            if (m(e, "resolve")) return null;
            throw e;
          }
        }
        class A extends p.G {
          constructor({ data: e }) {
            super(
              "Unable to extract image from metadata. The metadata may be malformed or invalid.",
              {
                metaMessages: [
                  "- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.",
                  "",
                  `Provided data: ${JSON.stringify(e)}`,
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "EnsAvatarInvalidMetadataError",
              });
          }
        }
        class k extends p.G {
          constructor({ reason: e }) {
            super(`ENS NFT avatar URI is invalid. ${e}`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "EnsAvatarInvalidNftUriError",
              });
          }
        }
        class j extends p.G {
          constructor({ uri: e }) {
            super(
              `Unable to resolve ENS avatar URI "${e}". The URI may be malformed, invalid, or does not respond with a valid image.`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "EnsAvatarUriResolutionError",
              });
          }
        }
        class B extends p.G {
          constructor({ namespace: e }) {
            super(
              `ENS NFT avatar namespace "${e}" is not supported. Must be "erc721" or "erc1155".`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "EnsAvatarUnsupportedNamespaceError",
              });
          }
        }
        let M =
            /(?<protocol>https?:\/\/[^\/]*|ipfs:\/|ipns:\/|ar:\/)?(?<root>\/)?(?<subpath>ipfs\/|ipns\/)?(?<target>[\w\-.]+)(?<subtarget>\/.*)?/,
          N =
            /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\/(?<target>[\w\-.]+))?(?<subtarget>\/.*)?$/,
          D = /^data:([a-zA-Z\-/+]*);base64,([^"].*)/,
          R = /^data:([a-zA-Z\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/;
        async function F(e) {
          try {
            let t = await fetch(e, { method: "HEAD" });
            if (200 === t.status) {
              let e = t.headers.get("content-type");
              return e?.startsWith("image/");
            }
            return !1;
          } catch (t) {
            if (
              ("object" == typeof t && void 0 !== t.response) ||
              !globalThis.hasOwnProperty("Image")
            )
              return !1;
            return new Promise((t) => {
              let n = new Image();
              (n.onload = () => {
                t(!0);
              }),
                (n.onerror = () => {
                  t(!1);
                }),
                (n.src = e);
            });
          }
        }
        function L(e, t) {
          return e ? (e.endsWith("/") ? e.slice(0, -1) : e) : t;
        }
        function U({ uri: e, gatewayUrls: t }) {
          let n = D.test(e);
          if (n) return { uri: e, isOnChain: !0, isEncoded: n };
          let r = L(t?.ipfs, "https://ipfs.io"),
            i = L(t?.arweave, "https://arweave.net"),
            a = e.match(M),
            {
              protocol: o,
              subpath: s,
              target: u,
              subtarget: l = "",
            } = a?.groups || {},
            c = "ipns:/" === o || "ipns/" === s,
            d = "ipfs:/" === o || "ipfs/" === s || N.test(e);
          if (e.startsWith("http") && !c && !d) {
            let n = e;
            return (
              t?.arweave &&
                (n = e.replace(/https:\/\/arweave.net/g, t?.arweave)),
              { uri: n, isOnChain: !1, isEncoded: !1 }
            );
          }
          if ((c || d) && u)
            return {
              uri: `${r}/${c ? "ipns" : "ipfs"}/${u}${l}`,
              isOnChain: !1,
              isEncoded: !1,
            };
          if ("ar:/" === o && u)
            return { uri: `${i}/${u}${l || ""}`, isOnChain: !1, isEncoded: !1 };
          let f = e.replace(R, "");
          if (
            (f.startsWith("<svg") &&
              (f = `data:image/svg+xml;base64,${btoa(f)}`),
            f.startsWith("data:") || f.startsWith("{"))
          )
            return { uri: f, isOnChain: !0, isEncoded: !1 };
          throw new j({ uri: e });
        }
        function $(e) {
          if (
            "object" != typeof e ||
            (!("image" in e) && !("image_url" in e) && !("image_data" in e))
          )
            throw new A({ data: e });
          return e.image || e.image_url || e.image_data;
        }
        async function q({ gatewayUrls: e, uri: t }) {
          try {
            let n = await fetch(t).then((e) => e.json()),
              r = await H({ gatewayUrls: e, uri: $(n) });
            return r;
          } catch {
            throw new j({ uri: t });
          }
        }
        async function H({ gatewayUrls: e, uri: t }) {
          let { uri: n, isOnChain: r } = U({ uri: t, gatewayUrls: e });
          if (r) return n;
          let i = await F(n);
          if (i) return n;
          throw new j({ uri: t });
        }
        async function z(e, { nft: t }) {
          if ("erc721" === t.namespace)
            return O(e, {
              address: t.contractAddress,
              abi: [
                {
                  name: "tokenURI",
                  type: "function",
                  stateMutability: "view",
                  inputs: [{ name: "tokenId", type: "uint256" }],
                  outputs: [{ name: "", type: "string" }],
                },
              ],
              functionName: "tokenURI",
              args: [BigInt(t.tokenID)],
            });
          if ("erc1155" === t.namespace)
            return O(e, {
              address: t.contractAddress,
              abi: [
                {
                  name: "uri",
                  type: "function",
                  stateMutability: "view",
                  inputs: [{ name: "_id", type: "uint256" }],
                  outputs: [{ name: "", type: "string" }],
                },
              ],
              functionName: "uri",
              args: [BigInt(t.tokenID)],
            });
          throw new B({ namespace: t.namespace });
        }
        async function G(e, { gatewayUrls: t, record: n }) {
          return /eip155:/i.test(n)
            ? W(e, { gatewayUrls: t, record: n })
            : H({ uri: n, gatewayUrls: t });
        }
        async function W(e, { gatewayUrls: t, record: n }) {
          let r = (function (e) {
              let t = e;
              t.startsWith("did:nft:") &&
                (t = t.replace("did:nft:", "").replace(/_/g, "/"));
              let [n, r, i] = t.split("/"),
                [a, o] = n.split(":"),
                [s, u] = r.split(":");
              if (!a || "eip155" !== a.toLowerCase())
                throw new k({ reason: "Only EIP-155 supported" });
              if (!o) throw new k({ reason: "Chain ID not found" });
              if (!u) throw new k({ reason: "Contract address not found" });
              if (!i) throw new k({ reason: "Token ID not found" });
              if (!s) throw new k({ reason: "ERC namespace not found" });
              return {
                chainID: parseInt(o),
                namespace: s.toLowerCase(),
                contractAddress: u,
                tokenID: i,
              };
            })(n),
            i = await z(e, { nft: r }),
            {
              uri: a,
              isOnChain: o,
              isEncoded: s,
            } = U({ uri: i, gatewayUrls: t });
          if (
            o &&
            (a.includes("data:application/json;base64,") || a.startsWith("{"))
          ) {
            let e = s
                ? atob(a.replace("data:application/json;base64,", ""))
                : a,
              n = JSON.parse(e);
            return H({ uri: $(n), gatewayUrls: t });
          }
          let u = r.tokenID;
          return (
            "erc1155" === r.namespace &&
              (u = u.replace("0x", "").padStart(64, "0")),
            q({ gatewayUrls: t, uri: a.replace(/(?:0x)?{id}/, u) })
          );
        }
        async function V(
          e,
          {
            blockNumber: t,
            blockTag: n,
            name: r,
            key: i,
            gatewayUrls: a,
            strict: c,
            universalResolverAddress: f,
          }
        ) {
          let p = f;
          if (!p) {
            if (!e.chain)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            p = (0, l.L)({
              blockNumber: t,
              chain: e.chain,
              contract: "ensUniversalResolver",
            });
          }
          try {
            let l = {
                address: p,
                abi: o.k3,
                functionName: "resolve",
                args: [
                  (0, d.NC)(x(r)),
                  (0, u.R)({
                    abi: o.nZ,
                    functionName: "text",
                    args: [E(r), i],
                  }),
                ],
                blockNumber: t,
                blockTag: n,
              },
              c = C(e, O, "readContract"),
              f = a ? await c({ ...l, args: [...l.args, a] }) : await c(l);
            if ("0x" === f[0]) return null;
            let h = (0, s.k)({ abi: o.nZ, functionName: "text", data: f[0] });
            return "" === h ? null : h;
          } catch (e) {
            if (c) throw e;
            if (m(e, "resolve")) return null;
            throw e;
          }
        }
        async function K(
          e,
          {
            blockNumber: t,
            blockTag: n,
            assetGatewayUrls: r,
            name: i,
            gatewayUrls: a,
            strict: o,
            universalResolverAddress: s,
          }
        ) {
          let u = await C(
            e,
            V,
            "getEnsText"
          )({
            blockNumber: t,
            blockTag: n,
            key: "avatar",
            name: i,
            universalResolverAddress: s,
            gatewayUrls: a,
            strict: o,
          });
          if (!u) return null;
          try {
            return await G(e, { record: u, gatewayUrls: r });
          } catch {
            return null;
          }
        }
        async function Z(
          e,
          {
            address: t,
            blockNumber: n,
            blockTag: r,
            gatewayUrls: i,
            strict: a,
            universalResolverAddress: s,
          }
        ) {
          let u = s;
          if (!u) {
            if (!e.chain)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            u = (0, l.L)({
              blockNumber: n,
              chain: e.chain,
              contract: "ensUniversalResolver",
            });
          }
          let c = `${t.toLowerCase().substring(2)}.addr.reverse`;
          try {
            let a = {
                address: u,
                abi: o.du,
                functionName: "reverse",
                args: [(0, d.NC)(x(c))],
                blockNumber: n,
                blockTag: r,
              },
              s = C(e, O, "readContract"),
              [l, f] = i ? await s({ ...a, args: [...a.args, i] }) : await s(a);
            if (t.toLowerCase() !== f.toLowerCase()) return null;
            return l;
          } catch (e) {
            if (a) throw e;
            if (m(e, "reverse")) return null;
            throw e;
          }
        }
        async function J(
          e,
          { blockNumber: t, blockTag: n, name: r, universalResolverAddress: i }
        ) {
          let a = i;
          if (!a) {
            if (!e.chain)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            a = (0, l.L)({
              blockNumber: t,
              chain: e.chain,
              contract: "ensUniversalResolver",
            });
          }
          let [o] = await C(
            e,
            O,
            "readContract"
          )({
            address: a,
            abi: [
              {
                inputs: [{ type: "bytes" }],
                name: "findResolver",
                outputs: [{ type: "address" }, { type: "bytes32" }],
                stateMutability: "view",
                type: "function",
              },
            ],
            functionName: "findResolver",
            args: [(0, d.NC)(x(r))],
            blockNumber: t,
            blockTag: n,
          });
          return o;
        }
        function Y(e, { method: t }) {
          let n = {};
          return (
            "fallback" === e.transport.type &&
              e.transport.onResponse?.(
                ({ method: e, response: r, status: i, transport: a }) => {
                  "success" === i && t === e && (n[r] = a.request);
                }
              ),
            (t) => n[t] || e.request
          );
        }
        async function X(e) {
          let t = Y(e, { method: "eth_newBlockFilter" }),
            n = await e.request({ method: "eth_newBlockFilter" });
          return { id: n, request: t(n), type: "block" };
        }
        class Q extends p.G {
          constructor(e) {
            super(`Filter type "${e}" is not supported.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "FilterTypeNotSupportedError",
              });
          }
        }
        var ee = n(22297),
          et = n(90078),
          en = n(5246),
          er = n(76029);
        let ei = "/docs/contract/encodeEventTopics";
        function ea(e) {
          let { abi: t, eventName: n, args: r } = e,
            i = t[0];
          if (n) {
            let e = (0, er.mE)({ abi: t, name: n });
            if (!e) throw new _.mv(n, { docsPath: ei });
            i = e;
          }
          if ("event" !== i.type) throw new _.mv(void 0, { docsPath: ei });
          let a = (0, en.t)(i),
            o = (0, ee.n)(a),
            s = [];
          if (r && "inputs" in i) {
            let e = i.inputs?.filter((e) => "indexed" in e && e.indexed),
              t = Array.isArray(r)
                ? r
                : Object.values(r).length > 0
                ? e?.map((e) => r[e.name]) ?? []
                : [];
            t.length > 0 &&
              (s =
                e?.map((e, n) =>
                  Array.isArray(t[n])
                    ? t[n].map((r, i) => eo({ param: e, value: t[n][i] }))
                    : t[n]
                    ? eo({ param: e, value: t[n] })
                    : null
                ) ?? []);
          }
          return [o, ...s];
        }
        function eo({ param: e, value: t }) {
          if ("string" === e.type || "bytes" === e.type)
            return (0, b.w)((0, g.O0)(t));
          if ("tuple" === e.type || e.type.match(/^(.*)\[(\d+)?\]$/))
            throw new Q(e.type);
          return (0, et.E)([e], [t]);
        }
        async function es(e, t) {
          let {
              address: n,
              abi: r,
              args: i,
              eventName: a,
              fromBlock: o,
              strict: s,
              toBlock: u,
            } = t,
            l = Y(e, { method: "eth_newFilter" }),
            c = a ? ea({ abi: r, args: i, eventName: a }) : void 0,
            f = await e.request({
              method: "eth_newFilter",
              params: [
                {
                  address: n,
                  fromBlock: "bigint" == typeof o ? (0, d.eC)(o) : o,
                  toBlock: "bigint" == typeof u ? (0, d.eC)(u) : u,
                  topics: c,
                },
              ],
            });
          return {
            abi: r,
            args: i,
            eventName: a,
            id: f,
            request: l(f),
            strict: !!s,
            type: "event",
          };
        }
        async function eu(
          e,
          {
            address: t,
            args: n,
            event: r,
            events: i,
            fromBlock: a,
            strict: o,
            toBlock: s,
          } = {}
        ) {
          let u = i ?? (r ? [r] : void 0),
            l = Y(e, { method: "eth_newFilter" }),
            c = [];
          u &&
            ((c = [
              u.flatMap((e) => ea({ abi: [e], eventName: e.name, args: n })),
            ]),
            r && (c = c[0]));
          let f = await e.request({
            method: "eth_newFilter",
            params: [
              {
                address: t,
                fromBlock: "bigint" == typeof a ? (0, d.eC)(a) : a,
                toBlock: "bigint" == typeof s ? (0, d.eC)(s) : s,
                ...(c.length ? { topics: c } : {}),
              },
            ],
          });
          return {
            abi: u,
            args: n,
            eventName: r ? r.name : void 0,
            fromBlock: a,
            id: f,
            request: l(f),
            strict: !!o,
            toBlock: s,
            type: "event",
          };
        }
        async function el(e) {
          let t = Y(e, { method: "eth_newPendingTransactionFilter" }),
            n = await e.request({ method: "eth_newPendingTransactionFilter" });
          return { id: n, request: t(n), type: "transaction" };
        }
        var ec = n(27497),
          ed = n(97393),
          ef = n(70392);
        class ep extends p.G {
          constructor(
            e,
            {
              account: t,
              docsPath: n,
              chain: r,
              data: i,
              gas: a,
              gasPrice: o,
              maxFeePerGas: s,
              maxPriorityFeePerGas: u,
              nonce: l,
              to: c,
              value: d,
            }
          ) {
            let f = (0, ef.xr)({
              from: t?.address,
              to: c,
              value:
                void 0 !== d &&
                `${(0, ec.d)(d)} ${r?.nativeCurrency?.symbol || "ETH"}`,
              data: i,
              gas: a,
              gasPrice: void 0 !== o && `${(0, ed.o)(o)} gwei`,
              maxFeePerGas: void 0 !== s && `${(0, ed.o)(s)} gwei`,
              maxPriorityFeePerGas: void 0 !== u && `${(0, ed.o)(u)} gwei`,
              nonce: l,
            });
            super(e.shortMessage, {
              cause: e,
              docsPath: n,
              metaMessages: [
                ...(e.metaMessages ? [...e.metaMessages, " "] : []),
                "Estimate Gas Arguments:",
                f,
              ].filter(Boolean),
            }),
              Object.defineProperty(this, "cause", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "EstimateGasExecutionError",
              }),
              (this.cause = e);
          }
        }
        var eh = n(25590),
          em = n(38624),
          ey = n(19804),
          eg = n(76008),
          eb = n(52829);
        class ev extends p.G {
          constructor() {
            super("`baseFeeMultiplier` must be greater than 1."),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "BaseFeeScalarError",
              });
          }
        }
        class ew extends p.G {
          constructor() {
            super("Chain does not support EIP-1559 fees."),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Eip1559FeesNotSupportedError",
              });
          }
        }
        class eE extends p.G {
          constructor({ maxPriorityFeePerGas: e }) {
            super(
              `\`maxFeePerGas\` cannot be less than the \`maxPriorityFeePerGas\` (${(0,
              ed.o)(e)} gwei).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "MaxFeePerGasTooLowError",
              });
          }
        }
        var ex = n(5547);
        class eC extends p.G {
          constructor({ blockHash: e, blockNumber: t }) {
            let n = "Block";
            e && (n = `Block at hash "${e}"`),
              t && (n = `Block at number "${t}"`),
              super(`${n} could not be found.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "BlockNotFoundError",
              });
          }
        }
        var e_ = n(15536);
        async function eT(
          e,
          {
            blockHash: t,
            blockNumber: n,
            blockTag: r,
            includeTransactions: i,
          } = {}
        ) {
          let a = i ?? !1,
            o = void 0 !== n ? (0, d.eC)(n) : void 0,
            s = null;
          if (
            !(s = t
              ? await e.request({
                  method: "eth_getBlockByHash",
                  params: [t, a],
                })
              : await e.request({
                  method: "eth_getBlockByNumber",
                  params: [o || (r ?? "latest"), a],
                }))
          )
            throw new eC({ blockHash: t, blockNumber: n });
          let u = e.chain?.formatters?.block?.format || e_.Z;
          return u(s);
        }
        async function eS(e) {
          let t = await e.request({ method: "eth_gasPrice" });
          return BigInt(t);
        }
        async function eP(e, t) {
          return eO(e, t);
        }
        async function eO(e, t) {
          let { block: n, chain: r = e.chain, request: i } = t || {};
          if ("function" == typeof r?.fees?.defaultPriorityFee) {
            let t = n || (await C(e, eT, "getBlock")({}));
            return r.fees.defaultPriorityFee({
              block: t,
              client: e,
              request: i,
            });
          }
          if (void 0 !== r?.fees?.defaultPriorityFee)
            return r?.fees?.defaultPriorityFee;
          try {
            let t = await e.request({ method: "eth_maxPriorityFeePerGas" });
            return (0, ex.y_)(t);
          } catch {
            let [t, r] = await Promise.all([
              n ? Promise.resolve(n) : C(e, eT, "getBlock")({}),
              C(e, eS, "getGasPrice")({}),
            ]);
            if ("bigint" != typeof t.baseFeePerGas) throw new ew();
            let i = r - t.baseFeePerGas;
            if (i < 0n) return 0n;
            return i;
          }
        }
        async function eI(e, t) {
          return eA(e, t);
        }
        async function eA(e, t) {
          let {
              block: n,
              chain: r = e.chain,
              request: i,
              type: a = "eip1559",
            } = t || {},
            o = await (async () =>
              "function" == typeof r?.fees?.baseFeeMultiplier
                ? r.fees.baseFeeMultiplier({ block: n, client: e, request: i })
                : r?.fees?.baseFeeMultiplier ?? 1.2)();
          if (o < 1) throw new ev();
          let s = o.toString().split(".")[1]?.length ?? 0,
            u = 10 ** s,
            l = (e) => (e * BigInt(Math.ceil(o * u))) / BigInt(u),
            c = n || (await C(e, eT, "getBlock")({}));
          if ("function" == typeof r?.fees?.estimateFeesPerGas) {
            let t = await r.fees.estimateFeesPerGas({
              block: n,
              client: e,
              multiply: l,
              request: i,
              type: a,
            });
            if (null !== t) return t;
          }
          if ("eip1559" === a) {
            if ("bigint" != typeof c.baseFeePerGas) throw new ew();
            let t =
                "bigint" == typeof i?.maxPriorityFeePerGas
                  ? i.maxPriorityFeePerGas
                  : await eO(e, { block: c, chain: r, request: i }),
              n = l(c.baseFeePerGas),
              a = i?.maxFeePerGas ?? n + t;
            return { maxFeePerGas: a, maxPriorityFeePerGas: t };
          }
          let d = i?.gasPrice ?? l(await C(e, eS, "getGasPrice")({}));
          return { gasPrice: d };
        }
        async function ek(
          e,
          { address: t, blockTag: n = "latest", blockNumber: r }
        ) {
          let i = await e.request({
            method: "eth_getTransactionCount",
            params: [t, r ? (0, d.eC)(r) : n],
          });
          return (0, ex.ly)(i);
        }
        var ej = n(38670),
          eB = n(51379),
          eM = n(27035),
          eN = n(59337),
          eD = n(11205);
        async function eR(e) {
          let t = await e.request({ method: "eth_chainId" });
          return (0, ex.ly)(t);
        }
        let eF = [
          "blobVersionedHashes",
          "chainId",
          "fees",
          "gas",
          "nonce",
          "type",
        ];
        async function eL(e, t) {
          let n;
          let {
              account: r = e.account,
              blobs: a,
              chain: o,
              chainId: s,
              gas: u,
              kzg: l,
              nonce: c,
              parameters: d = eF,
              type: f,
            } = t,
            p = r ? (0, i.T)(r) : void 0,
            h = { ...t, ...(p ? { from: p?.address } : {}) };
          async function m() {
            return (
              n || (n = await C(e, eT, "getBlock")({ blockTag: "latest" }))
            );
          }
          if (
            (d.includes("blobVersionedHashes") || d.includes("sidecars")) &&
            a &&
            l
          ) {
            let e = (0, ej.P)({ blobs: a, kzg: l });
            if (d.includes("blobVersionedHashes")) {
              let t = (0, eM.C)({ commitments: e, to: "hex" });
              h.blobVersionedHashes = t;
            }
            if (d.includes("sidecars")) {
              let t = (0, eB.y)({ blobs: a, commitments: e, kzg: l }),
                n = (0, eN.j)({
                  blobs: a,
                  commitments: e,
                  proofs: t,
                  to: "hex",
                });
              h.sidecars = n;
            }
          }
          if (
            (d.includes("chainId") &&
              (o
                ? (h.chainId = o.id)
                : void 0 !== s
                ? (h.chainId = s)
                : (h.chainId = await C(e, eR, "getChainId")({}))),
            d.includes("nonce") &&
              void 0 === c &&
              p &&
              (h.nonce = await C(
                e,
                ek,
                "getTransactionCount"
              )({ address: p.address, blockTag: "pending" })),
            (d.includes("fees") || d.includes("type")) && void 0 === f)
          )
            try {
              h.type = (0, eD.l)(h);
            } catch {
              let e = await m();
              h.type =
                "bigint" == typeof e?.baseFeePerGas ? "eip1559" : "legacy";
            }
          if (d.includes("fees")) {
            if ("legacy" !== h.type && "eip2930" !== h.type) {
              if (
                void 0 === h.maxFeePerGas ||
                void 0 === h.maxPriorityFeePerGas
              ) {
                let n = await m(),
                  { maxFeePerGas: r, maxPriorityFeePerGas: i } = await eA(e, {
                    block: n,
                    chain: o,
                    request: h,
                  });
                if (
                  void 0 === t.maxPriorityFeePerGas &&
                  t.maxFeePerGas &&
                  t.maxFeePerGas < i
                )
                  throw new eE({ maxPriorityFeePerGas: i });
                (h.maxPriorityFeePerGas = i), (h.maxFeePerGas = r);
              }
            } else {
              if (
                void 0 !== t.maxFeePerGas ||
                void 0 !== t.maxPriorityFeePerGas
              )
                throw new ew();
              let n = await m(),
                { gasPrice: r } = await eA(e, {
                  block: n,
                  chain: o,
                  request: h,
                  type: "legacy",
                });
              h.gasPrice = r;
            }
          }
          return (
            d.includes("gas") &&
              void 0 === u &&
              (h.gas = await C(
                e,
                eU,
                "estimateGas"
              )({
                ...h,
                account: p ? { address: p.address, type: "json-rpc" } : void 0,
              })),
            (0, eb.F)(h),
            delete h.parameters,
            h
          );
        }
        async function eU(e, t) {
          let n = t.account ?? e.account,
            r = n ? (0, i.T)(n) : void 0;
          try {
            let {
                accessList: n,
                blobs: i,
                blobVersionedHashes: a,
                blockNumber: o,
                blockTag: s,
                data: u,
                gas: l,
                gasPrice: c,
                maxFeePerBlobGas: f,
                maxFeePerGas: p,
                maxPriorityFeePerGas: h,
                nonce: m,
                to: y,
                value: g,
                ...b
              } = await eL(e, {
                ...t,
                parameters:
                  r?.type === "local" ? void 0 : ["blobVersionedHashes"],
              }),
              v = o ? (0, d.eC)(o) : void 0,
              w = v || s;
            (0, eb.F)(t);
            let E = e.chain?.formatters?.transactionRequest?.format,
              x = E || eg.tG,
              C = x({
                ...(0, ey.K)(b, { format: E }),
                from: r?.address,
                accessList: n,
                blobs: i,
                blobVersionedHashes: a,
                data: u,
                gas: l,
                gasPrice: c,
                maxFeePerBlobGas: f,
                maxFeePerGas: p,
                maxPriorityFeePerGas: h,
                nonce: m,
                to: y,
                value: g,
              }),
              _ = await e.request({
                method: "eth_estimateGas",
                params: w ? [C, w] : [C],
              });
            return BigInt(_);
          } catch (n) {
            throw (function (e, { docsPath: t, ...n }) {
              let r = (() => {
                let t = (0, em.k)(e, n);
                return t instanceof eh.cj ? e : t;
              })();
              return new ep(r, { docsPath: t, ...n });
            })(n, { ...t, account: r, chain: e.chain });
          }
        }
        async function e$(e, t) {
          let { abi: n, address: r, args: a, functionName: o, ...s } = t,
            l = (0, u.R)({ abi: n, args: a, functionName: o });
          try {
            let t = await C(e, eU, "estimateGas")({ data: l, to: r, ...s });
            return t;
          } catch (t) {
            let e = s.account ? (0, i.T)(s.account) : void 0;
            throw S(t, {
              abi: n,
              address: r,
              args: a,
              docsPath: "/docs/contract/estimateContractGas",
              functionName: o,
              sender: e?.address,
            });
          }
        }
        async function eq(
          e,
          { address: t, blockNumber: n, blockTag: r = "latest" }
        ) {
          let i = n ? (0, d.eC)(n) : void 0,
            a = await e.request({
              method: "eth_getBalance",
              params: [t, i || r],
            });
          return BigInt(a);
        }
        async function eH(e) {
          let t = await e.request({ method: "eth_blobBaseFee" });
          return BigInt(t);
        }
        let ez = new Map(),
          eG = new Map();
        async function eW(e, { cacheKey: t, cacheTime: n = 1 / 0 }) {
          let r = (function (e) {
              let t = (e, t) => ({
                  clear: () => t.delete(e),
                  get: () => t.get(e),
                  set: (n) => t.set(e, n),
                }),
                n = t(e, ez),
                r = t(e, eG);
              return {
                clear: () => {
                  n.clear(), r.clear();
                },
                promise: n,
                response: r,
              };
            })(t),
            i = r.response.get();
          if (i && n > 0) {
            let e = new Date().getTime() - i.created.getTime();
            if (e < n) return i.data;
          }
          let a = r.promise.get();
          a || ((a = e()), r.promise.set(a));
          try {
            let e = await a;
            return r.response.set({ created: new Date(), data: e }), e;
          } finally {
            r.promise.clear();
          }
        }
        let eV = (e) => `blockNumber.${e}`;
        async function eK(e, { cacheTime: t = e.cacheTime } = {}) {
          let n = await eW(() => e.request({ method: "eth_blockNumber" }), {
            cacheKey: eV(e.uid),
            cacheTime: t,
          });
          return BigInt(n);
        }
        async function eZ(
          e,
          { blockHash: t, blockNumber: n, blockTag: r = "latest" } = {}
        ) {
          let i;
          let a = void 0 !== n ? (0, d.eC)(n) : void 0;
          return (
            (i = t
              ? await e.request({
                  method: "eth_getBlockTransactionCountByHash",
                  params: [t],
                })
              : await e.request({
                  method: "eth_getBlockTransactionCountByNumber",
                  params: [a || r],
                })),
            (0, ex.ly)(i)
          );
        }
        async function eJ(
          e,
          { address: t, blockNumber: n, blockTag: r = "latest" }
        ) {
          let i = void 0 !== n ? (0, d.eC)(n) : void 0,
            a = await e.request({ method: "eth_getCode", params: [t, i || r] });
          if ("0x" !== a) return a;
        }
        var eY = n(98244),
          eX = n(31303),
          eQ = n(42347);
        let e0 = "/docs/contract/decodeEventLog";
        function e1(e) {
          let { abi: t, data: n, strict: r, topics: i } = e,
            a = r ?? !0,
            [o, ...s] = i;
          if (!o) throw new _.FM({ docsPath: e0 });
          let u = t.find(
            (e) => "event" === e.type && o === (0, ee.n)((0, en.t)(e))
          );
          if (!(u && "name" in u) || "event" !== u.type)
            throw new _.lC(o, { docsPath: e0 });
          let { name: l, inputs: c } = u,
            d = c?.some((e) => !("name" in e && e.name)),
            f = d ? [] : {},
            p = c.filter((e) => "indexed" in e && e.indexed);
          for (let e = 0; e < p.length; e++) {
            let t = p[e],
              n = s[e];
            if (!n) throw new _.Gy({ abiItem: u, param: t });
            f[d ? e : t.name || e] = (function ({ param: e, value: t }) {
              if (
                "string" === e.type ||
                "bytes" === e.type ||
                "tuple" === e.type ||
                e.type.match(/^(.*)\[(\d+)?\]$/)
              )
                return t;
              let n = (0, eQ.r)([e], t) || [];
              return n[0];
            })({ param: t, value: n });
          }
          let h = c.filter((e) => !("indexed" in e && e.indexed));
          if (h.length > 0) {
            if (n && "0x" !== n)
              try {
                let e = (0, eQ.r)(h, n);
                if (e) {
                  if (d) f = [...f, ...e];
                  else for (let t = 0; t < h.length; t++) f[h[t].name] = e[t];
                }
              } catch (e) {
                if (a) {
                  if (e instanceof _.xB || e instanceof eX.lQ)
                    throw new _.SM({
                      abiItem: u,
                      data: n,
                      params: h,
                      size: (0, eY.d)(n),
                    });
                  throw e;
                }
              }
            else if (a)
              throw new _.SM({ abiItem: u, data: "0x", params: h, size: 0 });
          }
          return {
            eventName: l,
            args: Object.values(f).length > 0 ? f : void 0,
          };
        }
        function e2({ abi: e, eventName: t, logs: n, strict: r = !0 }) {
          return n
            .map((n) => {
              try {
                let i = e1({ ...n, abi: e, strict: r });
                if (t && !t.includes(i.eventName)) return null;
                return { ...i, ...n };
              } catch (i) {
                let e, t;
                if (i instanceof _.lC) return null;
                if (i instanceof _.SM || i instanceof _.Gy) {
                  if (r) return null;
                  (e = i.abiItem.name),
                    (t = i.abiItem.inputs?.some(
                      (e) => !("name" in e && e.name)
                    ));
                }
                return { ...n, args: t ? [] : {}, eventName: e };
              }
            })
            .filter(Boolean);
        }
        var e6 = n(76606);
        async function e3(
          e,
          {
            address: t,
            blockHash: n,
            fromBlock: r,
            toBlock: i,
            event: a,
            events: o,
            args: s,
            strict: u,
          } = {}
        ) {
          let l;
          let c = u ?? !1,
            f = o ?? (a ? [a] : void 0),
            p = [];
          f &&
            ((p = [
              f.flatMap((e) => ea({ abi: [e], eventName: e.name, args: s })),
            ]),
            a && (p = p[0])),
            (l = n
              ? await e.request({
                  method: "eth_getLogs",
                  params: [{ address: t, topics: p, blockHash: n }],
                })
              : await e.request({
                  method: "eth_getLogs",
                  params: [
                    {
                      address: t,
                      topics: p,
                      fromBlock: "bigint" == typeof r ? (0, d.eC)(r) : r,
                      toBlock: "bigint" == typeof i ? (0, d.eC)(i) : i,
                    },
                  ],
                }));
          let h = l.map((e) => (0, e6.U)(e));
          return f ? e2({ abi: f, logs: h, strict: c }) : h;
        }
        async function e5(e, t) {
          let {
              abi: n,
              address: r,
              args: i,
              blockHash: a,
              eventName: o,
              fromBlock: s,
              toBlock: u,
              strict: l,
            } = t,
            c = o ? (0, er.mE)({ abi: n, name: o }) : void 0,
            d = c ? void 0 : n.filter((e) => "event" === e.type);
          return C(
            e,
            e3,
            "getLogs"
          )({
            address: r,
            args: i,
            blockHash: a,
            event: c,
            events: d,
            fromBlock: s,
            toBlock: u,
            strict: l,
          });
        }
        async function e4(
          e,
          {
            blockCount: t,
            blockNumber: n,
            blockTag: r = "latest",
            rewardPercentiles: i,
          }
        ) {
          let a = n ? (0, d.eC)(n) : void 0,
            o = await e.request({
              method: "eth_feeHistory",
              params: [(0, d.eC)(t), a || r, i],
            });
          return {
            baseFeePerGas: o.baseFeePerGas.map((e) => BigInt(e)),
            gasUsedRatio: o.gasUsedRatio,
            oldestBlock: BigInt(o.oldestBlock),
            reward: o.reward?.map((e) => e.map((e) => BigInt(e))),
          };
        }
        async function e8(e, { filter: t }) {
          let n = "strict" in t && t.strict,
            r = await t.request({
              method: "eth_getFilterChanges",
              params: [t.id],
            });
          if ("string" == typeof r[0]) return r;
          let i = r.map((e) => (0, e6.U)(e));
          return "abi" in t && t.abi
            ? e2({ abi: t.abi, logs: i, strict: n })
            : i;
        }
        async function e7(e, { filter: t }) {
          let n = t.strict ?? !1,
            r = await t.request({
              method: "eth_getFilterLogs",
              params: [t.id],
            }),
            i = r.map((e) => (0, e6.U)(e));
          return t.abi ? e2({ abi: t.abi, logs: i, strict: n }) : i;
        }
        async function e9(
          e,
          { address: t, blockNumber: n, blockTag: r, storageKeys: i }
        ) {
          let a = void 0 !== n ? (0, d.eC)(n) : void 0,
            o = await e.request({
              method: "eth_getProof",
              params: [t, i, a || (r ?? "latest")],
            });
          return {
            ...o,
            balance: o.balance ? BigInt(o.balance) : void 0,
            nonce: o.nonce ? (0, ex.ly)(o.nonce) : void 0,
            storageProof: o.storageProof
              ? o.storageProof.map((e) => ({ ...e, value: BigInt(e.value) }))
              : void 0,
          };
        }
        async function te(
          e,
          { address: t, blockNumber: n, blockTag: r = "latest", slot: i }
        ) {
          let a = void 0 !== n ? (0, d.eC)(n) : void 0,
            o = await e.request({
              method: "eth_getStorageAt",
              params: [t, i, a || r],
            });
          return o;
        }
        var tt = n(17229);
        async function tn(
          e,
          { blockHash: t, blockNumber: n, blockTag: r, hash: i, index: a }
        ) {
          let o = r || "latest",
            s = void 0 !== n ? (0, d.eC)(n) : void 0,
            u = null;
          if (
            (i
              ? (u = await e.request({
                  method: "eth_getTransactionByHash",
                  params: [i],
                }))
              : t
              ? (u = await e.request({
                  method: "eth_getTransactionByBlockHashAndIndex",
                  params: [t, (0, d.eC)(a)],
                }))
              : (s || o) &&
                (u = await e.request({
                  method: "eth_getTransactionByBlockNumberAndIndex",
                  params: [s || o, (0, d.eC)(a)],
                })),
            !u)
          )
            throw new ef.Bh({
              blockHash: t,
              blockNumber: n,
              blockTag: o,
              hash: i,
              index: a,
            });
          let l = e.chain?.formatters?.transaction?.format || tt.Tr;
          return l(u);
        }
        async function tr(e, { hash: t, transactionReceipt: n }) {
          let [r, i] = await Promise.all([
              C(e, eK, "getBlockNumber")({}),
              t ? C(e, tn, "getBlockNumber")({ hash: t }) : void 0,
            ]),
            a = n?.blockNumber || i?.blockNumber;
          return a ? r - a + 1n : 0n;
        }
        var ti = n(25865);
        async function ta(e, { hash: t }) {
          let n = await e.request({
            method: "eth_getTransactionReceipt",
            params: [t],
          });
          if (!n) throw new ef.Yb({ hash: t });
          let r = e.chain?.formatters?.transactionReceipt?.format || ti.fA;
          return r(n);
        }
        async function to(e, t) {
          let {
              allowFailure: n = !0,
              batchSize: r,
              blockNumber: i,
              blockTag: a,
              multicallAddress: c,
              stateOverride: d,
            } = t,
            f = t.contracts,
            m =
              r ??
              (("object" == typeof e.batch?.multicall &&
                e.batch.multicall.batchSize) ||
                1024),
            y = c;
          if (!y) {
            if (!e.chain)
              throw Error(
                "client chain not configured. multicallAddress is required."
              );
            y = (0, l.L)({
              blockNumber: i,
              chain: e.chain,
              contract: "multicall3",
            });
          }
          let g = [[]],
            b = 0,
            v = 0;
          for (let e = 0; e < f.length; e++) {
            let { abi: t, address: r, args: i, functionName: a } = f[e];
            try {
              let e = (0, u.R)({ abi: t, args: i, functionName: a });
              (v += (e.length - 2) / 2),
                m > 0 &&
                  v > m &&
                  g[b].length > 0 &&
                  (b++, (v = (e.length - 2) / 2), (g[b] = [])),
                (g[b] = [
                  ...g[b],
                  { allowFailure: !0, callData: e, target: r },
                ]);
            } catch (o) {
              let e = S(o, {
                abi: t,
                address: r,
                args: i,
                docsPath: "/docs/contract/multicall",
                functionName: a,
              });
              if (!n) throw e;
              g[b] = [...g[b], { allowFailure: !0, callData: "0x", target: r }];
            }
          }
          let w = await Promise.allSettled(
              g.map((t) =>
                C(
                  e,
                  O,
                  "readContract"
                )({
                  abi: o.F8,
                  address: y,
                  args: [t],
                  blockNumber: i,
                  blockTag: a,
                  functionName: "aggregate3",
                  stateOverride: d,
                })
              )
            ),
            E = [];
          for (let e = 0; e < w.length; e++) {
            let t = w[e];
            if ("rejected" === t.status) {
              if (!n) throw t.reason;
              for (let n = 0; n < g[e].length; n++)
                E.push({ status: "failure", error: t.reason, result: void 0 });
              continue;
            }
            let r = t.value;
            for (let t = 0; t < r.length; t++) {
              let { returnData: i, success: a } = r[t],
                { callData: o } = g[e][t],
                { abi: u, address: l, functionName: c, args: d } = f[E.length];
              try {
                if ("0x" === o) throw new _.wb();
                if (!a) throw new h.VQ({ data: i });
                let e = (0, s.k)({ abi: u, args: d, data: i, functionName: c });
                E.push(n ? { result: e, status: "success" } : e);
              } catch (t) {
                let e = S(t, {
                  abi: u,
                  address: l,
                  args: d,
                  docsPath: "/docs/contract/multicall",
                  functionName: c,
                });
                if (!n) throw e;
                E.push({ error: e, result: void 0, status: "failure" });
              }
            }
          }
          if (E.length !== f.length)
            throw new p.G("multicall results mismatch");
          return E;
        }
        async function ts(e, t) {
          let {
              abi: n,
              address: r,
              args: a,
              dataSuffix: o,
              functionName: l,
              ...c
            } = t,
            d = c.account ? (0, i.T)(c.account) : e.account,
            f = (0, u.R)({ abi: n, args: a, functionName: l });
          try {
            let { data: i } = await C(
                e,
                P.RE,
                "call"
              )({
                batch: !1,
                data: `${f}${o ? o.replace("0x", "") : ""}`,
                to: r,
                ...c,
                account: d,
              }),
              u = (0, s.k)({
                abi: n,
                args: a,
                functionName: l,
                data: i || "0x",
              }),
              p = n.filter((e) => "name" in e && e.name === t.functionName);
            return {
              result: u,
              request: {
                abi: p,
                address: r,
                args: a,
                dataSuffix: o,
                functionName: l,
                ...c,
                account: d,
              },
            };
          } catch (e) {
            throw S(e, {
              abi: n,
              address: r,
              args: a,
              docsPath: "/docs/contract/simulateContract",
              functionName: l,
              sender: d?.address,
            });
          }
        }
        async function tu(e, { filter: t }) {
          return t.request({ method: "eth_uninstallFilter", params: [t.id] });
        }
        let tl = "/docs/contract/encodeDeployData";
        var tc = n(27499);
        function td(e) {
          if (!Number.isSafeInteger(e) || e < 0)
            throw Error(`Wrong positive integer: ${e}`);
        }
        function tf(e, ...t) {
          if (!(e instanceof Uint8Array)) throw Error("Expected Uint8Array");
          if (t.length > 0 && !t.includes(e.length))
            throw Error(
              `Expected Uint8Array of length ${t}, not of length=${e.length}`
            );
        }
        function tp(e, t = !0) {
          if (e.destroyed) throw Error("Hash instance has been destroyed");
          if (t && e.finished)
            throw Error("Hash#digest() has already been called");
        }
        let th =
            "object" == typeof globalThis && "crypto" in globalThis
              ? globalThis.crypto
              : void 0,
          tm = (e) => e instanceof Uint8Array,
          ty = (e) => new DataView(e.buffer, e.byteOffset, e.byteLength),
          tg = (e, t) => (e << (32 - t)) | (e >>> t),
          tb = 68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0];
        if (!tb) throw Error("Non little-endian hardware is not supported");
        function tv(e) {
          if (
            ("string" == typeof e &&
              (e = (function (e) {
                if ("string" != typeof e)
                  throw Error(`utf8ToBytes expected string, got ${typeof e}`);
                return new Uint8Array(new TextEncoder().encode(e));
              })(e)),
            !tm(e))
          )
            throw Error(`expected Uint8Array, got ${typeof e}`);
          return e;
        }
        class tw {
          clone() {
            return this._cloneInto();
          }
        }
        function tE(e = 32) {
          if (th && "function" == typeof th.getRandomValues)
            return th.getRandomValues(new Uint8Array(e));
          throw Error("crypto.getRandomValues must be defined");
        }
        class tx extends tw {
          constructor(e, t, n, r) {
            super(),
              (this.blockLen = e),
              (this.outputLen = t),
              (this.padOffset = n),
              (this.isLE = r),
              (this.finished = !1),
              (this.length = 0),
              (this.pos = 0),
              (this.destroyed = !1),
              (this.buffer = new Uint8Array(e)),
              (this.view = ty(this.buffer));
          }
          update(e) {
            tp(this);
            let { view: t, buffer: n, blockLen: r } = this;
            e = tv(e);
            let i = e.length;
            for (let a = 0; a < i; ) {
              let o = Math.min(r - this.pos, i - a);
              if (o === r) {
                let t = ty(e);
                for (; r <= i - a; a += r) this.process(t, a);
                continue;
              }
              n.set(e.subarray(a, a + o), this.pos),
                (this.pos += o),
                (a += o),
                this.pos === r && (this.process(t, 0), (this.pos = 0));
            }
            return (this.length += e.length), this.roundClean(), this;
          }
          digestInto(e) {
            tp(this),
              (function (e, t) {
                tf(e);
                let n = t.outputLen;
                if (e.length < n)
                  throw Error(
                    `digestInto() expects output buffer of length at least ${n}`
                  );
              })(e, this),
              (this.finished = !0);
            let { buffer: t, view: n, blockLen: r, isLE: i } = this,
              { pos: a } = this;
            (t[a++] = 128),
              this.buffer.subarray(a).fill(0),
              this.padOffset > r - a && (this.process(n, 0), (a = 0));
            for (let e = a; e < r; e++) t[e] = 0;
            (function (e, t, n, r) {
              if ("function" == typeof e.setBigUint64)
                return e.setBigUint64(t, n, r);
              let i = BigInt(32),
                a = BigInt(4294967295),
                o = Number((n >> i) & a),
                s = Number(n & a),
                u = r ? 4 : 0,
                l = r ? 0 : 4;
              e.setUint32(t + u, o, r), e.setUint32(t + l, s, r);
            })(n, r - 8, BigInt(8 * this.length), i),
              this.process(n, 0);
            let o = ty(e),
              s = this.outputLen;
            if (s % 4)
              throw Error("_sha2: outputLen should be aligned to 32bit");
            let u = s / 4,
              l = this.get();
            if (u > l.length) throw Error("_sha2: outputLen bigger than state");
            for (let e = 0; e < u; e++) o.setUint32(4 * e, l[e], i);
          }
          digest() {
            let { buffer: e, outputLen: t } = this;
            this.digestInto(e);
            let n = e.slice(0, t);
            return this.destroy(), n;
          }
          _cloneInto(e) {
            e || (e = new this.constructor()), e.set(...this.get());
            let {
              blockLen: t,
              buffer: n,
              length: r,
              finished: i,
              destroyed: a,
              pos: o,
            } = this;
            return (
              (e.length = r),
              (e.pos = o),
              (e.finished = i),
              (e.destroyed = a),
              r % t && e.buffer.set(n),
              e
            );
          }
        }
        let tC = (e, t, n) => (e & t) ^ (~e & n),
          t_ = (e, t, n) => (e & t) ^ (e & n) ^ (t & n),
          tT = new Uint32Array([
            1116352408, 1899447441, 3049323471, 3921009573, 961987163,
            1508970993, 2453635748, 2870763221, 3624381080, 310598401,
            607225278, 1426881987, 1925078388, 2162078206, 2614888103,
            3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983,
            1249150122, 1555081692, 1996064986, 2554220882, 2821834349,
            2952996808, 3210313671, 3336571891, 3584528711, 113926993,
            338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700,
            1986661051, 2177026350, 2456956037, 2730485921, 2820302411,
            3259730800, 3345764771, 3516065817, 3600352804, 4094571909,
            275423344, 430227734, 506948616, 659060556, 883997877, 958139571,
            1322822218, 1537002063, 1747873779, 1955562222, 2024104815,
            2227730452, 2361852424, 2428436474, 2756734187, 3204031479,
            3329325298,
          ]),
          tS = new Uint32Array([
            1779033703, 3144134277, 1013904242, 2773480762, 1359893119,
            2600822924, 528734635, 1541459225,
          ]),
          tP = new Uint32Array(64);
        class tO extends tx {
          constructor() {
            super(64, 32, 8, !1),
              (this.A = 0 | tS[0]),
              (this.B = 0 | tS[1]),
              (this.C = 0 | tS[2]),
              (this.D = 0 | tS[3]),
              (this.E = 0 | tS[4]),
              (this.F = 0 | tS[5]),
              (this.G = 0 | tS[6]),
              (this.H = 0 | tS[7]);
          }
          get() {
            let { A: e, B: t, C: n, D: r, E: i, F: a, G: o, H: s } = this;
            return [e, t, n, r, i, a, o, s];
          }
          set(e, t, n, r, i, a, o, s) {
            (this.A = 0 | e),
              (this.B = 0 | t),
              (this.C = 0 | n),
              (this.D = 0 | r),
              (this.E = 0 | i),
              (this.F = 0 | a),
              (this.G = 0 | o),
              (this.H = 0 | s);
          }
          process(e, t) {
            for (let n = 0; n < 16; n++, t += 4) tP[n] = e.getUint32(t, !1);
            for (let e = 16; e < 64; e++) {
              let t = tP[e - 15],
                n = tP[e - 2],
                r = tg(t, 7) ^ tg(t, 18) ^ (t >>> 3),
                i = tg(n, 17) ^ tg(n, 19) ^ (n >>> 10);
              tP[e] = (i + tP[e - 7] + r + tP[e - 16]) | 0;
            }
            let { A: n, B: r, C: i, D: a, E: o, F: s, G: u, H: l } = this;
            for (let e = 0; e < 64; e++) {
              let t = tg(o, 6) ^ tg(o, 11) ^ tg(o, 25),
                c = (l + t + tC(o, s, u) + tT[e] + tP[e]) | 0,
                d = tg(n, 2) ^ tg(n, 13) ^ tg(n, 22),
                f = (d + t_(n, r, i)) | 0;
              (l = u),
                (u = s),
                (s = o),
                (o = (a + c) | 0),
                (a = i),
                (i = r),
                (r = n),
                (n = (c + f) | 0);
            }
            (n = (n + this.A) | 0),
              (r = (r + this.B) | 0),
              (i = (i + this.C) | 0),
              (a = (a + this.D) | 0),
              (o = (o + this.E) | 0),
              (s = (s + this.F) | 0),
              (u = (u + this.G) | 0),
              (l = (l + this.H) | 0),
              this.set(n, r, i, a, o, s, u, l);
          }
          roundClean() {
            tP.fill(0);
          }
          destroy() {
            this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
          }
        }
        let tI = (function (e) {
            let t = (t) => e().update(tv(t)).digest(),
              n = e();
            return (
              (t.outputLen = n.outputLen),
              (t.blockLen = n.blockLen),
              (t.create = () => e()),
              t
            );
          })(() => new tO()),
          tA = BigInt(0),
          tk = BigInt(1),
          tj = BigInt(2),
          tB = BigInt(3),
          tM = BigInt(4),
          tN = BigInt(5),
          tD = BigInt(8);
        function tR(e, t) {
          let n = e % t;
          return n >= tA ? n : t + n;
        }
        function tF(e, t, n) {
          let r = e;
          for (; t-- > tA; ) (r *= r), (r %= n);
          return r;
        }
        function tL(e, t) {
          if (e === tA || t <= tA)
            throw Error(
              `invert: expected positive integers, got n=${e} mod=${t}`
            );
          let n = tR(e, t),
            r = t,
            i = tA,
            a = tk,
            o = tk,
            s = tA;
          for (; n !== tA; ) {
            let e = r / n,
              t = r % n,
              u = i - o * e,
              l = a - s * e;
            (r = n), (n = t), (i = o), (a = s), (o = u), (s = l);
          }
          let u = r;
          if (u !== tk) throw Error("invert: does not exist");
          return tR(i, t);
        }
        BigInt(9), BigInt(16);
        let tU = [
          "create",
          "isValid",
          "is0",
          "neg",
          "inv",
          "sqrt",
          "sqr",
          "eql",
          "add",
          "sub",
          "mul",
          "pow",
          "div",
          "addN",
          "subN",
          "mulN",
          "sqrN",
        ];
        function t$(e, t) {
          let n = void 0 !== t ? t : e.toString(2).length;
          return { nBitLength: n, nByteLength: Math.ceil(n / 8) };
        }
        function tq(e) {
          if ("bigint" != typeof e) throw Error("field order must be bigint");
          let t = e.toString(2).length;
          return Math.ceil(t / 8);
        }
        function tH(e) {
          let t = tq(e);
          return t + Math.ceil(t / 2);
        }
        class tz extends tw {
          constructor(e, t) {
            super(),
              (this.finished = !1),
              (this.destroyed = !1),
              (function (e) {
                if ("function" != typeof e || "function" != typeof e.create)
                  throw Error(
                    "Hash should be wrapped by utils.wrapConstructor"
                  );
                td(e.outputLen), td(e.blockLen);
              })(e);
            let n = tv(t);
            if (
              ((this.iHash = e.create()),
              "function" != typeof this.iHash.update)
            )
              throw Error(
                "Expected instance of class which extends utils.Hash"
              );
            (this.blockLen = this.iHash.blockLen),
              (this.outputLen = this.iHash.outputLen);
            let r = this.blockLen,
              i = new Uint8Array(r);
            i.set(n.length > r ? e.create().update(n).digest() : n);
            for (let e = 0; e < i.length; e++) i[e] ^= 54;
            this.iHash.update(i), (this.oHash = e.create());
            for (let e = 0; e < i.length; e++) i[e] ^= 106;
            this.oHash.update(i), i.fill(0);
          }
          update(e) {
            return tp(this), this.iHash.update(e), this;
          }
          digestInto(e) {
            tp(this),
              tf(e, this.outputLen),
              (this.finished = !0),
              this.iHash.digestInto(e),
              this.oHash.update(e),
              this.oHash.digestInto(e),
              this.destroy();
          }
          digest() {
            let e = new Uint8Array(this.oHash.outputLen);
            return this.digestInto(e), e;
          }
          _cloneInto(e) {
            e || (e = Object.create(Object.getPrototypeOf(this), {}));
            let {
              oHash: t,
              iHash: n,
              finished: r,
              destroyed: i,
              blockLen: a,
              outputLen: o,
            } = this;
            return (
              (e.finished = r),
              (e.destroyed = i),
              (e.blockLen = a),
              (e.outputLen = o),
              (e.oHash = t._cloneInto(e.oHash)),
              (e.iHash = n._cloneInto(e.iHash)),
              e
            );
          }
          destroy() {
            (this.destroyed = !0), this.oHash.destroy(), this.iHash.destroy();
          }
        }
        let tG = (e, t, n) => new tz(e, t).update(n).digest();
        tG.create = (e, t) => new tz(e, t);
        /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */ let tW =
            BigInt(0),
          tV = BigInt(1);
        function tK(e) {
          return (
            (function (e) {
              let t = tU.reduce((e, t) => ((e[t] = "function"), e), {
                ORDER: "bigint",
                MASK: "bigint",
                BYTES: "isSafeInteger",
                BITS: "isSafeInteger",
              });
              (0, tc.FF)(e, t);
            })(e.Fp),
            (0, tc.FF)(
              e,
              { n: "bigint", h: "bigint", Gx: "field", Gy: "field" },
              { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }
            ),
            Object.freeze({ ...t$(e.n, e.nBitLength), ...e, p: e.Fp.ORDER })
          );
        }
        let { bytesToNumberBE: tZ, hexToBytes: tJ } = tc,
          tY = {
            Err: class extends Error {
              constructor(e = "") {
                super(e);
              }
            },
            _parseInt(e) {
              let { Err: t } = tY;
              if (e.length < 2 || 2 !== e[0])
                throw new t("Invalid signature integer tag");
              let n = e[1],
                r = e.subarray(2, n + 2);
              if (!n || r.length !== n)
                throw new t("Invalid signature integer: wrong length");
              if (128 & r[0])
                throw new t("Invalid signature integer: negative");
              if (0 === r[0] && !(128 & r[1]))
                throw new t(
                  "Invalid signature integer: unnecessary leading zero"
                );
              return { d: tZ(r), l: e.subarray(n + 2) };
            },
            toSig(e) {
              let { Err: t } = tY,
                n = "string" == typeof e ? tJ(e) : e;
              if (!(n instanceof Uint8Array)) throw Error("ui8a expected");
              let r = n.length;
              if (r < 2 || 48 != n[0]) throw new t("Invalid signature tag");
              if (n[1] !== r - 2)
                throw new t("Invalid signature: incorrect length");
              let { d: i, l: a } = tY._parseInt(n.subarray(2)),
                { d: o, l: s } = tY._parseInt(a);
              if (s.length)
                throw new t("Invalid signature: left bytes after parsing");
              return { r: i, s: o };
            },
            hexFromSig(e) {
              let t = (e) => (8 & Number.parseInt(e[0], 16) ? "00" + e : e),
                n = (e) => {
                  let t = e.toString(16);
                  return 1 & t.length ? `0${t}` : t;
                },
                r = t(n(e.s)),
                i = t(n(e.r)),
                a = r.length / 2,
                o = i.length / 2,
                s = n(a),
                u = n(o);
              return `30${n(o + a + 4)}02${u}${i}02${s}${r}`;
            },
          },
          tX = BigInt(0),
          tQ = BigInt(1),
          t0 = (BigInt(2), BigInt(3));
        BigInt(4);
        /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */ let t1 =
            BigInt(
              "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"
            ),
          t2 = BigInt(
            "0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"
          ),
          t6 = BigInt(1),
          t3 = BigInt(2),
          t5 = (e, t) => (e + t / t3) / t,
          t4 = (function (e, t, n = !1, r = {}) {
            if (e <= tA) throw Error(`Expected Field ORDER > 0, got ${e}`);
            let { nBitLength: i, nByteLength: a } = t$(e, t);
            if (a > 2048)
              throw Error("Field lengths over 2048 bytes are not supported");
            let o = (function (e) {
                if (e % tM === tB) {
                  let t = (e + tk) / tM;
                  return function (e, n) {
                    let r = e.pow(n, t);
                    if (!e.eql(e.sqr(r), n))
                      throw Error("Cannot find square root");
                    return r;
                  };
                }
                if (e % tD === tN) {
                  let t = (e - tN) / tD;
                  return function (e, n) {
                    let r = e.mul(n, tj),
                      i = e.pow(r, t),
                      a = e.mul(n, i),
                      o = e.mul(e.mul(a, tj), i),
                      s = e.mul(a, e.sub(o, e.ONE));
                    if (!e.eql(e.sqr(s), n))
                      throw Error("Cannot find square root");
                    return s;
                  };
                }
                return (function (e) {
                  let t, n, r;
                  let i = (e - tk) / tj;
                  for (t = e - tk, n = 0; t % tj === tA; t /= tj, n++);
                  for (
                    r = tj;
                    r < e &&
                    (function (e, t, n) {
                      if (n <= tA || t < tA)
                        throw Error("Expected power/modulo > 0");
                      if (n === tk) return tA;
                      let r = tk;
                      for (; t > tA; )
                        t & tk && (r = (r * e) % n),
                          (e = (e * e) % n),
                          (t >>= tk);
                      return r;
                    })(r, i, e) !==
                      e - tk;
                    r++
                  );
                  if (1 === n) {
                    let t = (e + tk) / tM;
                    return function (e, n) {
                      let r = e.pow(n, t);
                      if (!e.eql(e.sqr(r), n))
                        throw Error("Cannot find square root");
                      return r;
                    };
                  }
                  let a = (t + tk) / tj;
                  return function (e, o) {
                    if (e.pow(o, i) === e.neg(e.ONE))
                      throw Error("Cannot find square root");
                    let s = n,
                      u = e.pow(e.mul(e.ONE, r), t),
                      l = e.pow(o, a),
                      c = e.pow(o, t);
                    for (; !e.eql(c, e.ONE); ) {
                      if (e.eql(c, e.ZERO)) return e.ZERO;
                      let t = 1;
                      for (let n = e.sqr(c); t < s && !e.eql(n, e.ONE); t++)
                        n = e.sqr(n);
                      let n = e.pow(u, tk << BigInt(s - t - 1));
                      (u = e.sqr(n)),
                        (l = e.mul(l, n)),
                        (c = e.mul(c, u)),
                        (s = t);
                    }
                    return l;
                  };
                })(e);
              })(e),
              s = Object.freeze({
                ORDER: e,
                BITS: i,
                BYTES: a,
                MASK: (0, tc.dQ)(i),
                ZERO: tA,
                ONE: tk,
                create: (t) => tR(t, e),
                isValid: (t) => {
                  if ("bigint" != typeof t)
                    throw Error(
                      `Invalid field element: expected bigint, got ${typeof t}`
                    );
                  return tA <= t && t < e;
                },
                is0: (e) => e === tA,
                isOdd: (e) => (e & tk) === tk,
                neg: (t) => tR(-t, e),
                eql: (e, t) => e === t,
                sqr: (t) => tR(t * t, e),
                add: (t, n) => tR(t + n, e),
                sub: (t, n) => tR(t - n, e),
                mul: (t, n) => tR(t * n, e),
                pow: (e, t) =>
                  (function (e, t, n) {
                    if (n < tA) throw Error("Expected power > 0");
                    if (n === tA) return e.ONE;
                    if (n === tk) return t;
                    let r = e.ONE,
                      i = t;
                    for (; n > tA; )
                      n & tk && (r = e.mul(r, i)), (i = e.sqr(i)), (n >>= tk);
                    return r;
                  })(s, e, t),
                div: (t, n) => tR(t * tL(n, e), e),
                sqrN: (e) => e * e,
                addN: (e, t) => e + t,
                subN: (e, t) => e - t,
                mulN: (e, t) => e * t,
                inv: (t) => tL(t, e),
                sqrt: r.sqrt || ((e) => o(s, e)),
                invertBatch: (e) =>
                  (function (e, t) {
                    let n = Array(t.length),
                      r = t.reduce(
                        (t, r, i) => (e.is0(r) ? t : ((n[i] = t), e.mul(t, r))),
                        e.ONE
                      ),
                      i = e.inv(r);
                    return (
                      t.reduceRight(
                        (t, r, i) =>
                          e.is0(r) ? t : ((n[i] = e.mul(t, n[i])), e.mul(t, r)),
                        i
                      ),
                      n
                    );
                  })(s, e),
                cmov: (e, t, n) => (n ? t : e),
                toBytes: (e) => (n ? (0, tc.S5)(e, a) : (0, tc.tL)(e, a)),
                fromBytes: (e) => {
                  if (e.length !== a)
                    throw Error(`Fp.fromBytes: expected ${a}, got ${e.length}`);
                  return n ? (0, tc.ty)(e) : (0, tc.bytesToNumberBE)(e);
                },
              });
            return Object.freeze(s);
          })(t1, void 0, void 0, {
            sqrt: function (e) {
              let t = BigInt(3),
                n = BigInt(6),
                r = BigInt(11),
                i = BigInt(22),
                a = BigInt(23),
                o = BigInt(44),
                s = BigInt(88),
                u = (e * e * e) % t1,
                l = (u * u * e) % t1,
                c = (tF(l, t, t1) * l) % t1,
                d = (tF(c, t, t1) * l) % t1,
                f = (tF(d, t3, t1) * u) % t1,
                p = (tF(f, r, t1) * f) % t1,
                h = (tF(p, i, t1) * p) % t1,
                m = (tF(h, o, t1) * h) % t1,
                y = (tF(m, s, t1) * m) % t1,
                g = (tF(y, o, t1) * h) % t1,
                b = (tF(g, t, t1) * l) % t1,
                v = (tF(b, a, t1) * p) % t1,
                w = (tF(v, n, t1) * u) % t1,
                E = tF(w, t3, t1);
              if (!t4.eql(t4.sqr(E), e)) throw Error("Cannot find square root");
              return E;
            },
          }),
          t8 = (function (e, t) {
            let n = (t) =>
              (function (e) {
                let t = (function (e) {
                    let t = tK(e);
                    return (
                      tc.FF(
                        t,
                        {
                          hash: "hash",
                          hmac: "function",
                          randomBytes: "function",
                        },
                        {
                          bits2int: "function",
                          bits2int_modN: "function",
                          lowS: "boolean",
                        }
                      ),
                      Object.freeze({ lowS: !0, ...t })
                    );
                  })(e),
                  { Fp: n, n: r } = t,
                  i = n.BYTES + 1,
                  a = 2 * n.BYTES + 1;
                function o(e) {
                  return tR(e, r);
                }
                let {
                    ProjectivePoint: s,
                    normPrivateKeyToScalar: u,
                    weierstrassEquation: l,
                    isWithinCurveOrder: c,
                  } = (function (e) {
                    let t =
                        /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */ (function (
                          e
                        ) {
                          let t = tK(e);
                          tc.FF(
                            t,
                            { a: "field", b: "field" },
                            {
                              allowedPrivateKeyLengths: "array",
                              wrapPrivateKey: "boolean",
                              isTorsionFree: "function",
                              clearCofactor: "function",
                              allowInfinityPoint: "boolean",
                              fromBytes: "function",
                              toBytes: "function",
                            }
                          );
                          let { endo: n, Fp: r, a: i } = t;
                          if (n) {
                            if (!r.eql(i, r.ZERO))
                              throw Error(
                                "Endomorphism can only be defined for Koblitz curves that have a=0"
                              );
                            if (
                              "object" != typeof n ||
                              "bigint" != typeof n.beta ||
                              "function" != typeof n.splitScalar
                            )
                              throw Error(
                                "Expected endomorphism with beta: bigint and splitScalar: function"
                              );
                          }
                          return Object.freeze({ ...t });
                        })(e),
                      { Fp: n } = t,
                      r =
                        t.toBytes ||
                        ((e, t, r) => {
                          let i = t.toAffine();
                          return tc.eV(
                            Uint8Array.from([4]),
                            n.toBytes(i.x),
                            n.toBytes(i.y)
                          );
                        }),
                      i =
                        t.fromBytes ||
                        ((e) => {
                          let t = e.subarray(1),
                            r = n.fromBytes(t.subarray(0, n.BYTES)),
                            i = n.fromBytes(t.subarray(n.BYTES, 2 * n.BYTES));
                          return { x: r, y: i };
                        });
                    function a(e) {
                      let { a: r, b: i } = t,
                        a = n.sqr(e),
                        o = n.mul(a, e);
                      return n.add(n.add(o, n.mul(e, r)), i);
                    }
                    if (!n.eql(n.sqr(t.Gy), a(t.Gx)))
                      throw Error(
                        "bad generator point: equation left != right"
                      );
                    function o(e) {
                      return "bigint" == typeof e && tX < e && e < t.n;
                    }
                    function s(e) {
                      if (!o(e))
                        throw Error(
                          "Expected valid bigint: 0 < bigint < curve.n"
                        );
                    }
                    function u(e) {
                      let n;
                      let {
                        allowedPrivateKeyLengths: r,
                        nByteLength: i,
                        wrapPrivateKey: a,
                        n: o,
                      } = t;
                      if (r && "bigint" != typeof e) {
                        if (
                          (e instanceof Uint8Array && (e = tc.ci(e)),
                          "string" != typeof e || !r.includes(e.length))
                        )
                          throw Error("Invalid key");
                        e = e.padStart(2 * i, "0");
                      }
                      try {
                        n =
                          "bigint" == typeof e
                            ? e
                            : tc.bytesToNumberBE(
                                (0, tc.ql)("private key", e, i)
                              );
                      } catch (t) {
                        throw Error(
                          `private key must be ${i} bytes, hex or bigint, not ${typeof e}`
                        );
                      }
                      return a && (n = tR(n, o)), s(n), n;
                    }
                    let l = new Map();
                    function c(e) {
                      if (!(e instanceof d))
                        throw Error("ProjectivePoint expected");
                    }
                    class d {
                      constructor(e, t, r) {
                        if (
                          ((this.px = e),
                          (this.py = t),
                          (this.pz = r),
                          null == e || !n.isValid(e))
                        )
                          throw Error("x required");
                        if (null == t || !n.isValid(t))
                          throw Error("y required");
                        if (null == r || !n.isValid(r))
                          throw Error("z required");
                      }
                      static fromAffine(e) {
                        let { x: t, y: r } = e || {};
                        if (!e || !n.isValid(t) || !n.isValid(r))
                          throw Error("invalid affine point");
                        if (e instanceof d)
                          throw Error("projective point not allowed");
                        let i = (e) => n.eql(e, n.ZERO);
                        return i(t) && i(r) ? d.ZERO : new d(t, r, n.ONE);
                      }
                      get x() {
                        return this.toAffine().x;
                      }
                      get y() {
                        return this.toAffine().y;
                      }
                      static normalizeZ(e) {
                        let t = n.invertBatch(e.map((e) => e.pz));
                        return e
                          .map((e, n) => e.toAffine(t[n]))
                          .map(d.fromAffine);
                      }
                      static fromHex(e) {
                        let t = d.fromAffine(i((0, tc.ql)("pointHex", e)));
                        return t.assertValidity(), t;
                      }
                      static fromPrivateKey(e) {
                        return d.BASE.multiply(u(e));
                      }
                      _setWindowSize(e) {
                        (this._WINDOW_SIZE = e), l.delete(this);
                      }
                      assertValidity() {
                        if (this.is0()) {
                          if (t.allowInfinityPoint && !n.is0(this.py)) return;
                          throw Error("bad point: ZERO");
                        }
                        let { x: e, y: r } = this.toAffine();
                        if (!n.isValid(e) || !n.isValid(r))
                          throw Error("bad point: x or y not FE");
                        let i = n.sqr(r),
                          o = a(e);
                        if (!n.eql(i, o))
                          throw Error("bad point: equation left != right");
                        if (!this.isTorsionFree())
                          throw Error("bad point: not in prime-order subgroup");
                      }
                      hasEvenY() {
                        let { y: e } = this.toAffine();
                        if (n.isOdd) return !n.isOdd(e);
                        throw Error("Field doesn't support isOdd");
                      }
                      equals(e) {
                        c(e);
                        let { px: t, py: r, pz: i } = this,
                          { px: a, py: o, pz: s } = e,
                          u = n.eql(n.mul(t, s), n.mul(a, i)),
                          l = n.eql(n.mul(r, s), n.mul(o, i));
                        return u && l;
                      }
                      negate() {
                        return new d(this.px, n.neg(this.py), this.pz);
                      }
                      double() {
                        let { a: e, b: r } = t,
                          i = n.mul(r, t0),
                          { px: a, py: o, pz: s } = this,
                          u = n.ZERO,
                          l = n.ZERO,
                          c = n.ZERO,
                          f = n.mul(a, a),
                          p = n.mul(o, o),
                          h = n.mul(s, s),
                          m = n.mul(a, o);
                        return (
                          (m = n.add(m, m)),
                          (c = n.mul(a, s)),
                          (c = n.add(c, c)),
                          (u = n.mul(e, c)),
                          (l = n.mul(i, h)),
                          (l = n.add(u, l)),
                          (u = n.sub(p, l)),
                          (l = n.add(p, l)),
                          (l = n.mul(u, l)),
                          (u = n.mul(m, u)),
                          (c = n.mul(i, c)),
                          (h = n.mul(e, h)),
                          (m = n.sub(f, h)),
                          (m = n.mul(e, m)),
                          (m = n.add(m, c)),
                          (c = n.add(f, f)),
                          (f = n.add(c, f)),
                          (f = n.add(f, h)),
                          (f = n.mul(f, m)),
                          (l = n.add(l, f)),
                          (h = n.mul(o, s)),
                          (h = n.add(h, h)),
                          (f = n.mul(h, m)),
                          (u = n.sub(u, f)),
                          (c = n.mul(h, p)),
                          (c = n.add(c, c)),
                          (c = n.add(c, c)),
                          new d(u, l, c)
                        );
                      }
                      add(e) {
                        c(e);
                        let { px: r, py: i, pz: a } = this,
                          { px: o, py: s, pz: u } = e,
                          l = n.ZERO,
                          f = n.ZERO,
                          p = n.ZERO,
                          h = t.a,
                          m = n.mul(t.b, t0),
                          y = n.mul(r, o),
                          g = n.mul(i, s),
                          b = n.mul(a, u),
                          v = n.add(r, i),
                          w = n.add(o, s);
                        (v = n.mul(v, w)),
                          (w = n.add(y, g)),
                          (v = n.sub(v, w)),
                          (w = n.add(r, a));
                        let E = n.add(o, u);
                        return (
                          (w = n.mul(w, E)),
                          (E = n.add(y, b)),
                          (w = n.sub(w, E)),
                          (E = n.add(i, a)),
                          (l = n.add(s, u)),
                          (E = n.mul(E, l)),
                          (l = n.add(g, b)),
                          (E = n.sub(E, l)),
                          (p = n.mul(h, w)),
                          (l = n.mul(m, b)),
                          (p = n.add(l, p)),
                          (l = n.sub(g, p)),
                          (p = n.add(g, p)),
                          (f = n.mul(l, p)),
                          (g = n.add(y, y)),
                          (g = n.add(g, y)),
                          (b = n.mul(h, b)),
                          (w = n.mul(m, w)),
                          (g = n.add(g, b)),
                          (b = n.sub(y, b)),
                          (b = n.mul(h, b)),
                          (w = n.add(w, b)),
                          (y = n.mul(g, w)),
                          (f = n.add(f, y)),
                          (y = n.mul(E, w)),
                          (l = n.mul(v, l)),
                          (l = n.sub(l, y)),
                          (y = n.mul(v, g)),
                          (p = n.mul(E, p)),
                          (p = n.add(p, y)),
                          new d(l, f, p)
                        );
                      }
                      subtract(e) {
                        return this.add(e.negate());
                      }
                      is0() {
                        return this.equals(d.ZERO);
                      }
                      wNAF(e) {
                        return p.wNAFCached(this, l, e, (e) => {
                          let t = n.invertBatch(e.map((e) => e.pz));
                          return e
                            .map((e, n) => e.toAffine(t[n]))
                            .map(d.fromAffine);
                        });
                      }
                      multiplyUnsafe(e) {
                        let r = d.ZERO;
                        if (e === tX) return r;
                        if ((s(e), e === tQ)) return this;
                        let { endo: i } = t;
                        if (!i) return p.unsafeLadder(this, e);
                        let {
                            k1neg: a,
                            k1: o,
                            k2neg: u,
                            k2: l,
                          } = i.splitScalar(e),
                          c = r,
                          f = r,
                          h = this;
                        for (; o > tX || l > tX; )
                          o & tQ && (c = c.add(h)),
                            l & tQ && (f = f.add(h)),
                            (h = h.double()),
                            (o >>= tQ),
                            (l >>= tQ);
                        return (
                          a && (c = c.negate()),
                          u && (f = f.negate()),
                          (f = new d(n.mul(f.px, i.beta), f.py, f.pz)),
                          c.add(f)
                        );
                      }
                      multiply(e) {
                        let r, i;
                        s(e);
                        let { endo: a } = t;
                        if (a) {
                          let {
                              k1neg: t,
                              k1: o,
                              k2neg: s,
                              k2: u,
                            } = a.splitScalar(e),
                            { p: l, f: c } = this.wNAF(o),
                            { p: f, f: h } = this.wNAF(u);
                          (l = p.constTimeNegate(t, l)),
                            (f = p.constTimeNegate(s, f)),
                            (f = new d(n.mul(f.px, a.beta), f.py, f.pz)),
                            (r = l.add(f)),
                            (i = c.add(h));
                        } else {
                          let { p: t, f: n } = this.wNAF(e);
                          (r = t), (i = n);
                        }
                        return d.normalizeZ([r, i])[0];
                      }
                      multiplyAndAddUnsafe(e, t, n) {
                        let r = d.BASE,
                          i = (e, t) =>
                            t !== tX && t !== tQ && e.equals(r)
                              ? e.multiply(t)
                              : e.multiplyUnsafe(t),
                          a = i(this, t).add(i(e, n));
                        return a.is0() ? void 0 : a;
                      }
                      toAffine(e) {
                        let { px: t, py: r, pz: i } = this,
                          a = this.is0();
                        null == e && (e = a ? n.ONE : n.inv(i));
                        let o = n.mul(t, e),
                          s = n.mul(r, e),
                          u = n.mul(i, e);
                        if (a) return { x: n.ZERO, y: n.ZERO };
                        if (!n.eql(u, n.ONE)) throw Error("invZ was invalid");
                        return { x: o, y: s };
                      }
                      isTorsionFree() {
                        let { h: e, isTorsionFree: n } = t;
                        if (e === tQ) return !0;
                        if (n) return n(d, this);
                        throw Error(
                          "isTorsionFree() has not been declared for the elliptic curve"
                        );
                      }
                      clearCofactor() {
                        let { h: e, clearCofactor: n } = t;
                        return e === tQ
                          ? this
                          : n
                          ? n(d, this)
                          : this.multiplyUnsafe(t.h);
                      }
                      toRawBytes(e = !0) {
                        return this.assertValidity(), r(d, this, e);
                      }
                      toHex(e = !0) {
                        return tc.ci(this.toRawBytes(e));
                      }
                    }
                    (d.BASE = new d(t.Gx, t.Gy, n.ONE)),
                      (d.ZERO = new d(n.ZERO, n.ONE, n.ZERO));
                    let f = t.nBitLength,
                      p = (function (e, t) {
                        let n = (e, t) => {
                            let n = t.negate();
                            return e ? n : t;
                          },
                          r = (e) => ({
                            windows: Math.ceil(t / e) + 1,
                            windowSize: 2 ** (e - 1),
                          });
                        return {
                          constTimeNegate: n,
                          unsafeLadder(t, n) {
                            let r = e.ZERO,
                              i = t;
                            for (; n > tW; )
                              n & tV && (r = r.add(i)),
                                (i = i.double()),
                                (n >>= tV);
                            return r;
                          },
                          precomputeWindow(e, t) {
                            let { windows: n, windowSize: i } = r(t),
                              a = [],
                              o = e,
                              s = o;
                            for (let e = 0; e < n; e++) {
                              (s = o), a.push(s);
                              for (let e = 1; e < i; e++)
                                (s = s.add(o)), a.push(s);
                              o = s.double();
                            }
                            return a;
                          },
                          wNAF(t, i, a) {
                            let { windows: o, windowSize: s } = r(t),
                              u = e.ZERO,
                              l = e.BASE,
                              c = BigInt(2 ** t - 1),
                              d = 2 ** t,
                              f = BigInt(t);
                            for (let e = 0; e < o; e++) {
                              let t = e * s,
                                r = Number(a & c);
                              (a >>= f), r > s && ((r -= d), (a += tV));
                              let o = t + Math.abs(r) - 1,
                                p = e % 2 != 0,
                                h = r < 0;
                              0 === r
                                ? (l = l.add(n(p, i[t])))
                                : (u = u.add(n(h, i[o])));
                            }
                            return { p: u, f: l };
                          },
                          wNAFCached(e, t, n, r) {
                            let i = e._WINDOW_SIZE || 1,
                              a = t.get(e);
                            return (
                              a ||
                                ((a = this.precomputeWindow(e, i)),
                                1 !== i && t.set(e, r(a))),
                              this.wNAF(i, a, n)
                            );
                          },
                        };
                      })(d, t.endo ? Math.ceil(f / 2) : f);
                    return {
                      CURVE: t,
                      ProjectivePoint: d,
                      normPrivateKeyToScalar: u,
                      weierstrassEquation: a,
                      isWithinCurveOrder: o,
                    };
                  })({
                    ...t,
                    toBytes(e, t, r) {
                      let i = t.toAffine(),
                        a = n.toBytes(i.x),
                        o = tc.eV;
                      return r
                        ? o(Uint8Array.from([t.hasEvenY() ? 2 : 3]), a)
                        : o(Uint8Array.from([4]), a, n.toBytes(i.y));
                    },
                    fromBytes(e) {
                      let t = e.length,
                        r = e[0],
                        o = e.subarray(1);
                      if (t === i && (2 === r || 3 === r)) {
                        let e = tc.bytesToNumberBE(o);
                        if (!(tX < e && e < n.ORDER))
                          throw Error("Point is not on curve");
                        let t = l(e),
                          i = n.sqrt(t),
                          a = (i & tQ) === tQ;
                        return (
                          ((1 & r) == 1) !== a && (i = n.neg(i)), { x: e, y: i }
                        );
                      }
                      if (t === a && 4 === r) {
                        let e = n.fromBytes(o.subarray(0, n.BYTES)),
                          t = n.fromBytes(o.subarray(n.BYTES, 2 * n.BYTES));
                        return { x: e, y: t };
                      }
                      throw Error(
                        `Point of length ${t} was invalid. Expected ${i} compressed bytes or ${a} uncompressed bytes`
                      );
                    },
                  }),
                  d = (e) => tc.ci(tc.tL(e, t.nByteLength));
                function f(e) {
                  let t = r >> tQ;
                  return e > t;
                }
                let p = (e, t, n) => tc.bytesToNumberBE(e.slice(t, n));
                class h {
                  constructor(e, t, n) {
                    (this.r = e),
                      (this.s = t),
                      (this.recovery = n),
                      this.assertValidity();
                  }
                  static fromCompact(e) {
                    let n = t.nByteLength;
                    return (
                      (e = (0, tc.ql)("compactSignature", e, 2 * n)),
                      new h(p(e, 0, n), p(e, n, 2 * n))
                    );
                  }
                  static fromDER(e) {
                    let { r: t, s: n } = tY.toSig((0, tc.ql)("DER", e));
                    return new h(t, n);
                  }
                  assertValidity() {
                    if (!c(this.r)) throw Error("r must be 0 < r < CURVE.n");
                    if (!c(this.s)) throw Error("s must be 0 < s < CURVE.n");
                  }
                  addRecoveryBit(e) {
                    return new h(this.r, this.s, e);
                  }
                  recoverPublicKey(e) {
                    let { r: i, s: a, recovery: u } = this,
                      l = g((0, tc.ql)("msgHash", e));
                    if (null == u || ![0, 1, 2, 3].includes(u))
                      throw Error("recovery id invalid");
                    let c = 2 === u || 3 === u ? i + t.n : i;
                    if (c >= n.ORDER) throw Error("recovery id 2 or 3 invalid");
                    let f = (1 & u) == 0 ? "02" : "03",
                      p = s.fromHex(f + d(c)),
                      h = tL(c, r),
                      m = o(-l * h),
                      y = o(a * h),
                      b = s.BASE.multiplyAndAddUnsafe(p, m, y);
                    if (!b) throw Error("point at infinify");
                    return b.assertValidity(), b;
                  }
                  hasHighS() {
                    return f(this.s);
                  }
                  normalizeS() {
                    return this.hasHighS()
                      ? new h(this.r, o(-this.s), this.recovery)
                      : this;
                  }
                  toDERRawBytes() {
                    return tc.hexToBytes(this.toDERHex());
                  }
                  toDERHex() {
                    return tY.hexFromSig({ r: this.r, s: this.s });
                  }
                  toCompactRawBytes() {
                    return tc.hexToBytes(this.toCompactHex());
                  }
                  toCompactHex() {
                    return d(this.r) + d(this.s);
                  }
                }
                function m(e) {
                  let t = e instanceof Uint8Array,
                    n = "string" == typeof e,
                    r = (t || n) && e.length;
                  return t
                    ? r === i || r === a
                    : n
                    ? r === 2 * i || r === 2 * a
                    : e instanceof s;
                }
                let y =
                    t.bits2int ||
                    function (e) {
                      let n = tc.bytesToNumberBE(e),
                        r = 8 * e.length - t.nBitLength;
                      return r > 0 ? n >> BigInt(r) : n;
                    },
                  g =
                    t.bits2int_modN ||
                    function (e) {
                      return o(y(e));
                    },
                  b = tc.dQ(t.nBitLength);
                function v(e) {
                  if ("bigint" != typeof e) throw Error("bigint expected");
                  if (!(tX <= e && e < b))
                    throw Error(`bigint expected < 2^${t.nBitLength}`);
                  return tc.tL(e, t.nByteLength);
                }
                let w = { lowS: t.lowS, prehash: !1 },
                  E = { lowS: t.lowS, prehash: !1 };
                return (
                  s.BASE._setWindowSize(8),
                  {
                    CURVE: t,
                    getPublicKey: function (e, t = !0) {
                      return s.fromPrivateKey(e).toRawBytes(t);
                    },
                    getSharedSecret: function (e, t, n = !0) {
                      if (m(e)) throw Error("first arg must be private key");
                      if (!m(t)) throw Error("second arg must be public key");
                      let r = s.fromHex(t);
                      return r.multiply(u(e)).toRawBytes(n);
                    },
                    sign: function (e, i, a = w) {
                      let { seed: l, k2sig: d } = (function (e, i, a = w) {
                          if (["recovered", "canonical"].some((e) => e in a))
                            throw Error("sign() legacy options not supported");
                          let { hash: l, randomBytes: d } = t,
                            { lowS: p, prehash: m, extraEntropy: b } = a;
                          null == p && (p = !0),
                            (e = (0, tc.ql)("msgHash", e)),
                            m && (e = (0, tc.ql)("prehashed msgHash", l(e)));
                          let E = g(e),
                            x = u(i),
                            C = [v(x), v(E)];
                          if (null != b) {
                            let e = !0 === b ? d(n.BYTES) : b;
                            C.push((0, tc.ql)("extraEntropy", e));
                          }
                          let _ = tc.eV(...C);
                          return {
                            seed: _,
                            k2sig: function (e) {
                              let t = y(e);
                              if (!c(t)) return;
                              let n = tL(t, r),
                                i = s.BASE.multiply(t).toAffine(),
                                a = o(i.x);
                              if (a === tX) return;
                              let u = o(n * o(E + a * x));
                              if (u === tX) return;
                              let l = (i.x === a ? 0 : 2) | Number(i.y & tQ),
                                d = u;
                              return (
                                p && f(u) && ((d = f(u) ? o(-u) : u), (l ^= 1)),
                                new h(a, d, l)
                              );
                            },
                          };
                        })(e, i, a),
                        p = tc.n$(t.hash.outputLen, t.nByteLength, t.hmac);
                      return p(l, d);
                    },
                    verify: function (e, n, i, a = E) {
                      let u, l;
                      if (
                        ((n = (0, tc.ql)("msgHash", n)),
                        (i = (0, tc.ql)("publicKey", i)),
                        "strict" in a)
                      )
                        throw Error("options.strict was renamed to lowS");
                      let { lowS: c, prehash: d } = a;
                      try {
                        if ("string" == typeof e || e instanceof Uint8Array)
                          try {
                            l = h.fromDER(e);
                          } catch (t) {
                            if (!(t instanceof tY.Err)) throw t;
                            l = h.fromCompact(e);
                          }
                        else if (
                          "object" == typeof e &&
                          "bigint" == typeof e.r &&
                          "bigint" == typeof e.s
                        ) {
                          let { r: t, s: n } = e;
                          l = new h(t, n);
                        } else throw Error("PARSE");
                        u = s.fromHex(i);
                      } catch (e) {
                        if ("PARSE" === e.message)
                          throw Error(
                            "signature must be Signature instance, Uint8Array or hex string"
                          );
                        return !1;
                      }
                      if (c && l.hasHighS()) return !1;
                      d && (n = t.hash(n));
                      let { r: f, s: p } = l,
                        m = g(n),
                        y = tL(p, r),
                        b = o(m * y),
                        v = o(f * y),
                        w = s.BASE.multiplyAndAddUnsafe(u, b, v)?.toAffine();
                      if (!w) return !1;
                      let x = o(w.x);
                      return x === f;
                    },
                    ProjectivePoint: s,
                    Signature: h,
                    utils: {
                      isValidPrivateKey(e) {
                        try {
                          return u(e), !0;
                        } catch (e) {
                          return !1;
                        }
                      },
                      normPrivateKeyToScalar: u,
                      randomPrivateKey: () => {
                        let e = tH(t.n);
                        return (function (e, t, n = !1) {
                          let r = e.length,
                            i = tq(t),
                            a = tH(t);
                          if (r < 16 || r < a || r > 1024)
                            throw Error(
                              `expected ${a}-1024 bytes of input, got ${r}`
                            );
                          let o = n
                              ? (0, tc.bytesToNumberBE)(e)
                              : (0, tc.ty)(e),
                            s = tR(o, t - tk) + tk;
                          return n ? (0, tc.S5)(s, i) : (0, tc.tL)(s, i);
                        })(t.randomBytes(e), t.n);
                      },
                      precompute: (e = 8, t = s.BASE) => (
                        t._setWindowSize(e), t.multiply(BigInt(3)), t
                      ),
                    },
                  }
                );
              })({
                ...e,
                hash: t,
                hmac: (e, ...n) =>
                  tG(
                    t,
                    e,
                    (function (...e) {
                      let t = new Uint8Array(
                          e.reduce((e, t) => e + t.length, 0)
                        ),
                        n = 0;
                      return (
                        e.forEach((e) => {
                          if (!tm(e)) throw Error("Uint8Array expected");
                          t.set(e, n), (n += e.length);
                        }),
                        t
                      );
                    })(...n)
                  ),
                randomBytes: tE,
              });
            return Object.freeze({ ...n(t), create: n });
          })(
            {
              a: BigInt(0),
              b: BigInt(7),
              Fp: t4,
              n: t2,
              Gx: BigInt(
                "55066263022277343669578718895168534326250603453777594175500187360389116729240"
              ),
              Gy: BigInt(
                "32670510020758816978083085130507043184471273380659243275938904335757337482424"
              ),
              h: BigInt(1),
              lowS: !0,
              endo: {
                beta: BigInt(
                  "0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"
                ),
                splitScalar: (e) => {
                  let t = BigInt("0x3086d221a7d46bcde86c90e49284eb15"),
                    n = -t6 * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),
                    r = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),
                    i = BigInt("0x100000000000000000000000000000000"),
                    a = t5(t * e, t2),
                    o = t5(-n * e, t2),
                    s = tR(e - a * t - o * r, t2),
                    u = tR(-a * n - o * t, t2),
                    l = s > i,
                    c = u > i;
                  if ((l && (s = t2 - s), c && (u = t2 - u), s > i || u > i))
                    throw Error("splitScalar: Endomorphism failed, k=" + e);
                  return { k1neg: l, k1: s, k2neg: c, k2: u };
                },
              },
            },
            tI
          );
        async function t7(e, { address: t, hash: n, signature: r, ...i }) {
          let a = (0, v.v)(r)
            ? r
            : "object" == typeof r && "r" in r && "s" in r
            ? (function ({ r: e, s: t, v: n, yParity: r }) {
                let i = (() => {
                  if (0 === r || 1 === r) return r;
                  if (n && (27n === n || 28n === n || n >= 35n))
                    return n % 2n === 0n ? 1 : 0;
                  throw Error("Invalid `v` or `yParity` value");
                })();
                return `0x${new t8.Signature(
                  (0, ex.y_)(e),
                  (0, ex.y_)(t)
                ).toCompactHex()}${0 === i ? "1b" : "1c"}`;
              })(r)
            : (0, d.ci)(r);
          try {
            let { data: r } = await C(
              e,
              P.RE,
              "call"
            )({
              data: (function (e) {
                let { abi: t, args: n, bytecode: r } = e;
                if (!n || 0 === n.length) return r;
                let i = t.find((e) => "type" in e && "constructor" === e.type);
                if (!i) throw new _.fM({ docsPath: tl });
                if (!("inputs" in i) || !i.inputs || 0 === i.inputs.length)
                  throw new _.cO({ docsPath: tl });
                let a = (0, et.E)(i.inputs, n);
                return (0, y.SM)([r, a]);
              })({
                abi: o.$o,
                args: [t, n, a],
                bytecode:
                  "0x60806040523480156200001157600080fd5b50604051620007003803806200070083398101604081905262000034916200056f565b6000620000438484846200004f565b9050806000526001601ff35b600080846001600160a01b0316803b806020016040519081016040528181526000908060200190933c90507f6492649264926492649264926492649264926492649264926492649264926492620000a68462000451565b036200021f57600060608085806020019051810190620000c79190620005ce565b8651929550909350915060000362000192576000836001600160a01b031683604051620000f5919062000643565b6000604051808303816000865af19150503d806000811462000134576040519150601f19603f3d011682016040523d82523d6000602084013e62000139565b606091505b5050905080620001905760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b505b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90620001c4908b90869060040162000661565b602060405180830381865afa158015620001e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020891906200069d565b6001600160e01b031916149450505050506200044a565b805115620002b157604051630b135d3f60e11b808252906001600160a01b03871690631626ba7e9062000259908890889060040162000661565b602060405180830381865afa15801562000277573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029d91906200069d565b6001600160e01b031916149150506200044a565b8251604114620003195760405162461bcd60e51b815260206004820152603a6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e677468000000000000606482015260840162000187565b620003236200046b565b506020830151604080850151855186939260009185919081106200034b576200034b620006c9565b016020015160f81c9050601b81148015906200036b57508060ff16601c14155b15620003cf5760405162461bcd60e51b815260206004820152603b6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c75650000000000606482015260840162000187565b6040805160008152602081018083528a905260ff83169181019190915260608101849052608081018390526001600160a01b038a169060019060a0016020604051602081039080840390855afa1580156200042e573d6000803e3d6000fd5b505050602060405103516001600160a01b031614955050505050505b9392505050565b60006020825110156200046357600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b03811681146200049f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004d5578181015183820152602001620004bb565b50506000910152565b600082601f830112620004f057600080fd5b81516001600160401b03808211156200050d576200050d620004a2565b604051601f8301601f19908116603f01168101908282118183101715620005385762000538620004a2565b816040528381528660208588010111156200055257600080fd5b62000565846020830160208901620004b8565b9695505050505050565b6000806000606084860312156200058557600080fd5b8351620005928162000489565b6020850151604086015191945092506001600160401b03811115620005b657600080fd5b620005c486828701620004de565b9150509250925092565b600080600060608486031215620005e457600080fd5b8351620005f18162000489565b60208501519093506001600160401b03808211156200060f57600080fd5b6200061d87838801620004de565b935060408601519150808211156200063457600080fd5b50620005c486828701620004de565b6000825162000657818460208701620004b8565b9190910192915050565b828152604060208201526000825180604084015262000688816060850160208701620004b8565b601f01601f1916919091016060019392505050565b600060208284031215620006b057600080fd5b81516001600160e01b0319811681146200044a57600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572",
              }),
              ...i,
            });
            return (function (e, t) {
              let n = (0, v.v)(e) ? (0, g.O0)(e) : e,
                r = (0, v.v)(t) ? (0, g.O0)(t) : t;
              return (0, tc.Wd)(n, r);
            })(r ?? "0x0", "0x1");
          } catch (e) {
            if (e instanceof h.cg) return !1;
            throw e;
          }
        }
        async function t9(e, { address: t, message: n, signature: r, ...i }) {
          let a = (function (e, t) {
            let n =
                "string" == typeof e
                  ? (0, g.qX)(e)
                  : e.raw instanceof Uint8Array
                  ? e.raw
                  : (0, g.O0)(e.raw),
              r = (0, g.qX)(`Ethereum Signed Message:
${n.length}`);
            return (0, b.w)((0, y.zo)([r, n]), void 0);
          })(n);
          return t7(e, { address: t, hash: a, signature: r, ...i });
        }
        BigInt(0), t8.ProjectivePoint;
        var ne = n(17013),
          nt = n(89930),
          nn = n(51230);
        function nr({ data: e, primaryType: t, types: n }) {
          let r = (function e({ data: t, primaryType: n, types: r }) {
            let i = [{ type: "bytes32" }],
              a = [
                (function ({ primaryType: e, types: t }) {
                  let n = (0, d.NC)(
                    (function ({ primaryType: e, types: t }) {
                      let n = "",
                        r = (function e(
                          { primaryType: t, types: n },
                          r = new Set()
                        ) {
                          let i = t.match(/^\w*/u)?.[0];
                          if (r.has(i) || void 0 === n[i]) return r;
                          for (let t of (r.add(i), n[i]))
                            e({ primaryType: t.type, types: n }, r);
                          return r;
                        })({ primaryType: e, types: t });
                      r.delete(e);
                      let i = [e, ...Array.from(r).sort()];
                      for (let e of i)
                        n += `${e}(${t[e]
                          .map(({ name: e, type: t }) => `${t} ${e}`)
                          .join(",")})`;
                      return n;
                    })({ primaryType: e, types: t })
                  );
                  return (0, b.w)(n);
                })({ primaryType: n, types: r }),
              ];
            for (let o of r[n]) {
              let [n, s] = (function t({
                types: n,
                name: r,
                type: i,
                value: a,
              }) {
                if (void 0 !== n[i])
                  return [
                    { type: "bytes32" },
                    (0, b.w)(e({ data: a, primaryType: i, types: n })),
                  ];
                if ("bytes" === i) {
                  let e = a.length % 2 ? "0" : "";
                  return (
                    (a = `0x${e + a.slice(2)}`),
                    [{ type: "bytes32" }, (0, b.w)(a)]
                  );
                }
                if ("string" === i)
                  return [{ type: "bytes32" }, (0, b.w)((0, d.NC)(a))];
                if (i.lastIndexOf("]") === i.length - 1) {
                  let e = i.slice(0, i.lastIndexOf("[")),
                    o = a.map((i) =>
                      t({ name: r, type: e, types: n, value: i })
                    );
                  return [
                    { type: "bytes32" },
                    (0, b.w)(
                      (0, et.E)(
                        o.map(([e]) => e),
                        o.map(([, e]) => e)
                      )
                    ),
                  ];
                }
                return [{ type: i }, a];
              })({ types: r, name: o.name, type: o.type, value: t[o.name] });
              i.push(n), a.push(s);
            }
            return (0, et.E)(i, a);
          })({ data: e, primaryType: t, types: n });
          return (0, b.w)(r);
        }
        async function ni(e, t) {
          let {
              address: n,
              signature: r,
              message: i,
              primaryType: a,
              types: o,
              domain: s,
              ...u
            } = t,
            l = (function (e) {
              let { domain: t = {}, message: n, primaryType: r } = e,
                i = {
                  EIP712Domain: (function ({ domain: e }) {
                    return [
                      "string" == typeof e?.name && {
                        name: "name",
                        type: "string",
                      },
                      e?.version && { name: "version", type: "string" },
                      "number" == typeof e?.chainId && {
                        name: "chainId",
                        type: "uint256",
                      },
                      e?.verifyingContract && {
                        name: "verifyingContract",
                        type: "address",
                      },
                      e?.salt && { name: "salt", type: "bytes32" },
                    ].filter(Boolean);
                  })({ domain: t }),
                  ...e.types,
                };
              !(function (e) {
                let { domain: t, message: n, primaryType: r, types: i } = e,
                  a = (e, t) => {
                    for (let n of e) {
                      let { name: e, type: r } = n,
                        o = t[e],
                        s = r.match(nn.lh);
                      if (s && ("number" == typeof o || "bigint" == typeof o)) {
                        let [e, t, n] = s;
                        (0, d.eC)(o, {
                          signed: "int" === t,
                          size: parseInt(n) / 8,
                        });
                      }
                      if (
                        "address" === r &&
                        "string" == typeof o &&
                        !(0, nt.U)(o)
                      )
                        throw new ne.b({ address: o });
                      let u = r.match(nn.eL);
                      if (u) {
                        let [e, t] = u;
                        if (t && (0, eY.d)(o) !== parseInt(t))
                          throw new _.KY({
                            expectedSize: parseInt(t),
                            givenSize: (0, eY.d)(o),
                          });
                      }
                      let l = i[r];
                      l && a(l, o);
                    }
                  };
                if (
                  (i.EIP712Domain && t && a(i.EIP712Domain, t),
                  "EIP712Domain" !== r)
                ) {
                  let e = i[r];
                  a(e, n);
                }
              })({ domain: t, message: n, primaryType: r, types: i });
              let a = ["0x1901"];
              return (
                t &&
                  a.push(
                    (function ({ domain: e, types: t }) {
                      return nr({
                        data: e,
                        primaryType: "EIP712Domain",
                        types: t,
                      });
                    })({ domain: t, types: i })
                  ),
                "EIP712Domain" !== r &&
                  a.push(nr({ data: n, primaryType: r, types: i })),
                (0, b.w)((0, y.zo)(a))
              );
            })({ message: i, primaryType: a, types: o, domain: s });
          return t7(e, { address: n, hash: l, signature: r, ...u });
        }
        let na = new Map(),
          no = new Map(),
          ns = 0;
        function nu(e, t, n) {
          let r = ++ns,
            i = () => na.get(e) || [],
            a = () => {
              let t = i();
              na.set(
                e,
                t.filter((e) => e.id !== r)
              );
            },
            o = () => {
              let t = no.get(e);
              1 === i().length && t && t(), a();
            },
            s = i();
          if ((na.set(e, [...s, { id: r, fns: t }]), s && s.length > 0))
            return o;
          let u = {};
          for (let e in t)
            u[e] = (...t) => {
              let n = i();
              if (0 !== n.length) for (let r of n) r.fns[e]?.(...t);
            };
          let l = n(u);
          return "function" == typeof l && no.set(e, l), o;
        }
        var nl = n(9385),
          nc = n(87444),
          nd = n(23517);
        function nf(e, { emitOnBegin: t, initialWaitTime: n, interval: r }) {
          let i = !0,
            a = () => (i = !1),
            o = async () => {
              let o;
              t && (o = await e({ unpoll: a }));
              let s = (await n?.(o)) ?? r;
              await (0, nd.D)(s);
              let u = async () => {
                i && (await e({ unpoll: a }), await (0, nd.D)(r), u());
              };
              u();
            };
          return o(), a;
        }
        function np(
          e,
          {
            emitOnBegin: t = !1,
            emitMissed: n = !1,
            onBlockNumber: r,
            onError: i,
            poll: a,
            pollingInterval: o = e.pollingInterval,
          }
        ) {
          let s;
          let u =
            void 0 !== a
              ? a
              : "webSocket" !== e.transport.type &&
                ("fallback" !== e.transport.type ||
                  "webSocket" !== e.transport.transports[0].config.type);
          return u
            ? (() => {
                let a = (0, nc.P)(["watchBlockNumber", e.uid, t, n, o]);
                return nu(a, { onBlockNumber: r, onError: i }, (r) =>
                  nf(
                    async () => {
                      try {
                        let t = await C(
                          e,
                          eK,
                          "getBlockNumber"
                        )({ cacheTime: 0 });
                        if (s) {
                          if (t === s) return;
                          if (t - s > 1 && n)
                            for (let e = s + 1n; e < t; e++)
                              r.onBlockNumber(e, s), (s = e);
                        }
                        (!s || t > s) && (r.onBlockNumber(t, s), (s = t));
                      } catch (e) {
                        r.onError?.(e);
                      }
                    },
                    { emitOnBegin: t, interval: o }
                  )
                );
              })()
            : (() => {
                let a = (0, nc.P)(["watchBlockNumber", e.uid, t, n]);
                return nu(a, { onBlockNumber: r, onError: i }, (t) => {
                  let n = !0,
                    r = () => (n = !1);
                  return (
                    (async () => {
                      try {
                        let i = (() => {
                            if ("fallback" === e.transport.type) {
                              let t = e.transport.transports.find(
                                (e) => "webSocket" === e.config.type
                              );
                              return t ? t.value : e.transport;
                            }
                            return e.transport;
                          })(),
                          { unsubscribe: a } = await i.subscribe({
                            params: ["newHeads"],
                            onData(e) {
                              if (!n) return;
                              let r = (0, ex.y_)(e.result?.number);
                              t.onBlockNumber(r, s), (s = r);
                            },
                            onError(e) {
                              t.onError?.(e);
                            },
                          });
                        (r = a), n || r();
                      } catch (e) {
                        i?.(e);
                      }
                    })(),
                    () => r()
                  );
                });
              })();
        }
        async function nh(
          e,
          {
            confirmations: t = 1,
            hash: n,
            onReplaced: r,
            pollingInterval: i = e.pollingInterval,
            retryCount: a = 6,
            retryDelay: o = ({ count: e }) => 200 * ~~(1 << e),
            timeout: s,
          }
        ) {
          let u, l, c;
          let d = (0, nc.P)(["waitForTransactionReceipt", e.uid, n]),
            f = !1;
          return new Promise((p, h) => {
            s && setTimeout(() => h(new ef.mc({ hash: n })), s);
            let m = nu(d, { onReplaced: r, resolve: p, reject: h }, (r) => {
              let s = C(
                e,
                np,
                "watchBlockNumber"
              )({
                emitMissed: !0,
                emitOnBegin: !0,
                poll: !0,
                pollingInterval: i,
                async onBlockNumber(i) {
                  if (f) return;
                  let d = i,
                    p = (e) => {
                      s(), e(), m();
                    };
                  try {
                    if (c) {
                      if (
                        t > 1 &&
                        (!c.blockNumber || d - c.blockNumber + 1n < t)
                      )
                        return;
                      p(() => r.resolve(c));
                      return;
                    }
                    if (
                      (u ||
                        ((f = !0),
                        await (0, nl.J)(
                          async () => {
                            (u = await C(e, tn, "getTransaction")({ hash: n }))
                              .blockNumber && (d = u.blockNumber);
                          },
                          { delay: o, retryCount: a }
                        ),
                        (f = !1)),
                      (c = await C(
                        e,
                        ta,
                        "getTransactionReceipt"
                      )({ hash: n })),
                      t > 1 && (!c.blockNumber || d - c.blockNumber + 1n < t))
                    )
                      return;
                    p(() => r.resolve(c));
                  } catch (n) {
                    if (n instanceof ef.Bh || n instanceof ef.Yb) {
                      if (!u) {
                        f = !1;
                        return;
                      }
                      try {
                        (l = u), (f = !0);
                        let n = await (0, nl.J)(
                          () =>
                            C(
                              e,
                              eT,
                              "getBlock"
                            )({ blockNumber: d, includeTransactions: !0 }),
                          {
                            delay: o,
                            retryCount: a,
                            shouldRetry: ({ error: e }) => e instanceof eC,
                          }
                        );
                        f = !1;
                        let i = n.transactions.find(
                          ({ from: e, nonce: t }) =>
                            e === l.from && t === l.nonce
                        );
                        if (
                          !i ||
                          ((c = await C(
                            e,
                            ta,
                            "getTransactionReceipt"
                          )({ hash: i.hash })),
                          t > 1 &&
                            (!c.blockNumber || d - c.blockNumber + 1n < t))
                        )
                          return;
                        let s = "replaced";
                        i.to === l.to && i.value === l.value
                          ? (s = "repriced")
                          : i.from === i.to &&
                            0n === i.value &&
                            (s = "cancelled"),
                          p(() => {
                            r.onReplaced?.({
                              reason: s,
                              replacedTransaction: l,
                              transaction: i,
                              transactionReceipt: c,
                            }),
                              r.resolve(c);
                          });
                      } catch (e) {
                        p(() => r.reject(e));
                      }
                    } else p(() => r.reject(n));
                  }
                },
              });
            });
          });
        }
        async function nm(e, { serializedTransaction: t }) {
          return e.request(
            { method: "eth_sendRawTransaction", params: [t] },
            { retryCount: 0 }
          );
        }
        function ny(e) {
          return {
            call: (t) => (0, P.RE)(e, t),
            createBlockFilter: () => X(e),
            createContractEventFilter: (t) => es(e, t),
            createEventFilter: (t) => eu(e, t),
            createPendingTransactionFilter: () => el(e),
            estimateContractGas: (t) => e$(e, t),
            estimateGas: (t) => eU(e, t),
            getBalance: (t) => eq(e, t),
            getBlobBaseFee: () => eH(e),
            getBlock: (t) => eT(e, t),
            getBlockNumber: (t) => eK(e, t),
            getBlockTransactionCount: (t) => eZ(e, t),
            getBytecode: (t) => eJ(e, t),
            getChainId: () => eR(e),
            getContractEvents: (t) => e5(e, t),
            getEnsAddress: (t) => I(e, t),
            getEnsAvatar: (t) => K(e, t),
            getEnsName: (t) => Z(e, t),
            getEnsResolver: (t) => J(e, t),
            getEnsText: (t) => V(e, t),
            getFeeHistory: (t) => e4(e, t),
            estimateFeesPerGas: (t) => eI(e, t),
            getFilterChanges: (t) => e8(e, t),
            getFilterLogs: (t) => e7(e, t),
            getGasPrice: () => eS(e),
            getLogs: (t) => e3(e, t),
            getProof: (t) => e9(e, t),
            estimateMaxPriorityFeePerGas: (t) => eP(e, t),
            getStorageAt: (t) => te(e, t),
            getTransaction: (t) => tn(e, t),
            getTransactionConfirmations: (t) => tr(e, t),
            getTransactionCount: (t) => ek(e, t),
            getTransactionReceipt: (t) => ta(e, t),
            multicall: (t) => to(e, t),
            prepareTransactionRequest: (t) => eL(e, t),
            readContract: (t) => O(e, t),
            sendRawTransaction: (t) => nm(e, t),
            simulateContract: (t) => ts(e, t),
            verifyMessage: (t) => t9(e, t),
            verifyTypedData: (t) => ni(e, t),
            uninstallFilter: (t) => tu(e, t),
            waitForTransactionReceipt: (t) => nh(e, t),
            watchBlocks: (t) =>
              (function (
                e,
                {
                  blockTag: t = "latest",
                  emitMissed: n = !1,
                  emitOnBegin: r = !1,
                  onBlock: i,
                  onError: a,
                  includeTransactions: o,
                  poll: s,
                  pollingInterval: u = e.pollingInterval,
                }
              ) {
                let l, c, d;
                let f =
                    void 0 !== s
                      ? s
                      : "webSocket" !== e.transport.type &&
                        ("fallback" !== e.transport.type ||
                          "webSocket" !==
                            e.transport.transports[0].config.type),
                  p = o ?? !1;
                return f
                  ? (() => {
                      let o = (0, nc.P)(["watchBlocks", e.uid, t, n, r, p, u]);
                      return nu(o, { onBlock: i, onError: a }, (i) =>
                        nf(
                          async () => {
                            try {
                              let r = await C(
                                e,
                                eT,
                                "getBlock"
                              )({ blockTag: t, includeTransactions: p });
                              if (r.number && l?.number) {
                                if (r.number === l.number) return;
                                if (r.number - l.number > 1 && n)
                                  for (
                                    let t = l?.number + 1n;
                                    t < r.number;
                                    t++
                                  ) {
                                    let n = await C(
                                      e,
                                      eT,
                                      "getBlock"
                                    )({
                                      blockNumber: t,
                                      includeTransactions: p,
                                    });
                                    i.onBlock(n, l), (l = n);
                                  }
                              }
                              (!l?.number ||
                                ("pending" === t && !r?.number) ||
                                (r.number && r.number > l.number)) &&
                                (i.onBlock(r, l), (l = r));
                            } catch (e) {
                              i.onError?.(e);
                            }
                          },
                          { emitOnBegin: r, interval: u }
                        )
                      );
                    })()
                  : ((c = !0),
                    (d = () => (c = !1)),
                    (async () => {
                      try {
                        let t = (() => {
                            if ("fallback" === e.transport.type) {
                              let t = e.transport.transports.find(
                                (e) => "webSocket" === e.config.type
                              );
                              return t ? t.value : e.transport;
                            }
                            return e.transport;
                          })(),
                          { unsubscribe: n } = await t.subscribe({
                            params: ["newHeads"],
                            onData(t) {
                              if (!c) return;
                              let n =
                                  e.chain?.formatters?.block?.format || e_.Z,
                                r = n(t.result);
                              i(r, l), (l = r);
                            },
                            onError(e) {
                              a?.(e);
                            },
                          });
                        (d = n), c || d();
                      } catch (e) {
                        a?.(e);
                      }
                    })(),
                    () => d());
              })(e, t),
            watchBlockNumber: (t) => np(e, t),
            watchContractEvent: (t) =>
              (function (e, t) {
                let {
                    abi: n,
                    address: r,
                    args: i,
                    batch: a = !0,
                    eventName: o,
                    fromBlock: s,
                    onError: u,
                    onLogs: l,
                    poll: c,
                    pollingInterval: d = e.pollingInterval,
                    strict: f,
                  } = t,
                  p =
                    void 0 !== c
                      ? c
                      : "bigint" == typeof s ||
                        ("webSocket" !== e.transport.type &&
                          ("fallback" !== e.transport.type ||
                            "webSocket" !==
                              e.transport.transports[0].config.type));
                return p
                  ? (() => {
                      let t = f ?? !1,
                        c = (0, nc.P)([
                          "watchContractEvent",
                          r,
                          i,
                          a,
                          e.uid,
                          o,
                          d,
                          t,
                          s,
                        ]);
                      return nu(c, { onLogs: l, onError: u }, (u) => {
                        let l, c;
                        void 0 !== s && (l = s - 1n);
                        let f = !1,
                          p = nf(
                            async () => {
                              if (!f) {
                                try {
                                  c = await C(
                                    e,
                                    es,
                                    "createContractEventFilter"
                                  )({
                                    abi: n,
                                    address: r,
                                    args: i,
                                    eventName: o,
                                    strict: t,
                                    fromBlock: s,
                                  });
                                } catch {}
                                f = !0;
                                return;
                              }
                              try {
                                let s;
                                if (c)
                                  s = await C(
                                    e,
                                    e8,
                                    "getFilterChanges"
                                  )({ filter: c });
                                else {
                                  let a = await C(e, eK, "getBlockNumber")({});
                                  (s =
                                    l && l !== a
                                      ? await C(
                                          e,
                                          e5,
                                          "getContractEvents"
                                        )({
                                          abi: n,
                                          address: r,
                                          args: i,
                                          eventName: o,
                                          fromBlock: l + 1n,
                                          toBlock: a,
                                          strict: t,
                                        })
                                      : []),
                                    (l = a);
                                }
                                if (0 === s.length) return;
                                if (a) u.onLogs(s);
                                else for (let e of s) u.onLogs([e]);
                              } catch (e) {
                                c && e instanceof T.yR && (f = !1),
                                  u.onError?.(e);
                              }
                            },
                            { emitOnBegin: !0, interval: d }
                          );
                        return async () => {
                          c &&
                            (await C(e, tu, "uninstallFilter")({ filter: c })),
                            p();
                        };
                      });
                    })()
                  : (() => {
                      let t = (0, nc.P)([
                          "watchContractEvent",
                          r,
                          i,
                          a,
                          e.uid,
                          o,
                          d,
                          f ?? !1,
                        ]),
                        s = !0,
                        c = () => (s = !1);
                      return nu(
                        t,
                        { onLogs: l, onError: u },
                        (t) => (
                          (async () => {
                            try {
                              let a = (() => {
                                  if ("fallback" === e.transport.type) {
                                    let t = e.transport.transports.find(
                                      (e) => "webSocket" === e.config.type
                                    );
                                    return t ? t.value : e.transport;
                                  }
                                  return e.transport;
                                })(),
                                u = o
                                  ? ea({ abi: n, eventName: o, args: i })
                                  : [],
                                { unsubscribe: l } = await a.subscribe({
                                  params: ["logs", { address: r, topics: u }],
                                  onData(e) {
                                    if (!s) return;
                                    let r = e.result;
                                    try {
                                      let { eventName: e, args: i } = e1({
                                          abi: n,
                                          data: r.data,
                                          topics: r.topics,
                                          strict: f,
                                        }),
                                        a = (0, e6.U)(r, {
                                          args: i,
                                          eventName: e,
                                        });
                                      t.onLogs([a]);
                                    } catch (a) {
                                      let e, n;
                                      if (
                                        a instanceof _.SM ||
                                        a instanceof _.Gy
                                      ) {
                                        if (f) return;
                                        (e = a.abiItem.name),
                                          (n = a.abiItem.inputs?.some(
                                            (e) => !("name" in e && e.name)
                                          ));
                                      }
                                      let i = (0, e6.U)(r, {
                                        args: n ? [] : {},
                                        eventName: e,
                                      });
                                      t.onLogs([i]);
                                    }
                                  },
                                  onError(e) {
                                    t.onError?.(e);
                                  },
                                });
                              (c = l), s || c();
                            } catch (e) {
                              u?.(e);
                            }
                          })(),
                          () => c()
                        )
                      );
                    })();
              })(e, t),
            watchEvent: (t) =>
              (function (
                e,
                {
                  address: t,
                  args: n,
                  batch: r = !0,
                  event: i,
                  events: a,
                  fromBlock: o,
                  onError: s,
                  onLogs: u,
                  poll: l,
                  pollingInterval: c = e.pollingInterval,
                  strict: d,
                }
              ) {
                let f, p;
                let h =
                    void 0 !== l
                      ? l
                      : "bigint" == typeof o ||
                        ("webSocket" !== e.transport.type &&
                          ("fallback" !== e.transport.type ||
                            "webSocket" !==
                              e.transport.transports[0].config.type)),
                  m = d ?? !1;
                return h
                  ? (() => {
                      let l = (0, nc.P)([
                        "watchEvent",
                        t,
                        n,
                        r,
                        e.uid,
                        i,
                        c,
                        o,
                      ]);
                      return nu(l, { onLogs: u, onError: s }, (s) => {
                        let u, l;
                        void 0 !== o && (u = o - 1n);
                        let d = !1,
                          f = nf(
                            async () => {
                              if (!d) {
                                try {
                                  l = await C(
                                    e,
                                    eu,
                                    "createEventFilter"
                                  )({
                                    address: t,
                                    args: n,
                                    event: i,
                                    events: a,
                                    strict: m,
                                    fromBlock: o,
                                  });
                                } catch {}
                                d = !0;
                                return;
                              }
                              try {
                                let o;
                                if (l)
                                  o = await C(
                                    e,
                                    e8,
                                    "getFilterChanges"
                                  )({ filter: l });
                                else {
                                  let r = await C(e, eK, "getBlockNumber")({});
                                  (o =
                                    u && u !== r
                                      ? await C(
                                          e,
                                          e3,
                                          "getLogs"
                                        )({
                                          address: t,
                                          args: n,
                                          event: i,
                                          events: a,
                                          fromBlock: u + 1n,
                                          toBlock: r,
                                        })
                                      : []),
                                    (u = r);
                                }
                                if (0 === o.length) return;
                                if (r) s.onLogs(o);
                                else for (let e of o) s.onLogs([e]);
                              } catch (e) {
                                l && e instanceof T.yR && (d = !1),
                                  s.onError?.(e);
                              }
                            },
                            { emitOnBegin: !0, interval: c }
                          );
                        return async () => {
                          l &&
                            (await C(e, tu, "uninstallFilter")({ filter: l })),
                            f();
                        };
                      });
                    })()
                  : ((f = !0),
                    (p = () => (f = !1)),
                    (async () => {
                      try {
                        let r = (() => {
                            if ("fallback" === e.transport.type) {
                              let t = e.transport.transports.find(
                                (e) => "webSocket" === e.config.type
                              );
                              return t ? t.value : e.transport;
                            }
                            return e.transport;
                          })(),
                          o = a ?? (i ? [i] : void 0),
                          l = [];
                        o &&
                          ((l = [
                            o.flatMap((e) =>
                              ea({ abi: [e], eventName: e.name, args: n })
                            ),
                          ]),
                          i && (l = l[0]));
                        let { unsubscribe: c } = await r.subscribe({
                          params: ["logs", { address: t, topics: l }],
                          onData(e) {
                            if (!f) return;
                            let t = e.result;
                            try {
                              let { eventName: e, args: n } = e1({
                                  abi: o ?? [],
                                  data: t.data,
                                  topics: t.topics,
                                  strict: m,
                                }),
                                r = (0, e6.U)(t, { args: n, eventName: e });
                              u([r]);
                            } catch (i) {
                              let e, n;
                              if (i instanceof _.SM || i instanceof _.Gy) {
                                if (d) return;
                                (e = i.abiItem.name),
                                  (n = i.abiItem.inputs?.some(
                                    (e) => !("name" in e && e.name)
                                  ));
                              }
                              let r = (0, e6.U)(t, {
                                args: n ? [] : {},
                                eventName: e,
                              });
                              u([r]);
                            }
                          },
                          onError(e) {
                            s?.(e);
                          },
                        });
                        (p = c), f || p();
                      } catch (e) {
                        s?.(e);
                      }
                    })(),
                    () => p());
              })(e, t),
            watchPendingTransactions: (t) =>
              (function (
                e,
                {
                  batch: t = !0,
                  onError: n,
                  onTransactions: r,
                  poll: i,
                  pollingInterval: a = e.pollingInterval,
                }
              ) {
                let o, s;
                let u = void 0 !== i ? i : "webSocket" !== e.transport.type;
                return u
                  ? (() => {
                      let i = (0, nc.P)([
                        "watchPendingTransactions",
                        e.uid,
                        t,
                        a,
                      ]);
                      return nu(i, { onTransactions: r, onError: n }, (n) => {
                        let r;
                        let i = nf(
                          async () => {
                            try {
                              if (!r)
                                try {
                                  r = await C(
                                    e,
                                    el,
                                    "createPendingTransactionFilter"
                                  )({});
                                  return;
                                } catch (e) {
                                  throw (i(), e);
                                }
                              let a = await C(
                                e,
                                e8,
                                "getFilterChanges"
                              )({ filter: r });
                              if (0 === a.length) return;
                              if (t) n.onTransactions(a);
                              else for (let e of a) n.onTransactions([e]);
                            } catch (e) {
                              n.onError?.(e);
                            }
                          },
                          { emitOnBegin: !0, interval: a }
                        );
                        return async () => {
                          r &&
                            (await C(e, tu, "uninstallFilter")({ filter: r })),
                            i();
                        };
                      });
                    })()
                  : ((o = !0),
                    (s = () => (o = !1)),
                    (async () => {
                      try {
                        let { unsubscribe: t } = await e.transport.subscribe({
                          params: ["newPendingTransactions"],
                          onData(e) {
                            if (!o) return;
                            let t = e.result;
                            r([t]);
                          },
                          onError(e) {
                            n?.(e);
                          },
                        });
                        (s = t), o || s();
                      } catch (e) {
                        n?.(e);
                      }
                    })(),
                    () => s());
              })(e, t),
          };
        }
        function ng(e) {
          let { key: t = "public", name: n = "Public Client" } = e,
            o = (function (e) {
              let {
                  batch: t,
                  cacheTime: n = e.pollingInterval ?? 4e3,
                  ccipRead: o,
                  key: s = "base",
                  name: u = "Base Client",
                  pollingInterval: l = 4e3,
                  type: c = "base",
                } = e,
                d = e.chain,
                f = e.account ? (0, i.T)(e.account) : void 0,
                {
                  config: p,
                  request: h,
                  value: m,
                } = e.transport({ chain: d, pollingInterval: l }),
                y = { ...p, ...m },
                g = {
                  account: f,
                  batch: t,
                  cacheTime: n,
                  ccipRead: o,
                  chain: d,
                  key: s,
                  name: u,
                  pollingInterval: l,
                  request: h,
                  transport: y,
                  type: c,
                  uid: (function (e = 11) {
                    if (!r || a + e > 512) {
                      (r = ""), (a = 0);
                      for (let e = 0; e < 256; e++)
                        r += ((256 + 256 * Math.random()) | 0)
                          .toString(16)
                          .substring(1);
                    }
                    return r.substring(a, a++ + e);
                  })(),
                };
              return Object.assign(g, {
                extend: (function e(t) {
                  return (n) => {
                    let r = n(t);
                    for (let e in g) delete r[e];
                    let i = { ...t, ...r };
                    return Object.assign(i, { extend: e(i) });
                  };
                })(g),
              });
            })({ ...e, key: t, name: n, type: "publicClient" });
          return o.extend(ny);
        }
      },
      38464: function (e, t, n) {
        "use strict";
        n.d(t, {
          d: function () {
            return d;
          },
        });
        var r = n(64676),
          i = n(49964);
        class a extends i.G {
          constructor() {
            super(
              "No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.",
              { docsPath: "/docs/clients/intro" }
            );
          }
        }
        var o = n(54790),
          s = n(87444);
        let u = {
          current: 0,
          take() {
            return this.current++;
          },
          reset() {
            this.current = 0;
          },
        };
        var l = n(79326),
          c = n(9385);
        function d(e, t = {}) {
          let {
            batch: n,
            fetchOptions: d,
            key: f = "http",
            name: p = "HTTP JSON-RPC",
            onFetchRequest: h,
            onFetchResponse: m,
            retryDelay: y,
          } = t;
          return ({ chain: g, retryCount: b, timeout: v }) => {
            let { batchSize: w = 1e3, wait: E = 0 } =
                "object" == typeof n ? n : {},
              x = t.retryCount ?? b,
              C = v ?? t.timeout ?? 1e4,
              _ = e || g?.rpcUrls.default.http[0];
            if (!_) throw new a();
            let T = (function (e, t = {}) {
              return {
                async request(n) {
                  let {
                      body: i,
                      onRequest: a = t.onRequest,
                      onResponse: o = t.onResponse,
                      timeout: l = t.timeout ?? 1e4,
                    } = n,
                    c = {
                      ...(t.fetchOptions ?? {}),
                      ...(n.fetchOptions ?? {}),
                    },
                    { headers: d, method: f, signal: p } = c;
                  try {
                    let t;
                    let n = await (function (
                      e,
                      {
                        errorInstance: t = Error("timed out"),
                        timeout: n,
                        signal: r,
                      }
                    ) {
                      return new Promise((i, a) => {
                        (async () => {
                          let o;
                          try {
                            let s = new AbortController();
                            n > 0 &&
                              (o = setTimeout(() => {
                                r ? s.abort() : a(t);
                              }, n)),
                              i(await e({ signal: s?.signal || null }));
                          } catch (e) {
                            "AbortError" === e.name && a(t), a(e);
                          } finally {
                            clearTimeout(o);
                          }
                        })();
                      });
                    })(
                      async ({ signal: t }) => {
                        let n = {
                            ...c,
                            body: Array.isArray(i)
                              ? (0, s.P)(
                                  i.map((e) => ({
                                    jsonrpc: "2.0",
                                    id: e.id ?? u.take(),
                                    ...e,
                                  }))
                                )
                              : (0, s.P)({
                                  jsonrpc: "2.0",
                                  id: i.id ?? u.take(),
                                  ...i,
                                }),
                            headers: {
                              ...d,
                              "Content-Type": "application/json",
                            },
                            method: f || "POST",
                            signal: p || (l > 0 ? t : null),
                          },
                          r = new Request(e, n);
                        a && (await a(r));
                        let o = await fetch(e, n);
                        return o;
                      },
                      {
                        errorInstance: new r.W5({ body: i, url: e }),
                        timeout: l,
                        signal: !0,
                      }
                    );
                    if (
                      (o && (await o(n)),
                      n.headers
                        .get("Content-Type")
                        ?.startsWith("application/json")
                        ? (t = await n.json())
                        : ((t = await n.text()), (t = JSON.parse(t || "{}"))),
                      !n.ok)
                    )
                      throw new r.Gg({
                        body: i,
                        details: (0, s.P)(t.error) || n.statusText,
                        headers: n.headers,
                        status: n.status,
                        url: e,
                      });
                    return t;
                  } catch (t) {
                    if (t instanceof r.Gg || t instanceof r.W5) throw t;
                    throw new r.Gg({ body: i, details: t.message, url: e });
                  }
                },
              };
            })(_, { fetchOptions: d, onRequest: h, onResponse: m, timeout: C });
            return (function (
              {
                key: e,
                name: t,
                request: n,
                retryCount: a = 3,
                retryDelay: o = 150,
                timeout: s,
                type: u,
              },
              d
            ) {
              return {
                config: {
                  key: e,
                  name: t,
                  request: n,
                  retryCount: a,
                  retryDelay: o,
                  timeout: s,
                  type: u,
                },
                request: (function (e, t = {}) {
                  return async (n, a = {}) => {
                    let { retryDelay: o = 150, retryCount: s = 3 } = {
                      ...t,
                      ...a,
                    };
                    return (0, c.J)(
                      async () => {
                        try {
                          return await e(n);
                        } catch (e) {
                          switch (e.code) {
                            case l.s7.code:
                              throw new l.s7(e);
                            case l.B.code:
                              throw new l.B(e);
                            case l.LX.code:
                              throw new l.LX(e);
                            case l.nY.code:
                              throw new l.nY(e);
                            case l.XS.code:
                              throw new l.XS(e);
                            case l.yR.code:
                              throw new l.yR(e);
                            case l.Og.code:
                              throw new l.Og(e);
                            case l.pT.code:
                              throw new l.pT(e);
                            case l.KB.code:
                              throw new l.KB(e);
                            case l.gS.code:
                              throw new l.gS(e);
                            case l.Pv.code:
                              throw new l.Pv(e);
                            case l.GD.code:
                              throw new l.GD(e);
                            case l.ab.code:
                              throw new l.ab(e);
                            case l.PE.code:
                              throw new l.PE(e);
                            case l.Ts.code:
                              throw new l.Ts(e);
                            case l.u5.code:
                              throw new l.u5(e);
                            case l.I0.code:
                              throw new l.I0(e);
                            case l.x3.code:
                              throw new l.x3(e);
                            case 5e3:
                              throw new l.ab(e);
                            default:
                              if (e instanceof i.G) throw e;
                              throw new l.ir(e);
                          }
                        }
                      },
                      {
                        delay: ({ count: e, error: t }) => {
                          if (t && t instanceof r.Gg) {
                            let e = t?.headers?.get("Retry-After");
                            if (e?.match(/\d/)) return 1e3 * parseInt(e);
                          }
                          return ~~(1 << e) * o;
                        },
                        retryCount: s,
                        shouldRetry: ({ error: e }) =>
                          "code" in e && "number" == typeof e.code
                            ? -1 === e.code ||
                              e.code === l.Pv.code ||
                              e.code === l.XS.code
                            : !(e instanceof r.Gg) ||
                              !e.status ||
                              403 === e.status ||
                              408 === e.status ||
                              413 === e.status ||
                              429 === e.status ||
                              500 === e.status ||
                              502 === e.status ||
                              503 === e.status ||
                              504 === e.status,
                      }
                    );
                  };
                })(n, { retryCount: a, retryDelay: o }),
                value: d,
              };
            })(
              {
                key: f,
                name: p,
                async request({ method: t, params: i }) {
                  let a = { method: t, params: i },
                    { schedule: s } = (0, o.S)({
                      id: `${e}`,
                      wait: E,
                      shouldSplitBatch: (e) => e.length > w,
                      fn: (e) => T.request({ body: e }),
                      sort: (e, t) => e.id - t.id,
                    }),
                    u = async (e) =>
                      n ? s(e) : [await T.request({ body: e })],
                    [{ error: l, result: c }] = await u(a);
                  if (l) throw new r.bs({ body: a, error: l, url: _ });
                  return c;
                },
                retryCount: x,
                retryDelay: y,
                timeout: C,
                type: "http",
              },
              { fetchOptions: d, url: _ }
            );
          };
        }
      },
      20033: function (e, t, n) {
        "use strict";
        n.d(t, {
          $o: function () {
            return l;
          },
          F8: function () {
            return r;
          },
          X$: function () {
            return u;
          },
          du: function () {
            return o;
          },
          k3: function () {
            return a;
          },
          nZ: function () {
            return s;
          },
        });
        let r = [
            {
              inputs: [
                {
                  components: [
                    { name: "target", type: "address" },
                    { name: "allowFailure", type: "bool" },
                    { name: "callData", type: "bytes" },
                  ],
                  name: "calls",
                  type: "tuple[]",
                },
              ],
              name: "aggregate3",
              outputs: [
                {
                  components: [
                    { name: "success", type: "bool" },
                    { name: "returnData", type: "bytes" },
                  ],
                  name: "returnData",
                  type: "tuple[]",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
          ],
          i = [
            { inputs: [], name: "ResolverNotFound", type: "error" },
            { inputs: [], name: "ResolverWildcardNotSupported", type: "error" },
            { inputs: [], name: "ResolverNotContract", type: "error" },
            {
              inputs: [{ name: "returnData", type: "bytes" }],
              name: "ResolverError",
              type: "error",
            },
            {
              inputs: [
                {
                  components: [
                    { name: "status", type: "uint16" },
                    { name: "message", type: "string" },
                  ],
                  name: "errors",
                  type: "tuple[]",
                },
              ],
              name: "HttpError",
              type: "error",
            },
          ],
          a = [
            ...i,
            {
              name: "resolve",
              type: "function",
              stateMutability: "view",
              inputs: [
                { name: "name", type: "bytes" },
                { name: "data", type: "bytes" },
              ],
              outputs: [
                { name: "", type: "bytes" },
                { name: "address", type: "address" },
              ],
            },
            {
              name: "resolve",
              type: "function",
              stateMutability: "view",
              inputs: [
                { name: "name", type: "bytes" },
                { name: "data", type: "bytes" },
                { name: "gateways", type: "string[]" },
              ],
              outputs: [
                { name: "", type: "bytes" },
                { name: "address", type: "address" },
              ],
            },
          ],
          o = [
            ...i,
            {
              name: "reverse",
              type: "function",
              stateMutability: "view",
              inputs: [{ type: "bytes", name: "reverseName" }],
              outputs: [
                { type: "string", name: "resolvedName" },
                { type: "address", name: "resolvedAddress" },
                { type: "address", name: "reverseResolver" },
                { type: "address", name: "resolver" },
              ],
            },
            {
              name: "reverse",
              type: "function",
              stateMutability: "view",
              inputs: [
                { type: "bytes", name: "reverseName" },
                { type: "string[]", name: "gateways" },
              ],
              outputs: [
                { type: "string", name: "resolvedName" },
                { type: "address", name: "resolvedAddress" },
                { type: "address", name: "reverseResolver" },
                { type: "address", name: "resolver" },
              ],
            },
          ],
          s = [
            {
              name: "text",
              type: "function",
              stateMutability: "view",
              inputs: [
                { name: "name", type: "bytes32" },
                { name: "key", type: "string" },
              ],
              outputs: [{ name: "", type: "string" }],
            },
          ],
          u = [
            {
              name: "addr",
              type: "function",
              stateMutability: "view",
              inputs: [{ name: "name", type: "bytes32" }],
              outputs: [{ name: "", type: "address" }],
            },
            {
              name: "addr",
              type: "function",
              stateMutability: "view",
              inputs: [
                { name: "name", type: "bytes32" },
                { name: "coinType", type: "uint256" },
              ],
              outputs: [{ name: "", type: "bytes" }],
            },
          ],
          l = [
            {
              inputs: [
                { internalType: "address", name: "_signer", type: "address" },
                { internalType: "bytes32", name: "_hash", type: "bytes32" },
                { internalType: "bytes", name: "_signature", type: "bytes" },
              ],
              stateMutability: "nonpayable",
              type: "constructor",
            },
          ];
      },
      66834: function (e, t, n) {
        "use strict";
        n.d(t, {
          D: function () {
            return r;
          },
        });
        let r = "0x0000000000000000000000000000000000000000";
      },
      75366: function (e, t, n) {
        "use strict";
        n.d(t, {
          lc: function () {
            return r;
          },
        });
        let r = 1;
      },
      21829: function (e, t, n) {
        "use strict";
        n.d(t, {
          $: function () {
            return r;
          },
          Up: function () {
            return i;
          },
          hZ: function () {
            return a;
          },
        });
        let r = {
            1: "An `assert` condition failed.",
            17: "Arithmetic operation resulted in underflow or overflow.",
            18: "Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).",
            33: "Attempted to convert to an invalid type.",
            34: "Attempted to access a storage byte array that is incorrectly encoded.",
            49: "Performed `.pop()` on an empty array",
            50: "Array index is out of bounds.",
            65: "Allocated too much memory or created an array which is too large.",
            81: "Attempted to call a zero-initialized variable of internal function type.",
          },
          i = {
            inputs: [{ name: "message", type: "string" }],
            name: "Error",
            type: "error",
          },
          a = {
            inputs: [{ name: "reason", type: "uint256" }],
            name: "Panic",
            type: "error",
          };
      },
      85761: function (e, t, n) {
        "use strict";
        n.d(t, {
          Zn: function () {
            return i;
          },
          ez: function () {
            return r;
          },
        });
        let r = { gwei: 9, wei: 18 },
          i = { ether: -9, wei: 9 };
      },
      90280: function (e, t, n) {
        "use strict";
        n.d(t, {
          CI: function () {
            return _;
          },
          FM: function () {
            return h;
          },
          Gy: function () {
            return x;
          },
          KY: function () {
            return w;
          },
          M4: function () {
            return d;
          },
          MX: function () {
            return b;
          },
          Mi: function () {
            return P;
          },
          S4: function () {
            return v;
          },
          SM: function () {
            return E;
          },
          cO: function () {
            return s;
          },
          dh: function () {
            return C;
          },
          fM: function () {
            return o;
          },
          fs: function () {
            return f;
          },
          gr: function () {
            return c;
          },
          hn: function () {
            return T;
          },
          lC: function () {
            return m;
          },
          mv: function () {
            return y;
          },
          wM: function () {
            return S;
          },
          wb: function () {
            return l;
          },
          xB: function () {
            return u;
          },
          xL: function () {
            return g;
          },
          yP: function () {
            return p;
          },
        });
        var r = n(5246),
          i = n(98244),
          a = n(49964);
        class o extends a.G {
          constructor({ docsPath: e }) {
            super(
              "A constructor was not found on the ABI.\nMake sure you are using the correct ABI and that the constructor exists on it.",
              { docsPath: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiConstructorNotFoundError",
              });
          }
        }
        class s extends a.G {
          constructor({ docsPath: e }) {
            super(
              "Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.\nMake sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.",
              { docsPath: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiConstructorParamsNotFoundError",
              });
          }
        }
        class u extends a.G {
          constructor({ data: e, params: t, size: n }) {
            super(
              `Data size of ${n} bytes is too small for given parameters.`,
              {
                metaMessages: [
                  `Params: (${(0, r.h)(t, { includeName: !0 })})`,
                  `Data:   ${e} (${n} bytes)`,
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiDecodingDataSizeTooSmallError",
              }),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "params", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "size", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.data = e),
              (this.params = t),
              (this.size = n);
          }
        }
        class l extends a.G {
          constructor() {
            super('Cannot decode zero data ("0x") with ABI parameters.'),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiDecodingZeroDataError",
              });
          }
        }
        class c extends a.G {
          constructor({ expectedLength: e, givenLength: t, type: n }) {
            super(`ABI encoding array length mismatch for type ${n}.
Expected length: ${e}
Given length: ${t}`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEncodingArrayLengthMismatchError",
              });
          }
        }
        class d extends a.G {
          constructor({ expectedSize: e, value: t }) {
            super(
              `Size of bytes "${t}" (bytes${(0, i.d)(
                t
              )}) does not match expected size (bytes${e}).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEncodingBytesSizeMismatchError",
              });
          }
        }
        class f extends a.G {
          constructor({ expectedLength: e, givenLength: t }) {
            super(`ABI encoding params/values length mismatch.
Expected length (params): ${e}
Given length (values): ${t}`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEncodingLengthMismatchError",
              });
          }
        }
        class p extends a.G {
          constructor(e, { docsPath: t }) {
            super(
              `Encoded error signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the error exists on it.
You can look up the decoded signature here: https://openchain.xyz/signatures?query=${e}.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiErrorSignatureNotFoundError",
              }),
              Object.defineProperty(this, "signature", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.signature = e);
          }
        }
        class h extends a.G {
          constructor({ docsPath: e }) {
            super("Cannot extract event signature from empty topics.", {
              docsPath: e,
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEventSignatureEmptyTopicsError",
              });
          }
        }
        class m extends a.G {
          constructor(e, { docsPath: t }) {
            super(
              `Encoded event signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.
You can look up the signature here: https://openchain.xyz/signatures?query=${e}.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEventSignatureNotFoundError",
              });
          }
        }
        class y extends a.G {
          constructor(e, { docsPath: t } = {}) {
            super(
              `Event ${e ? `"${e}" ` : ""}not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEventNotFoundError",
              });
          }
        }
        class g extends a.G {
          constructor(e, { docsPath: t } = {}) {
            super(
              `Function ${e ? `"${e}" ` : ""}not found on ABI.
Make sure you are using the correct ABI and that the function exists on it.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiFunctionNotFoundError",
              });
          }
        }
        class b extends a.G {
          constructor(e, { docsPath: t }) {
            super(
              `Function "${e}" does not contain any \`outputs\` on ABI.
Cannot decode function result without knowing what the parameter types are.
Make sure you are using the correct ABI and that the function exists on it.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiFunctionOutputsNotFoundError",
              });
          }
        }
        class v extends a.G {
          constructor(e, t) {
            super("Found ambiguous types in overloaded ABI items.", {
              metaMessages: [
                `\`${e.type}\` in \`${(0, r.t)(e.abiItem)}\`, and`,
                `\`${t.type}\` in \`${(0, r.t)(t.abiItem)}\``,
                "",
                "These types encode differently and cannot be distinguished at runtime.",
                "Remove one of the ambiguous items in the ABI.",
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiItemAmbiguityError",
              });
          }
        }
        class w extends a.G {
          constructor({ expectedSize: e, givenSize: t }) {
            super(`Expected bytes${e}, got bytes${t}.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "BytesSizeMismatchError",
              });
          }
        }
        class E extends a.G {
          constructor({ abiItem: e, data: t, params: n, size: i }) {
            super(
              `Data size of ${i} bytes is too small for non-indexed event parameters.`,
              {
                metaMessages: [
                  `Params: (${(0, r.h)(n, { includeName: !0 })})`,
                  `Data:   ${t} (${i} bytes)`,
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "DecodeLogDataMismatch",
              }),
              Object.defineProperty(this, "abiItem", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "params", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "size", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.abiItem = e),
              (this.data = t),
              (this.params = n),
              (this.size = i);
          }
        }
        class x extends a.G {
          constructor({ abiItem: e, param: t }) {
            super(
              `Expected a topic for indexed event parameter${
                t.name ? ` "${t.name}"` : ""
              } on event "${(0, r.t)(e, { includeName: !0 })}".`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "DecodeLogTopicsMismatch",
              }),
              Object.defineProperty(this, "abiItem", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.abiItem = e);
          }
        }
        class C extends a.G {
          constructor(e, { docsPath: t }) {
            super(
              `Type "${e}" is not a valid encoding type.
Please provide a valid ABI type.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidAbiEncodingType",
              });
          }
        }
        class _ extends a.G {
          constructor(e, { docsPath: t }) {
            super(
              `Type "${e}" is not a valid decoding type.
Please provide a valid ABI type.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidAbiDecodingType",
              });
          }
        }
        class T extends a.G {
          constructor(e) {
            super(`Value "${e}" is not a valid array.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidArrayError",
              });
          }
        }
        class S extends a.G {
          constructor(e) {
            super(`"${e}" is not a valid definition type.
Valid types: "function", "event", "error"`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidDefinitionTypeError",
              });
          }
        }
        class P extends a.G {
          constructor(e) {
            super(`Type "${e}" is not supported for packed encoding.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnsupportedPackedAbiType",
              });
          }
        }
      },
      17013: function (e, t, n) {
        "use strict";
        n.d(t, {
          b: function () {
            return i;
          },
        });
        var r = n(49964);
        class i extends r.G {
          constructor({ address: e }) {
            super(`Address "${e}" is invalid.`, {
              metaMessages: [
                "- Address must be a hex value of 20 bytes (40 hex characters).",
                "- Address must match its checksum counterpart.",
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidAddressError",
              });
          }
        }
      },
      49964: function (e, t, n) {
        "use strict";
        n.d(t, {
          G: function () {
            return i;
          },
        });
        var r = n(65125);
        class i extends Error {
          constructor(e, t = {}) {
            super(),
              Object.defineProperty(this, "details", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "docsPath", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "metaMessages", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "shortMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ViemError",
              }),
              Object.defineProperty(this, "version", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: (0, r.bo)(),
              });
            let n =
                t.cause instanceof i
                  ? t.cause.details
                  : t.cause?.message
                  ? t.cause.message
                  : t.details,
              a = (t.cause instanceof i && t.cause.docsPath) || t.docsPath;
            (this.message = [
              e || "An error occurred.",
              "",
              ...(t.metaMessages ? [...t.metaMessages, ""] : []),
              ...(a
                ? [
                    `Docs: https://viem.sh${a}${
                      t.docsSlug ? `#${t.docsSlug}` : ""
                    }`,
                  ]
                : []),
              ...(n ? [`Details: ${n}`] : []),
              `Version: ${this.version}`,
            ].join("\n")),
              t.cause && (this.cause = t.cause),
              (this.details = n),
              (this.docsPath = a),
              (this.metaMessages = t.metaMessages),
              (this.shortMessage = e);
          }
          walk(e) {
            return (function e(t, n) {
              return n?.(t)
                ? t
                : t && "object" == typeof t && "cause" in t
                ? e(t.cause, n)
                : n
                ? null
                : t;
            })(this, e);
          }
        }
      },
      32959: function (e, t, n) {
        "use strict";
        n.d(t, {
          RX: function () {
            return o;
          },
          cJ: function () {
            return u;
          },
          m7: function () {
            return a;
          },
          xd: function () {
            return s;
          },
        });
        var r = n(75366),
          i = n(49964);
        class a extends i.G {
          constructor({ maxSize: e, size: t }) {
            super("Blob size is too large.", {
              metaMessages: [`Max: ${e} bytes`, `Given: ${t} bytes`],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "BlobSizeTooLargeError",
              });
          }
        }
        class o extends i.G {
          constructor() {
            super("Blob data must not be empty."),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "EmptyBlobError",
              });
          }
        }
        class s extends i.G {
          constructor({ hash: e, size: t }) {
            super(`Versioned hash "${e}" size is invalid.`, {
              metaMessages: ["Expected: 32", `Received: ${t}`],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidVersionedHashSizeError",
              });
          }
        }
        class u extends i.G {
          constructor({ hash: e, version: t }) {
            super(`Versioned hash "${e}" version is invalid.`, {
              metaMessages: [`Expected: ${r.lc}`, `Received: ${t}`],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidVersionedHashVersionError",
              });
          }
        }
      },
      14921: function (e, t, n) {
        "use strict";
        n.d(t, {
          hJ: function () {
            return o;
          },
          mm: function () {
            return i;
          },
          pZ: function () {
            return a;
          },
        });
        var r = n(49964);
        class i extends r.G {
          constructor({ blockNumber: e, chain: t, contract: n }) {
            super(`Chain "${t.name}" does not support contract "${n.name}".`, {
              metaMessages: [
                "This could be due to any of the following:",
                ...(e && n.blockCreated && n.blockCreated > e
                  ? [
                      `- The contract "${n.name}" was not deployed until block ${n.blockCreated} (current block ${e}).`,
                    ]
                  : [
                      `- The chain does not have the contract "${n.name}" configured.`,
                    ]),
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ChainDoesNotSupportContract",
              });
          }
        }
        class a extends r.G {
          constructor() {
            super("No chain was provided to the Client."),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ClientChainNotConfiguredError",
              });
          }
        }
        class o extends r.G {
          constructor({ chainId: e }) {
            super(
              "number" == typeof e
                ? `Chain ID "${e}" is invalid.`
                : "Chain ID is invalid."
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidChainIdError",
              });
          }
        }
      },
      24981: function (e, t, n) {
        "use strict";
        n.d(t, {
          cg: function () {
            return g;
          },
          uq: function () {
            return b;
          },
          Lu: function () {
            return v;
          },
          Dk: function () {
            return w;
          },
          VQ: function () {
            return E;
          },
        });
        var r = n(46176),
          i = n(21829),
          a = n(86979),
          o = n(5246),
          s = n(87444);
        function u({
          abiItem: e,
          args: t,
          includeFunctionName: n = !0,
          includeName: r = !1,
        }) {
          if ("name" in e && "inputs" in e && e.inputs)
            return `${n ? e.name : ""}(${e.inputs
              .map(
                (e, n) =>
                  `${r && e.name ? `${e.name}: ` : ""}${
                    "object" == typeof t[n] ? (0, s.P)(t[n]) : t[n]
                  }`
              )
              .join(", ")})`;
        }
        var l = n(76029),
          c = n(27497),
          d = n(97393),
          f = n(90280),
          p = n(49964),
          h = n(43059),
          m = n(70392),
          y = n(65125);
        class g extends p.G {
          constructor(
            e,
            {
              account: t,
              docsPath: n,
              chain: i,
              data: a,
              gas: o,
              gasPrice: s,
              maxFeePerGas: u,
              maxPriorityFeePerGas: l,
              nonce: f,
              to: p,
              value: y,
              stateOverride: g,
            }
          ) {
            let b = t ? (0, r.T)(t) : void 0,
              v = (0, m.xr)({
                from: b?.address,
                to: p,
                value:
                  void 0 !== y &&
                  `${(0, c.d)(y)} ${i?.nativeCurrency?.symbol || "ETH"}`,
                data: a,
                gas: o,
                gasPrice: void 0 !== s && `${(0, d.o)(s)} gwei`,
                maxFeePerGas: void 0 !== u && `${(0, d.o)(u)} gwei`,
                maxPriorityFeePerGas: void 0 !== l && `${(0, d.o)(l)} gwei`,
                nonce: f,
              });
            g &&
              (v += `
${(0, h.Bj)(g)}`),
              super(e.shortMessage, {
                cause: e,
                docsPath: n,
                metaMessages: [
                  ...(e.metaMessages ? [...e.metaMessages, " "] : []),
                  "Raw Call Arguments:",
                  v,
                ].filter(Boolean),
              }),
              Object.defineProperty(this, "cause", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "CallExecutionError",
              }),
              (this.cause = e);
          }
        }
        class b extends p.G {
          constructor(
            e,
            {
              abi: t,
              args: n,
              contractAddress: r,
              docsPath: i,
              functionName: a,
              sender: s,
            }
          ) {
            let c = (0, l.mE)({ abi: t, args: n, name: a }),
              d = c
                ? u({
                    abiItem: c,
                    args: n,
                    includeFunctionName: !1,
                    includeName: !1,
                  })
                : void 0,
              f = c ? (0, o.t)(c, { includeName: !0 }) : void 0,
              p = (0, m.xr)({
                address: r && (0, y.CR)(r),
                function: f,
                args:
                  d &&
                  "()" !== d &&
                  `${[...Array(a?.length ?? 0).keys()]
                    .map(() => " ")
                    .join("")}${d}`,
                sender: s,
              });
            super(
              e.shortMessage ||
                `An unknown error occurred while executing the contract function "${a}".`,
              {
                cause: e,
                docsPath: i,
                metaMessages: [
                  ...(e.metaMessages ? [...e.metaMessages, " "] : []),
                  "Contract Call:",
                  p,
                ].filter(Boolean),
              }
            ),
              Object.defineProperty(this, "abi", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "args", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "cause", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "contractAddress", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "formattedArgs", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "functionName", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "sender", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ContractFunctionExecutionError",
              }),
              (this.abi = t),
              (this.args = n),
              (this.cause = e),
              (this.contractAddress = r),
              (this.functionName = a),
              (this.sender = s);
          }
        }
        class v extends p.G {
          constructor({ abi: e, data: t, functionName: n, message: r }) {
            let s, l, c, d, p;
            if (t && "0x" !== t)
              try {
                p = (0, a.p)({ abi: e, data: t });
                let { abiItem: n, errorName: r, args: s } = p;
                if ("Error" === r) c = s[0];
                else if ("Panic" === r) {
                  let [e] = s;
                  c = i.$[e];
                } else {
                  let e = n ? (0, o.t)(n, { includeName: !0 }) : void 0,
                    t =
                      n && s
                        ? u({
                            abiItem: n,
                            args: s,
                            includeFunctionName: !1,
                            includeName: !1,
                          })
                        : void 0;
                  l = [
                    e ? `Error: ${e}` : "",
                    t && "()" !== t
                      ? `       ${[...Array(r?.length ?? 0).keys()]
                          .map(() => " ")
                          .join("")}${t}`
                      : "",
                  ];
                }
              } catch (e) {
                s = e;
              }
            else r && (c = r);
            s instanceof f.yP &&
              (l = [
                `Unable to decode signature "${(d =
                  s.signature)}" as it was not found on the provided ABI.`,
                "Make sure you are using the correct ABI and that the error exists on it.",
                `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${d}.`,
              ]),
              super(
                (c && "execution reverted" !== c) || d
                  ? [
                      `The contract function "${n}" reverted with the following ${
                        d ? "signature" : "reason"
                      }:`,
                      c || d,
                    ].join("\n")
                  : `The contract function "${n}" reverted.`,
                { cause: s, metaMessages: l }
              ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ContractFunctionRevertedError",
              }),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "reason", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "signature", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.data = p),
              (this.reason = c),
              (this.signature = d);
          }
        }
        class w extends p.G {
          constructor({ functionName: e }) {
            super(`The contract function "${e}" returned no data ("0x").`, {
              metaMessages: [
                "This could be due to any of the following:",
                `  - The contract does not have the function "${e}",`,
                "  - The parameters passed to the contract function may be invalid, or",
                "  - The address is not a contract.",
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ContractFunctionZeroDataError",
              });
          }
        }
        class E extends p.G {
          constructor({ data: e, message: t }) {
            super(t || ""),
              Object.defineProperty(this, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 3,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "RawContractError",
              }),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.data = e);
          }
        }
      },
      31303: function (e, t, n) {
        "use strict";
        n.d(t, {
          KD: function () {
            return o;
          },
          T_: function () {
            return i;
          },
          lQ: function () {
            return a;
          },
        });
        var r = n(49964);
        class i extends r.G {
          constructor({ offset: e }) {
            super(`Offset \`${e}\` cannot be negative.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "NegativeOffsetError",
              });
          }
        }
        class a extends r.G {
          constructor({ length: e, position: t }) {
            super(
              `Position \`${t}\` is out of bounds (\`0 < position < ${e}\`).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "PositionOutOfBoundsError",
              });
          }
        }
        class o extends r.G {
          constructor({ count: e, limit: t }) {
            super(
              `Recursive read limit of \`${t}\` exceeded (recursive read count: \`${e}\`).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "RecursiveReadLimitExceededError",
              });
          }
        }
      },
      62041: function (e, t, n) {
        "use strict";
        n.d(t, {
          $s: function () {
            return a;
          },
          W_: function () {
            return o;
          },
          mV: function () {
            return i;
          },
        });
        var r = n(49964);
        class i extends r.G {
          constructor({ offset: e, position: t, size: n }) {
            super(
              `Slice ${
                "start" === t ? "starting" : "ending"
              } at offset "${e}" is out-of-bounds (size: ${n}).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "SliceOffsetOutOfBoundsError",
              });
          }
        }
        class a extends r.G {
          constructor({ size: e, targetSize: t, type: n }) {
            super(
              `${n.charAt(0).toUpperCase()}${n
                .slice(1)
                .toLowerCase()} size (${e}) exceeds padding size (${t}).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "SizeExceedsPaddingSizeError",
              });
          }
        }
        class o extends r.G {
          constructor({ size: e, targetSize: t, type: n }) {
            super(
              `${n.charAt(0).toUpperCase()}${n
                .slice(1)
                .toLowerCase()} is expected to be ${t} ${n} long, but is ${e} ${n} long.`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidBytesLengthError",
              });
          }
        }
      },
      87214: function (e, t, n) {
        "use strict";
        n.d(t, {
          J5: function () {
            return i;
          },
          M6: function () {
            return o;
          },
          yr: function () {
            return a;
          },
        });
        var r = n(49964);
        class i extends r.G {
          constructor({ max: e, min: t, signed: n, size: r, value: i }) {
            super(
              `Number "${i}" is not in safe ${
                r ? `${8 * r}-bit ${n ? "signed" : "unsigned"} ` : ""
              }integer range ${e ? `(${t} to ${e})` : `(above ${t})`}`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "IntegerOutOfRangeError",
              });
          }
        }
        class a extends r.G {
          constructor(e) {
            super(
              `Bytes value "${e}" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidBytesBooleanError",
              });
          }
        }
        class o extends r.G {
          constructor({ givenSize: e, maxSize: t }) {
            super(`Size cannot exceed ${t} bytes. Given size: ${e} bytes.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "SizeOverflowError",
              });
          }
        }
      },
      25590: function (e, t, n) {
        "use strict";
        n.d(t, {
          C_: function () {
            return d;
          },
          G$: function () {
            return s;
          },
          Hh: function () {
            return o;
          },
          M_: function () {
            return a;
          },
          WF: function () {
            return f;
          },
          ZI: function () {
            return u;
          },
          cj: function () {
            return y;
          },
          cs: function () {
            return m;
          },
          dR: function () {
            return p;
          },
          pZ: function () {
            return h;
          },
          se: function () {
            return c;
          },
          vU: function () {
            return l;
          },
        });
        var r = n(97393),
          i = n(49964);
        class a extends i.G {
          constructor({ cause: e, message: t } = {}) {
            let n = t
              ?.replace("execution reverted: ", "")
              ?.replace("execution reverted", "");
            super(
              `Execution reverted ${
                n ? `with reason: ${n}` : "for an unknown reason"
              }.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ExecutionRevertedError",
              });
          }
        }
        Object.defineProperty(a, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 3,
        }),
          Object.defineProperty(a, "nodeMessage", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: /execution reverted/,
          });
        class o extends i.G {
          constructor({ cause: e, maxFeePerGas: t } = {}) {
            super(
              `The fee cap (\`maxFeePerGas\`${
                t ? ` = ${(0, r.o)(t)} gwei` : ""
              }) cannot be higher than the maximum allowed value (2^256-1).`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "FeeCapTooHigh",
              });
          }
        }
        Object.defineProperty(o, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value:
            /max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/,
        });
        class s extends i.G {
          constructor({ cause: e, maxFeePerGas: t } = {}) {
            super(
              `The fee cap (\`maxFeePerGas\`${
                t ? ` = ${(0, r.o)(t)}` : ""
              } gwei) cannot be lower than the block base fee.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "FeeCapTooLow",
              });
          }
        }
        Object.defineProperty(s, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value:
            /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/,
        });
        class u extends i.G {
          constructor({ cause: e, nonce: t } = {}) {
            super(
              `Nonce provided for the transaction ${
                t ? `(${t}) ` : ""
              }is higher than the next one expected.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "NonceTooHighError",
              });
          }
        }
        Object.defineProperty(u, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /nonce too high/,
        });
        class l extends i.G {
          constructor({ cause: e, nonce: t } = {}) {
            super(
              `Nonce provided for the transaction ${
                t ? `(${t}) ` : ""
              }is lower than the current nonce of the account.
Try increasing the nonce or find the latest nonce with \`getTransactionCount\`.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "NonceTooLowError",
              });
          }
        }
        Object.defineProperty(l, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /nonce too low|transaction already imported|already known/,
        });
        class c extends i.G {
          constructor({ cause: e, nonce: t } = {}) {
            super(
              `Nonce provided for the transaction ${
                t ? `(${t}) ` : ""
              }exceeds the maximum allowed nonce.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "NonceMaxValueError",
              });
          }
        }
        Object.defineProperty(c, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /nonce has max value/,
        });
        class d extends i.G {
          constructor({ cause: e } = {}) {
            super(
              "The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.",
              {
                cause: e,
                metaMessages: [
                  "This error could arise when the account does not have enough funds to:",
                  " - pay for the total gas fee,",
                  " - pay for the value to send.",
                  " ",
                  "The cost of the transaction is calculated as `gas * gas fee + value`, where:",
                  " - `gas` is the amount of gas needed for transaction to execute,",
                  " - `gas fee` is the gas fee,",
                  " - `value` is the amount of ether to send to the recipient.",
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InsufficientFundsError",
              });
          }
        }
        Object.defineProperty(d, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /insufficient funds/,
        });
        class f extends i.G {
          constructor({ cause: e, gas: t } = {}) {
            super(
              `The amount of gas ${
                t ? `(${t}) ` : ""
              }provided for the transaction exceeds the limit allowed for the block.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "IntrinsicGasTooHighError",
              });
          }
        }
        Object.defineProperty(f, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /intrinsic gas too high|gas limit reached/,
        });
        class p extends i.G {
          constructor({ cause: e, gas: t } = {}) {
            super(
              `The amount of gas ${
                t ? `(${t}) ` : ""
              }provided for the transaction is too low.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "IntrinsicGasTooLowError",
              });
          }
        }
        Object.defineProperty(p, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /intrinsic gas too low/,
        });
        class h extends i.G {
          constructor({ cause: e }) {
            super("The transaction type is not supported for this chain.", {
              cause: e,
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TransactionTypeNotSupportedError",
              });
          }
        }
        Object.defineProperty(h, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /transaction type not valid/,
        });
        class m extends i.G {
          constructor({
            cause: e,
            maxPriorityFeePerGas: t,
            maxFeePerGas: n,
          } = {}) {
            super(
              `The provided tip (\`maxPriorityFeePerGas\`${
                t ? ` = ${(0, r.o)(t)} gwei` : ""
              }) cannot be higher than the fee cap (\`maxFeePerGas\`${
                n ? ` = ${(0, r.o)(n)} gwei` : ""
              }).`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TipAboveFeeCapError",
              });
          }
        }
        Object.defineProperty(m, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value:
            /max priority fee per gas higher than max fee per gas|tip higher than fee cap/,
        });
        class y extends i.G {
          constructor({ cause: e }) {
            super(`An error occurred while executing: ${e?.shortMessage}`, {
              cause: e,
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnknownNodeError",
              });
          }
        }
      },
      64676: function (e, t, n) {
        "use strict";
        n.d(t, {
          Gg: function () {
            return o;
          },
          W5: function () {
            return u;
          },
          bs: function () {
            return s;
          },
        });
        var r = n(87444),
          i = n(49964),
          a = n(65125);
        class o extends i.G {
          constructor({ body: e, details: t, headers: n, status: i, url: o }) {
            super("HTTP request failed.", {
              details: t,
              metaMessages: [
                i && `Status: ${i}`,
                `URL: ${(0, a.Gr)(o)}`,
                e && `Request body: ${(0, r.P)(e)}`,
              ].filter(Boolean),
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "HttpRequestError",
              }),
              Object.defineProperty(this, "body", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "headers", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "status", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "url", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.body = e),
              (this.headers = n),
              (this.status = i),
              (this.url = o);
          }
        }
        class s extends i.G {
          constructor({ body: e, error: t, url: n }) {
            super("RPC Request failed.", {
              cause: t,
              details: t.message,
              metaMessages: [
                `URL: ${(0, a.Gr)(n)}`,
                `Request body: ${(0, r.P)(e)}`,
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "RpcRequestError",
              }),
              Object.defineProperty(this, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.code = t.code);
          }
        }
        class u extends i.G {
          constructor({ body: e, url: t }) {
            super("The request took too long to respond.", {
              details: "The request timed out.",
              metaMessages: [
                `URL: ${(0, a.Gr)(t)}`,
                `Request body: ${(0, r.P)(e)}`,
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TimeoutError",
              });
          }
        }
      },
      79326: function (e, t, n) {
        "use strict";
        n.d(t, {
          B: function () {
            return u;
          },
          GD: function () {
            return b;
          },
          I0: function () {
            return C;
          },
          KB: function () {
            return m;
          },
          LX: function () {
            return l;
          },
          Og: function () {
            return p;
          },
          PE: function () {
            return w;
          },
          Pv: function () {
            return g;
          },
          Ts: function () {
            return E;
          },
          XS: function () {
            return d;
          },
          ab: function () {
            return v;
          },
          gS: function () {
            return y;
          },
          ir: function () {
            return T;
          },
          nY: function () {
            return c;
          },
          pT: function () {
            return h;
          },
          s7: function () {
            return s;
          },
          u5: function () {
            return x;
          },
          x3: function () {
            return _;
          },
          yR: function () {
            return f;
          },
        });
        var r = n(49964),
          i = n(64676);
        class a extends r.G {
          constructor(
            e,
            { code: t, docsPath: n, metaMessages: r, shortMessage: a }
          ) {
            super(a, {
              cause: e,
              docsPath: n,
              metaMessages: r || e?.metaMessages,
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "RpcError",
              }),
              Object.defineProperty(this, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.name = e.name),
              (this.code = e instanceof i.bs ? e.code : t ?? -1);
          }
        }
        class o extends a {
          constructor(e, t) {
            super(e, t),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ProviderRpcError",
              }),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.data = t.data);
          }
        }
        class s extends a {
          constructor(e) {
            super(e, {
              code: s.code,
              shortMessage:
                "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ParseRpcError",
              });
          }
        }
        Object.defineProperty(s, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32700,
        });
        class u extends a {
          constructor(e) {
            super(e, {
              code: u.code,
              shortMessage: "JSON is not a valid request object.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidRequestRpcError",
              });
          }
        }
        Object.defineProperty(u, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32600,
        });
        class l extends a {
          constructor(e) {
            super(e, {
              code: l.code,
              shortMessage: "The method does not exist / is not available.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "MethodNotFoundRpcError",
              });
          }
        }
        Object.defineProperty(l, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32601,
        });
        class c extends a {
          constructor(e) {
            super(e, {
              code: c.code,
              shortMessage:
                "Invalid parameters were provided to the RPC method.\nDouble check you have provided the correct parameters.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidParamsRpcError",
              });
          }
        }
        Object.defineProperty(c, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32602,
        });
        class d extends a {
          constructor(e) {
            super(e, {
              code: d.code,
              shortMessage: "An internal error was received.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InternalRpcError",
              });
          }
        }
        Object.defineProperty(d, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32603,
        });
        class f extends a {
          constructor(e) {
            super(e, {
              code: f.code,
              shortMessage:
                "Missing or invalid parameters.\nDouble check you have provided the correct parameters.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidInputRpcError",
              });
          }
        }
        Object.defineProperty(f, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32e3,
        });
        class p extends a {
          constructor(e) {
            super(e, {
              code: p.code,
              shortMessage: "Requested resource not found.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ResourceNotFoundRpcError",
              });
          }
        }
        Object.defineProperty(p, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32001,
        });
        class h extends a {
          constructor(e) {
            super(e, {
              code: h.code,
              shortMessage: "Requested resource not available.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ResourceUnavailableRpcError",
              });
          }
        }
        Object.defineProperty(h, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32002,
        });
        class m extends a {
          constructor(e) {
            super(e, {
              code: m.code,
              shortMessage: "Transaction creation failed.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TransactionRejectedRpcError",
              });
          }
        }
        Object.defineProperty(m, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32003,
        });
        class y extends a {
          constructor(e) {
            super(e, {
              code: y.code,
              shortMessage: "Method is not implemented.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "MethodNotSupportedRpcError",
              });
          }
        }
        Object.defineProperty(y, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32004,
        });
        class g extends a {
          constructor(e) {
            super(e, {
              code: g.code,
              shortMessage: "Request exceeds defined limit.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "LimitExceededRpcError",
              });
          }
        }
        Object.defineProperty(g, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32005,
        });
        class b extends a {
          constructor(e) {
            super(e, {
              code: b.code,
              shortMessage: "Version of JSON-RPC protocol is not supported.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "JsonRpcVersionUnsupportedError",
              });
          }
        }
        Object.defineProperty(b, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32006,
        });
        class v extends o {
          constructor(e) {
            super(e, {
              code: v.code,
              shortMessage: "User rejected the request.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UserRejectedRequestError",
              });
          }
        }
        Object.defineProperty(v, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4001,
        });
        class w extends o {
          constructor(e) {
            super(e, {
              code: w.code,
              shortMessage:
                "The requested method and/or account has not been authorized by the user.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnauthorizedProviderError",
              });
          }
        }
        Object.defineProperty(w, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4100,
        });
        class E extends o {
          constructor(e) {
            super(e, {
              code: E.code,
              shortMessage:
                "The Provider does not support the requested method.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnsupportedProviderMethodError",
              });
          }
        }
        Object.defineProperty(E, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4200,
        });
        class x extends o {
          constructor(e) {
            super(e, {
              code: x.code,
              shortMessage: "The Provider is disconnected from all chains.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ProviderDisconnectedError",
              });
          }
        }
        Object.defineProperty(x, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4900,
        });
        class C extends o {
          constructor(e) {
            super(e, {
              code: C.code,
              shortMessage:
                "The Provider is not connected to the requested chain.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ChainDisconnectedError",
              });
          }
        }
        Object.defineProperty(C, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4901,
        });
        class _ extends o {
          constructor(e) {
            super(e, {
              code: _.code,
              shortMessage:
                "An error occurred when attempting to switch chain.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "SwitchChainError",
              });
          }
        }
        Object.defineProperty(_, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4902,
        });
        class T extends a {
          constructor(e) {
            super(e, { shortMessage: "An unknown RPC error occurred." }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnknownRpcError",
              });
          }
        }
      },
      43059: function (e, t, n) {
        "use strict";
        n.d(t, {
          Bj: function () {
            return s;
          },
          Nc: function () {
            return i;
          },
          Z8: function () {
            return a;
          },
        });
        var r = n(49964);
        class i extends r.G {
          constructor({ address: e }) {
            super(`State for account "${e}" is set multiple times.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AccountStateConflictError",
              });
          }
        }
        class a extends r.G {
          constructor() {
            super("state and stateDiff are set on the same account."),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "StateAssignmentConflictError",
              });
          }
        }
        function o(e) {
          return e.reduce(
            (e, { slot: t, value: n }) => `${e}        ${t}: ${n}
`,
            ""
          );
        }
        function s(e) {
          return e
            .reduce((e, { address: t, ...n }) => {
              let r = `${e}    ${t}:
`;
              return (
                n.nonce &&
                  (r += `      nonce: ${n.nonce}
`),
                n.balance &&
                  (r += `      balance: ${n.balance}
`),
                n.code &&
                  (r += `      code: ${n.code}
`),
                n.state && (r += "      state:\n" + o(n.state)),
                n.stateDiff && (r += "      stateDiff:\n" + o(n.stateDiff)),
                r
              );
            }, "  State Override:\n")
            .slice(0, -1);
        }
      },
      70392: function (e, t, n) {
        "use strict";
        n.d(t, {
          Bh: function () {
            return l;
          },
          JC: function () {
            return u;
          },
          Yb: function () {
            return c;
          },
          j3: function () {
            return s;
          },
          mc: function () {
            return d;
          },
          vl: function () {
            return o;
          },
          xY: function () {
            return a;
          },
          xr: function () {
            return i;
          },
        });
        var r = n(49964);
        function i(e) {
          let t = Object.entries(e)
              .map(([e, t]) => (void 0 === t || !1 === t ? null : [e, t]))
              .filter(Boolean),
            n = t.reduce((e, [t]) => Math.max(e, t.length), 0);
          return t
            .map(([e, t]) => `  ${`${e}:`.padEnd(n + 1)}  ${t}`)
            .join("\n");
        }
        class a extends r.G {
          constructor() {
            super(
              "Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.\nUse `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others."
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "FeeConflictError",
              });
          }
        }
        class o extends r.G {
          constructor({ v: e }) {
            super(`Invalid \`v\` value "${e}". Expected 27 or 28.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidLegacyVError",
              });
          }
        }
        class s extends r.G {
          constructor({ transaction: e }) {
            super(
              "Cannot infer a transaction type from provided transaction.",
              {
                metaMessages: [
                  "Provided Transaction:",
                  "{",
                  i(e),
                  "}",
                  "",
                  "To infer the type, either provide:",
                  "- a `type` to the Transaction, or",
                  "- an EIP-1559 Transaction with `maxFeePerGas`, or",
                  "- an EIP-2930 Transaction with `gasPrice` & `accessList`, or",
                  "- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or",
                  "- a Legacy Transaction with `gasPrice`",
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidSerializableTransactionError",
              });
          }
        }
        class u extends r.G {
          constructor({ storageKey: e }) {
            super(
              `Size for storage key "${e}" is invalid. Expected 32 bytes. Got ${Math.floor(
                (e.length - 2) / 2
              )} bytes.`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidStorageKeySizeError",
              });
          }
        }
        class l extends r.G {
          constructor({
            blockHash: e,
            blockNumber: t,
            blockTag: n,
            hash: r,
            index: i,
          }) {
            let a = "Transaction";
            n &&
              void 0 !== i &&
              (a = `Transaction at block time "${n}" at index "${i}"`),
              e &&
                void 0 !== i &&
                (a = `Transaction at block hash "${e}" at index "${i}"`),
              t &&
                void 0 !== i &&
                (a = `Transaction at block number "${t}" at index "${i}"`),
              r && (a = `Transaction with hash "${r}"`),
              super(`${a} could not be found.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TransactionNotFoundError",
              });
          }
        }
        class c extends r.G {
          constructor({ hash: e }) {
            super(
              `Transaction receipt with hash "${e}" could not be found. The Transaction may not be processed on a block yet.`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TransactionReceiptNotFoundError",
              });
          }
        }
        class d extends r.G {
          constructor({ hash: e }) {
            super(
              `Timed out while waiting for transaction with hash "${e}" to be confirmed.`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "WaitForTransactionReceiptTimeoutError",
              });
          }
        }
      },
      65125: function (e, t, n) {
        "use strict";
        n.d(t, {
          CR: function () {
            return r;
          },
          Gr: function () {
            return i;
          },
          bo: function () {
            return a;
          },
        });
        let r = (e) => e,
          i = (e) => e,
          a = () => "viem@2.9.31";
      },
      42347: function (e, t, n) {
        "use strict";
        n.d(t, {
          r: function () {
            return m;
          },
        });
        var r = n(90280),
          i = n(1642),
          a = n(14015),
          o = n(98244),
          s = n(80695),
          u = n(8229),
          l = n(87214),
          c = n(5547),
          d = n(88769);
        function f(e, t = {}) {
          void 0 !== t.size && (0, c.Yf)(e, { size: t.size });
          let n = (0, d.ci)(e, t);
          return (0, c.ly)(n, t);
        }
        var p = n(5644),
          h = n(90078);
        function m(e, t) {
          let n = "string" == typeof t ? (0, p.nr)(t) : t,
            m = (0, a.q)(n);
          if (0 === (0, o.d)(n) && e.length > 0) throw new r.wb();
          if ((0, o.d)(t) && 32 > (0, o.d)(t))
            throw new r.xB({
              data: "string" == typeof t ? t : (0, d.ci)(t),
              params: e,
              size: (0, o.d)(t),
            });
          let g = 0,
            b = [];
          for (let t = 0; t < e.length; ++t) {
            let n = e[t];
            m.setPosition(g);
            let [a, o] = (function e(t, n, { staticPosition: a }) {
              let o = (0, h.S)(n.type);
              if (o) {
                let [r, i] = o;
                return (function (t, n, { length: r, staticPosition: i }) {
                  if (!r) {
                    let r = f(t.readBytes(32)),
                      a = i + r,
                      o = a + 32;
                    t.setPosition(a);
                    let s = f(t.readBytes(32)),
                      u = y(n),
                      l = 0,
                      c = [];
                    for (let r = 0; r < s; ++r) {
                      t.setPosition(o + (u ? 32 * r : l));
                      let [i, a] = e(t, n, { staticPosition: o });
                      (l += a), c.push(i);
                    }
                    return t.setPosition(i + 32), [c, 32];
                  }
                  if (y(n)) {
                    let a = f(t.readBytes(32)),
                      o = i + a,
                      s = [];
                    for (let i = 0; i < r; ++i) {
                      t.setPosition(o + 32 * i);
                      let [r] = e(t, n, { staticPosition: o });
                      s.push(r);
                    }
                    return t.setPosition(i + 32), [s, 32];
                  }
                  let a = 0,
                    o = [];
                  for (let s = 0; s < r; ++s) {
                    let [r, s] = e(t, n, { staticPosition: i + a });
                    (a += s), o.push(r);
                  }
                  return [o, a];
                })(t, { ...n, type: i }, { length: r, staticPosition: a });
              }
              if ("tuple" === n.type)
                return (function (t, n, { staticPosition: r }) {
                  let i =
                      0 === n.components.length ||
                      n.components.some(({ name: e }) => !e),
                    a = i ? [] : {},
                    o = 0;
                  if (y(n)) {
                    let s = f(t.readBytes(32)),
                      u = r + s;
                    for (let r = 0; r < n.components.length; ++r) {
                      let s = n.components[r];
                      t.setPosition(u + o);
                      let [l, c] = e(t, s, { staticPosition: u });
                      (o += c), (a[i ? r : s?.name] = l);
                    }
                    return t.setPosition(r + 32), [a, 32];
                  }
                  for (let s = 0; s < n.components.length; ++s) {
                    let u = n.components[s],
                      [l, c] = e(t, u, { staticPosition: r });
                    (a[i ? s : u?.name] = l), (o += c);
                  }
                  return [a, o];
                })(t, n, { staticPosition: a });
              if ("address" === n.type)
                return (function (e) {
                  let t = e.readBytes(32);
                  return [(0, i.x)((0, d.ci)((0, s.T4)(t, -20))), 32];
                })(t);
              if ("bool" === n.type)
                return [
                  (function (e, t = {}) {
                    let n = e;
                    if (
                      (void 0 !== t.size &&
                        ((0, c.Yf)(n, { size: t.size }), (n = (0, u.f)(n))),
                      n.length > 1 || n[0] > 1)
                    )
                      throw new l.yr(n);
                    return !!n[0];
                  })(t.readBytes(32), { size: 32 }),
                  32,
                ];
              if (n.type.startsWith("bytes"))
                return (function (e, t, { staticPosition: n }) {
                  let [r, i] = t.type.split("bytes");
                  if (!i) {
                    let t = f(e.readBytes(32));
                    e.setPosition(n + t);
                    let r = f(e.readBytes(32));
                    if (0 === r) return e.setPosition(n + 32), ["0x", 32];
                    let i = e.readBytes(r);
                    return e.setPosition(n + 32), [(0, d.ci)(i), 32];
                  }
                  let a = (0, d.ci)(e.readBytes(parseInt(i), 32));
                  return [a, 32];
                })(t, n, { staticPosition: a });
              if (n.type.startsWith("uint") || n.type.startsWith("int"))
                return (function (e, t) {
                  let n = t.type.startsWith("int"),
                    r = parseInt(t.type.split("int")[1] || "256"),
                    i = e.readBytes(32);
                  return [
                    r > 48
                      ? (function (e, t = {}) {
                          void 0 !== t.size && (0, c.Yf)(e, { size: t.size });
                          let n = (0, d.ci)(e, t);
                          return (0, c.y_)(n, t);
                        })(i, { signed: n })
                      : f(i, { signed: n }),
                    32,
                  ];
                })(t, n);
              if ("string" === n.type)
                return (function (e, { staticPosition: t }) {
                  let n = f(e.readBytes(32)),
                    r = t + n;
                  e.setPosition(r);
                  let i = f(e.readBytes(32));
                  if (0 === i) return e.setPosition(t + 32), ["", 32];
                  let a = e.readBytes(i, 32),
                    o = (function (e, t = {}) {
                      let n = e;
                      return (
                        void 0 !== t.size &&
                          ((0, c.Yf)(n, { size: t.size }),
                          (n = (0, u.f)(n, { dir: "right" }))),
                        new TextDecoder().decode(n)
                      );
                    })((0, u.f)(a));
                  return e.setPosition(t + 32), [o, 32];
                })(t, { staticPosition: a });
              throw new r.CI(n.type, {
                docsPath: "/docs/contract/decodeAbiParameters",
              });
            })(m, n, { staticPosition: 0 });
            (g += o), b.push(a);
          }
          return b;
        }
        function y(e) {
          let { type: t } = e;
          if ("string" === t || "bytes" === t || t.endsWith("[]")) return !0;
          if ("tuple" === t) return e.components?.some(y);
          let n = (0, h.S)(e.type);
          return !!(n && y({ ...e, type: n[1] }));
        }
      },
      86979: function (e, t, n) {
        "use strict";
        n.d(t, {
          p: function () {
            return l;
          },
        });
        var r = n(21829),
          i = n(90280),
          a = n(80695),
          o = n(69477),
          s = n(42347),
          u = n(5246);
        function l(e) {
          let { abi: t, data: n } = e,
            l = (0, a.tP)(n, 0, 4);
          if ("0x" === l) throw new i.wb();
          let c = [...(t || []), r.Up, r.hZ],
            d = c.find(
              (e) => "error" === e.type && l === (0, o.C)((0, u.t)(e))
            );
          if (!d)
            throw new i.yP(l, { docsPath: "/docs/contract/decodeErrorResult" });
          return {
            abiItem: d,
            args:
              "inputs" in d && d.inputs && d.inputs.length > 0
                ? (0, s.r)(d.inputs, (0, a.tP)(n, 4))
                : void 0,
            errorName: d.name,
          };
        }
      },
      75910: function (e, t, n) {
        "use strict";
        n.d(t, {
          k: function () {
            return s;
          },
        });
        var r = n(90280),
          i = n(42347),
          a = n(76029);
        let o = "/docs/contract/decodeFunctionResult";
        function s(e) {
          let { abi: t, args: n, functionName: s, data: u } = e,
            l = t[0];
          if (s) {
            let e = (0, a.mE)({ abi: t, args: n, name: s });
            if (!e) throw new r.xL(s, { docsPath: o });
            l = e;
          }
          if ("function" !== l.type) throw new r.xL(void 0, { docsPath: o });
          if (!l.outputs) throw new r.MX(l.name, { docsPath: o });
          let c = (0, i.r)(l.outputs, u);
          return c && c.length > 1 ? c : c && 1 === c.length ? c[0] : void 0;
        }
      },
      90078: function (e, t, n) {
        "use strict";
        n.d(t, {
          E: function () {
            return f;
          },
          S: function () {
            return h;
          },
        });
        var r = n(90280),
          i = n(17013),
          a = n(49964),
          o = n(89930),
          s = n(79017),
          u = n(60702),
          l = n(98244),
          c = n(80695),
          d = n(88769);
        function f(e, t) {
          if (e.length !== t.length)
            throw new r.fs({ expectedLength: e.length, givenLength: t.length });
          let n = (function ({ params: e, values: t }) {
              let n = [];
              for (let f = 0; f < e.length; f++)
                n.push(
                  (function e({ param: t, value: n }) {
                    let f = h(t.type);
                    if (f) {
                      let [i, a] = f;
                      return (function (t, { length: n, param: i }) {
                        let a = null === n;
                        if (!Array.isArray(t)) throw new r.hn(t);
                        if (!a && t.length !== n)
                          throw new r.gr({
                            expectedLength: n,
                            givenLength: t.length,
                            type: `${i.type}[${n}]`,
                          });
                        let o = !1,
                          u = [];
                        for (let n = 0; n < t.length; n++) {
                          let r = e({ param: i, value: t[n] });
                          r.dynamic && (o = !0), u.push(r);
                        }
                        if (a || o) {
                          let e = p(u);
                          if (a) {
                            let t = (0, d.eC)(u.length, { size: 32 });
                            return {
                              dynamic: !0,
                              encoded: u.length > 0 ? (0, s.zo)([t, e]) : t,
                            };
                          }
                          if (o) return { dynamic: !0, encoded: e };
                        }
                        return {
                          dynamic: !1,
                          encoded: (0, s.zo)(u.map(({ encoded: e }) => e)),
                        };
                      })(n, { length: i, param: { ...t, type: a } });
                    }
                    if ("tuple" === t.type)
                      return (function (t, { param: n }) {
                        let r = !1,
                          i = [];
                        for (let a = 0; a < n.components.length; a++) {
                          let o = n.components[a],
                            s = Array.isArray(t) ? a : o.name,
                            u = e({ param: o, value: t[s] });
                          i.push(u), u.dynamic && (r = !0);
                        }
                        return {
                          dynamic: r,
                          encoded: r
                            ? p(i)
                            : (0, s.zo)(i.map(({ encoded: e }) => e)),
                        };
                      })(n, { param: t });
                    if ("address" === t.type)
                      return (function (e) {
                        if (!(0, o.U)(e)) throw new i.b({ address: e });
                        return {
                          dynamic: !1,
                          encoded: (0, u.gc)(e.toLowerCase()),
                        };
                      })(n);
                    if ("bool" === t.type)
                      return (function (e) {
                        if ("boolean" != typeof e)
                          throw new a.G(
                            `Invalid boolean value: "${e}" (type: ${typeof e}). Expected: \`true\` or \`false\`.`
                          );
                        return {
                          dynamic: !1,
                          encoded: (0, u.gc)((0, d.C4)(e)),
                        };
                      })(n);
                    if (t.type.startsWith("uint") || t.type.startsWith("int")) {
                      let e = t.type.startsWith("int");
                      return (function (e, { signed: t }) {
                        return {
                          dynamic: !1,
                          encoded: (0, d.eC)(e, { size: 32, signed: t }),
                        };
                      })(n, { signed: e });
                    }
                    if (t.type.startsWith("bytes"))
                      return (function (e, { param: t }) {
                        let [, n] = t.type.split("bytes"),
                          i = (0, l.d)(e);
                        if (!n) {
                          let t = e;
                          return (
                            i % 32 != 0 &&
                              (t = (0, u.gc)(t, {
                                dir: "right",
                                size: 32 * Math.ceil((e.length - 2) / 2 / 32),
                              })),
                            {
                              dynamic: !0,
                              encoded: (0, s.zo)([
                                (0, u.gc)((0, d.eC)(i, { size: 32 })),
                                t,
                              ]),
                            }
                          );
                        }
                        if (i !== parseInt(n))
                          throw new r.M4({
                            expectedSize: parseInt(n),
                            value: e,
                          });
                        return {
                          dynamic: !1,
                          encoded: (0, u.gc)(e, { dir: "right" }),
                        };
                      })(n, { param: t });
                    if ("string" === t.type)
                      return (function (e) {
                        let t = (0, d.$G)(e),
                          n = Math.ceil((0, l.d)(t) / 32),
                          r = [];
                        for (let e = 0; e < n; e++)
                          r.push(
                            (0, u.gc)((0, c.tP)(t, 32 * e, (e + 1) * 32), {
                              dir: "right",
                            })
                          );
                        return {
                          dynamic: !0,
                          encoded: (0, s.zo)([
                            (0, u.gc)((0, d.eC)((0, l.d)(t), { size: 32 })),
                            ...r,
                          ]),
                        };
                      })(n);
                    throw new r.dh(t.type, {
                      docsPath: "/docs/contract/encodeAbiParameters",
                    });
                  })({ param: e[f], value: t[f] })
                );
              return n;
            })({ params: e, values: t }),
            f = p(n);
          return 0 === f.length ? "0x" : f;
        }
        function p(e) {
          let t = 0;
          for (let n = 0; n < e.length; n++) {
            let { dynamic: r, encoded: i } = e[n];
            r ? (t += 32) : (t += (0, l.d)(i));
          }
          let n = [],
            r = [],
            i = 0;
          for (let a = 0; a < e.length; a++) {
            let { dynamic: o, encoded: s } = e[a];
            o
              ? (n.push((0, d.eC)(t + i, { size: 32 })),
                r.push(s),
                (i += (0, l.d)(s)))
              : n.push(s);
          }
          return (0, s.zo)([...n, ...r]);
        }
        function h(e) {
          let t = e.match(/^(.*)\[(\d+)?\]$/);
          return t ? [t[2] ? Number(t[2]) : null, t[1]] : void 0;
        }
      },
      24279: function (e, t, n) {
        "use strict";
        n.d(t, {
          R: function () {
            return c;
          },
        });
        var r = n(79017),
          i = n(90078),
          a = n(90280),
          o = n(69477),
          s = n(5246),
          u = n(76029);
        let l = "/docs/contract/encodeFunctionData";
        function c(e) {
          let { args: t } = e,
            { abi: n, functionName: c } =
              1 === e.abi.length && e.functionName?.startsWith("0x")
                ? e
                : (function (e) {
                    let { abi: t, args: n, functionName: r } = e,
                      i = t[0];
                    if (r) {
                      let e = (0, u.mE)({ abi: t, args: n, name: r });
                      if (!e) throw new a.xL(r, { docsPath: l });
                      i = e;
                    }
                    if ("function" !== i.type)
                      throw new a.xL(void 0, { docsPath: l });
                    return { abi: [i], functionName: (0, o.C)((0, s.t)(i)) };
                  })(e),
            d = n[0],
            f =
              "inputs" in d && d.inputs ? (0, i.E)(d.inputs, t ?? []) : void 0;
          return (0, r.SM)([c, f ?? "0x"]);
        }
      },
      5246: function (e, t, n) {
        "use strict";
        n.d(t, {
          h: function () {
            return a;
          },
          t: function () {
            return i;
          },
        });
        var r = n(90280);
        function i(e, { includeName: t = !1 } = {}) {
          if ("function" !== e.type && "event" !== e.type && "error" !== e.type)
            throw new r.wM(e.type);
          return `${e.name}(${a(e.inputs, { includeName: t })})`;
        }
        function a(e, { includeName: t = !1 } = {}) {
          return e
            ? e
                .map((e) =>
                  (function (e, { includeName: t }) {
                    return e.type.startsWith("tuple")
                      ? `(${a(e.components, { includeName: t })})${e.type.slice(
                          5
                        )}`
                      : e.type + (t && e.name ? ` ${e.name}` : "");
                  })(e, { includeName: t })
                )
                .join(t ? ", " : ",")
            : "";
        }
      },
      76029: function (e, t, n) {
        "use strict";
        n.d(t, {
          mE: function () {
            return u;
          },
        });
        var r = n(90280),
          i = n(96942),
          a = n(89930),
          o = n(22297),
          s = n(69477);
        function u(e) {
          let t;
          let { abi: n, args: u = [], name: l } = e,
            c = (0, i.v)(l, { strict: !1 }),
            d = n.filter((e) =>
              c
                ? "function" === e.type
                  ? (0, s.C)(e) === l
                  : "event" === e.type && (0, o.n)(e) === l
                : "name" in e && e.name === l
            );
          if (0 !== d.length) {
            if (1 === d.length) return d[0];
            for (let e of d) {
              if (!("inputs" in e)) continue;
              if (!u || 0 === u.length) {
                if (!e.inputs || 0 === e.inputs.length) return e;
                continue;
              }
              if (
                !e.inputs ||
                0 === e.inputs.length ||
                e.inputs.length !== u.length
              )
                continue;
              let n = u.every((t, n) => {
                let r = "inputs" in e && e.inputs[n];
                return (
                  !!r &&
                  (function e(t, n) {
                    let r = typeof t,
                      i = n.type;
                    switch (i) {
                      case "address":
                        return (0, a.U)(t, { strict: !1 });
                      case "bool":
                        return "boolean" === r;
                      case "function":
                      case "string":
                        return "string" === r;
                      default:
                        if ("tuple" === i && "components" in n)
                          return Object.values(n.components).every((n, r) =>
                            e(Object.values(t)[r], n)
                          );
                        if (
                          /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(
                            i
                          )
                        )
                          return "number" === r || "bigint" === r;
                        if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(i))
                          return "string" === r || t instanceof Uint8Array;
                        if (/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(i))
                          return (
                            Array.isArray(t) &&
                            t.every((t) =>
                              e(t, {
                                ...n,
                                type: i.replace(/(\[[0-9]{0,}\])$/, ""),
                              })
                            )
                          );
                        return !1;
                    }
                  })(t, r)
                );
              });
              if (n) {
                if (t && "inputs" in t && t.inputs) {
                  let n = (function e(t, n, r) {
                    for (let i in t) {
                      let o = t[i],
                        s = n[i];
                      if (
                        "tuple" === o.type &&
                        "tuple" === s.type &&
                        "components" in o &&
                        "components" in s
                      )
                        return e(o.components, s.components, r[i]);
                      let u = [o.type, s.type],
                        l =
                          !!(u.includes("address") && u.includes("bytes20")) ||
                          (!!(
                            (u.includes("address") && u.includes("string")) ||
                            (u.includes("address") && u.includes("bytes"))
                          ) &&
                            (0, a.U)(r[i], { strict: !1 }));
                      if (l) return u;
                    }
                  })(e.inputs, t.inputs, u);
                  if (n)
                    throw new r.S4(
                      { abiItem: e, type: n[0] },
                      { abiItem: t, type: n[1] }
                    );
                }
                t = e;
              }
            }
            return t || d[0];
          }
        }
      },
      1642: function (e, t, n) {
        "use strict";
        n.d(t, {
          K: function () {
            return u;
          },
          x: function () {
            return s;
          },
        });
        var r = n(17013),
          i = n(5644),
          a = n(74912),
          o = n(89930);
        function s(e, t) {
          let n = t ? `${t}${e.toLowerCase()}` : e.substring(2).toLowerCase(),
            r = (0, a.w)((0, i.qX)(n), "bytes"),
            o = (t ? n.substring(`${t}0x`.length) : n).split("");
          for (let e = 0; e < 40; e += 2)
            r[e >> 1] >> 4 >= 8 && o[e] && (o[e] = o[e].toUpperCase()),
              (15 & r[e >> 1]) >= 8 &&
                o[e + 1] &&
                (o[e + 1] = o[e + 1].toUpperCase());
          return `0x${o.join("")}`;
        }
        function u(e, t) {
          if (!(0, o.U)(e, { strict: !1 })) throw new r.b({ address: e });
          return s(e, t);
        }
      },
      89930: function (e, t, n) {
        "use strict";
        n.d(t, {
          U: function () {
            return s;
          },
        });
        class r extends Map {
          constructor(e) {
            super(),
              Object.defineProperty(this, "maxSize", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.maxSize = e);
          }
          set(e, t) {
            return (
              super.set(e, t),
              this.maxSize &&
                this.size > this.maxSize &&
                this.delete(this.keys().next().value),
              this
            );
          }
        }
        var i = n(1642);
        let a = /^0x[a-fA-F0-9]{40}$/,
          o = new r(8192);
        function s(e, t) {
          let { strict: n = !0 } = t ?? {};
          if (o.has(e)) return o.get(e);
          let r =
            !!a.test(e) && (e.toLowerCase() === e || !n || (0, i.x)(e) === e);
          return o.set(e, r), r;
        }
      },
      87145: function (e, t, n) {
        "use strict";
        n.d(t, {
          E: function () {
            return a;
          },
        });
        var r = n(17013),
          i = n(89930);
        function a(e, t) {
          if (!(0, i.U)(e, { strict: !1 })) throw new r.b({ address: e });
          if (!(0, i.U)(t, { strict: !1 })) throw new r.b({ address: t });
          return e.toLowerCase() === t.toLowerCase();
        }
      },
      38670: function (e, t, n) {
        "use strict";
        n.d(t, {
          P: function () {
            return a;
          },
        });
        var r = n(5644),
          i = n(88769);
        function a(e) {
          let { kzg: t } = e,
            n = e.to ?? ("string" == typeof e.blobs[0] ? "hex" : "bytes"),
            a =
              "string" == typeof e.blobs[0]
                ? e.blobs.map((e) => (0, r.nr)(e))
                : e.blobs,
            o = [];
          for (let e of a) o.push(Uint8Array.from(t.blobToKzgCommitment(e)));
          return "bytes" === n ? o : o.map((e) => (0, i.ci)(e));
        }
      },
      51379: function (e, t, n) {
        "use strict";
        n.d(t, {
          y: function () {
            return a;
          },
        });
        var r = n(5644),
          i = n(88769);
        function a(e) {
          let { kzg: t } = e,
            n = e.to ?? ("string" == typeof e.blobs[0] ? "hex" : "bytes"),
            a =
              "string" == typeof e.blobs[0]
                ? e.blobs.map((e) => (0, r.nr)(e))
                : e.blobs,
            o =
              "string" == typeof e.commitments[0]
                ? e.commitments.map((e) => (0, r.nr)(e))
                : e.commitments,
            s = [];
          for (let e = 0; e < a.length; e++) {
            let n = a[e],
              r = o[e];
            s.push(Uint8Array.from(t.computeBlobKzgProof(n, r)));
          }
          return "bytes" === n ? s : s.map((e) => (0, i.ci)(e));
        }
      },
      27035: function (e, t, n) {
        "use strict";
        n.d(t, {
          C: function () {
            return a;
          },
        });
        var r = n(88769),
          i = n(78831);
        function a(e) {
          let { commitments: t, version: n } = e,
            a = e.to ?? ("string" == typeof t[0] ? "hex" : "bytes"),
            o = [];
          for (let e of t)
            o.push(
              (function (e) {
                let { commitment: t, version: n = 1 } = e,
                  a = e.to ?? ("string" == typeof t ? "hex" : "bytes"),
                  o = (0, i.J)(t, "bytes");
                return o.set([n], 0), "bytes" === a ? o : (0, r.ci)(o);
              })({ commitment: e, to: a, version: n })
            );
          return o;
        }
      },
      59337: function (e, t, n) {
        "use strict";
        n.d(t, {
          j: function () {
            return c;
          },
        });
        var r = n(38670),
          i = n(51379),
          a = n(32959),
          o = n(14015),
          s = n(98244),
          u = n(5644),
          l = n(88769);
        function c(e) {
          let { data: t, kzg: n, to: c } = e,
            d =
              e.blobs ??
              (function (e) {
                let t = e.to ?? ("string" == typeof e.data ? "hex" : "bytes"),
                  n = "string" == typeof e.data ? (0, u.nr)(e.data) : e.data,
                  r = (0, s.d)(n);
                if (!r) throw new a.RX();
                if (r > 761855) throw new a.m7({ maxSize: 761855, size: r });
                let i = [],
                  c = !0,
                  d = 0;
                for (; c; ) {
                  let e = (0, o.q)(new Uint8Array(131072)),
                    t = 0;
                  for (; t < 4096; ) {
                    let r = n.slice(d, d + 31);
                    if ((e.pushByte(0), e.pushBytes(r), r.length < 31)) {
                      e.pushByte(128), (c = !1);
                      break;
                    }
                    t++, (d += 31);
                  }
                  i.push(e);
                }
                return "bytes" === t
                  ? i.map((e) => e.bytes)
                  : i.map((e) => (0, l.ci)(e.bytes));
              })({ data: t, to: c }),
            f = e.commitments ?? (0, r.P)({ blobs: d, kzg: n, to: c }),
            p =
              e.proofs ?? (0, i.y)({ blobs: d, commitments: f, kzg: n, to: c }),
            h = [];
          for (let e = 0; e < d.length; e++)
            h.push({ blob: d[e], commitment: f[e], proof: p[e] });
          return h;
        }
      },
      28103: function (e, t, n) {
        "use strict";
        n.d(t, {
          L: function () {
            return i;
          },
        });
        var r = n(14921);
        function i({ blockNumber: e, chain: t, contract: n }) {
          let i = t?.contracts?.[n];
          if (!i) throw new r.mm({ chain: t, contract: { name: n } });
          if (e && i.blockCreated && i.blockCreated > e)
            throw new r.mm({
              blockNumber: e,
              chain: t,
              contract: { name: n, blockCreated: i.blockCreated },
            });
          return i.address;
        }
      },
      14015: function (e, t, n) {
        "use strict";
        n.d(t, {
          q: function () {
            return a;
          },
        });
        var r = n(31303);
        let i = {
          bytes: new Uint8Array(),
          dataView: new DataView(new ArrayBuffer(0)),
          position: 0,
          positionReadCount: new Map(),
          recursiveReadCount: 0,
          recursiveReadLimit: 1 / 0,
          assertReadLimit() {
            if (this.recursiveReadCount >= this.recursiveReadLimit)
              throw new r.KD({
                count: this.recursiveReadCount + 1,
                limit: this.recursiveReadLimit,
              });
          },
          assertPosition(e) {
            if (e < 0 || e > this.bytes.length - 1)
              throw new r.lQ({ length: this.bytes.length, position: e });
          },
          decrementPosition(e) {
            if (e < 0) throw new r.T_({ offset: e });
            let t = this.position - e;
            this.assertPosition(t), (this.position = t);
          },
          getReadCount(e) {
            return this.positionReadCount.get(e || this.position) || 0;
          },
          incrementPosition(e) {
            if (e < 0) throw new r.T_({ offset: e });
            let t = this.position + e;
            this.assertPosition(t), (this.position = t);
          },
          inspectByte(e) {
            let t = e ?? this.position;
            return this.assertPosition(t), this.bytes[t];
          },
          inspectBytes(e, t) {
            let n = t ?? this.position;
            return (
              this.assertPosition(n + e - 1), this.bytes.subarray(n, n + e)
            );
          },
          inspectUint8(e) {
            let t = e ?? this.position;
            return this.assertPosition(t), this.bytes[t];
          },
          inspectUint16(e) {
            let t = e ?? this.position;
            return this.assertPosition(t + 1), this.dataView.getUint16(t);
          },
          inspectUint24(e) {
            let t = e ?? this.position;
            return (
              this.assertPosition(t + 2),
              (this.dataView.getUint16(t) << 8) + this.dataView.getUint8(t + 2)
            );
          },
          inspectUint32(e) {
            let t = e ?? this.position;
            return this.assertPosition(t + 3), this.dataView.getUint32(t);
          },
          pushByte(e) {
            this.assertPosition(this.position),
              (this.bytes[this.position] = e),
              this.position++;
          },
          pushBytes(e) {
            this.assertPosition(this.position + e.length - 1),
              this.bytes.set(e, this.position),
              (this.position += e.length);
          },
          pushUint8(e) {
            this.assertPosition(this.position),
              (this.bytes[this.position] = e),
              this.position++;
          },
          pushUint16(e) {
            this.assertPosition(this.position + 1),
              this.dataView.setUint16(this.position, e),
              (this.position += 2);
          },
          pushUint24(e) {
            this.assertPosition(this.position + 2),
              this.dataView.setUint16(this.position, e >> 8),
              this.dataView.setUint8(this.position + 2, 255 & e),
              (this.position += 3);
          },
          pushUint32(e) {
            this.assertPosition(this.position + 3),
              this.dataView.setUint32(this.position, e),
              (this.position += 4);
          },
          readByte() {
            this.assertReadLimit(), this._touch();
            let e = this.inspectByte();
            return this.position++, e;
          },
          readBytes(e, t) {
            this.assertReadLimit(), this._touch();
            let n = this.inspectBytes(e);
            return (this.position += t ?? e), n;
          },
          readUint8() {
            this.assertReadLimit(), this._touch();
            let e = this.inspectUint8();
            return (this.position += 1), e;
          },
          readUint16() {
            this.assertReadLimit(), this._touch();
            let e = this.inspectUint16();
            return (this.position += 2), e;
          },
          readUint24() {
            this.assertReadLimit(), this._touch();
            let e = this.inspectUint24();
            return (this.position += 3), e;
          },
          readUint32() {
            this.assertReadLimit(), this._touch();
            let e = this.inspectUint32();
            return (this.position += 4), e;
          },
          get remaining() {
            return this.bytes.length - this.position;
          },
          setPosition(e) {
            let t = this.position;
            return (
              this.assertPosition(e),
              (this.position = e),
              () => (this.position = t)
            );
          },
          _touch() {
            if (this.recursiveReadLimit === 1 / 0) return;
            let e = this.getReadCount();
            this.positionReadCount.set(this.position, e + 1),
              e > 0 && this.recursiveReadCount++;
          },
        };
        function a(e, { recursiveReadLimit: t = 8192 } = {}) {
          let n = Object.create(i);
          return (
            (n.bytes = e),
            (n.dataView = new DataView(e.buffer, e.byteOffset, e.byteLength)),
            (n.positionReadCount = new Map()),
            (n.recursiveReadLimit = t),
            n
          );
        }
      },
      79017: function (e, t, n) {
        "use strict";
        function r(e) {
          return "string" == typeof e[0]
            ? i(e)
            : (function (e) {
                let t = 0;
                for (let n of e) t += n.length;
                let n = new Uint8Array(t),
                  r = 0;
                for (let t of e) n.set(t, r), (r += t.length);
                return n;
              })(e);
        }
        function i(e) {
          return `0x${e.reduce((e, t) => e + t.replace("0x", ""), "")}`;
        }
        n.d(t, {
          SM: function () {
            return i;
          },
          zo: function () {
            return r;
          },
        });
      },
      96942: function (e, t, n) {
        "use strict";
        function r(e, { strict: t = !0 } = {}) {
          return (
            !!e &&
            "string" == typeof e &&
            (t ? /^0x[0-9a-fA-F]*$/.test(e) : e.startsWith("0x"))
          );
        }
        n.d(t, {
          v: function () {
            return r;
          },
        });
      },
      60702: function (e, t, n) {
        "use strict";
        n.d(t, {
          gc: function () {
            return a;
          },
          vk: function () {
            return i;
          },
        });
        var r = n(62041);
        function i(e, { dir: t, size: n = 32 } = {}) {
          return "string" == typeof e
            ? a(e, { dir: t, size: n })
            : (function (e, { dir: t, size: n = 32 } = {}) {
                if (null === n) return e;
                if (e.length > n)
                  throw new r.$s({
                    size: e.length,
                    targetSize: n,
                    type: "bytes",
                  });
                let i = new Uint8Array(n);
                for (let r = 0; r < n; r++) {
                  let a = "right" === t;
                  i[a ? r : n - r - 1] = e[a ? r : e.length - r - 1];
                }
                return i;
              })(e, { dir: t, size: n });
        }
        function a(e, { dir: t, size: n = 32 } = {}) {
          if (null === n) return e;
          let i = e.replace("0x", "");
          if (i.length > 2 * n)
            throw new r.$s({
              size: Math.ceil(i.length / 2),
              targetSize: n,
              type: "hex",
            });
          return `0x${i["right" === t ? "padEnd" : "padStart"](2 * n, "0")}`;
        }
      },
      98244: function (e, t, n) {
        "use strict";
        n.d(t, {
          d: function () {
            return i;
          },
        });
        var r = n(96942);
        function i(e) {
          return (0, r.v)(e, { strict: !1 })
            ? Math.ceil((e.length - 2) / 2)
            : e.length;
        }
      },
      80695: function (e, t, n) {
        "use strict";
        n.d(t, {
          T4: function () {
            return l;
          },
          tP: function () {
            return o;
          },
        });
        var r = n(62041),
          i = n(96942),
          a = n(98244);
        function o(e, t, n, { strict: r } = {}) {
          return (0, i.v)(e, { strict: !1 })
            ? (function (e, t, n, { strict: r } = {}) {
                s(e, t);
                let i = `0x${e
                  .replace("0x", "")
                  .slice((t ?? 0) * 2, (n ?? e.length) * 2)}`;
                return r && u(i, t, n), i;
              })(e, t, n, { strict: r })
            : l(e, t, n, { strict: r });
        }
        function s(e, t) {
          if ("number" == typeof t && t > 0 && t > (0, a.d)(e) - 1)
            throw new r.mV({ offset: t, position: "start", size: (0, a.d)(e) });
        }
        function u(e, t, n) {
          if (
            "number" == typeof t &&
            "number" == typeof n &&
            (0, a.d)(e) !== n - t
          )
            throw new r.mV({ offset: n, position: "end", size: (0, a.d)(e) });
        }
        function l(e, t, n, { strict: r } = {}) {
          s(e, t);
          let i = e.slice(t, n);
          return r && u(i, t, n), i;
        }
      },
      8229: function (e, t, n) {
        "use strict";
        function r(e, { dir: t = "left" } = {}) {
          let n = "string" == typeof e ? e.replace("0x", "") : e,
            r = 0;
          for (
            let e = 0;
            e < n.length - 1 &&
            "0" === n["left" === t ? e : n.length - e - 1].toString();
            e++
          )
            r++;
          return ((n = "left" === t ? n.slice(r) : n.slice(0, n.length - r)),
          "string" == typeof e)
            ? (1 === n.length && "right" === t && (n = `${n}0`),
              `0x${n.length % 2 == 1 ? `0${n}` : n}`)
            : n;
        }
        n.d(t, {
          f: function () {
            return r;
          },
        });
      },
      5547: function (e, t, n) {
        "use strict";
        n.d(t, {
          Yf: function () {
            return a;
          },
          ly: function () {
            return s;
          },
          y_: function () {
            return o;
          },
        });
        var r = n(87214),
          i = n(98244);
        function a(e, { size: t }) {
          if ((0, i.d)(e) > t)
            throw new r.M6({ givenSize: (0, i.d)(e), maxSize: t });
        }
        function o(e, t = {}) {
          let { signed: n } = t;
          t.size && a(e, { size: t.size });
          let r = BigInt(e);
          if (!n) return r;
          let i = (e.length - 2) / 2,
            o = (1n << (8n * BigInt(i) - 1n)) - 1n;
          return r <= o ? r : r - BigInt(`0x${"f".padStart(2 * i, "f")}`) - 1n;
        }
        function s(e, t = {}) {
          return Number(o(e, t));
        }
      },
      5644: function (e, t, n) {
        "use strict";
        n.d(t, {
          O0: function () {
            return l;
          },
          nr: function () {
            return f;
          },
          qX: function () {
            return p;
          },
        });
        var r = n(49964),
          i = n(96942),
          a = n(60702),
          o = n(5547),
          s = n(88769);
        let u = new TextEncoder();
        function l(e, t = {}) {
          return "number" == typeof e || "bigint" == typeof e
            ? (function (e, t) {
                let n = (0, s.eC)(e, t);
                return f(n);
              })(e, t)
            : "boolean" == typeof e
            ? (function (e, t = {}) {
                let n = new Uint8Array(1);
                return ((n[0] = Number(e)), "number" == typeof t.size)
                  ? ((0, o.Yf)(n, { size: t.size }),
                    (0, a.vk)(n, { size: t.size }))
                  : n;
              })(e, t)
            : (0, i.v)(e)
            ? f(e, t)
            : p(e, t);
        }
        let c = { zero: 48, nine: 57, A: 65, F: 70, a: 97, f: 102 };
        function d(e) {
          return e >= c.zero && e <= c.nine
            ? e - c.zero
            : e >= c.A && e <= c.F
            ? e - (c.A - 10)
            : e >= c.a && e <= c.f
            ? e - (c.a - 10)
            : void 0;
        }
        function f(e, t = {}) {
          let n = e;
          t.size &&
            ((0, o.Yf)(n, { size: t.size }),
            (n = (0, a.vk)(n, { dir: "right", size: t.size })));
          let i = n.slice(2);
          i.length % 2 && (i = `0${i}`);
          let s = i.length / 2,
            u = new Uint8Array(s);
          for (let e = 0, t = 0; e < s; e++) {
            let n = d(i.charCodeAt(t++)),
              a = d(i.charCodeAt(t++));
            if (void 0 === n || void 0 === a)
              throw new r.G(
                `Invalid byte sequence ("${i[t - 2]}${i[t - 1]}" in "${i}").`
              );
            u[e] = 16 * n + a;
          }
          return u;
        }
        function p(e, t = {}) {
          let n = u.encode(e);
          return "number" == typeof t.size
            ? ((0, o.Yf)(n, { size: t.size }),
              (0, a.vk)(n, { dir: "right", size: t.size }))
            : n;
        }
      },
      88769: function (e, t, n) {
        "use strict";
        n.d(t, {
          $G: function () {
            return f;
          },
          C4: function () {
            return u;
          },
          NC: function () {
            return s;
          },
          ci: function () {
            return l;
          },
          eC: function () {
            return c;
          },
        });
        var r = n(87214),
          i = n(60702),
          a = n(5547);
        let o = Array.from({ length: 256 }, (e, t) =>
          t.toString(16).padStart(2, "0")
        );
        function s(e, t = {}) {
          return "number" == typeof e || "bigint" == typeof e
            ? c(e, t)
            : "string" == typeof e
            ? f(e, t)
            : "boolean" == typeof e
            ? u(e, t)
            : l(e, t);
        }
        function u(e, t = {}) {
          let n = `0x${Number(e)}`;
          return "number" == typeof t.size
            ? ((0, a.Yf)(n, { size: t.size }), (0, i.vk)(n, { size: t.size }))
            : n;
        }
        function l(e, t = {}) {
          let n = "";
          for (let t = 0; t < e.length; t++) n += o[e[t]];
          let r = `0x${n}`;
          return "number" == typeof t.size
            ? ((0, a.Yf)(r, { size: t.size }),
              (0, i.vk)(r, { dir: "right", size: t.size }))
            : r;
        }
        function c(e, t = {}) {
          let n;
          let { signed: a, size: o } = t,
            s = BigInt(e);
          o
            ? (n = a
                ? (1n << (8n * BigInt(o) - 1n)) - 1n
                : 2n ** (8n * BigInt(o)) - 1n)
            : "number" == typeof e && (n = BigInt(Number.MAX_SAFE_INTEGER));
          let u = "bigint" == typeof n && a ? -n - 1n : 0;
          if ((n && s > n) || s < u) {
            let t = "bigint" == typeof e ? "n" : "";
            throw new r.J5({
              max: n ? `${n}${t}` : void 0,
              min: `${u}${t}`,
              signed: a,
              size: o,
              value: `${e}${t}`,
            });
          }
          let l = `0x${(a && s < 0
            ? (1n << BigInt(8 * o)) + BigInt(s)
            : s
          ).toString(16)}`;
          return o ? (0, i.vk)(l, { size: o }) : l;
        }
        let d = new TextEncoder();
        function f(e, t = {}) {
          let n = d.encode(e);
          return l(n, t);
        }
      },
      38624: function (e, t, n) {
        "use strict";
        n.d(t, {
          k: function () {
            return a;
          },
        });
        var r = n(49964),
          i = n(25590);
        function a(e, t) {
          let n = (e.details || "").toLowerCase(),
            a = e instanceof r.G ? e.walk((e) => e.code === i.M_.code) : e;
          return a instanceof r.G
            ? new i.M_({ cause: e, message: a.details })
            : i.M_.nodeMessage.test(n)
            ? new i.M_({ cause: e, message: e.details })
            : i.Hh.nodeMessage.test(n)
            ? new i.Hh({ cause: e, maxFeePerGas: t?.maxFeePerGas })
            : i.G$.nodeMessage.test(n)
            ? new i.G$({ cause: e, maxFeePerGas: t?.maxFeePerGas })
            : i.ZI.nodeMessage.test(n)
            ? new i.ZI({ cause: e, nonce: t?.nonce })
            : i.vU.nodeMessage.test(n)
            ? new i.vU({ cause: e, nonce: t?.nonce })
            : i.se.nodeMessage.test(n)
            ? new i.se({ cause: e, nonce: t?.nonce })
            : i.C_.nodeMessage.test(n)
            ? new i.C_({ cause: e })
            : i.WF.nodeMessage.test(n)
            ? new i.WF({ cause: e, gas: t?.gas })
            : i.dR.nodeMessage.test(n)
            ? new i.dR({ cause: e, gas: t?.gas })
            : i.pZ.nodeMessage.test(n)
            ? new i.pZ({ cause: e })
            : i.cs.nodeMessage.test(n)
            ? new i.cs({
                cause: e,
                maxFeePerGas: t?.maxFeePerGas,
                maxPriorityFeePerGas: t?.maxPriorityFeePerGas,
              })
            : new i.cj({ cause: e });
        }
      },
      15536: function (e, t, n) {
        "use strict";
        n.d(t, {
          G: function () {
            return o;
          },
          Z: function () {
            return a;
          },
        });
        var r = n(52961),
          i = n(17229);
        function a(e) {
          let t = e.transactions?.map((e) =>
            "string" == typeof e ? e : i.Tr(e)
          );
          return {
            ...e,
            baseFeePerGas: e.baseFeePerGas ? BigInt(e.baseFeePerGas) : null,
            blobGasUsed: e.blobGasUsed ? BigInt(e.blobGasUsed) : void 0,
            difficulty: e.difficulty ? BigInt(e.difficulty) : void 0,
            excessBlobGas: e.excessBlobGas ? BigInt(e.excessBlobGas) : void 0,
            gasLimit: e.gasLimit ? BigInt(e.gasLimit) : void 0,
            gasUsed: e.gasUsed ? BigInt(e.gasUsed) : void 0,
            hash: e.hash ? e.hash : null,
            logsBloom: e.logsBloom ? e.logsBloom : null,
            nonce: e.nonce ? e.nonce : null,
            number: e.number ? BigInt(e.number) : null,
            size: e.size ? BigInt(e.size) : void 0,
            timestamp: e.timestamp ? BigInt(e.timestamp) : void 0,
            transactions: t,
            totalDifficulty: e.totalDifficulty
              ? BigInt(e.totalDifficulty)
              : null,
          };
        }
        let o = (0, r.$)("block", a);
      },
      19804: function (e, t, n) {
        "use strict";
        function r(e, { format: t }) {
          if (!t) return {};
          let n = {},
            r = t(e || {});
          return (
            (function t(r) {
              let i = Object.keys(r);
              for (let a of i)
                a in e && (n[a] = e[a]),
                  r[a] &&
                    "object" == typeof r[a] &&
                    !Array.isArray(r[a]) &&
                    t(r[a]);
            })(r),
            n
          );
        }
        n.d(t, {
          K: function () {
            return r;
          },
        });
      },
      52961: function (e, t, n) {
        "use strict";
        function r(e, t) {
          return ({ exclude: n, format: r }) => ({
            exclude: n,
            format: (e) => {
              let i = t(e);
              if (n) for (let e of n) delete i[e];
              return { ...i, ...r(e) };
            },
            type: e,
          });
        }
        n.d(t, {
          $: function () {
            return r;
          },
        });
      },
      76606: function (e, t, n) {
        "use strict";
        function r(e, { args: t, eventName: n } = {}) {
          return {
            ...e,
            blockHash: e.blockHash ? e.blockHash : null,
            blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
            logIndex: e.logIndex ? Number(e.logIndex) : null,
            transactionHash: e.transactionHash ? e.transactionHash : null,
            transactionIndex: e.transactionIndex
              ? Number(e.transactionIndex)
              : null,
            ...(n ? { args: t, eventName: n } : {}),
          };
        }
        n.d(t, {
          U: function () {
            return r;
          },
        });
      },
      17229: function (e, t, n) {
        "use strict";
        n.d(t, {
          Tr: function () {
            return o;
          },
          c8: function () {
            return a;
          },
          y_: function () {
            return s;
          },
        });
        var r = n(5547),
          i = n(52961);
        let a = {
          "0x0": "legacy",
          "0x1": "eip2930",
          "0x2": "eip1559",
          "0x3": "eip4844",
        };
        function o(e) {
          let t = {
            ...e,
            blockHash: e.blockHash ? e.blockHash : null,
            blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
            chainId: e.chainId ? (0, r.ly)(e.chainId) : void 0,
            gas: e.gas ? BigInt(e.gas) : void 0,
            gasPrice: e.gasPrice ? BigInt(e.gasPrice) : void 0,
            maxFeePerBlobGas: e.maxFeePerBlobGas
              ? BigInt(e.maxFeePerBlobGas)
              : void 0,
            maxFeePerGas: e.maxFeePerGas ? BigInt(e.maxFeePerGas) : void 0,
            maxPriorityFeePerGas: e.maxPriorityFeePerGas
              ? BigInt(e.maxPriorityFeePerGas)
              : void 0,
            nonce: e.nonce ? (0, r.ly)(e.nonce) : void 0,
            to: e.to ? e.to : null,
            transactionIndex: e.transactionIndex
              ? Number(e.transactionIndex)
              : null,
            type: e.type ? a[e.type] : void 0,
            typeHex: e.type ? e.type : void 0,
            value: e.value ? BigInt(e.value) : void 0,
            v: e.v ? BigInt(e.v) : void 0,
          };
          return (
            (t.yParity = (() => {
              if (e.yParity) return Number(e.yParity);
              if ("bigint" == typeof t.v) {
                if (0n === t.v || 27n === t.v) return 0;
                if (1n === t.v || 28n === t.v) return 1;
                if (t.v >= 35n) return t.v % 2n === 0n ? 1 : 0;
              }
            })()),
            "legacy" === t.type &&
              (delete t.accessList,
              delete t.maxFeePerBlobGas,
              delete t.maxFeePerGas,
              delete t.maxPriorityFeePerGas,
              delete t.yParity),
            "eip2930" === t.type &&
              (delete t.maxFeePerBlobGas,
              delete t.maxFeePerGas,
              delete t.maxPriorityFeePerGas),
            "eip1559" === t.type && delete t.maxFeePerBlobGas,
            t
          );
        }
        let s = (0, i.$)("transaction", o);
      },
      25865: function (e, t, n) {
        "use strict";
        n.d(t, {
          dI: function () {
            return l;
          },
          fA: function () {
            return u;
          },
        });
        var r = n(5547),
          i = n(52961),
          a = n(76606),
          o = n(17229);
        let s = { "0x0": "reverted", "0x1": "success" };
        function u(e) {
          let t = {
            ...e,
            blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
            contractAddress: e.contractAddress ? e.contractAddress : null,
            cumulativeGasUsed: e.cumulativeGasUsed
              ? BigInt(e.cumulativeGasUsed)
              : null,
            effectiveGasPrice: e.effectiveGasPrice
              ? BigInt(e.effectiveGasPrice)
              : null,
            gasUsed: e.gasUsed ? BigInt(e.gasUsed) : null,
            logs: e.logs ? e.logs.map((e) => (0, a.U)(e)) : null,
            to: e.to ? e.to : null,
            transactionIndex: e.transactionIndex
              ? (0, r.ly)(e.transactionIndex)
              : null,
            status: e.status ? s[e.status] : null,
            type: e.type ? o.c8[e.type] || e.type : null,
          };
          return (
            e.blobGasPrice && (t.blobGasPrice = BigInt(e.blobGasPrice)),
            e.blobGasUsed && (t.blobGasUsed = BigInt(e.blobGasUsed)),
            t
          );
        }
        let l = (0, i.$)("transactionReceipt", u);
      },
      76008: function (e, t, n) {
        "use strict";
        n.d(t, {
          iy: function () {
            return s;
          },
          tG: function () {
            return o;
          },
        });
        var r = n(88769),
          i = n(52961);
        let a = {
          legacy: "0x0",
          eip2930: "0x1",
          eip1559: "0x2",
          eip4844: "0x3",
        };
        function o(e) {
          let t = {};
          return (
            void 0 !== e.accessList && (t.accessList = e.accessList),
            void 0 !== e.blobVersionedHashes &&
              (t.blobVersionedHashes = e.blobVersionedHashes),
            void 0 !== e.blobs &&
              ("string" != typeof e.blobs[0]
                ? (t.blobs = e.blobs.map((e) => (0, r.ci)(e)))
                : (t.blobs = e.blobs)),
            void 0 !== e.data && (t.data = e.data),
            void 0 !== e.from && (t.from = e.from),
            void 0 !== e.gas && (t.gas = (0, r.eC)(e.gas)),
            void 0 !== e.gasPrice && (t.gasPrice = (0, r.eC)(e.gasPrice)),
            void 0 !== e.maxFeePerBlobGas &&
              (t.maxFeePerBlobGas = (0, r.eC)(e.maxFeePerBlobGas)),
            void 0 !== e.maxFeePerGas &&
              (t.maxFeePerGas = (0, r.eC)(e.maxFeePerGas)),
            void 0 !== e.maxPriorityFeePerGas &&
              (t.maxPriorityFeePerGas = (0, r.eC)(e.maxPriorityFeePerGas)),
            void 0 !== e.nonce && (t.nonce = (0, r.eC)(e.nonce)),
            void 0 !== e.to && (t.to = e.to),
            void 0 !== e.type && (t.type = a[e.type]),
            void 0 !== e.value && (t.value = (0, r.eC)(e.value)),
            t
          );
        }
        let s = (0, i.$)("transactionRequest", o);
      },
      74912: function (e, t, n) {
        "use strict";
        n.d(t, {
          w: function () {
            return I;
          },
        });
        var r = n(96024);
        let i = BigInt(4294967296 - 1),
          a = BigInt(32),
          o = (e, t, n) => (e << n) | (t >>> (32 - n)),
          s = (e, t, n) => (t << n) | (e >>> (32 - n)),
          u = (e, t, n) => (t << (n - 32)) | (e >>> (64 - n)),
          l = (e, t, n) => (e << (n - 32)) | (t >>> (64 - n));
        var c = n(88342);
        let [d, f, p] = [[], [], []],
          h = BigInt(0),
          m = BigInt(1),
          y = BigInt(2),
          g = BigInt(7),
          b = BigInt(256),
          v = BigInt(113);
        for (let e = 0, t = m, n = 1, r = 0; e < 24; e++) {
          ([n, r] = [r, (2 * n + 3 * r) % 5]),
            d.push(2 * (5 * r + n)),
            f.push((((e + 1) * (e + 2)) / 2) % 64);
          let i = h;
          for (let e = 0; e < 7; e++)
            (t = ((t << m) ^ ((t >> g) * v)) % b) & y &&
              (i ^= m << ((m << BigInt(e)) - m));
          p.push(i);
        }
        let [w, E] = (function (e, t = !1) {
            let n = new Uint32Array(e.length),
              r = new Uint32Array(e.length);
            for (let o = 0; o < e.length; o++) {
              let { h: s, l: u } = (function (e, t = !1) {
                return t
                  ? { h: Number(e & i), l: Number((e >> a) & i) }
                  : { h: 0 | Number((e >> a) & i), l: 0 | Number(e & i) };
              })(e[o], t);
              [n[o], r[o]] = [s, u];
            }
            return [n, r];
          })(p, !0),
          x = (e, t, n) => (n > 32 ? u(e, t, n) : o(e, t, n)),
          C = (e, t, n) => (n > 32 ? l(e, t, n) : s(e, t, n));
        class _ extends c.kb {
          constructor(e, t, n, i = !1, a = 24) {
            if (
              (super(),
              (this.blockLen = e),
              (this.suffix = t),
              (this.outputLen = n),
              (this.enableXOF = i),
              (this.rounds = a),
              (this.pos = 0),
              (this.posOut = 0),
              (this.finished = !1),
              (this.destroyed = !1),
              (0, r.Rx)(n),
              0 >= this.blockLen || this.blockLen >= 200)
            )
              throw Error("Sha3 supports only keccak-f1600 function");
            (this.state = new Uint8Array(200)),
              (this.state32 = (0, c.Jq)(this.state));
          }
          keccak() {
            (function (e, t = 24) {
              let n = new Uint32Array(10);
              for (let r = 24 - t; r < 24; r++) {
                for (let t = 0; t < 10; t++)
                  n[t] = e[t] ^ e[t + 10] ^ e[t + 20] ^ e[t + 30] ^ e[t + 40];
                for (let t = 0; t < 10; t += 2) {
                  let r = (t + 8) % 10,
                    i = (t + 2) % 10,
                    a = n[i],
                    o = n[i + 1],
                    s = x(a, o, 1) ^ n[r],
                    u = C(a, o, 1) ^ n[r + 1];
                  for (let n = 0; n < 50; n += 10)
                    (e[t + n] ^= s), (e[t + n + 1] ^= u);
                }
                let t = e[2],
                  i = e[3];
                for (let n = 0; n < 24; n++) {
                  let r = f[n],
                    a = x(t, i, r),
                    o = C(t, i, r),
                    s = d[n];
                  (t = e[s]), (i = e[s + 1]), (e[s] = a), (e[s + 1] = o);
                }
                for (let t = 0; t < 50; t += 10) {
                  for (let r = 0; r < 10; r++) n[r] = e[t + r];
                  for (let r = 0; r < 10; r++)
                    e[t + r] ^= ~n[(r + 2) % 10] & n[(r + 4) % 10];
                }
                (e[0] ^= w[r]), (e[1] ^= E[r]);
              }
              n.fill(0);
            })(this.state32, this.rounds),
              (this.posOut = 0),
              (this.pos = 0);
          }
          update(e) {
            (0, r.Gg)(this);
            let { blockLen: t, state: n } = this;
            e = (0, c.O0)(e);
            let i = e.length;
            for (let r = 0; r < i; ) {
              let a = Math.min(t - this.pos, i - r);
              for (let t = 0; t < a; t++) n[this.pos++] ^= e[r++];
              this.pos === t && this.keccak();
            }
            return this;
          }
          finish() {
            if (this.finished) return;
            this.finished = !0;
            let { state: e, suffix: t, pos: n, blockLen: r } = this;
            (e[n] ^= t),
              (128 & t) != 0 && n === r - 1 && this.keccak(),
              (e[r - 1] ^= 128),
              this.keccak();
          }
          writeInto(e) {
            (0, r.Gg)(this, !1), (0, r.aI)(e), this.finish();
            let t = this.state,
              { blockLen: n } = this;
            for (let r = 0, i = e.length; r < i; ) {
              this.posOut >= n && this.keccak();
              let a = Math.min(n - this.posOut, i - r);
              e.set(t.subarray(this.posOut, this.posOut + a), r),
                (this.posOut += a),
                (r += a);
            }
            return e;
          }
          xofInto(e) {
            if (!this.enableXOF)
              throw Error("XOF is not possible for this instance");
            return this.writeInto(e);
          }
          xof(e) {
            return (0, r.Rx)(e), this.xofInto(new Uint8Array(e));
          }
          digestInto(e) {
            if (((0, r.J8)(e, this), this.finished))
              throw Error("digest() was already called");
            return this.writeInto(e), this.destroy(), e;
          }
          digest() {
            return this.digestInto(new Uint8Array(this.outputLen));
          }
          destroy() {
            (this.destroyed = !0), this.state.fill(0);
          }
          _cloneInto(e) {
            let {
              blockLen: t,
              suffix: n,
              outputLen: r,
              rounds: i,
              enableXOF: a,
            } = this;
            return (
              e || (e = new _(t, n, r, a, i)),
              e.state32.set(this.state32),
              (e.pos = this.pos),
              (e.posOut = this.posOut),
              (e.finished = this.finished),
              (e.rounds = i),
              (e.suffix = n),
              (e.outputLen = r),
              (e.enableXOF = a),
              (e.destroyed = this.destroyed),
              e
            );
          }
        }
        let T = (0, c.hE)(() => new _(136, 1, 32));
        var S = n(96942),
          P = n(5644),
          O = n(88769);
        function I(e, t) {
          let n = T((0, S.v)(e, { strict: !1 }) ? (0, P.O0)(e) : e);
          return "bytes" === (t || "hex") ? n : (0, O.NC)(n);
        }
      },
      78831: function (e, t, n) {
        "use strict";
        n.d(t, {
          J: function () {
            return y;
          },
        });
        var r = n(96024),
          i = n(88342);
        class a extends i.kb {
          constructor(e, t, n, r) {
            super(),
              (this.blockLen = e),
              (this.outputLen = t),
              (this.padOffset = n),
              (this.isLE = r),
              (this.finished = !1),
              (this.length = 0),
              (this.pos = 0),
              (this.destroyed = !1),
              (this.buffer = new Uint8Array(e)),
              (this.view = (0, i.GL)(this.buffer));
          }
          update(e) {
            (0, r.Gg)(this);
            let { view: t, buffer: n, blockLen: a } = this;
            e = (0, i.O0)(e);
            let o = e.length;
            for (let r = 0; r < o; ) {
              let s = Math.min(a - this.pos, o - r);
              if (s === a) {
                let t = (0, i.GL)(e);
                for (; a <= o - r; r += a) this.process(t, r);
                continue;
              }
              n.set(e.subarray(r, r + s), this.pos),
                (this.pos += s),
                (r += s),
                this.pos === a && (this.process(t, 0), (this.pos = 0));
            }
            return (this.length += e.length), this.roundClean(), this;
          }
          digestInto(e) {
            (0, r.Gg)(this), (0, r.J8)(e, this), (this.finished = !0);
            let { buffer: t, view: n, blockLen: a, isLE: o } = this,
              { pos: s } = this;
            (t[s++] = 128),
              this.buffer.subarray(s).fill(0),
              this.padOffset > a - s && (this.process(n, 0), (s = 0));
            for (let e = s; e < a; e++) t[e] = 0;
            (function (e, t, n, r) {
              if ("function" == typeof e.setBigUint64)
                return e.setBigUint64(t, n, r);
              let i = BigInt(32),
                a = BigInt(4294967295),
                o = Number((n >> i) & a),
                s = Number(n & a),
                u = r ? 4 : 0,
                l = r ? 0 : 4;
              e.setUint32(t + u, o, r), e.setUint32(t + l, s, r);
            })(n, a - 8, BigInt(8 * this.length), o),
              this.process(n, 0);
            let u = (0, i.GL)(e),
              l = this.outputLen;
            if (l % 4)
              throw Error("_sha2: outputLen should be aligned to 32bit");
            let c = l / 4,
              d = this.get();
            if (c > d.length) throw Error("_sha2: outputLen bigger than state");
            for (let e = 0; e < c; e++) u.setUint32(4 * e, d[e], o);
          }
          digest() {
            let { buffer: e, outputLen: t } = this;
            this.digestInto(e);
            let n = e.slice(0, t);
            return this.destroy(), n;
          }
          _cloneInto(e) {
            e || (e = new this.constructor()), e.set(...this.get());
            let {
              blockLen: t,
              buffer: n,
              length: r,
              finished: i,
              destroyed: a,
              pos: o,
            } = this;
            return (
              (e.length = r),
              (e.pos = o),
              (e.finished = i),
              (e.destroyed = a),
              r % t && e.buffer.set(n),
              e
            );
          }
        }
        let o = (e, t, n) => (e & t) ^ (~e & n),
          s = (e, t, n) => (e & t) ^ (e & n) ^ (t & n),
          u = new Uint32Array([
            1116352408, 1899447441, 3049323471, 3921009573, 961987163,
            1508970993, 2453635748, 2870763221, 3624381080, 310598401,
            607225278, 1426881987, 1925078388, 2162078206, 2614888103,
            3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983,
            1249150122, 1555081692, 1996064986, 2554220882, 2821834349,
            2952996808, 3210313671, 3336571891, 3584528711, 113926993,
            338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700,
            1986661051, 2177026350, 2456956037, 2730485921, 2820302411,
            3259730800, 3345764771, 3516065817, 3600352804, 4094571909,
            275423344, 430227734, 506948616, 659060556, 883997877, 958139571,
            1322822218, 1537002063, 1747873779, 1955562222, 2024104815,
            2227730452, 2361852424, 2428436474, 2756734187, 3204031479,
            3329325298,
          ]),
          l = new Uint32Array([
            1779033703, 3144134277, 1013904242, 2773480762, 1359893119,
            2600822924, 528734635, 1541459225,
          ]),
          c = new Uint32Array(64);
        class d extends a {
          constructor() {
            super(64, 32, 8, !1),
              (this.A = 0 | l[0]),
              (this.B = 0 | l[1]),
              (this.C = 0 | l[2]),
              (this.D = 0 | l[3]),
              (this.E = 0 | l[4]),
              (this.F = 0 | l[5]),
              (this.G = 0 | l[6]),
              (this.H = 0 | l[7]);
          }
          get() {
            let { A: e, B: t, C: n, D: r, E: i, F: a, G: o, H: s } = this;
            return [e, t, n, r, i, a, o, s];
          }
          set(e, t, n, r, i, a, o, s) {
            (this.A = 0 | e),
              (this.B = 0 | t),
              (this.C = 0 | n),
              (this.D = 0 | r),
              (this.E = 0 | i),
              (this.F = 0 | a),
              (this.G = 0 | o),
              (this.H = 0 | s);
          }
          process(e, t) {
            for (let n = 0; n < 16; n++, t += 4) c[n] = e.getUint32(t, !1);
            for (let e = 16; e < 64; e++) {
              let t = c[e - 15],
                n = c[e - 2],
                r = (0, i.np)(t, 7) ^ (0, i.np)(t, 18) ^ (t >>> 3),
                a = (0, i.np)(n, 17) ^ (0, i.np)(n, 19) ^ (n >>> 10);
              c[e] = (a + c[e - 7] + r + c[e - 16]) | 0;
            }
            let { A: n, B: r, C: a, D: l, E: d, F: f, G: p, H: h } = this;
            for (let e = 0; e < 64; e++) {
              let t = (0, i.np)(d, 6) ^ (0, i.np)(d, 11) ^ (0, i.np)(d, 25),
                m = (h + t + o(d, f, p) + u[e] + c[e]) | 0,
                y = (0, i.np)(n, 2) ^ (0, i.np)(n, 13) ^ (0, i.np)(n, 22),
                g = (y + s(n, r, a)) | 0;
              (h = p),
                (p = f),
                (f = d),
                (d = (l + m) | 0),
                (l = a),
                (a = r),
                (r = n),
                (n = (m + g) | 0);
            }
            (n = (n + this.A) | 0),
              (r = (r + this.B) | 0),
              (a = (a + this.C) | 0),
              (l = (l + this.D) | 0),
              (d = (d + this.E) | 0),
              (f = (f + this.F) | 0),
              (p = (p + this.G) | 0),
              (h = (h + this.H) | 0),
              this.set(n, r, a, l, d, f, p, h);
          }
          roundClean() {
            c.fill(0);
          }
          destroy() {
            this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
          }
        }
        let f = (0, i.hE)(() => new d());
        var p = n(96942),
          h = n(5644),
          m = n(88769);
        function y(e, t) {
          let n = f((0, p.v)(e, { strict: !1 }) ? (0, h.O0)(e) : e);
          return "bytes" === (t || "hex") ? n : (0, m.NC)(n);
        }
      },
      22297: function (e, t, n) {
        "use strict";
        n.d(t, {
          n: function () {
            return i;
          },
        });
        var r = n(63510);
        let i = r.r;
      },
      69477: function (e, t, n) {
        "use strict";
        n.d(t, {
          C: function () {
            return a;
          },
        });
        var r = n(80695),
          i = n(63510);
        let a = (e) => (0, r.tP)((0, i.r)(e), 0, 4);
      },
      63510: function (e, t, n) {
        "use strict";
        n.d(t, {
          r: function () {
            return c;
          },
        });
        var r = n(5644),
          i = n(74912);
        let a = (e) => (0, i.w)((0, r.O0)(e)),
          o = /^tuple(?<array>(\[(\d*)\])*)$/;
        function s(e) {
          let t = "",
            n = e.length;
          for (let r = 0; r < n; r++) {
            let i = e[r];
            (t += (function e(t) {
              let n = t.type;
              if (o.test(t.type) && "components" in t) {
                n = "(";
                let r = t.components.length;
                for (let i = 0; i < r; i++) {
                  let a = t.components[i];
                  (n += e(a)), i < r - 1 && (n += ", ");
                }
                let i = (function (e, t) {
                  let n = e.exec(t);
                  return n?.groups;
                })(o, t.type);
                return (n += `)${i?.array ?? ""}`), e({ ...t, type: n });
              }
              return ("indexed" in t && t.indexed && (n = `${n} indexed`),
              t.name)
                ? `${n} ${t.name}`
                : n;
            })(i)),
              r !== n - 1 && (t += ", ");
          }
          return t;
        }
        var u = n(49964);
        let l = (e) => {
          var t;
          let n =
            "string" == typeof e
              ? e
              : "function" === (t = e).type
              ? `function ${t.name}(${s(t.inputs)})${
                  t.stateMutability && "nonpayable" !== t.stateMutability
                    ? ` ${t.stateMutability}`
                    : ""
                }${t.outputs.length ? ` returns (${s(t.outputs)})` : ""}`
              : "event" === t.type
              ? `event ${t.name}(${s(t.inputs)})`
              : "error" === t.type
              ? `error ${t.name}(${s(t.inputs)})`
              : "constructor" === t.type
              ? `constructor(${s(t.inputs)})${
                  "payable" === t.stateMutability ? " payable" : ""
                }`
              : "fallback" === t.type
              ? "fallback()"
              : "receive() external payable";
          return (function (e) {
            let t = !0,
              n = "",
              r = 0,
              i = "",
              a = !1;
            for (let o = 0; o < e.length; o++) {
              let s = e[o];
              if (
                (["(", ")", ","].includes(s) && (t = !0),
                "(" === s && r++,
                ")" === s && r--,
                t)
              ) {
                if (0 === r) {
                  if (" " === s && ["event", "function", ""].includes(i))
                    i = "";
                  else if (((i += s), ")" === s)) {
                    a = !0;
                    break;
                  }
                  continue;
                }
                if (" " === s) {
                  "," !== e[o - 1] &&
                    "," !== n &&
                    ",(" !== n &&
                    ((n = ""), (t = !1));
                  continue;
                }
                (i += s), (n += s);
              }
            }
            if (!a) throw new u.G("Unable to normalize signature.");
            return i;
          })(n);
        };
        function c(e) {
          return a(l(e));
        }
      },
      54790: function (e, t, n) {
        "use strict";
        n.d(t, {
          S: function () {
            return i;
          },
        });
        let r = new Map();
        function i({
          fn: e,
          id: t,
          shouldSplitBatch: n,
          wait: i = 0,
          sort: a,
        }) {
          let o = async () => {
              let t = l();
              s();
              let n = t.map(({ args: e }) => e);
              0 !== n.length &&
                e(n)
                  .then((e) => {
                    a && Array.isArray(e) && e.sort(a);
                    for (let n = 0; n < t.length; n++) {
                      let { pendingPromise: r } = t[n];
                      r.resolve?.([e[n], e]);
                    }
                  })
                  .catch((e) => {
                    for (let n = 0; n < t.length; n++) {
                      let { pendingPromise: r } = t[n];
                      r.reject?.(e);
                    }
                  });
            },
            s = () => r.delete(t),
            u = () => l().map(({ args: e }) => e),
            l = () => r.get(t) || [],
            c = (e) => r.set(t, [...l(), e]);
          return {
            flush: s,
            async schedule(e) {
              let t = {},
                r = new Promise((e, n) => {
                  (t.resolve = e), (t.reject = n);
                }),
                a = n?.([...u(), e]);
              a && o();
              let s = l().length > 0;
              return (
                s
                  ? c({ args: e, pendingPromise: t })
                  : (c({ args: e, pendingPromise: t }), setTimeout(o, i)),
                r
              );
            },
          };
        }
      },
      9385: function (e, t, n) {
        "use strict";
        n.d(t, {
          J: function () {
            return i;
          },
        });
        var r = n(23517);
        function i(
          e,
          { delay: t = 100, retryCount: n = 2, shouldRetry: i = () => !0 } = {}
        ) {
          return new Promise((a, o) => {
            let s = async ({ count: u = 0 } = {}) => {
              let l = async ({ error: e }) => {
                let n = "function" == typeof t ? t({ count: u, error: e }) : t;
                n && (await (0, r.D)(n)), s({ count: u + 1 });
              };
              try {
                let t = await e();
                a(t);
              } catch (e) {
                if (u < n && (await i({ count: u, error: e })))
                  return l({ error: e });
                o(e);
              }
            };
            s();
          });
        }
      },
      51230: function (e, t, n) {
        "use strict";
        n.d(t, {
          Ow: function () {
            return r;
          },
          eL: function () {
            return i;
          },
          lh: function () {
            return a;
          },
        });
        let r = /^(.*)\[([0-9]*)\]$/,
          i = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/,
          a =
            /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;
      },
      87444: function (e, t, n) {
        "use strict";
        n.d(t, {
          P: function () {
            return r;
          },
        });
        let r = (e, t, n) =>
          JSON.stringify(
            e,
            (e, n) => {
              let r = "bigint" == typeof n ? n.toString() : n;
              return "function" == typeof t ? t(e, r) : r;
            },
            n
          );
      },
      52829: function (e, t, n) {
        "use strict";
        n.d(t, {
          F: function () {
            return u;
          },
        });
        var r = n(46176),
          i = n(17013),
          a = n(25590),
          o = n(70392),
          s = n(89930);
        function u(e) {
          let {
              account: t,
              gasPrice: n,
              maxFeePerGas: u,
              maxPriorityFeePerGas: l,
              to: c,
            } = e,
            d = t ? (0, r.T)(t) : void 0;
          if (d && !(0, s.U)(d.address)) throw new i.b({ address: d.address });
          if (c && !(0, s.U)(c)) throw new i.b({ address: c });
          if (void 0 !== n && (void 0 !== u || void 0 !== l)) throw new o.xY();
          if (u && u > 2n ** 256n - 1n) throw new a.Hh({ maxFeePerGas: u });
          if (l && u && l > u)
            throw new a.cs({ maxFeePerGas: u, maxPriorityFeePerGas: l });
        }
      },
      11205: function (e, t, n) {
        "use strict";
        n.d(t, {
          l: function () {
            return i;
          },
        });
        var r = n(70392);
        function i(e) {
          if (e.type) return e.type;
          if (
            void 0 !== e.blobs ||
            void 0 !== e.blobVersionedHashes ||
            void 0 !== e.maxFeePerBlobGas ||
            void 0 !== e.sidecars
          )
            return "eip4844";
          if (void 0 !== e.maxFeePerGas || void 0 !== e.maxPriorityFeePerGas)
            return "eip1559";
          if (void 0 !== e.gasPrice)
            return void 0 !== e.accessList ? "eip2930" : "legacy";
          throw new r.j3({ transaction: e });
        }
      },
      27497: function (e, t, n) {
        "use strict";
        n.d(t, {
          d: function () {
            return a;
          },
        });
        var r = n(85761),
          i = n(87272);
        function a(e, t = "wei") {
          return (0, i.b)(e, r.ez[t]);
        }
      },
      97393: function (e, t, n) {
        "use strict";
        n.d(t, {
          o: function () {
            return a;
          },
        });
        var r = n(85761),
          i = n(87272);
        function a(e, t = "wei") {
          return (0, i.b)(e, r.Zn[t]);
        }
      },
      87272: function (e, t, n) {
        "use strict";
        function r(e, t) {
          let n = e.toString(),
            r = n.startsWith("-");
          r && (n = n.slice(1));
          let [i, a] = [
            (n = n.padStart(t, "0")).slice(0, n.length - t),
            n.slice(n.length - t),
          ];
          return (
            (a = a.replace(/(0+)$/, "")),
            `${r ? "-" : ""}${i || "0"}${a ? `.${a}` : ""}`
          );
        }
        n.d(t, {
          b: function () {
            return r;
          },
        });
      },
      82267: function (e, t, n) {
        "use strict";
        function r(e, t) {
          let [n, r = "0"] = e.split("."),
            i = n.startsWith("-");
          if ((i && (n = n.slice(1)), (r = r.replace(/(0+)$/, "")), 0 === t))
            1 === Math.round(Number(`.${r}`)) && (n = `${BigInt(n) + 1n}`),
              (r = "");
          else if (r.length > t) {
            let [e, i, a] = [r.slice(0, t - 1), r.slice(t - 1, t), r.slice(t)],
              o = Math.round(Number(`${i}.${a}`));
            (r =
              o > 9
                ? `${BigInt(e) + BigInt(1)}0`.padStart(e.length + 1, "0")
                : `${e}${o}`).length > t &&
              ((r = r.slice(1)), (n = `${BigInt(n) + 1n}`)),
              (r = r.slice(0, t));
          } else r = r.padEnd(t, "0");
          return BigInt(`${i ? "-" : ""}${n}${r}`);
        }
        n.d(t, {
          v: function () {
            return r;
          },
        });
      },
      23517: function (e, t, n) {
        "use strict";
        async function r(e) {
          return new Promise((t) => setTimeout(t, e));
        }
        n.d(t, {
          D: function () {
            return r;
          },
        });
      },
      61363: function (e, t, n) {
        "use strict";
        n.d(t, {
          R: function () {
            return i;
          },
        });
        var r,
          i =
            (((r = i || {}).Space = " "),
            (r.Enter = "Enter"),
            (r.Escape = "Escape"),
            (r.Backspace = "Backspace"),
            (r.Delete = "Delete"),
            (r.ArrowLeft = "ArrowLeft"),
            (r.ArrowUp = "ArrowUp"),
            (r.ArrowRight = "ArrowRight"),
            (r.ArrowDown = "ArrowDown"),
            (r.Home = "Home"),
            (r.End = "End"),
            (r.PageUp = "PageUp"),
            (r.PageDown = "PageDown"),
            (r.Tab = "Tab"),
            r);
      },
      44080: function (e, t, n) {
        "use strict";
        n.d(t, {
          u: function () {
            return j;
          },
        });
        var r,
          i = n(67294),
          a = n(12351),
          o = n(16567),
          s = n(32984),
          u = n(14879),
          l = n(16723),
          c = n(3855),
          d = n(82180),
          f = n(23784),
          p = n(9362);
        function h(e, ...t) {
          e && t.length > 0 && e.classList.add(...t);
        }
        function m(e, ...t) {
          e && t.length > 0 && e.classList.remove(...t);
        }
        var y = n(94192),
          g = n(73781),
          b = n(44067);
        function v(e = "") {
          return e.split(" ").filter((e) => e.trim().length > 1);
        }
        let w = (0, i.createContext)(null);
        w.displayName = "TransitionContext";
        var E = (((r = E || {}).Visible = "visible"), (r.Hidden = "hidden"), r);
        let x = (0, i.createContext)(null);
        function C(e) {
          return "children" in e
            ? C(e.children)
            : e.current
                .filter(({ el: e }) => null !== e.current)
                .filter(({ state: e }) => "visible" === e).length > 0;
        }
        function _(e, t) {
          let n = (0, c.E)(e),
            r = (0, i.useRef)([]),
            o = (0, u.t)(),
            l = (0, y.G)(),
            d = (0, g.z)((e, t = a.l4.Hidden) => {
              let i = r.current.findIndex(({ el: t }) => t === e);
              -1 !== i &&
                ((0, s.E)(t, {
                  [a.l4.Unmount]() {
                    r.current.splice(i, 1);
                  },
                  [a.l4.Hidden]() {
                    r.current[i].state = "hidden";
                  },
                }),
                l.microTask(() => {
                  var e;
                  !C(r) && o.current && (null == (e = n.current) || e.call(n));
                }));
            }),
            f = (0, g.z)((e) => {
              let t = r.current.find(({ el: t }) => t === e);
              return (
                t
                  ? "visible" !== t.state && (t.state = "visible")
                  : r.current.push({ el: e, state: "visible" }),
                () => d(e, a.l4.Unmount)
              );
            }),
            p = (0, i.useRef)([]),
            h = (0, i.useRef)(Promise.resolve()),
            m = (0, i.useRef)({ enter: [], leave: [], idle: [] }),
            b = (0, g.z)((e, n, r) => {
              p.current.splice(0),
                t &&
                  (t.chains.current[n] = t.chains.current[n].filter(
                    ([t]) => t !== e
                  )),
                null == t ||
                  t.chains.current[n].push([
                    e,
                    new Promise((e) => {
                      p.current.push(e);
                    }),
                  ]),
                null == t ||
                  t.chains.current[n].push([
                    e,
                    new Promise((e) => {
                      Promise.all(m.current[n].map(([e, t]) => t)).then(() =>
                        e()
                      );
                    }),
                  ]),
                "enter" === n
                  ? (h.current = h.current
                      .then(() => (null == t ? void 0 : t.wait.current))
                      .then(() => r(n)))
                  : r(n);
            }),
            v = (0, g.z)((e, t, n) => {
              Promise.all(m.current[t].splice(0).map(([e, t]) => t))
                .then(() => {
                  var e;
                  null == (e = p.current.shift()) || e();
                })
                .then(() => n(t));
            });
          return (0, i.useMemo)(
            () => ({
              children: r,
              register: f,
              unregister: d,
              onStart: b,
              onStop: v,
              wait: h,
              chains: m,
            }),
            [f, d, r, b, v, m, h]
          );
        }
        function T() {}
        x.displayName = "NestingContext";
        let S = ["beforeEnter", "afterEnter", "beforeLeave", "afterLeave"];
        function P(e) {
          var t;
          let n = {};
          for (let r of S) n[r] = null != (t = e[r]) ? t : T;
          return n;
        }
        let O = a.AN.RenderStrategy,
          I = (0, a.yV)(function (e, t) {
            let { show: n, appear: r = !1, unmount: s = !0, ...u } = e,
              c = (0, i.useRef)(null),
              p = (0, f.T)(c, t);
            (0, d.H)();
            let h = (0, o.oJ)();
            if (
              (void 0 === n &&
                null !== h &&
                (n = (h & o.ZM.Open) === o.ZM.Open),
              ![!0, !1].includes(n))
            )
              throw Error(
                "A <Transition /> is used but it is missing a `show={true | false}` prop."
              );
            let [m, y] = (0, i.useState)(n ? "visible" : "hidden"),
              b = _(() => {
                y("hidden");
              }),
              [v, E] = (0, i.useState)(!0),
              T = (0, i.useRef)([n]);
            (0, l.e)(() => {
              !1 !== v &&
                T.current[T.current.length - 1] !== n &&
                (T.current.push(n), E(!1));
            }, [T, n]);
            let S = (0, i.useMemo)(
              () => ({ show: n, appear: r, initial: v }),
              [n, r, v]
            );
            (0, i.useEffect)(() => {
              if (n) y("visible");
              else if (C(b)) {
                let e = c.current;
                if (!e) return;
                let t = e.getBoundingClientRect();
                0 === t.x &&
                  0 === t.y &&
                  0 === t.width &&
                  0 === t.height &&
                  y("hidden");
              } else y("hidden");
            }, [n, b]);
            let P = { unmount: s },
              I = (0, g.z)(() => {
                var t;
                v && E(!1), null == (t = e.beforeEnter) || t.call(e);
              }),
              k = (0, g.z)(() => {
                var t;
                v && E(!1), null == (t = e.beforeLeave) || t.call(e);
              });
            return i.createElement(
              x.Provider,
              { value: b },
              i.createElement(
                w.Provider,
                { value: S },
                (0, a.sY)({
                  ourProps: {
                    ...P,
                    as: i.Fragment,
                    children: i.createElement(A, {
                      ref: p,
                      ...P,
                      ...u,
                      beforeEnter: I,
                      beforeLeave: k,
                    }),
                  },
                  theirProps: {},
                  defaultTag: i.Fragment,
                  features: O,
                  visible: "visible" === m,
                  name: "Transition",
                })
              )
            );
          }),
          A = (0, a.yV)(function (e, t) {
            var n, r, E;
            let T;
            let {
                beforeEnter: S,
                afterEnter: I,
                beforeLeave: A,
                afterLeave: k,
                enter: j,
                enterFrom: B,
                enterTo: M,
                entered: N,
                leave: D,
                leaveFrom: R,
                leaveTo: F,
                ...L
              } = e,
              U = (0, i.useRef)(null),
              $ = (0, f.T)(U, t),
              q = null == (n = L.unmount) || n ? a.l4.Unmount : a.l4.Hidden,
              {
                show: H,
                appear: z,
                initial: G,
              } = (function () {
                let e = (0, i.useContext)(w);
                if (null === e)
                  throw Error(
                    "A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />."
                  );
                return e;
              })(),
              [W, V] = (0, i.useState)(H ? "visible" : "hidden"),
              K = (function () {
                let e = (0, i.useContext)(x);
                if (null === e)
                  throw Error(
                    "A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />."
                  );
                return e;
              })(),
              { register: Z, unregister: J } = K;
            (0, i.useEffect)(() => Z(U), [Z, U]),
              (0, i.useEffect)(() => {
                if (q === a.l4.Hidden && U.current) {
                  if (H && "visible" !== W) {
                    V("visible");
                    return;
                  }
                  return (0, s.E)(W, {
                    hidden: () => J(U),
                    visible: () => Z(U),
                  });
                }
              }, [W, U, Z, J, H, q]);
            let Y = (0, c.E)({
                base: v(L.className),
                enter: v(j),
                enterFrom: v(B),
                enterTo: v(M),
                entered: v(N),
                leave: v(D),
                leaveFrom: v(R),
                leaveTo: v(F),
              }),
              X =
                ((E = {
                  beforeEnter: S,
                  afterEnter: I,
                  beforeLeave: A,
                  afterLeave: k,
                }),
                (T = (0, i.useRef)(P(E))),
                (0, i.useEffect)(() => {
                  T.current = P(E);
                }, [E]),
                T),
              Q = (0, d.H)();
            (0, i.useEffect)(() => {
              if (Q && "visible" === W && null === U.current)
                throw Error(
                  "Did you forget to passthrough the `ref` to the actual DOM node?"
                );
            }, [U, W, Q]);
            let ee = z && H && G,
              et = Q && (!G || z) ? (H ? "enter" : "leave") : "idle",
              en = (function (e = 0) {
                let [t, n] = (0, i.useState)(e),
                  r = (0, u.t)(),
                  a = (0, i.useCallback)(
                    (e) => {
                      r.current && n((t) => t | e);
                    },
                    [t, r]
                  ),
                  o = (0, i.useCallback)((e) => !!(t & e), [t]);
                return {
                  flags: t,
                  addFlag: a,
                  hasFlag: o,
                  removeFlag: (0, i.useCallback)(
                    (e) => {
                      r.current && n((t) => t & ~e);
                    },
                    [n, r]
                  ),
                  toggleFlag: (0, i.useCallback)(
                    (e) => {
                      r.current && n((t) => t ^ e);
                    },
                    [n]
                  ),
                };
              })(0),
              er = (0, g.z)((e) =>
                (0, s.E)(e, {
                  enter: () => {
                    en.addFlag(o.ZM.Opening), X.current.beforeEnter();
                  },
                  leave: () => {
                    en.addFlag(o.ZM.Closing), X.current.beforeLeave();
                  },
                  idle: () => {},
                })
              ),
              ei = (0, g.z)((e) =>
                (0, s.E)(e, {
                  enter: () => {
                    en.removeFlag(o.ZM.Opening), X.current.afterEnter();
                  },
                  leave: () => {
                    en.removeFlag(o.ZM.Closing), X.current.afterLeave();
                  },
                  idle: () => {},
                })
              ),
              ea = _(() => {
                V("hidden"), J(U);
              }, K);
            !(function ({
              immediate: e,
              container: t,
              direction: n,
              classes: r,
              onStart: i,
              onStop: a,
            }) {
              let o = (0, u.t)(),
                d = (0, y.G)(),
                f = (0, c.E)(n);
              (0, l.e)(() => {
                e && (f.current = "enter");
              }, [e]),
                (0, l.e)(() => {
                  let e = (0, p.k)();
                  d.add(e.dispose);
                  let n = t.current;
                  if (n && "idle" !== f.current && o.current) {
                    var u, l, c;
                    let t, o, d, y, g, b, v;
                    return (
                      e.dispose(),
                      i.current(f.current),
                      e.add(
                        ((u = r.current),
                        (l = "enter" === f.current),
                        (c = () => {
                          e.dispose(), a.current(f.current);
                        }),
                        (o = l ? "enter" : "leave"),
                        (d = (0, p.k)()),
                        (y =
                          void 0 !== c
                            ? ((t = { called: !1 }),
                              (...e) => {
                                if (!t.called) return (t.called = !0), c(...e);
                              })
                            : () => {}),
                        "enter" === o &&
                          (n.removeAttribute("hidden"), (n.style.display = "")),
                        (g = (0, s.E)(o, {
                          enter: () => u.enter,
                          leave: () => u.leave,
                        })),
                        (b = (0, s.E)(o, {
                          enter: () => u.enterTo,
                          leave: () => u.leaveTo,
                        })),
                        (v = (0, s.E)(o, {
                          enter: () => u.enterFrom,
                          leave: () => u.leaveFrom,
                        })),
                        m(
                          n,
                          ...u.base,
                          ...u.enter,
                          ...u.enterTo,
                          ...u.enterFrom,
                          ...u.leave,
                          ...u.leaveFrom,
                          ...u.leaveTo,
                          ...u.entered
                        ),
                        h(n, ...u.base, ...g, ...v),
                        d.nextFrame(() => {
                          m(n, ...u.base, ...g, ...v),
                            h(n, ...u.base, ...g, ...b),
                            (function (e, t) {
                              let n = (0, p.k)();
                              if (!e) return n.dispose;
                              let {
                                  transitionDuration: r,
                                  transitionDelay: i,
                                } = getComputedStyle(e),
                                [a, o] = [r, i].map((e) => {
                                  let [t = 0] = e
                                    .split(",")
                                    .filter(Boolean)
                                    .map((e) =>
                                      e.includes("ms")
                                        ? parseFloat(e)
                                        : 1e3 * parseFloat(e)
                                    )
                                    .sort((e, t) => t - e);
                                  return t;
                                }),
                                s = a + o;
                              if (0 !== s) {
                                n.group((n) => {
                                  n.setTimeout(() => {
                                    t(), n.dispose();
                                  }, s),
                                    n.addEventListener(
                                      e,
                                      "transitionrun",
                                      (e) => {
                                        e.target === e.currentTarget &&
                                          n.dispose();
                                      }
                                    );
                                });
                                let r = n.addEventListener(
                                  e,
                                  "transitionend",
                                  (e) => {
                                    e.target === e.currentTarget && (t(), r());
                                  }
                                );
                              } else t();
                              n.add(() => t()), n.dispose;
                            })(
                              n,
                              () => (
                                m(n, ...u.base, ...g),
                                h(n, ...u.base, ...u.entered),
                                y()
                              )
                            );
                        }),
                        d.dispose)
                      ),
                      e.dispose
                    );
                  }
                }, [n]);
            })({
              immediate: ee,
              container: U,
              classes: Y,
              direction: et,
              onStart: (0, c.E)((e) => {
                ea.onStart(U, e, er);
              }),
              onStop: (0, c.E)((e) => {
                ea.onStop(U, e, ei),
                  "leave" !== e || C(ea) || (V("hidden"), J(U));
              }),
            });
            let eo = L;
            return (
              ee
                ? (eo = {
                    ...eo,
                    className: (0, b.A)(
                      L.className,
                      ...Y.current.enter,
                      ...Y.current.enterFrom
                    ),
                  })
                : ((eo.className = (0, b.A)(
                    L.className,
                    null == (r = U.current) ? void 0 : r.className
                  )),
                  "" === eo.className && delete eo.className),
              i.createElement(
                x.Provider,
                { value: ea },
                i.createElement(
                  o.up,
                  {
                    value:
                      (0, s.E)(W, { visible: o.ZM.Open, hidden: o.ZM.Closed }) |
                      en.flags,
                  },
                  (0, a.sY)({
                    ourProps: { ref: $ },
                    theirProps: eo,
                    defaultTag: "div",
                    features: O,
                    visible: "visible" === W,
                    name: "Transition.Child",
                  })
                )
              )
            );
          }),
          k = (0, a.yV)(function (e, t) {
            let n = null !== (0, i.useContext)(w),
              r = null !== (0, o.oJ)();
            return i.createElement(
              i.Fragment,
              null,
              !n && r
                ? i.createElement(I, { ref: t, ...e })
                : i.createElement(A, { ref: t, ...e })
            );
          }),
          j = Object.assign(I, { Child: k, Root: I });
      },
      94192: function (e, t, n) {
        "use strict";
        n.d(t, {
          G: function () {
            return a;
          },
        });
        var r = n(67294),
          i = n(9362);
        function a() {
          let [e] = (0, r.useState)(i.k);
          return (0, r.useEffect)(() => () => e.dispose(), [e]), e;
        }
      },
      73781: function (e, t, n) {
        "use strict";
        n.d(t, {
          z: function () {
            return a;
          },
        });
        var r = n(67294),
          i = n(3855);
        let a = function (e) {
          let t = (0, i.E)(e);
          return r.useCallback((...e) => t.current(...e), [t]);
        };
      },
      19946: function (e, t, n) {
        "use strict";
        n.d(t, {
          M: function () {
            return u;
          },
        });
        var r,
          i = n(67294),
          a = n(16723),
          o = n(82180),
          s = n(77896);
        let u =
          null != (r = i.useId)
            ? r
            : function () {
                let e = (0, o.H)(),
                  [t, n] = i.useState(e ? () => s.O.nextId() : null);
                return (
                  (0, a.e)(() => {
                    null === t && n(s.O.nextId());
                  }, [t]),
                  null != t ? "" + t : void 0
                );
              };
      },
      14879: function (e, t, n) {
        "use strict";
        n.d(t, {
          t: function () {
            return a;
          },
        });
        var r = n(67294),
          i = n(16723);
        function a() {
          let e = (0, r.useRef)(!1);
          return (
            (0, i.e)(
              () => (
                (e.current = !0),
                () => {
                  e.current = !1;
                }
              ),
              []
            ),
            e
          );
        }
      },
      16723: function (e, t, n) {
        "use strict";
        n.d(t, {
          e: function () {
            return a;
          },
        });
        var r = n(67294),
          i = n(77896);
        let a = (e, t) => {
          i.O.isServer ? (0, r.useEffect)(e, t) : (0, r.useLayoutEffect)(e, t);
        };
      },
      3855: function (e, t, n) {
        "use strict";
        n.d(t, {
          E: function () {
            return a;
          },
        });
        var r = n(67294),
          i = n(16723);
        function a(e) {
          let t = (0, r.useRef)(e);
          return (
            (0, i.e)(() => {
              t.current = e;
            }, [e]),
            t
          );
        }
      },
      39650: function (e, t, n) {
        "use strict";
        n.d(t, {
          O: function () {
            return u;
          },
        });
        var r = n(67294),
          i = n(84575),
          a = n(3855);
        function o(e, t, n) {
          let i = (0, a.E)(t);
          (0, r.useEffect)(() => {
            function t(e) {
              i.current(e);
            }
            return (
              document.addEventListener(e, t, n),
              () => document.removeEventListener(e, t, n)
            );
          }, [e, n]);
        }
        var s = n(7815);
        function u(e, t, n = !0) {
          let a = (0, r.useRef)(!1);
          function u(n, r) {
            if (!a.current || n.defaultPrevented) return;
            let o = r(n);
            if (null !== o && o.getRootNode().contains(o) && o.isConnected) {
              for (let t of (function e(t) {
                return "function" == typeof t
                  ? e(t())
                  : Array.isArray(t) || t instanceof Set
                  ? t
                  : [t];
              })(e)) {
                if (null === t) continue;
                let e = t instanceof HTMLElement ? t : t.current;
                if (
                  (null != e && e.contains(o)) ||
                  (n.composed && n.composedPath().includes(e))
                )
                  return;
              }
              return (
                (0, i.sP)(o, i.tJ.Loose) ||
                  -1 === o.tabIndex ||
                  n.preventDefault(),
                t(n, o)
              );
            }
          }
          (0, r.useEffect)(() => {
            requestAnimationFrame(() => {
              a.current = n;
            });
          }, [n]);
          let l = (0, r.useRef)(null);
          o(
            "pointerdown",
            (e) => {
              var t, n;
              a.current &&
                (l.current =
                  (null ==
                  (n = null == (t = e.composedPath) ? void 0 : t.call(e))
                    ? void 0
                    : n[0]) || e.target);
            },
            !0
          ),
            o(
              "mousedown",
              (e) => {
                var t, n;
                a.current &&
                  (l.current =
                    (null ==
                    (n = null == (t = e.composedPath) ? void 0 : t.call(e))
                      ? void 0
                      : n[0]) || e.target);
              },
              !0
            ),
            o(
              "click",
              (e) => {
                l.current && (u(e, () => l.current), (l.current = null));
              },
              !0
            ),
            o(
              "touchend",
              (e) =>
                u(e, () => (e.target instanceof HTMLElement ? e.target : null)),
              !0
            ),
            (0, s.s)(
              "blur",
              (e) =>
                u(e, () =>
                  window.document.activeElement instanceof HTMLIFrameElement
                    ? window.document.activeElement
                    : null
                ),
              !0
            );
        }
      },
      82180: function (e, t, n) {
        "use strict";
        n.d(t, {
          H: function () {
            return o;
          },
        });
        var r,
          i = n(67294),
          a = n(77896);
        function o() {
          let e;
          let t =
              ((e = "undefined" == typeof document),
              (0, (r || (r = n.t(i, 2))).useSyncExternalStore)(
                () => () => {},
                () => !1,
                () => !e
              )),
            [o, s] = i.useState(a.O.isHandoffComplete);
          return (
            o && !1 === a.O.isHandoffComplete && s(!1),
            i.useEffect(() => {
              !0 !== o && s(!0);
            }, [o]),
            i.useEffect(() => a.O.handoff(), []),
            !t && o
          );
        }
      },
      23784: function (e, t, n) {
        "use strict";
        n.d(t, {
          T: function () {
            return s;
          },
          h: function () {
            return o;
          },
        });
        var r = n(67294),
          i = n(73781);
        let a = Symbol();
        function o(e, t = !0) {
          return Object.assign(e, { [a]: t });
        }
        function s(...e) {
          let t = (0, r.useRef)(e);
          (0, r.useEffect)(() => {
            t.current = e;
          }, [e]);
          let n = (0, i.z)((e) => {
            for (let n of t.current)
              null != n && ("function" == typeof n ? n(e) : (n.current = e));
          });
          return e.every((e) => null == e || (null == e ? void 0 : e[a]))
            ? void 0
            : n;
        }
      },
      7815: function (e, t, n) {
        "use strict";
        n.d(t, {
          s: function () {
            return a;
          },
        });
        var r = n(67294),
          i = n(3855);
        function a(e, t, n) {
          let a = (0, i.E)(t);
          (0, r.useEffect)(() => {
            function t(e) {
              a.current(e);
            }
            return (
              window.addEventListener(e, t, n),
              () => window.removeEventListener(e, t, n)
            );
          }, [e, n]);
        }
      },
      46045: function (e, t, n) {
        "use strict";
        n.d(t, {
          A: function () {
            return a;
          },
          _: function () {
            return o;
          },
        });
        var r,
          i = n(12351),
          a =
            (((r = a || {})[(r.None = 1)] = "None"),
            (r[(r.Focusable = 2)] = "Focusable"),
            (r[(r.Hidden = 4)] = "Hidden"),
            r);
        let o = (0, i.yV)(function (e, t) {
          let { features: n = 1, ...r } = e,
            a = {
              ref: t,
              "aria-hidden": (2 & n) == 2 || void 0,
              style: {
                position: "fixed",
                top: 1,
                left: 1,
                width: 1,
                height: 0,
                padding: 0,
                margin: -1,
                overflow: "hidden",
                clip: "rect(0, 0, 0, 0)",
                whiteSpace: "nowrap",
                borderWidth: "0",
                ...((4 & n) == 4 && (2 & n) != 2 && { display: "none" }),
              },
            };
          return (0,
          i.sY)({ ourProps: a, theirProps: r, slot: {}, defaultTag: "div", name: "Hidden" });
        });
      },
      16567: function (e, t, n) {
        "use strict";
        n.d(t, {
          ZM: function () {
            return o;
          },
          oJ: function () {
            return s;
          },
          up: function () {
            return u;
          },
        });
        var r,
          i = n(67294);
        let a = (0, i.createContext)(null);
        a.displayName = "OpenClosedContext";
        var o =
          (((r = o || {})[(r.Open = 1)] = "Open"),
          (r[(r.Closed = 2)] = "Closed"),
          (r[(r.Closing = 4)] = "Closing"),
          (r[(r.Opening = 8)] = "Opening"),
          r);
        function s() {
          return (0, i.useContext)(a);
        }
        function u({ value: e, children: t }) {
          return i.createElement(a.Provider, { value: e }, t);
        }
      },
      64103: function (e, t, n) {
        "use strict";
        function r(e) {
          let t = e.parentElement,
            n = null;
          for (; t && !(t instanceof HTMLFieldSetElement); )
            t instanceof HTMLLegendElement && (n = t), (t = t.parentElement);
          let r = (null == t ? void 0 : t.getAttribute("disabled")) === "";
          return (
            !(
              r &&
              (function (e) {
                if (!e) return !1;
                let t = e.previousElementSibling;
                for (; null !== t; ) {
                  if (t instanceof HTMLLegendElement) return !1;
                  t = t.previousElementSibling;
                }
                return !0;
              })(n)
            ) && r
          );
        }
        n.d(t, {
          P: function () {
            return r;
          },
        });
      },
      44067: function (e, t, n) {
        "use strict";
        function r(...e) {
          return Array.from(
            new Set(
              e.flatMap((e) => ("string" == typeof e ? e.split(" ") : []))
            )
          )
            .filter(Boolean)
            .join(" ");
        }
        n.d(t, {
          A: function () {
            return r;
          },
        });
      },
      9362: function (e, t, n) {
        "use strict";
        n.d(t, {
          k: function () {
            return function e() {
              let t = [],
                n = {
                  addEventListener: (e, t, r, i) => (
                    e.addEventListener(t, r, i),
                    n.add(() => e.removeEventListener(t, r, i))
                  ),
                  requestAnimationFrame(...e) {
                    let t = requestAnimationFrame(...e);
                    return n.add(() => cancelAnimationFrame(t));
                  },
                  nextFrame: (...e) =>
                    n.requestAnimationFrame(() =>
                      n.requestAnimationFrame(...e)
                    ),
                  setTimeout(...e) {
                    let t = setTimeout(...e);
                    return n.add(() => clearTimeout(t));
                  },
                  microTask(...e) {
                    let t = { current: !0 };
                    return (
                      (0, r.Y)(() => {
                        t.current && e[0]();
                      }),
                      n.add(() => {
                        t.current = !1;
                      })
                    );
                  },
                  style(e, t, n) {
                    let r = e.style.getPropertyValue(t);
                    return (
                      Object.assign(e.style, { [t]: n }),
                      this.add(() => {
                        Object.assign(e.style, { [t]: r });
                      })
                    );
                  },
                  group(t) {
                    let n = e();
                    return t(n), this.add(() => n.dispose());
                  },
                  add: (e) => (
                    t.push(e),
                    () => {
                      let n = t.indexOf(e);
                      if (n >= 0) for (let e of t.splice(n, 1)) e();
                    }
                  ),
                  dispose() {
                    for (let e of t.splice(0)) e();
                  },
                };
              return n;
            };
          },
        });
        var r = n(81021);
      },
      77896: function (e, t, n) {
        "use strict";
        n.d(t, {
          O: function () {
            return o;
          },
        });
        var r = Object.defineProperty,
          i = (e, t, n) =>
            t in e
              ? r(e, t, {
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                  value: n,
                })
              : (e[t] = n),
          a = (e, t, n) => (i(e, "symbol" != typeof t ? t + "" : t, n), n);
        let o = new (class {
          constructor() {
            a(this, "current", this.detect()),
              a(this, "handoffState", "pending"),
              a(this, "currentId", 0);
          }
          set(e) {
            this.current !== e &&
              ((this.handoffState = "pending"),
              (this.currentId = 0),
              (this.current = e));
          }
          reset() {
            this.set(this.detect());
          }
          nextId() {
            return ++this.currentId;
          }
          get isServer() {
            return "server" === this.current;
          }
          get isClient() {
            return "client" === this.current;
          }
          detect() {
            return "undefined" == typeof window ||
              "undefined" == typeof document
              ? "server"
              : "client";
          }
          handoff() {
            "pending" === this.handoffState && (this.handoffState = "complete");
          }
          get isHandoffComplete() {
            return "complete" === this.handoffState;
          }
        })();
      },
      84575: function (e, t, n) {
        "use strict";
        n.d(t, {
          C5: function () {
            return g;
          },
          TO: function () {
            return d;
          },
          fE: function () {
            return f;
          },
          jA: function () {
            return v;
          },
          sP: function () {
            return m;
          },
          tJ: function () {
            return h;
          },
          z2: function () {
            return b;
          },
        });
        var r,
          i,
          a,
          o,
          s,
          u = n(32984),
          l = n(15466);
        let c = [
          "[contentEditable=true]",
          "[tabindex]",
          "a[href]",
          "area[href]",
          "button:not([disabled])",
          "iframe",
          "input:not([disabled])",
          "select:not([disabled])",
          "textarea:not([disabled])",
        ]
          .map((e) => `${e}:not([tabindex='-1'])`)
          .join(",");
        var d =
            (((r = d || {})[(r.First = 1)] = "First"),
            (r[(r.Previous = 2)] = "Previous"),
            (r[(r.Next = 4)] = "Next"),
            (r[(r.Last = 8)] = "Last"),
            (r[(r.WrapAround = 16)] = "WrapAround"),
            (r[(r.NoScroll = 32)] = "NoScroll"),
            r),
          f =
            (((i = f || {})[(i.Error = 0)] = "Error"),
            (i[(i.Overflow = 1)] = "Overflow"),
            (i[(i.Success = 2)] = "Success"),
            (i[(i.Underflow = 3)] = "Underflow"),
            i),
          p =
            (((a = p || {})[(a.Previous = -1)] = "Previous"),
            (a[(a.Next = 1)] = "Next"),
            a),
          h =
            (((o = h || {})[(o.Strict = 0)] = "Strict"),
            (o[(o.Loose = 1)] = "Loose"),
            o);
        function m(e, t = 0) {
          var n;
          return (
            e !== (null == (n = (0, l.r)(e)) ? void 0 : n.body) &&
            (0, u.E)(t, {
              0: () => e.matches(c),
              1() {
                let t = e;
                for (; null !== t; ) {
                  if (t.matches(c)) return !0;
                  t = t.parentElement;
                }
                return !1;
              },
            })
          );
        }
        var y =
          (((s = y || {})[(s.Keyboard = 0)] = "Keyboard"),
          (s[(s.Mouse = 1)] = "Mouse"),
          s);
        function g(e) {
          null == e || e.focus({ preventScroll: !0 });
        }
        function b(e, t = (e) => e) {
          return e.slice().sort((e, n) => {
            let r = t(e),
              i = t(n);
            if (null === r || null === i) return 0;
            let a = r.compareDocumentPosition(i);
            return a & Node.DOCUMENT_POSITION_FOLLOWING
              ? -1
              : a & Node.DOCUMENT_POSITION_PRECEDING
              ? 1
              : 0;
          });
        }
        function v(
          e,
          t,
          { sorted: n = !0, relativeTo: r = null, skipElements: i = [] } = {}
        ) {
          var a, o, s;
          let u = Array.isArray(e)
              ? e.length > 0
                ? e[0].ownerDocument
                : document
              : e.ownerDocument,
            l = Array.isArray(e)
              ? n
                ? b(e)
                : e
              : (function (e = document.body) {
                  return null == e
                    ? []
                    : Array.from(e.querySelectorAll(c)).sort((e, t) =>
                        Math.sign(
                          (e.tabIndex || Number.MAX_SAFE_INTEGER) -
                            (t.tabIndex || Number.MAX_SAFE_INTEGER)
                        )
                      );
                })(e);
          i.length > 0 && l.length > 1 && (l = l.filter((e) => !i.includes(e))),
            (r = null != r ? r : u.activeElement);
          let d = (() => {
              if (5 & t) return 1;
              if (10 & t) return -1;
              throw Error(
                "Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last"
              );
            })(),
            f = (() => {
              if (1 & t) return 0;
              if (2 & t) return Math.max(0, l.indexOf(r)) - 1;
              if (4 & t) return Math.max(0, l.indexOf(r)) + 1;
              if (8 & t) return l.length - 1;
              throw Error(
                "Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last"
              );
            })(),
            p = 32 & t ? { preventScroll: !0 } : {},
            h = 0,
            m = l.length,
            y;
          do {
            if (h >= m || h + m <= 0) return 0;
            let e = f + h;
            if (16 & t) e = (e + m) % m;
            else {
              if (e < 0) return 3;
              if (e >= m) return 1;
            }
            null == (y = l[e]) || y.focus(p), (h += d);
          } while (y !== u.activeElement);
          return (
            6 & t &&
              null !=
                (s =
                  null == (o = null == (a = y) ? void 0 : a.matches)
                    ? void 0
                    : o.call(a, "textarea,input")) &&
              s &&
              y.select(),
            2
          );
        }
        "undefined" != typeof window &&
          "undefined" != typeof document &&
          (document.addEventListener(
            "keydown",
            (e) => {
              e.metaKey ||
                e.altKey ||
                e.ctrlKey ||
                (document.documentElement.dataset.headlessuiFocusVisible = "");
            },
            !0
          ),
          document.addEventListener(
            "click",
            (e) => {
              1 === e.detail
                ? delete document.documentElement.dataset.headlessuiFocusVisible
                : 0 === e.detail &&
                  (document.documentElement.dataset.headlessuiFocusVisible =
                    "");
            },
            !0
          ));
      },
      32984: function (e, t, n) {
        "use strict";
        function r(e, t, ...n) {
          if (e in t) {
            let r = t[e];
            return "function" == typeof r ? r(...n) : r;
          }
          let i = Error(
            `Tried to handle "${e}" but there is no handler defined. Only defined handlers are: ${Object.keys(
              t
            )
              .map((e) => `"${e}"`)
              .join(", ")}.`
          );
          throw (Error.captureStackTrace && Error.captureStackTrace(i, r), i);
        }
        n.d(t, {
          E: function () {
            return r;
          },
        });
      },
      81021: function (e, t, n) {
        "use strict";
        function r(e) {
          "function" == typeof queueMicrotask
            ? queueMicrotask(e)
            : Promise.resolve()
                .then(e)
                .catch((e) =>
                  setTimeout(() => {
                    throw e;
                  })
                );
        }
        n.d(t, {
          Y: function () {
            return r;
          },
        });
      },
      15466: function (e, t, n) {
        "use strict";
        n.d(t, {
          r: function () {
            return i;
          },
        });
        var r = n(77896);
        function i(e) {
          return r.O.isServer
            ? null
            : e instanceof Node
            ? e.ownerDocument
            : null != e &&
              e.hasOwnProperty("current") &&
              e.current instanceof Node
            ? e.current.ownerDocument
            : document;
        }
      },
      12351: function (e, t, n) {
        "use strict";
        n.d(t, {
          AN: function () {
            return u;
          },
          l4: function () {
            return l;
          },
          oA: function () {
            return h;
          },
          sY: function () {
            return c;
          },
          yV: function () {
            return p;
          },
        });
        var r,
          i,
          a = n(67294),
          o = n(44067),
          s = n(32984),
          u =
            (((r = u || {})[(r.None = 0)] = "None"),
            (r[(r.RenderStrategy = 1)] = "RenderStrategy"),
            (r[(r.Static = 2)] = "Static"),
            r),
          l =
            (((i = l || {})[(i.Unmount = 0)] = "Unmount"),
            (i[(i.Hidden = 1)] = "Hidden"),
            i);
        function c({
          ourProps: e,
          theirProps: t,
          slot: n,
          defaultTag: r,
          features: i,
          visible: a = !0,
          name: o,
        }) {
          let u = f(t, e);
          if (a) return d(u, n, r, o);
          let l = null != i ? i : 0;
          if (2 & l) {
            let { static: e = !1, ...t } = u;
            if (e) return d(t, n, r, o);
          }
          if (1 & l) {
            let { unmount: e = !0, ...t } = u;
            return (0, s.E)(e ? 0 : 1, {
              0: () => null,
              1: () =>
                d({ ...t, hidden: !0, style: { display: "none" } }, n, r, o),
            });
          }
          return d(u, n, r, o);
        }
        function d(e, t = {}, n, r) {
          let {
              as: i = n,
              children: s,
              refName: u = "ref",
              ...l
            } = m(e, ["unmount", "static"]),
            c = void 0 !== e.ref ? { [u]: e.ref } : {},
            d = "function" == typeof s ? s(t) : s;
          "className" in l &&
            l.className &&
            "function" == typeof l.className &&
            (l.className = l.className(t));
          let p = {};
          if (t) {
            let e = !1,
              n = [];
            for (let [r, i] of Object.entries(t))
              "boolean" == typeof i && (e = !0), !0 === i && n.push(r);
            e && (p["data-headlessui-state"] = n.join(" "));
          }
          if (i === a.Fragment && Object.keys(h(l)).length > 0) {
            if (!(0, a.isValidElement)(d) || (Array.isArray(d) && d.length > 1))
              throw Error(
                [
                  'Passing props on "Fragment"!',
                  "",
                  `The current component <${r} /> is rendering a "Fragment".`,
                  "However we need to passthrough the following props:",
                  Object.keys(l).map((e) => `  - ${e}`).join(`
`),
                  "",
                  "You can apply a few solutions:",
                  [
                    'Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".',
                    "Render a single element as the child so that we can forward the props onto that element.",
                  ].map((e) => `  - ${e}`).join(`
`),
                ].join(`
`)
              );
            let e = d.props,
              t =
                "function" == typeof (null == e ? void 0 : e.className)
                  ? (...t) =>
                      (0, o.A)(
                        null == e ? void 0 : e.className(...t),
                        l.className
                      )
                  : (0, o.A)(null == e ? void 0 : e.className, l.className),
              n = t ? { className: t } : {};
            return (0, a.cloneElement)(
              d,
              Object.assign(
                {},
                f(d.props, h(m(l, ["ref"]))),
                p,
                c,
                (function (...e) {
                  return {
                    ref: e.every((e) => null == e)
                      ? void 0
                      : (t) => {
                          for (let n of e)
                            null != n &&
                              ("function" == typeof n ? n(t) : (n.current = t));
                        },
                  };
                })(d.ref, c.ref),
                n
              )
            );
          }
          return (0, a.createElement)(
            i,
            Object.assign(
              {},
              m(l, ["ref"]),
              i !== a.Fragment && c,
              i !== a.Fragment && p
            ),
            d
          );
        }
        function f(...e) {
          if (0 === e.length) return {};
          if (1 === e.length) return e[0];
          let t = {},
            n = {};
          for (let r of e)
            for (let e in r)
              e.startsWith("on") && "function" == typeof r[e]
                ? (null != n[e] || (n[e] = []), n[e].push(r[e]))
                : (t[e] = r[e]);
          if (t.disabled || t["aria-disabled"])
            return Object.assign(
              t,
              Object.fromEntries(Object.keys(n).map((e) => [e, void 0]))
            );
          for (let e in n)
            Object.assign(t, {
              [e](t, ...r) {
                for (let i of n[e]) {
                  if (
                    (t instanceof Event ||
                      (null == t ? void 0 : t.nativeEvent) instanceof Event) &&
                    t.defaultPrevented
                  )
                    return;
                  i(t, ...r);
                }
              },
            });
          return t;
        }
        function p(e) {
          var t;
          return Object.assign((0, a.forwardRef)(e), {
            displayName: null != (t = e.displayName) ? t : e.name,
          });
        }
        function h(e) {
          let t = Object.assign({}, e);
          for (let e in t) void 0 === t[e] && delete t[e];
          return t;
        }
        function m(e, t = []) {
          let n = Object.assign({}, e);
          for (let e of t) e in n && delete n[e];
          return n;
        }
      },
      27499: function (e, t, n) {
        "use strict";
        n.d(t, {
          FF: function () {
            return x;
          },
          S5: function () {
            return p;
          },
          Wd: function () {
            return y;
          },
          bytesToNumberBE: function () {
            return c;
          },
          ci: function () {
            return s;
          },
          dQ: function () {
            return g;
          },
          eV: function () {
            return m;
          },
          hexToBytes: function () {
            return l;
          },
          n$: function () {
            return w;
          },
          ql: function () {
            return h;
          },
          tL: function () {
            return f;
          },
          ty: function () {
            return d;
          },
        }),
          BigInt(0);
        let r = BigInt(1),
          i = BigInt(2),
          a = (e) => e instanceof Uint8Array,
          o = Array.from({ length: 256 }, (e, t) =>
            t.toString(16).padStart(2, "0")
          );
        function s(e) {
          if (!a(e)) throw Error("Uint8Array expected");
          let t = "";
          for (let n = 0; n < e.length; n++) t += o[e[n]];
          return t;
        }
        function u(e) {
          if ("string" != typeof e)
            throw Error("hex string expected, got " + typeof e);
          return BigInt("" === e ? "0" : `0x${e}`);
        }
        function l(e) {
          if ("string" != typeof e)
            throw Error("hex string expected, got " + typeof e);
          let t = e.length;
          if (t % 2)
            throw Error(
              "padded hex string expected, got unpadded hex of length " + t
            );
          let n = new Uint8Array(t / 2);
          for (let t = 0; t < n.length; t++) {
            let r = 2 * t,
              i = e.slice(r, r + 2),
              a = Number.parseInt(i, 16);
            if (Number.isNaN(a) || a < 0) throw Error("Invalid byte sequence");
            n[t] = a;
          }
          return n;
        }
        function c(e) {
          return u(s(e));
        }
        function d(e) {
          if (!a(e)) throw Error("Uint8Array expected");
          return u(s(Uint8Array.from(e).reverse()));
        }
        function f(e, t) {
          return l(e.toString(16).padStart(2 * t, "0"));
        }
        function p(e, t) {
          return f(e, t).reverse();
        }
        function h(e, t, n) {
          let r;
          if ("string" == typeof t)
            try {
              r = l(t);
            } catch (n) {
              throw Error(
                `${e} must be valid hex string, got "${t}". Cause: ${n}`
              );
            }
          else if (a(t)) r = Uint8Array.from(t);
          else throw Error(`${e} must be hex string or Uint8Array`);
          let i = r.length;
          if ("number" == typeof n && i !== n)
            throw Error(`${e} expected ${n} bytes, got ${i}`);
          return r;
        }
        function m(...e) {
          let t = new Uint8Array(e.reduce((e, t) => e + t.length, 0)),
            n = 0;
          return (
            e.forEach((e) => {
              if (!a(e)) throw Error("Uint8Array expected");
              t.set(e, n), (n += e.length);
            }),
            t
          );
        }
        function y(e, t) {
          if (e.length !== t.length) return !1;
          for (let n = 0; n < e.length; n++) if (e[n] !== t[n]) return !1;
          return !0;
        }
        let g = (e) => (i << BigInt(e - 1)) - r,
          b = (e) => new Uint8Array(e),
          v = (e) => Uint8Array.from(e);
        function w(e, t, n) {
          if ("number" != typeof e || e < 2)
            throw Error("hashLen must be a number");
          if ("number" != typeof t || t < 2)
            throw Error("qByteLen must be a number");
          if ("function" != typeof n) throw Error("hmacFn must be a function");
          let r = b(e),
            i = b(e),
            a = 0,
            o = () => {
              r.fill(1), i.fill(0), (a = 0);
            },
            s = (...e) => n(i, r, ...e),
            u = (e = b()) => {
              (i = s(v([0]), e)),
                (r = s()),
                0 !== e.length && ((i = s(v([1]), e)), (r = s()));
            },
            l = () => {
              if (a++ >= 1e3) throw Error("drbg: tried 1000 values");
              let e = 0,
                n = [];
              for (; e < t; ) {
                r = s();
                let t = r.slice();
                n.push(t), (e += r.length);
              }
              return m(...n);
            };
          return (e, t) => {
            let n;
            for (o(), u(e); !(n = t(l())); ) u();
            return o(), n;
          };
        }
        let E = {
          bigint: (e) => "bigint" == typeof e,
          function: (e) => "function" == typeof e,
          boolean: (e) => "boolean" == typeof e,
          string: (e) => "string" == typeof e,
          stringOrUint8Array: (e) =>
            "string" == typeof e || e instanceof Uint8Array,
          isSafeInteger: (e) => Number.isSafeInteger(e),
          array: (e) => Array.isArray(e),
          field: (e, t) => t.Fp.isValid(e),
          hash: (e) =>
            "function" == typeof e && Number.isSafeInteger(e.outputLen),
        };
        function x(e, t, n = {}) {
          let r = (t, n, r) => {
            let i = E[n];
            if ("function" != typeof i)
              throw Error(`Invalid validator "${n}", expected function`);
            let a = e[t];
            if ((!r || void 0 !== a) && !i(a, e))
              throw Error(
                `Invalid param ${String(t)}=${a} (${typeof a}), expected ${n}`
              );
          };
          for (let [e, n] of Object.entries(t)) r(e, n, !1);
          for (let [e, t] of Object.entries(n)) r(e, t, !0);
          return e;
        }
      },
      79563: function (e, t, n) {
        "use strict";
        n.d(t, {
          G: function () {
            return f;
          },
        });
        var r = n(62052),
          i = n(14750),
          a = n(98245),
          o = n(62120);
        class s {
          constructor(e, t) {
            let n, r;
            (n = e || new i.s()),
              (r = t || new i.s()),
              (this._stack = [{ scope: n }]),
              (this._isolationScope = r);
          }
          withScope(e) {
            let t;
            let n = this._pushScope();
            try {
              t = e(n);
            } catch (e) {
              throw (this._popScope(), e);
            }
            return (0, o.J8)(t)
              ? t.then(
                  (e) => (this._popScope(), e),
                  (e) => {
                    throw (this._popScope(), e);
                  }
                )
              : (this._popScope(), t);
          }
          getClient() {
            return this.getStackTop().client;
          }
          getScope() {
            return this.getStackTop().scope;
          }
          getIsolationScope() {
            return this._isolationScope;
          }
          getStackTop() {
            return this._stack[this._stack.length - 1];
          }
          _pushScope() {
            let e = this.getScope().clone();
            return this._stack.push({ client: this.getClient(), scope: e }), e;
          }
          _popScope() {
            return !(this._stack.length <= 1) && !!this._stack.pop();
          }
        }
        function u() {
          let e = (0, r.c)(),
            t = (0, r.q)(e);
          return (t.stack =
            t.stack ||
            new s(
              (0, a.Y)("defaultCurrentScope", () => new i.s()),
              (0, a.Y)("defaultIsolationScope", () => new i.s())
            ));
        }
        function l(e) {
          return u().withScope(e);
        }
        function c(e, t) {
          let n = u();
          return n.withScope(() => ((n.getStackTop().scope = e), t(e)));
        }
        function d(e) {
          return u().withScope(() => e(u().getIsolationScope()));
        }
        function f(e) {
          let t = (0, r.q)(e);
          return t.acs
            ? t.acs
            : {
                withIsolationScope: d,
                withScope: l,
                withSetScope: c,
                withSetIsolationScope: (e, t) => d(t),
                getCurrentScope: () => u().getScope(),
                getIsolationScope: () => u().getIsolationScope(),
              };
        }
      },
      62052: function (e, t, n) {
        "use strict";
        n.d(t, {
          c: function () {
            return a;
          },
          q: function () {
            return o;
          },
        });
        var r = n(63008),
          i = n(98245);
        function a() {
          return o(i.GLOBAL_OBJ), i.GLOBAL_OBJ;
        }
        function o(e) {
          let t = (e.__SENTRY__ = e.__SENTRY__ || {});
          return (t.version = t.version || r.J), (t[r.J] = t[r.J] || {});
        }
      },
      71692: function (e, t, n) {
        "use strict";
        n.d(t, {
          J: function () {
            return r;
          },
        });
        let r = "production";
      },
      53769: function (e, t, n) {
        "use strict";
        n.d(t, {
          $e: function () {
            return d;
          },
          XX: function () {
            return p;
          },
          aF: function () {
            return l;
          },
          lW: function () {
            return c;
          },
          nZ: function () {
            return u;
          },
          s3: function () {
            return f;
          },
        });
        var r = n(79563),
          i = n(62052),
          a = n(14750),
          o = n(86771),
          s = n(98245);
        function u() {
          let e = (0, i.c)(),
            t = (0, r.G)(e);
          return t.getCurrentScope();
        }
        function l() {
          let e = (0, i.c)(),
            t = (0, r.G)(e);
          return t.getIsolationScope();
        }
        function c() {
          return (0, s.Y)("globalScope", () => new a.s());
        }
        function d(...e) {
          let t = (0, i.c)(),
            n = (0, r.G)(t);
          if (2 === e.length) {
            let [t, r] = e;
            return t ? n.withSetScope(t, r) : n.withScope(r);
          }
          return n.withScope(e[0]);
        }
        function f() {
          return u().getClient();
        }
        function p(e) {
          let t = e.getPropagationContext(),
            { traceId: n, spanId: r, parentSpanId: i } = t,
            a = (0, o.Jr)({ trace_id: n, span_id: r, parent_span_id: i });
          return a;
        }
      },
      86905: function (e, t, n) {
        "use strict";
        n.d(t, {
          X: function () {
            return r;
          },
        });
        let r = !1;
      },
      1286: function (e, t, n) {
        "use strict";
        n.d(t, {
          Tb: function () {
            return u;
          },
          _k: function () {
            return d;
          },
          cg: function () {
            return m;
          },
          eN: function () {
            return l;
          },
          v: function () {
            return c;
          },
          yj: function () {
            return f;
          },
        });
        var r = n(71692),
          i = n(53769),
          a = n(98222),
          o = n(98245),
          s = n(44124);
        function u(e, t) {
          return (0, i.nZ)().captureException(e, (0, s.U0)(t));
        }
        function l(e, t) {
          return (0, i.nZ)().captureEvent(e, t);
        }
        function c(e, t) {
          (0, i.aF)().setContext(e, t);
        }
        function d() {
          let e = (0, i.s3)();
          return !!e && !1 !== e.getOptions().enabled && !!e.getTransport();
        }
        function f(e) {
          let t = (0, i.s3)(),
            n = (0, i.aF)(),
            s = (0, i.nZ)(),
            { release: u, environment: l = r.J } = (t && t.getOptions()) || {},
            { userAgent: c } = o.GLOBAL_OBJ.navigator || {},
            d = (0, a.Hv)({
              release: u,
              environment: l,
              user: s.getUser() || n.getUser(),
              ...(c && { userAgent: c }),
              ...e,
            }),
            f = n.getSession();
          return (
            f && "ok" === f.status && (0, a.CT)(f, { status: "exited" }),
            p(),
            n.setSession(d),
            s.setSession(d),
            d
          );
        }
        function p() {
          let e = (0, i.aF)(),
            t = (0, i.nZ)(),
            n = t.getSession() || e.getSession();
          n && (0, a.RJ)(n), h(), e.setSession(), t.setSession();
        }
        function h() {
          let e = (0, i.aF)(),
            t = (0, i.nZ)(),
            n = (0, i.s3)(),
            r = t.getSession() || e.getSession();
          r && n && n.captureSession(r);
        }
        function m(e = !1) {
          if (e) {
            p();
            return;
          }
          h();
        }
      },
      44552: function (e, t, n) {
        "use strict";
        n.d(t, {
          y: function () {
            return i;
          },
        });
        var r = n(86771);
        function i(e) {
          let t = e._sentryMetrics;
          if (!t) return;
          let n = {};
          for (let [, [e, i]] of t) {
            let t = n[e] || (n[e] = []);
            t.push((0, r.Jr)(i));
          }
          return n;
        }
      },
      14750: function (e, t, n) {
        "use strict";
        n.d(t, {
          s: function () {
            return f;
          },
        });
        var r = n(98222),
          i = n(62120),
          a = n(31079),
          o = n(2579),
          s = n(6250),
          u = n(38103),
          l = n(7473),
          c = n(94916);
        class d {
          constructor() {
            (this._notifyingListeners = !1),
              (this._scopeListeners = []),
              (this._eventProcessors = []),
              (this._breadcrumbs = []),
              (this._attachments = []),
              (this._user = {}),
              (this._tags = {}),
              (this._extra = {}),
              (this._contexts = {}),
              (this._sdkProcessingMetadata = {}),
              (this._propagationContext = {
                traceId: (0, s.Ht)(),
                spanId: (0, s.M)(),
              });
          }
          clone() {
            let e = new d();
            return (
              (e._breadcrumbs = [...this._breadcrumbs]),
              (e._tags = { ...this._tags }),
              (e._extra = { ...this._extra }),
              (e._contexts = { ...this._contexts }),
              this._contexts.flags &&
                (e._contexts.flags = {
                  values: [...this._contexts.flags.values],
                }),
              (e._user = this._user),
              (e._level = this._level),
              (e._session = this._session),
              (e._transactionName = this._transactionName),
              (e._fingerprint = this._fingerprint),
              (e._eventProcessors = [...this._eventProcessors]),
              (e._requestSession = this._requestSession),
              (e._attachments = [...this._attachments]),
              (e._sdkProcessingMetadata = { ...this._sdkProcessingMetadata }),
              (e._propagationContext = { ...this._propagationContext }),
              (e._client = this._client),
              (e._lastEventId = this._lastEventId),
              (0, c.D)(e, (0, c.Y)(this)),
              e
            );
          }
          setClient(e) {
            this._client = e;
          }
          setLastEventId(e) {
            this._lastEventId = e;
          }
          getClient() {
            return this._client;
          }
          lastEventId() {
            return this._lastEventId;
          }
          addScopeListener(e) {
            this._scopeListeners.push(e);
          }
          addEventProcessor(e) {
            return this._eventProcessors.push(e), this;
          }
          setUser(e) {
            return (
              (this._user = e || {
                email: void 0,
                id: void 0,
                ip_address: void 0,
                username: void 0,
              }),
              this._session && (0, r.CT)(this._session, { user: e }),
              this._notifyScopeListeners(),
              this
            );
          }
          getUser() {
            return this._user;
          }
          getRequestSession() {
            return this._requestSession;
          }
          setRequestSession(e) {
            return (this._requestSession = e), this;
          }
          setTags(e) {
            return (
              (this._tags = { ...this._tags, ...e }),
              this._notifyScopeListeners(),
              this
            );
          }
          setTag(e, t) {
            return (
              (this._tags = { ...this._tags, [e]: t }),
              this._notifyScopeListeners(),
              this
            );
          }
          setExtras(e) {
            return (
              (this._extra = { ...this._extra, ...e }),
              this._notifyScopeListeners(),
              this
            );
          }
          setExtra(e, t) {
            return (
              (this._extra = { ...this._extra, [e]: t }),
              this._notifyScopeListeners(),
              this
            );
          }
          setFingerprint(e) {
            return (this._fingerprint = e), this._notifyScopeListeners(), this;
          }
          setLevel(e) {
            return (this._level = e), this._notifyScopeListeners(), this;
          }
          setTransactionName(e) {
            return (
              (this._transactionName = e), this._notifyScopeListeners(), this
            );
          }
          setContext(e, t) {
            return (
              null === t ? delete this._contexts[e] : (this._contexts[e] = t),
              this._notifyScopeListeners(),
              this
            );
          }
          setSession(e) {
            return (
              e ? (this._session = e) : delete this._session,
              this._notifyScopeListeners(),
              this
            );
          }
          getSession() {
            return this._session;
          }
          update(e) {
            if (!e) return this;
            let t = "function" == typeof e ? e(this) : e,
              [n, r] =
                t instanceof f
                  ? [t.getScopeData(), t.getRequestSession()]
                  : (0, i.PO)(t)
                  ? [e, e.requestSession]
                  : [],
              {
                tags: a,
                extra: o,
                user: s,
                contexts: u,
                level: l,
                fingerprint: c = [],
                propagationContext: d,
              } = n || {};
            return (
              (this._tags = { ...this._tags, ...a }),
              (this._extra = { ...this._extra, ...o }),
              (this._contexts = { ...this._contexts, ...u }),
              s && Object.keys(s).length && (this._user = s),
              l && (this._level = l),
              c.length && (this._fingerprint = c),
              d && (this._propagationContext = d),
              r && (this._requestSession = r),
              this
            );
          }
          clear() {
            return (
              (this._breadcrumbs = []),
              (this._tags = {}),
              (this._extra = {}),
              (this._user = {}),
              (this._contexts = {}),
              (this._level = void 0),
              (this._transactionName = void 0),
              (this._fingerprint = void 0),
              (this._requestSession = void 0),
              (this._session = void 0),
              (0, c.D)(this, void 0),
              (this._attachments = []),
              this.setPropagationContext({ traceId: (0, s.Ht)() }),
              this._notifyScopeListeners(),
              this
            );
          }
          addBreadcrumb(e, t) {
            let n = "number" == typeof t ? t : 100;
            if (n <= 0) return this;
            let r = { timestamp: (0, u.yW)(), ...e },
              i = this._breadcrumbs;
            return (
              i.push(r),
              (this._breadcrumbs = i.length > n ? i.slice(-n) : i),
              this._notifyScopeListeners(),
              this
            );
          }
          getLastBreadcrumb() {
            return this._breadcrumbs[this._breadcrumbs.length - 1];
          }
          clearBreadcrumbs() {
            return (this._breadcrumbs = []), this._notifyScopeListeners(), this;
          }
          addAttachment(e) {
            return this._attachments.push(e), this;
          }
          clearAttachments() {
            return (this._attachments = []), this;
          }
          getScopeData() {
            return {
              breadcrumbs: this._breadcrumbs,
              attachments: this._attachments,
              contexts: this._contexts,
              tags: this._tags,
              extra: this._extra,
              user: this._user,
              level: this._level,
              fingerprint: this._fingerprint || [],
              eventProcessors: this._eventProcessors,
              propagationContext: this._propagationContext,
              sdkProcessingMetadata: this._sdkProcessingMetadata,
              transactionName: this._transactionName,
              span: (0, c.Y)(this),
            };
          }
          setSDKProcessingMetadata(e) {
            return (
              (this._sdkProcessingMetadata = (0, l.T)(
                this._sdkProcessingMetadata,
                e,
                2
              )),
              this
            );
          }
          setPropagationContext(e) {
            return (
              (this._propagationContext = { spanId: (0, s.M)(), ...e }), this
            );
          }
          getPropagationContext() {
            return this._propagationContext;
          }
          captureException(e, t) {
            let n = t && t.event_id ? t.event_id : (0, o.DM)();
            if (!this._client)
              return (
                a.kg.warn(
                  "No client configured on scope - will not capture exception!"
                ),
                n
              );
            let r = Error("Sentry syntheticException");
            return (
              this._client.captureException(
                e,
                {
                  originalException: e,
                  syntheticException: r,
                  ...t,
                  event_id: n,
                },
                this
              ),
              n
            );
          }
          captureMessage(e, t, n) {
            let r = n && n.event_id ? n.event_id : (0, o.DM)();
            if (!this._client)
              return (
                a.kg.warn(
                  "No client configured on scope - will not capture message!"
                ),
                r
              );
            let i = Error(e);
            return (
              this._client.captureMessage(
                e,
                t,
                {
                  originalException: e,
                  syntheticException: i,
                  ...n,
                  event_id: r,
                },
                this
              ),
              r
            );
          }
          captureEvent(e, t) {
            let n = t && t.event_id ? t.event_id : (0, o.DM)();
            return (
              this._client
                ? this._client.captureEvent(e, { ...t, event_id: n }, this)
                : a.kg.warn(
                    "No client configured on scope - will not capture event!"
                  ),
              n
            );
          }
          _notifyScopeListeners() {
            this._notifyingListeners ||
              ((this._notifyingListeners = !0),
              this._scopeListeners.forEach((e) => {
                e(this);
              }),
              (this._notifyingListeners = !1));
          }
        }
        let f = d;
      },
      7084: function (e, t, n) {
        "use strict";
        n.d(t, {
          $J: function () {
            return a;
          },
          E1: function () {
            return u;
          },
          JQ: function () {
            return d;
          },
          S3: function () {
            return o;
          },
          TE: function () {
            return i;
          },
          Wb: function () {
            return l;
          },
          Zj: function () {
            return r;
          },
          ju: function () {
            return s;
          },
          p6: function () {
            return c;
          },
        });
        let r = "sentry.source",
          i = "sentry.sample_rate",
          a = "sentry.op",
          o = "sentry.origin",
          s = "sentry.idle_span_finish_reason",
          u = "sentry.measurement_unit",
          l = "sentry.measurement_value",
          c = "sentry.profile_id",
          d = "sentry.exclusive_time";
      },
      98222: function (e, t, n) {
        "use strict";
        n.d(t, {
          CT: function () {
            return s;
          },
          Hv: function () {
            return o;
          },
          RJ: function () {
            return u;
          },
        });
        var r = n(86771),
          i = n(38103),
          a = n(2579);
        function o(e) {
          let t = (0, i.ph)(),
            n = {
              sid: (0, a.DM)(),
              init: !0,
              timestamp: t,
              started: t,
              duration: 0,
              status: "ok",
              errors: 0,
              ignoreDuration: !1,
              toJSON: () =>
                (0, r.Jr)({
                  sid: `${n.sid}`,
                  init: n.init,
                  started: new Date(1e3 * n.started).toISOString(),
                  timestamp: new Date(1e3 * n.timestamp).toISOString(),
                  status: n.status,
                  errors: n.errors,
                  did:
                    "number" == typeof n.did || "string" == typeof n.did
                      ? `${n.did}`
                      : void 0,
                  duration: n.duration,
                  abnormal_mechanism: n.abnormal_mechanism,
                  attrs: {
                    release: n.release,
                    environment: n.environment,
                    ip_address: n.ipAddress,
                    user_agent: n.userAgent,
                  },
                }),
            };
          return e && s(n, e), n;
        }
        function s(e, t = {}) {
          if (
            (!t.user ||
              (!e.ipAddress &&
                t.user.ip_address &&
                (e.ipAddress = t.user.ip_address),
              e.did ||
                t.did ||
                (e.did = t.user.id || t.user.email || t.user.username)),
            (e.timestamp = t.timestamp || (0, i.ph)()),
            t.abnormal_mechanism &&
              (e.abnormal_mechanism = t.abnormal_mechanism),
            t.ignoreDuration && (e.ignoreDuration = t.ignoreDuration),
            t.sid && (e.sid = 32 === t.sid.length ? t.sid : (0, a.DM)()),
            void 0 !== t.init && (e.init = t.init),
            !e.did && t.did && (e.did = `${t.did}`),
            "number" == typeof t.started && (e.started = t.started),
            e.ignoreDuration)
          )
            e.duration = void 0;
          else if ("number" == typeof t.duration) e.duration = t.duration;
          else {
            let t = e.timestamp - e.started;
            e.duration = t >= 0 ? t : 0;
          }
          t.release && (e.release = t.release),
            t.environment && (e.environment = t.environment),
            !e.ipAddress && t.ipAddress && (e.ipAddress = t.ipAddress),
            !e.userAgent && t.userAgent && (e.userAgent = t.userAgent),
            "number" == typeof t.errors && (e.errors = t.errors),
            t.status && (e.status = t.status);
        }
        function u(e, t) {
          let n = {};
          t
            ? (n = { status: t })
            : "ok" === e.status && (n = { status: "exited" }),
            s(e, n);
        }
      },
      57486: function (e, t, n) {
        "use strict";
        n.d(t, {
          CG: function () {
            return p;
          },
          Lh: function () {
            return d;
          },
          jC: function () {
            return h;
          },
        });
        var r = n(71692),
          i = n(53769),
          a = n(7084),
          o = n(28221),
          s = n(86771),
          u = n(62561),
          l = n(80621);
        let c = "_frozenDsc";
        function d(e, t) {
          (0, s.xp)(e, c, t);
        }
        function f(e, t) {
          let n = t.getOptions(),
            { publicKey: i } = t.getDsn() || {},
            a = (0, s.Jr)({
              environment: n.environment || r.J,
              release: n.release,
              public_key: i,
              trace_id: e,
            });
          return t.emit("createDsc", a), a;
        }
        function p(e, t) {
          let n = t.getPropagationContext();
          return n.dsc || f(n.traceId, e);
        }
        function h(e) {
          let t = (0, i.s3)();
          if (!t) return {};
          let n = (0, l.Gx)(e),
            r = n[c];
          if (r) return r;
          let s = n.spanContext().traceState,
            d = s && s.get("sentry.dsc"),
            p = d && (0, o.EN)(d);
          if (p) return p;
          let h = f(e.spanContext().traceId, t),
            m = (0, l.XU)(n),
            y = m.data || {},
            g = y[a.TE];
          null != g && (h.sample_rate = `${g}`);
          let b = y[a.Zj],
            v = m.description;
          return (
            "url" !== b && v && (h.transaction = v),
            (0, u.z)() && (h.sampled = String((0, l.Tt)(n))),
            t.emit("createDsc", h, n),
            h
          );
        }
      },
      84049: function (e, t, n) {
        "use strict";
        n.d(t, {
          OP: function () {
            return i;
          },
          Q0: function () {
            return o;
          },
          jt: function () {
            return a;
          },
          pq: function () {
            return r;
          },
        });
        let r = 0,
          i = 1,
          a = 2;
        function o(e, t) {
          e.setAttribute("http.response.status_code", t);
          let n = (function (e) {
            if (e < 400 && e >= 100) return { code: i };
            if (e >= 400 && e < 500)
              switch (e) {
                case 401:
                  return { code: a, message: "unauthenticated" };
                case 403:
                  return { code: a, message: "permission_denied" };
                case 404:
                  return { code: a, message: "not_found" };
                case 409:
                  return { code: a, message: "already_exists" };
                case 413:
                  return { code: a, message: "failed_precondition" };
                case 429:
                  return { code: a, message: "resource_exhausted" };
                case 499:
                  return { code: a, message: "cancelled" };
                default:
                  return { code: a, message: "invalid_argument" };
              }
            if (e >= 500 && e < 600)
              switch (e) {
                case 501:
                  return { code: a, message: "unimplemented" };
                case 503:
                  return { code: a, message: "unavailable" };
                case 504:
                  return { code: a, message: "deadline_exceeded" };
                default:
                  return { code: a, message: "internal_error" };
              }
            return { code: a, message: "unknown_error" };
          })(t);
          "unknown_error" !== n.message && e.setStatus(n);
        }
      },
      28221: function (e, t, n) {
        "use strict";
        n.d(t, {
          EN: function () {
            return u;
          },
          IQ: function () {
            return l;
          },
          lq: function () {
            return o;
          },
        });
        var r = n(83546),
          i = n(62120),
          a = n(31079);
        let o = "sentry-",
          s = /^sentry-/;
        function u(e) {
          let t =
            e && ((0, i.HD)(e) || Array.isArray(e))
              ? Array.isArray(e)
                ? e.reduce((e, t) => {
                    let n = c(t);
                    return (
                      Object.entries(n).forEach(([t, n]) => {
                        e[t] = n;
                      }),
                      e
                    );
                  }, {})
                : c(e)
              : void 0;
          if (!t) return;
          let n = Object.entries(t).reduce((e, [t, n]) => {
            if (t.match(s)) {
              let r = t.slice(o.length);
              e[r] = n;
            }
            return e;
          }, {});
          return Object.keys(n).length > 0 ? n : void 0;
        }
        function l(e) {
          if (!e) return;
          let t = Object.entries(e).reduce(
            (e, [t, n]) => (n && (e[`${o}${t}`] = n), e),
            {}
          );
          return (function (e) {
            if (0 !== Object.keys(e).length)
              return Object.entries(e).reduce((e, [t, n], i) => {
                let o = `${encodeURIComponent(t)}=${encodeURIComponent(n)}`,
                  s = 0 === i ? o : `${e},${o}`;
                return s.length > 8192
                  ? (r.X &&
                      a.kg.warn(
                        `Not adding key: ${t} with val: ${n} to baggage header due to exceeding baggage size limits.`
                      ),
                    e)
                  : s;
              }, "");
          })(t);
        }
        function c(e) {
          return e
            .split(",")
            .map((e) => e.split("=").map((e) => decodeURIComponent(e.trim())))
            .reduce((e, [t, n]) => (t && n && (e[t] = n), e), {});
        }
      },
      10181: function (e, t, n) {
        "use strict";
        n.d(t, {
          Rt: function () {
            return o;
          },
          iY: function () {
            return l;
          },
          l4: function () {
            return s;
          },
          qT: function () {
            return u;
          },
        });
        var r = n(62120),
          i = n(98245);
        let a = i.GLOBAL_OBJ;
        function o(e, t = {}) {
          if (!e) return "<unknown>";
          try {
            let n,
              i = e,
              o = [],
              s = 0,
              u = 0,
              l = Array.isArray(t) ? t : t.keyAttrs,
              c = (!Array.isArray(t) && t.maxStringLength) || 80;
            for (
              ;
              i &&
              s++ < 5 &&
              ((n = (function (e, t) {
                let n = [];
                if (!e || !e.tagName) return "";
                if (a.HTMLElement && e instanceof HTMLElement && e.dataset) {
                  if (e.dataset.sentryComponent)
                    return e.dataset.sentryComponent;
                  if (e.dataset.sentryElement) return e.dataset.sentryElement;
                }
                n.push(e.tagName.toLowerCase());
                let i =
                  t && t.length
                    ? t
                        .filter((t) => e.getAttribute(t))
                        .map((t) => [t, e.getAttribute(t)])
                    : null;
                if (i && i.length)
                  i.forEach((e) => {
                    n.push(`[${e[0]}="${e[1]}"]`);
                  });
                else {
                  e.id && n.push(`#${e.id}`);
                  let t = e.className;
                  if (t && (0, r.HD)(t)) {
                    let e = t.split(/\s+/);
                    for (let t of e) n.push(`.${t}`);
                  }
                }
                for (let t of ["aria-label", "type", "name", "title", "alt"]) {
                  let r = e.getAttribute(t);
                  r && n.push(`[${t}="${r}"]`);
                }
                return n.join("");
              })(i, l)),
              "html" !== n &&
                (!(s > 1) || !(u + 3 * o.length + n.length >= c)));

            )
              o.push(n), (u += n.length), (i = i.parentNode);
            return o.reverse().join(" > ");
          } catch (e) {
            return "<unknown>";
          }
        }
        function s() {
          try {
            return a.document.location.href;
          } catch (e) {
            return "";
          }
        }
        function u(e) {
          return a.document && a.document.querySelector
            ? a.document.querySelector(e)
            : null;
        }
        function l(e) {
          if (!a.HTMLElement) return null;
          let t = e;
          for (let e = 0; e < 5 && t; e++) {
            if (t instanceof HTMLElement) {
              if (t.dataset.sentryComponent) return t.dataset.sentryComponent;
              if (t.dataset.sentryElement) return t.dataset.sentryElement;
            }
            t = t.parentNode;
          }
          return null;
        }
      },
      83546: function (e, t, n) {
        "use strict";
        n.d(t, {
          X: function () {
            return r;
          },
        });
        let r = !1;
      },
      62120: function (e, t, n) {
        "use strict";
        n.d(t, {
          Cy: function () {
            return g;
          },
          HD: function () {
            return l;
          },
          J8: function () {
            return y;
          },
          Kj: function () {
            return m;
          },
          Le: function () {
            return c;
          },
          PO: function () {
            return f;
          },
          TX: function () {
            return s;
          },
          V9: function () {
            return b;
          },
          VW: function () {
            return o;
          },
          VZ: function () {
            return i;
          },
          cO: function () {
            return p;
          },
          fm: function () {
            return u;
          },
          kK: function () {
            return h;
          },
          pt: function () {
            return d;
          },
          y1: function () {
            return v;
          },
        });
        let r = Object.prototype.toString;
        function i(e) {
          switch (r.call(e)) {
            case "[object Error]":
            case "[object Exception]":
            case "[object DOMException]":
            case "[object WebAssembly.Exception]":
              return !0;
            default:
              return b(e, Error);
          }
        }
        function a(e, t) {
          return r.call(e) === `[object ${t}]`;
        }
        function o(e) {
          return a(e, "ErrorEvent");
        }
        function s(e) {
          return a(e, "DOMError");
        }
        function u(e) {
          return a(e, "DOMException");
        }
        function l(e) {
          return a(e, "String");
        }
        function c(e) {
          return (
            "object" == typeof e &&
            null !== e &&
            "__sentry_template_string__" in e &&
            "__sentry_template_values__" in e
          );
        }
        function d(e) {
          return (
            null === e ||
            c(e) ||
            ("object" != typeof e && "function" != typeof e)
          );
        }
        function f(e) {
          return a(e, "Object");
        }
        function p(e) {
          return "undefined" != typeof Event && b(e, Event);
        }
        function h(e) {
          return "undefined" != typeof Element && b(e, Element);
        }
        function m(e) {
          return a(e, "RegExp");
        }
        function y(e) {
          return !!(e && e.then && "function" == typeof e.then);
        }
        function g(e) {
          return (
            f(e) &&
            "nativeEvent" in e &&
            "preventDefault" in e &&
            "stopPropagation" in e
          );
        }
        function b(e, t) {
          try {
            return e instanceof t;
          } catch (e) {
            return !1;
          }
        }
        function v(e) {
          return !!(
            "object" == typeof e &&
            null !== e &&
            (e.__isVue || e._isVue)
          );
        }
      },
      31079: function (e, t, n) {
        "use strict";
        n.d(t, {
          Cf: function () {
            return s;
          },
          LD: function () {
            return o;
          },
          RU: function () {
            return a;
          },
          kg: function () {
            return u;
          },
        });
        var r = n(83546),
          i = n(98245);
        let a = ["debug", "info", "warn", "error", "log", "assert", "trace"],
          o = {};
        function s(e) {
          if (!("console" in i.GLOBAL_OBJ)) return e();
          let t = i.GLOBAL_OBJ.console,
            n = {},
            r = Object.keys(o);
          r.forEach((e) => {
            let r = o[e];
            (n[e] = t[e]), (t[e] = r);
          });
          try {
            return e();
          } finally {
            r.forEach((e) => {
              t[e] = n[e];
            });
          }
        }
        let u = (0, i.Y)("logger", function () {
          let e = !1,
            t = {
              enable: () => {
                e = !0;
              },
              disable: () => {
                e = !1;
              },
              isEnabled: () => e,
            };
          return (
            r.X
              ? a.forEach((n) => {
                  t[n] = (...t) => {
                    e &&
                      s(() => {
                        i.GLOBAL_OBJ.console[n](`Sentry Logger [${n}]:`, ...t);
                      });
                  };
                })
              : a.forEach((e) => {
                  t[e] = () => void 0;
                }),
            t
          );
        });
      },
      2579: function (e, t, n) {
        "use strict";
        n.d(t, {
          DM: function () {
            return a;
          },
          Db: function () {
            return u;
          },
          EG: function () {
            return l;
          },
          YO: function () {
            return c;
          },
          jH: function () {
            return s;
          },
        });
        var r = n(86771),
          i = n(98245);
        function a() {
          let e = i.GLOBAL_OBJ,
            t = e.crypto || e.msCrypto,
            n = () => 16 * Math.random();
          try {
            if (t && t.randomUUID) return t.randomUUID().replace(/-/g, "");
            t &&
              t.getRandomValues &&
              (n = () => {
                let e = new Uint8Array(1);
                return t.getRandomValues(e), e[0];
              });
          } catch (e) {}
          return "10000000100040008000100000000000".replace(/[018]/g, (e) =>
            (e ^ ((15 & n()) >> (e / 4))).toString(16)
          );
        }
        function o(e) {
          return e.exception && e.exception.values
            ? e.exception.values[0]
            : void 0;
        }
        function s(e) {
          let { message: t, event_id: n } = e;
          if (t) return t;
          let r = o(e);
          return r
            ? r.type && r.value
              ? `${r.type}: ${r.value}`
              : r.type || r.value || n || "<unknown>"
            : n || "<unknown>";
        }
        function u(e, t, n) {
          let r = (e.exception = e.exception || {}),
            i = (r.values = r.values || []),
            a = (i[0] = i[0] || {});
          a.value || (a.value = t || ""), a.type || (a.type = n || "Error");
        }
        function l(e, t) {
          let n = o(e);
          if (!n) return;
          let r = n.mechanism;
          if (
            ((n.mechanism = { type: "generic", handled: !0, ...r, ...t }),
            t && "data" in t)
          ) {
            let e = { ...(r && r.data), ...t.data };
            n.mechanism.data = e;
          }
        }
        function c(e) {
          if (
            (function (e) {
              try {
                return e.__sentry_captured__;
              } catch (e) {}
            })(e)
          )
            return !0;
          try {
            (0, r.xp)(e, "__sentry_captured__", !0);
          } catch (e) {}
          return !1;
        }
      },
      35139: function (e, t, n) {
        "use strict";
        n.d(t, {
          Fv: function () {
            return o;
          },
          Qy: function () {
            return function e(t, n = 3, r = 102400) {
              let i = o(t, n);
              return ~-encodeURI(JSON.stringify(i)).split(/%..|./).length > r
                ? e(t, n - 1, r)
                : i;
            };
          },
        });
        var r = n(62120),
          i = n(86771),
          a = n(66241);
        function o(e, t = 100, n = Infinity) {
          try {
            return (function e(
              t,
              n,
              o = Infinity,
              s = Infinity,
              u = (function () {
                let e = "function" == typeof WeakSet,
                  t = e ? new WeakSet() : [];
                return [
                  function (n) {
                    if (e) return !!t.has(n) || (t.add(n), !1);
                    for (let e = 0; e < t.length; e++) {
                      let r = t[e];
                      if (r === n) return !0;
                    }
                    return t.push(n), !1;
                  },
                  function (n) {
                    if (e) t.delete(n);
                    else
                      for (let e = 0; e < t.length; e++)
                        if (t[e] === n) {
                          t.splice(e, 1);
                          break;
                        }
                  },
                ];
              })()
            ) {
              let [l, c] = u;
              if (
                null == n ||
                ["boolean", "string"].includes(typeof n) ||
                ("number" == typeof n && Number.isFinite(n))
              )
                return n;
              let d = (function (e, t) {
                try {
                  if ("domain" === e && t && "object" == typeof t && t._events)
                    return "[Domain]";
                  if ("domainEmitter" === e) return "[DomainEmitter]";
                  if ("undefined" != typeof global && t === global)
                    return "[Global]";
                  if ("undefined" != typeof window && t === window)
                    return "[Window]";
                  if ("undefined" != typeof document && t === document)
                    return "[Document]";
                  if ((0, r.y1)(t)) return "[VueViewModel]";
                  if ((0, r.Cy)(t)) return "[SyntheticEvent]";
                  if ("number" == typeof t && !Number.isFinite(t))
                    return `[${t}]`;
                  if ("function" == typeof t)
                    return `[Function: ${(0, a.$P)(t)}]`;
                  if ("symbol" == typeof t) return `[${String(t)}]`;
                  if ("bigint" == typeof t) return `[BigInt: ${String(t)}]`;
                  let n = (function (e) {
                    let t = Object.getPrototypeOf(e);
                    return t ? t.constructor.name : "null prototype";
                  })(t);
                  if (/^HTML(\w*)Element$/.test(n))
                    return `[HTMLElement: ${n}]`;
                  return `[object ${n}]`;
                } catch (e) {
                  return `**non-serializable** (${e})`;
                }
              })(t, n);
              if (!d.startsWith("[object ")) return d;
              if (n.__sentry_skip_normalization__) return n;
              let f =
                "number" == typeof n.__sentry_override_normalization_depth__
                  ? n.__sentry_override_normalization_depth__
                  : o;
              if (0 === f) return d.replace("object ", "");
              if (l(n)) return "[Circular ~]";
              if (n && "function" == typeof n.toJSON)
                try {
                  let t = n.toJSON();
                  return e("", t, f - 1, s, u);
                } catch (e) {}
              let p = Array.isArray(n) ? [] : {},
                h = 0,
                m = (0, i.Sh)(n);
              for (let t in m) {
                if (!Object.prototype.hasOwnProperty.call(m, t)) continue;
                if (h >= s) {
                  p[t] = "[MaxProperties ~]";
                  break;
                }
                let n = m[t];
                (p[t] = e(t, n, f - 1, s, u)), h++;
              }
              return c(n), p;
            })("", e, t, n);
          } catch (e) {
            return { ERROR: `**non-serializable** (${e})` };
          }
        }
      },
      86771: function (e, t, n) {
        "use strict";
        n.d(t, {
          $Q: function () {
            return c;
          },
          HK: function () {
            return d;
          },
          Jr: function () {
            return y;
          },
          Sh: function () {
            return f;
          },
          hl: function () {
            return u;
          },
          xp: function () {
            return l;
          },
          zf: function () {
            return m;
          },
        });
        var r = n(10181),
          i = n(83546),
          a = n(62120),
          o = n(31079),
          s = n(47352);
        function u(e, t, n) {
          if (!(t in e)) return;
          let r = e[t],
            a = n(r);
          "function" == typeof a && c(a, r);
          try {
            e[t] = a;
          } catch (n) {
            i.X && o.kg.log(`Failed to replace method "${t}" in object`, e);
          }
        }
        function l(e, t, n) {
          try {
            Object.defineProperty(e, t, {
              value: n,
              writable: !0,
              configurable: !0,
            });
          } catch (n) {
            i.X &&
              o.kg.log(
                `Failed to add non-enumerable property "${t}" to object`,
                e
              );
          }
        }
        function c(e, t) {
          try {
            let n = t.prototype || {};
            (e.prototype = t.prototype = n), l(e, "__sentry_original__", t);
          } catch (e) {}
        }
        function d(e) {
          return e.__sentry_original__;
        }
        function f(e) {
          if ((0, a.VZ)(e))
            return {
              message: e.message,
              name: e.name,
              stack: e.stack,
              ...h(e),
            };
          if (!(0, a.cO)(e)) return e;
          {
            let t = {
              type: e.type,
              target: p(e.target),
              currentTarget: p(e.currentTarget),
              ...h(e),
            };
            return (
              "undefined" != typeof CustomEvent &&
                (0, a.V9)(e, CustomEvent) &&
                (t.detail = e.detail),
              t
            );
          }
        }
        function p(e) {
          try {
            return (0, a.kK)(e)
              ? (0, r.Rt)(e)
              : Object.prototype.toString.call(e);
          } catch (e) {
            return "<unknown>";
          }
        }
        function h(e) {
          if ("object" != typeof e || null === e) return {};
          {
            let t = {};
            for (let n in e)
              Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t;
          }
        }
        function m(e, t = 40) {
          let n = Object.keys(f(e));
          n.sort();
          let r = n[0];
          if (!r) return "[object has no keys]";
          if (r.length >= t) return (0, s.$G)(r, t);
          for (let e = n.length; e > 0; e--) {
            let r = n.slice(0, e).join(", ");
            if (!(r.length > t)) {
              if (e === n.length) return r;
              return (0, s.$G)(r, t);
            }
          }
          return "";
        }
        function y(e) {
          let t = new Map();
          return (function e(t, n) {
            if (
              (function (e) {
                if (!(0, a.PO)(e)) return !1;
                try {
                  let t = Object.getPrototypeOf(e).constructor.name;
                  return !t || "Object" === t;
                } catch (e) {
                  return !0;
                }
              })(t)
            ) {
              let r = n.get(t);
              if (void 0 !== r) return r;
              let i = {};
              for (let r of (n.set(t, i), Object.getOwnPropertyNames(t)))
                void 0 !== t[r] && (i[r] = e(t[r], n));
              return i;
            }
            if (Array.isArray(t)) {
              let r = n.get(t);
              if (void 0 !== r) return r;
              let i = [];
              return (
                n.set(t, i),
                t.forEach((t) => {
                  i.push(e(t, n));
                }),
                i
              );
            }
            return t;
          })(e, t);
        }
      },
      6250: function (e, t, n) {
        "use strict";
        n.d(t, {
          Ht: function () {
            return i;
          },
          M: function () {
            return a;
          },
        });
        var r = n(2579);
        function i() {
          return (0, r.DM)();
        }
        function a() {
          return (0, r.DM)().substring(16);
        }
      },
      66241: function (e, t, n) {
        "use strict";
        n.d(t, {
          $P: function () {
            return c;
          },
          Fi: function () {
            return r;
          },
          Fr: function () {
            return d;
          },
          Sq: function () {
            return s;
          },
          pE: function () {
            return o;
          },
        });
        let r = "?",
          i = /\(error: (.*)\)/,
          a = /captureMessage|captureException/;
        function o(...e) {
          let t = e.sort((e, t) => e[0] - t[0]).map((e) => e[1]);
          return (e, n = 0, o = 0) => {
            let s = [],
              l = e.split("\n");
            for (let e = n; e < l.length; e++) {
              let n = l[e];
              if (n.length > 1024) continue;
              let r = i.test(n) ? n.replace(i, "$1") : n;
              if (!r.match(/\S*Error: /)) {
                for (let e of t) {
                  let t = e(r);
                  if (t) {
                    s.push(t);
                    break;
                  }
                }
                if (s.length >= 50 + o) break;
              }
            }
            return (function (e) {
              if (!e.length) return [];
              let t = Array.from(e);
              return (
                /sentryWrapped/.test(u(t).function || "") && t.pop(),
                t.reverse(),
                a.test(u(t).function || "") &&
                  (t.pop(), a.test(u(t).function || "") && t.pop()),
                t
                  .slice(0, 50)
                  .map((e) => ({
                    ...e,
                    filename: e.filename || u(t).filename,
                    function: e.function || r,
                  }))
              );
            })(s.slice(o));
          };
        }
        function s(e) {
          return Array.isArray(e) ? o(...e) : e;
        }
        function u(e) {
          return e[e.length - 1] || {};
        }
        let l = "<anonymous>";
        function c(e) {
          try {
            if (!e || "function" != typeof e) return l;
            return e.name || l;
          } catch (e) {
            return l;
          }
        }
        function d(e) {
          let t = e.exception;
          if (t) {
            let e = [];
            try {
              return (
                t.values.forEach((t) => {
                  t.stacktrace.frames && e.push(...t.stacktrace.frames);
                }),
                e
              );
            } catch (e) {}
          }
        }
      },
      47352: function (e, t, n) {
        "use strict";
        n.d(t, {
          $G: function () {
            return i;
          },
          U0: function () {
            return o;
          },
          nK: function () {
            return a;
          },
        });
        var r = n(62120);
        function i(e, t = 0) {
          return "string" != typeof e || 0 === t
            ? e
            : e.length <= t
            ? e
            : `${e.slice(0, t)}...`;
        }
        function a(e, t) {
          if (!Array.isArray(e)) return "";
          let n = [];
          for (let t = 0; t < e.length; t++) {
            let i = e[t];
            try {
              (0, r.y1)(i) ? n.push("[VueViewModel]") : n.push(String(i));
            } catch (e) {
              n.push("[value cannot be serialized]");
            }
          }
          return n.join(t);
        }
        function o(e, t = [], n = !1) {
          return t.some((t) =>
            (function (e, t, n = !1) {
              return (
                !!(0, r.HD)(e) &&
                ((0, r.Kj)(t)
                  ? t.test(e)
                  : !!(0, r.HD)(t) && (n ? e === t : e.includes(t)))
              );
            })(e, t, n)
          );
        }
      },
      3450: function (e, t, n) {
        "use strict";
        n.d(t, {
          $2: function () {
            return s;
          },
          WD: function () {
            return o;
          },
          cW: function () {
            return u;
          },
        });
        var r,
          i,
          a = n(62120);
        function o(e) {
          return new u((t) => {
            t(e);
          });
        }
        function s(e) {
          return new u((t, n) => {
            n(e);
          });
        }
        ((r = i || (i = {}))[(r.PENDING = 0)] = "PENDING"),
          (r[(r.RESOLVED = 1)] = "RESOLVED"),
          (r[(r.REJECTED = 2)] = "REJECTED");
        class u {
          constructor(e) {
            u.prototype.__init.call(this),
              u.prototype.__init2.call(this),
              u.prototype.__init3.call(this),
              u.prototype.__init4.call(this),
              (this._state = i.PENDING),
              (this._handlers = []);
            try {
              e(this._resolve, this._reject);
            } catch (e) {
              this._reject(e);
            }
          }
          then(e, t) {
            return new u((n, r) => {
              this._handlers.push([
                !1,
                (t) => {
                  if (e)
                    try {
                      n(e(t));
                    } catch (e) {
                      r(e);
                    }
                  else n(t);
                },
                (e) => {
                  if (t)
                    try {
                      n(t(e));
                    } catch (e) {
                      r(e);
                    }
                  else r(e);
                },
              ]),
                this._executeHandlers();
            });
          }
          catch(e) {
            return this.then((e) => e, e);
          }
          finally(e) {
            return new u((t, n) => {
              let r, i;
              return this.then(
                (t) => {
                  (i = !1), (r = t), e && e();
                },
                (t) => {
                  (i = !0), (r = t), e && e();
                }
              ).then(() => {
                if (i) {
                  n(r);
                  return;
                }
                t(r);
              });
            });
          }
          __init() {
            this._resolve = (e) => {
              this._setResult(i.RESOLVED, e);
            };
          }
          __init2() {
            this._reject = (e) => {
              this._setResult(i.REJECTED, e);
            };
          }
          __init3() {
            this._setResult = (e, t) => {
              if (this._state === i.PENDING) {
                if ((0, a.J8)(t)) {
                  t.then(this._resolve, this._reject);
                  return;
                }
                (this._state = e), (this._value = t), this._executeHandlers();
              }
            };
          }
          __init4() {
            this._executeHandlers = () => {
              if (this._state === i.PENDING) return;
              let e = this._handlers.slice();
              (this._handlers = []),
                e.forEach((e) => {
                  e[0] ||
                    (this._state === i.RESOLVED && e[1](this._value),
                    this._state === i.REJECTED && e[2](this._value),
                    (e[0] = !0));
                });
            };
          }
        }
      },
      38103: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z1: function () {
            return o;
          },
          ph: function () {
            return a;
          },
          yW: function () {
            return i;
          },
        });
        var r = n(98245);
        function i() {
          return Date.now() / 1e3;
        }
        let a = (function () {
            let { performance: e } = r.GLOBAL_OBJ;
            if (!e || !e.now) return i;
            let t = Date.now() - e.now(),
              n = void 0 == e.timeOrigin ? t : e.timeOrigin;
            return () => (n + e.now()) / 1e3;
          })(),
          o = (() => {
            let { performance: e } = r.GLOBAL_OBJ;
            if (!e || !e.now) return;
            let t = e.now(),
              n = Date.now(),
              i = e.timeOrigin ? Math.abs(e.timeOrigin + t - n) : 36e5,
              a = e.timing && e.timing.navigationStart,
              o = "number" == typeof a ? Math.abs(a + t - n) : 36e5;
            return i < 36e5 || o < 36e5 ? (i <= o ? e.timeOrigin : a) : n;
          })();
      },
      52109: function (e, t, n) {
        "use strict";
        n.d(t, {
          $p: function () {
            return s;
          },
          Ke: function () {
            return a;
          },
          pT: function () {
            return o;
          },
        });
        var r = n(28221),
          i = n(6250);
        let a = RegExp(
          "^[ \\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\t]*$"
        );
        function o(e, t) {
          let n = (function (e) {
              let t;
              if (!e) return;
              let n = e.match(a);
              if (n)
                return (
                  "1" === n[3] ? (t = !0) : "0" === n[3] && (t = !1),
                  { traceId: n[1], parentSampled: t, parentSpanId: n[2] }
                );
            })(e),
            o = (0, r.EN)(t);
          if (!n || !n.traceId)
            return { traceId: (0, i.Ht)(), spanId: (0, i.M)() };
          let { traceId: s, parentSpanId: u, parentSampled: l } = n,
            c = (0, i.M)();
          return {
            traceId: s,
            parentSpanId: u,
            spanId: c,
            sampled: l,
            dsc: o || {},
          };
        }
        function s(e = (0, i.Ht)(), t = (0, i.M)(), n) {
          let r = "";
          return void 0 !== n && (r = n ? "-1" : "-0"), `${e}-${t}${r}`;
        }
      },
      63008: function (e, t, n) {
        "use strict";
        n.d(t, {
          J: function () {
            return r;
          },
        });
        let r = "8.45.0";
      },
      98245: function (e, t, n) {
        "use strict";
        n.d(t, {
          GLOBAL_OBJ: function () {
            return i;
          },
          Y: function () {
            return a;
          },
        });
        var r = n(63008);
        let i = globalThis;
        function a(e, t, n) {
          let a = n || i,
            o = (a.__SENTRY__ = a.__SENTRY__ || {}),
            s = (o[r.J] = o[r.J] || {});
          return s[e] || (s[e] = t());
        }
      },
      62561: function (e, t, n) {
        "use strict";
        n.d(t, {
          z: function () {
            return i;
          },
        });
        var r = n(53769);
        function i(e) {
          if ("boolean" == typeof __SENTRY_TRACING__ && !__SENTRY_TRACING__)
            return !1;
          let t = (0, r.s3)(),
            n = e || (t && t.getOptions());
          return (
            !!n &&
            (n.enableTracing || "tracesSampleRate" in n || "tracesSampler" in n)
          );
        }
      },
      7473: function (e, t, n) {
        "use strict";
        n.d(t, {
          T: function () {
            return function e(t, n, r = 2) {
              if (!n || "object" != typeof n || r <= 0) return n;
              if (t && n && 0 === Object.keys(n).length) return t;
              let i = { ...t };
              for (let t in n)
                Object.prototype.hasOwnProperty.call(n, t) &&
                  (i[t] = e(i[t], n[t], r - 1));
              return i;
            };
          },
        });
      },
      44124: function (e, t, n) {
        "use strict";
        let r, i, a;
        n.d(t, {
          U0: function () {
            return T;
          },
          R: function () {
            return _;
          },
        });
        var o = n(71692),
          s = n(53769),
          u = n(86905),
          l = n(62120),
          c = n(31079),
          d = n(3450),
          f = n(14750),
          p = n(98245),
          h = n(2579),
          m = n(35139),
          y = n(47352),
          g = n(38103),
          b = n(57486),
          v = n(86771),
          w = n(7473),
          E = n(80621);
        function x(e, t) {
          let {
            extra: n,
            tags: r,
            user: i,
            contexts: a,
            level: o,
            sdkProcessingMetadata: s,
            breadcrumbs: u,
            fingerprint: l,
            eventProcessors: c,
            attachments: d,
            propagationContext: f,
            transactionName: p,
            span: h,
          } = t;
          C(e, "extra", n),
            C(e, "tags", r),
            C(e, "user", i),
            C(e, "contexts", a),
            (e.sdkProcessingMetadata = (0, w.T)(e.sdkProcessingMetadata, s, 2)),
            o && (e.level = o),
            p && (e.transactionName = p),
            h && (e.span = h),
            u.length && (e.breadcrumbs = [...e.breadcrumbs, ...u]),
            l.length && (e.fingerprint = [...e.fingerprint, ...l]),
            c.length && (e.eventProcessors = [...e.eventProcessors, ...c]),
            d.length && (e.attachments = [...e.attachments, ...d]),
            (e.propagationContext = { ...e.propagationContext, ...f });
        }
        function C(e, t, n) {
          e[t] = (0, w.T)(e[t], n, 1);
        }
        function _(e, t, n, w, C, _) {
          let { normalizeDepth: T = 3, normalizeMaxBreadth: S = 1e3 } = e,
            P = {
              ...t,
              event_id: t.event_id || n.event_id || (0, h.DM)(),
              timestamp: t.timestamp || (0, g.yW)(),
            },
            O = n.integrations || e.integrations.map((e) => e.name);
          (function (e, t) {
            let {
              environment: n,
              release: r,
              dist: i,
              maxValueLength: a = 250,
            } = t;
            (e.environment = e.environment || n || o.J),
              !e.release && r && (e.release = r),
              !e.dist && i && (e.dist = i),
              e.message && (e.message = (0, y.$G)(e.message, a));
            let s = e.exception && e.exception.values && e.exception.values[0];
            s && s.value && (s.value = (0, y.$G)(s.value, a));
            let u = e.request;
            u && u.url && (u.url = (0, y.$G)(u.url, a));
          })(P, e),
            O.length > 0 &&
              ((P.sdk = P.sdk || {}),
              (P.sdk.integrations = [...(P.sdk.integrations || []), ...O])),
            C && C.emit("applyFrameMetadata", t),
            void 0 === t.type &&
              (function (e, t) {
                let n = (function (e) {
                  let t = p.GLOBAL_OBJ._sentryDebugIds;
                  if (!t) return {};
                  let n = Object.keys(t);
                  return a && n.length === i
                    ? a
                    : ((i = n.length),
                      (a = n.reduce((n, i) => {
                        r || (r = {});
                        let a = r[i];
                        if (a) n[a[0]] = a[1];
                        else {
                          let a = e(i);
                          for (let e = a.length - 1; e >= 0; e--) {
                            let o = a[e],
                              s = o && o.filename,
                              u = t[i];
                            if (s && u) {
                              (n[s] = u), (r[i] = [s, u]);
                              break;
                            }
                          }
                        }
                        return n;
                      }, {})));
                })(t);
                try {
                  e.exception.values.forEach((e) => {
                    e.stacktrace.frames.forEach((e) => {
                      n && e.filename && (e.debug_id = n[e.filename]);
                    });
                  });
                } catch (e) {}
              })(P, e.stackParser);
          let I = (function (e, t) {
            if (!t) return e;
            let n = e ? e.clone() : new f.s();
            return n.update(t), n;
          })(w, n.captureContext);
          n.mechanism && (0, h.EG)(P, n.mechanism);
          let A = C ? C.getEventProcessors() : [],
            k = (0, s.lW)().getScopeData();
          if (_) {
            let e = _.getScopeData();
            x(k, e);
          }
          if (I) {
            let e = I.getScopeData();
            x(k, e);
          }
          let j = [...(n.attachments || []), ...k.attachments];
          j.length && (n.attachments = j),
            (function (e, t) {
              let {
                fingerprint: n,
                span: r,
                breadcrumbs: i,
                sdkProcessingMetadata: a,
              } = t;
              (function (e, t) {
                let {
                    extra: n,
                    tags: r,
                    user: i,
                    contexts: a,
                    level: o,
                    transactionName: s,
                  } = t,
                  u = (0, v.Jr)(n);
                u && Object.keys(u).length && (e.extra = { ...u, ...e.extra });
                let l = (0, v.Jr)(r);
                l && Object.keys(l).length && (e.tags = { ...l, ...e.tags });
                let c = (0, v.Jr)(i);
                c && Object.keys(c).length && (e.user = { ...c, ...e.user });
                let d = (0, v.Jr)(a);
                d &&
                  Object.keys(d).length &&
                  (e.contexts = { ...d, ...e.contexts }),
                  o && (e.level = o),
                  s && "transaction" !== e.type && (e.transaction = s);
              })(e, t),
                r &&
                  (function (e, t) {
                    (e.contexts = { trace: (0, E.wy)(t), ...e.contexts }),
                      (e.sdkProcessingMetadata = {
                        dynamicSamplingContext: (0, b.jC)(t),
                        ...e.sdkProcessingMetadata,
                      });
                    let n = (0, E.Gx)(t),
                      r = (0, E.XU)(n).description;
                    r &&
                      !e.transaction &&
                      "transaction" === e.type &&
                      (e.transaction = r);
                  })(e, r),
                (e.fingerprint = e.fingerprint
                  ? Array.isArray(e.fingerprint)
                    ? e.fingerprint
                    : [e.fingerprint]
                  : []),
                n && (e.fingerprint = e.fingerprint.concat(n)),
                e.fingerprint && !e.fingerprint.length && delete e.fingerprint,
                (function (e, t) {
                  let n = [...(e.breadcrumbs || []), ...t];
                  e.breadcrumbs = n.length ? n : void 0;
                })(e, i),
                (e.sdkProcessingMetadata = {
                  ...e.sdkProcessingMetadata,
                  ...a,
                });
            })(P, k);
          let B = [...A, ...k.eventProcessors],
            M = (function e(t, n, r, i = 0) {
              return new d.cW((a, o) => {
                let s = t[i];
                if (null === n || "function" != typeof s) a(n);
                else {
                  let d = s({ ...n }, r);
                  u.X &&
                    s.id &&
                    null === d &&
                    c.kg.log(`Event processor "${s.id}" dropped event`),
                    (0, l.J8)(d)
                      ? d.then((n) => e(t, n, r, i + 1).then(a)).then(null, o)
                      : e(t, d, r, i + 1)
                          .then(a)
                          .then(null, o);
                }
              });
            })(B, P, n);
          return M.then((e) =>
            (e &&
              (function (e) {
                let t = {};
                try {
                  e.exception.values.forEach((e) => {
                    e.stacktrace.frames.forEach((e) => {
                      e.debug_id &&
                        (e.abs_path
                          ? (t[e.abs_path] = e.debug_id)
                          : e.filename && (t[e.filename] = e.debug_id),
                        delete e.debug_id);
                    });
                  });
                } catch (e) {}
                if (0 === Object.keys(t).length) return;
                (e.debug_meta = e.debug_meta || {}),
                  (e.debug_meta.images = e.debug_meta.images || []);
                let n = e.debug_meta.images;
                Object.entries(t).forEach(([e, t]) => {
                  n.push({ type: "sourcemap", code_file: e, debug_id: t });
                });
              })(e),
            "number" == typeof T && T > 0)
              ? (function (e, t, n) {
                  if (!e) return null;
                  let r = {
                    ...e,
                    ...(e.breadcrumbs && {
                      breadcrumbs: e.breadcrumbs.map((e) => ({
                        ...e,
                        ...(e.data && { data: (0, m.Fv)(e.data, t, n) }),
                      })),
                    }),
                    ...(e.user && { user: (0, m.Fv)(e.user, t, n) }),
                    ...(e.contexts && {
                      contexts: (0, m.Fv)(e.contexts, t, n),
                    }),
                    ...(e.extra && { extra: (0, m.Fv)(e.extra, t, n) }),
                  };
                  return (
                    e.contexts &&
                      e.contexts.trace &&
                      r.contexts &&
                      ((r.contexts.trace = e.contexts.trace),
                      e.contexts.trace.data &&
                        (r.contexts.trace.data = (0, m.Fv)(
                          e.contexts.trace.data,
                          t,
                          n
                        ))),
                    e.spans &&
                      (r.spans = e.spans.map((e) => ({
                        ...e,
                        ...(e.data && { data: (0, m.Fv)(e.data, t, n) }),
                      }))),
                    e.contexts &&
                      e.contexts.flags &&
                      r.contexts &&
                      (r.contexts.flags = (0, m.Fv)(e.contexts.flags, 3, n)),
                    r
                  );
                })(e, T, S)
              : e
          );
        }
        function T(e) {
          return e
            ? e instanceof f.s ||
              "function" == typeof e ||
              Object.keys(e).some((e) => S.includes(e))
              ? { captureContext: e }
              : e
            : void 0;
        }
        let S = [
          "user",
          "level",
          "extra",
          "contexts",
          "tags",
          "fingerprint",
          "requestSession",
          "propagationContext",
        ];
      },
      94916: function (e, t, n) {
        "use strict";
        n.d(t, {
          D: function () {
            return a;
          },
          Y: function () {
            return o;
          },
        });
        var r = n(86771);
        let i = "_sentrySpan";
        function a(e, t) {
          t ? (0, r.xp)(e, i, t) : delete e[i];
        }
        function o(e) {
          return e[i];
        }
      },
      80621: function (e, t, n) {
        "use strict";
        n.d(t, {
          $k: function () {
            return E;
          },
          Dp: function () {
            return A;
          },
          Gx: function () {
            return k;
          },
          HN: function () {
            return j;
          },
          HR: function () {
            return b;
          },
          Hb: function () {
            return w;
          },
          R6: function () {
            return B;
          },
          Tt: function () {
            return _;
          },
          XU: function () {
            return C;
          },
          _4: function () {
            return T;
          },
          ed: function () {
            return I;
          },
          i0: function () {
            return y;
          },
          j5: function () {
            return O;
          },
          ve: function () {
            return m;
          },
          wy: function () {
            return v;
          },
        });
        var r = n(79563),
          i = n(62052),
          a = n(53769),
          o = n(44552),
          s = n(7084),
          u = n(84049),
          l = n(31079),
          c = n(86771),
          d = n(6250),
          f = n(38103),
          p = n(52109),
          h = n(94916);
        let m = 0,
          y = 1,
          g = !1;
        function b(e) {
          let { spanId: t, traceId: n } = e.spanContext(),
            { data: r, op: i, parent_span_id: a, status: o, origin: s } = C(e);
          return (0, c.Jr)({
            parent_span_id: a,
            span_id: t,
            trace_id: n,
            data: r,
            op: i,
            status: o,
            origin: s,
          });
        }
        function v(e) {
          let { spanId: t, traceId: n, isRemote: r } = e.spanContext(),
            i = r ? t : C(e).parent_span_id,
            a = r ? (0, d.M)() : t;
          return (0, c.Jr)({ parent_span_id: i, span_id: a, trace_id: n });
        }
        function w(e) {
          let { traceId: t, spanId: n } = e.spanContext(),
            r = _(e);
          return (0, p.$p)(t, n, r);
        }
        function E(e) {
          return "number" == typeof e
            ? x(e)
            : Array.isArray(e)
            ? e[0] + e[1] / 1e9
            : e instanceof Date
            ? x(e.getTime())
            : (0, f.ph)();
        }
        function x(e) {
          return e > 9999999999 ? e / 1e3 : e;
        }
        function C(e) {
          if ("function" == typeof e.getSpanJSON) return e.getSpanJSON();
          try {
            let { spanId: t, traceId: n } = e.spanContext();
            if (
              e.attributes &&
              e.startTime &&
              e.name &&
              e.endTime &&
              e.status
            ) {
              let {
                attributes: r,
                startTime: i,
                name: a,
                endTime: u,
                parentSpanId: l,
                status: d,
              } = e;
              return (0, c.Jr)({
                span_id: t,
                trace_id: n,
                data: r,
                description: a,
                parent_span_id: l,
                start_timestamp: E(i),
                timestamp: E(u) || void 0,
                status: T(d),
                op: r[s.$J],
                origin: r[s.S3],
                _metrics_summary: (0, o.y)(e),
              });
            }
            return { span_id: t, trace_id: n };
          } catch (e) {
            return {};
          }
        }
        function _(e) {
          let { traceFlags: t } = e.spanContext();
          return t === y;
        }
        function T(e) {
          return e && e.code !== u.pq
            ? e.code === u.OP
              ? "ok"
              : e.message || "unknown_error"
            : void 0;
        }
        let S = "_sentryChildSpans",
          P = "_sentryRootSpan";
        function O(e, t) {
          let n = e[P] || e;
          (0, c.xp)(t, P, n),
            e[S] ? e[S].add(t) : (0, c.xp)(e, S, new Set([t]));
        }
        function I(e, t) {
          e[S] && e[S].delete(t);
        }
        function A(e) {
          let t = new Set();
          return (
            (function e(n) {
              if (!t.has(n) && _(n)) {
                t.add(n);
                let r = n[S] ? Array.from(n[S]) : [];
                for (let t of r) e(t);
              }
            })(e),
            Array.from(t)
          );
        }
        function k(e) {
          return e[P] || e;
        }
        function j() {
          let e = (0, i.c)(),
            t = (0, r.G)(e);
          return t.getActiveSpan ? t.getActiveSpan() : (0, h.Y)((0, a.nZ)());
        }
        function B() {
          g ||
            ((0, l.Cf)(() => {
              console.warn(
                "[Sentry] Deprecation warning: Returning null from `beforeSendSpan` will be disallowed from SDK version 9.0.0 onwards. The callback will only support mutating spans. To drop certain spans, configure the respective integrations directly."
              );
            }),
            (g = !0));
        }
      },
      53516: function (e, t, n) {
        "use strict";
        function r(e) {
          return "string" == typeof e
            ? Number.parseInt(e, "0x" === e.trim().substring(0, 2) ? 16 : 10)
            : "bigint" == typeof e
            ? Number(e)
            : e;
        }
        n.d(t, {
          J: function () {
            return r;
          },
        });
      },
      92219: function (e, t, n) {
        "use strict";
        n.d(t, {
          _: function () {
            return f;
          },
        });
        var r,
          i = n(57858),
          a = n(53516),
          o = n(75276),
          s = n(45775),
          u = n(39028),
          l = n(79578),
          c = n(3980),
          d = n(92106),
          f = class extends o.wR {
            constructor({ chains: e, options: t } = {}) {
              let n = {
                shimDisconnect: !0,
                getProvider() {
                  if ("undefined" == typeof window) return;
                  let e = window.ethereum;
                  return e?.providers && e.providers.length > 0
                    ? e.providers[0]
                    : e;
                },
                ...t,
              };
              super({ chains: e, options: n }),
                (this.id = "injected"),
                (0, o.Ko)(this, r, void 0),
                (this.shimDisconnectKey = `${this.id}.shimDisconnect`),
                (this.onAccountsChanged = (e) => {
                  0 === e.length
                    ? this.emit("disconnect")
                    : this.emit("change", { account: (0, s.K)(e[0]) });
                }),
                (this.onChainChanged = (e) => {
                  let t = (0, a.J)(e),
                    n = this.isChainUnsupported(t);
                  this.emit("change", { chain: { id: t, unsupported: n } });
                }),
                (this.onDisconnect = async (e) => {
                  if (1013 === e.code) {
                    let e = await this.getProvider();
                    if (e) {
                      let e = await this.getAccount();
                      if (e) return;
                    }
                  }
                  this.emit("disconnect"),
                    this.options.shimDisconnect &&
                      this.storage?.removeItem(this.shimDisconnectKey);
                });
              let i = n.getProvider();
              if ("string" == typeof n.name) this.name = n.name;
              else if (i) {
                let e = (function (e) {
                  if (!e) return "Injected";
                  let t = (e) =>
                    e.isApexWallet
                      ? "Apex Wallet"
                      : e.isAvalanche
                      ? "Core Wallet"
                      : e.isBackpack
                      ? "Backpack"
                      : e.isBifrost
                      ? "Bifrost Wallet"
                      : e.isBitKeep
                      ? "BitKeep"
                      : e.isBitski
                      ? "Bitski"
                      : e.isBlockWallet
                      ? "BlockWallet"
                      : e.isBraveWallet
                      ? "Brave Wallet"
                      : e.isCoin98
                      ? "Coin98 Wallet"
                      : e.isCoinbaseWallet
                      ? "Coinbase Wallet"
                      : e.isDawn
                      ? "Dawn Wallet"
                      : e.isDefiant
                      ? "Defiant"
                      : e.isDesig
                      ? "Desig Wallet"
                      : e.isEnkrypt
                      ? "Enkrypt"
                      : e.isExodus
                      ? "Exodus"
                      : e.isFordefi
                      ? "Fordefi"
                      : e.isFrame
                      ? "Frame"
                      : e.isFrontier
                      ? "Frontier Wallet"
                      : e.isGamestop
                      ? "GameStop Wallet"
                      : e.isHaqqWallet
                      ? "HAQQ Wallet"
                      : e.isHyperPay
                      ? "HyperPay Wallet"
                      : e.isImToken
                      ? "ImToken"
                      : e.isHaloWallet
                      ? "Halo Wallet"
                      : e.isKuCoinWallet
                      ? "KuCoin Wallet"
                      : e.isMathWallet
                      ? "MathWallet"
                      : e.isNovaWallet
                      ? "Nova Wallet"
                      : e.isOkxWallet || e.isOKExWallet
                      ? "OKX Wallet"
                      : e.isOktoWallet
                      ? "Okto Wallet"
                      : e.isOneInchIOSWallet || e.isOneInchAndroidWallet
                      ? "1inch Wallet"
                      : e.isOneKey
                      ? "OneKey Wallet"
                      : e.isOpera
                      ? "Opera"
                      : e.isPhantom
                      ? "Phantom"
                      : e.isPortal
                      ? "Ripio Portal"
                      : e.isRabby
                      ? "Rabby Wallet"
                      : e.isRainbow
                      ? "Rainbow"
                      : e.isSafePal
                      ? "SafePal Wallet"
                      : e.isStatus
                      ? "Status"
                      : e.isSubWallet
                      ? "SubWallet"
                      : e.isTalisman
                      ? "Talisman"
                      : e.isTally
                      ? "Taho"
                      : e.isTokenPocket
                      ? "TokenPocket"
                      : e.isTokenary
                      ? "Tokenary"
                      : e.isTrust || e.isTrustWallet
                      ? "Trust Wallet"
                      : e.isTTWallet
                      ? "TTWallet"
                      : e.isXDEFI
                      ? "XDEFI Wallet"
                      : e.isZeal
                      ? "Zeal"
                      : e.isZerion
                      ? "Zerion"
                      : e.isMetaMask
                      ? "MetaMask"
                      : void 0;
                  if (e.providers?.length) {
                    let n = new Set(),
                      r = 1;
                    for (let i of e.providers) {
                      let e = t(i);
                      e || ((e = `Unknown Wallet #${r}`), (r += 1)), n.add(e);
                    }
                    let i = [...n];
                    return i.length ? i : i[0] ?? "Injected";
                  }
                  return t(e) ?? "Injected";
                })(i);
                n.name
                  ? (this.name = n.name(e))
                  : "string" == typeof e
                  ? (this.name = e)
                  : (this.name = e[0]);
              } else this.name = "Injected";
              this.ready = !!i;
            }
            async connect({ chainId: e } = {}) {
              try {
                let t = await this.getProvider();
                if (!t) throw new i.N();
                t.on &&
                  (t.on("accountsChanged", this.onAccountsChanged),
                  t.on("chainChanged", this.onChainChanged),
                  t.on("disconnect", this.onDisconnect)),
                  this.emit("message", { type: "connecting" });
                let n = await t.request({ method: "eth_requestAccounts" }),
                  r = (0, s.K)(n[0]),
                  a = await this.getChainId(),
                  o = this.isChainUnsupported(a);
                if (e && a !== e) {
                  let t = await this.switchChain(e);
                  (a = t.id), (o = this.isChainUnsupported(a));
                }
                return (
                  this.options.shimDisconnect &&
                    this.storage?.setItem(this.shimDisconnectKey, !0),
                  { account: r, chain: { id: a, unsupported: o } }
                );
              } catch (e) {
                if (this.isUserRejectedRequestError(e)) throw new u.ab(e);
                if (-32002 === e.code) throw new u.pT(e);
                throw e;
              }
            }
            async disconnect() {
              let e = await this.getProvider();
              e?.removeListener &&
                (e.removeListener("accountsChanged", this.onAccountsChanged),
                e.removeListener("chainChanged", this.onChainChanged),
                e.removeListener("disconnect", this.onDisconnect),
                this.options.shimDisconnect &&
                  this.storage?.removeItem(this.shimDisconnectKey));
            }
            async getAccount() {
              let e = await this.getProvider();
              if (!e) throw new i.N();
              return (0, s.K)((await e.request({ method: "eth_accounts" }))[0]);
            }
            async getChainId() {
              let e = await this.getProvider();
              if (!e) throw new i.N();
              return e.request({ method: "eth_chainId" }).then(a.J);
            }
            async getProvider() {
              let e = this.options.getProvider();
              return e && (0, o.qx)(this, r, e), (0, o.ac)(this, r);
            }
            async getWalletClient({ chainId: e } = {}) {
              let [t, n] = await Promise.all([
                  this.getProvider(),
                  this.getAccount(),
                ]),
                r = this.chains.find((t) => t.id === e);
              if (!t) throw Error("provider is required.");
              return (0, l.K)({ account: n, chain: r, transport: (0, c.P)(t) });
            }
            async isAuthorized() {
              try {
                if (
                  this.options.shimDisconnect &&
                  !this.storage?.getItem(this.shimDisconnectKey)
                )
                  return !1;
                let e = await this.getProvider();
                if (!e) throw new i.N();
                let t = await this.getAccount();
                return !!t;
              } catch {
                return !1;
              }
            }
            async switchChain(e) {
              let t = await this.getProvider();
              if (!t) throw new i.N();
              let n = (0, d.eC)(e);
              try {
                return (
                  await Promise.all([
                    t.request({
                      method: "wallet_switchEthereumChain",
                      params: [{ chainId: n }],
                    }),
                    new Promise((t) =>
                      this.on("change", ({ chain: n }) => {
                        n?.id === e && t();
                      })
                    ),
                  ]),
                  this.chains.find((t) => t.id === e) ?? {
                    id: e,
                    name: `Chain ${n}`,
                    network: `${n}`,
                    nativeCurrency: {
                      name: "Ether",
                      decimals: 18,
                      symbol: "ETH",
                    },
                    rpcUrls: {
                      default: { http: [""] },
                      public: { http: [""] },
                    },
                  }
                );
              } catch (a) {
                let r = this.chains.find((t) => t.id === e);
                if (!r) throw new i.B({ chainId: e, connectorId: this.id });
                if (4902 === a.code || a?.data?.originalError?.code === 4902)
                  try {
                    await t.request({
                      method: "wallet_addEthereumChain",
                      params: [
                        {
                          chainId: n,
                          chainName: r.name,
                          nativeCurrency: r.nativeCurrency,
                          rpcUrls: [r.rpcUrls.public?.http[0] ?? ""],
                          blockExplorerUrls: this.getBlockExplorerUrls(r),
                        },
                      ],
                    });
                    let i = await this.getChainId();
                    if (i !== e)
                      throw new u.ab(
                        Error("User rejected switch after adding network.")
                      );
                    return r;
                  } catch (e) {
                    throw new u.ab(e);
                  }
                if (this.isUserRejectedRequestError(a)) throw new u.ab(a);
                throw new u.x3(a);
              }
            }
            async watchAsset({
              address: e,
              decimals: t = 18,
              image: n,
              symbol: r,
            }) {
              let a = await this.getProvider();
              if (!a) throw new i.N();
              return a.request({
                method: "wallet_watchAsset",
                params: {
                  type: "ERC20",
                  options: { address: e, decimals: t, image: n, symbol: r },
                },
              });
            }
            isUserRejectedRequestError(e) {
              return 4001 === e.code;
            }
          };
        r = new WeakMap();
      },
      57858: function (e, t, n) {
        "use strict";
        n.d(t, {
          B: function () {
            return r;
          },
          N: function () {
            return i;
          },
        });
        var r = class extends Error {
            constructor({ chainId: e, connectorId: t }) {
              super(`Chain "${e}" not configured for connector "${t}".`),
                (this.name = "ChainNotConfiguredForConnectorError");
            }
          },
          i = class extends Error {
            constructor() {
              super(...arguments),
                (this.name = "ConnectorNotFoundError"),
                (this.message = "Connector not found");
            }
          };
      },
      75276: function (e, t, n) {
        "use strict";
        n.d(t, {
          wR: function () {
            return f;
          },
          Ko: function () {
            return l;
          },
          ac: function () {
            return u;
          },
          U9: function () {
            return d;
          },
          qx: function () {
            return c;
          },
        });
        var r = n(26729),
          i = n(66403),
          a = n(86164);
        let o = (0, a.a)({
          id: 5,
          network: "goerli",
          name: "Goerli",
          nativeCurrency: { name: "Goerli Ether", symbol: "ETH", decimals: 18 },
          rpcUrls: {
            alchemy: {
              http: ["https://eth-goerli.g.alchemy.com/v2"],
              webSocket: ["wss://eth-goerli.g.alchemy.com/v2"],
            },
            infura: {
              http: ["https://goerli.infura.io/v3"],
              webSocket: ["wss://goerli.infura.io/ws/v3"],
            },
            default: { http: ["https://rpc.ankr.com/eth_goerli"] },
            public: { http: ["https://rpc.ankr.com/eth_goerli"] },
          },
          blockExplorers: {
            etherscan: {
              name: "Etherscan",
              url: "https://goerli.etherscan.io",
            },
            default: { name: "Etherscan", url: "https://goerli.etherscan.io" },
          },
          contracts: {
            ensRegistry: {
              address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
            },
            ensUniversalResolver: {
              address: "0x56522D00C410a43BFfDF00a9A569489297385790",
              blockCreated: 8765204,
            },
            multicall3: {
              address: "0xca11bde05977b3631167028862be2a173976ca11",
              blockCreated: 6507670,
            },
          },
          testnet: !0,
        });
        var s = (e, t, n) => {
            if (!t.has(e)) throw TypeError("Cannot " + n);
          },
          u = (e, t, n) => (
            s(e, t, "read from private field"), n ? n.call(e) : t.get(e)
          ),
          l = (e, t, n) => {
            if (t.has(e))
              throw TypeError(
                "Cannot add the same private member more than once"
              );
            t instanceof WeakSet ? t.add(e) : t.set(e, n);
          },
          c = (e, t, n, r) => (
            s(e, t, "write to private field"), r ? r.call(e, n) : t.set(e, n), n
          ),
          d = (e, t, n) => (s(e, t, "access private method"), n),
          f = class extends r {
            constructor({ chains: e = [i.R, o], options: t }) {
              super(), (this.chains = e), (this.options = t);
            }
            getBlockExplorerUrls(e) {
              let { default: t, ...n } = e.blockExplorers ?? {};
              if (t) return [t.url, ...Object.values(n).map((e) => e.url)];
            }
            isChainUnsupported(e) {
              return !this.chains.some((t) => t.id === e);
            }
            setStorage(e) {
              this.storage = e;
            }
          };
      },
      89401: function (e, t, n) {
        "use strict";
        n.d(t, {
          QB: function () {
            return F;
          },
          $j: function () {
            return et;
          },
          _g: function () {
            return Q;
          },
          o6: function () {
            return J;
          },
          vZ: function () {
            return function e(t, n) {
              if (t === n) return !0;
              if (t && n && "object" == typeof t && "object" == typeof n) {
                let r, i;
                if (t.constructor !== n.constructor) return !1;
                if (Array.isArray(t) && Array.isArray(n)) {
                  if ((r = t.length) != n.length) return !1;
                  for (i = r; 0 != i--; ) if (!e(t[i], n[i])) return !1;
                  return !0;
                }
                if (t.valueOf !== Object.prototype.valueOf)
                  return t.valueOf() === n.valueOf();
                if (t.toString !== Object.prototype.toString)
                  return t.toString() === n.toString();
                let a = Object.keys(t);
                if ((r = a.length) !== Object.keys(n).length) return !1;
                for (i = r; 0 != i--; )
                  if (!Object.prototype.hasOwnProperty.call(n, a[i])) return !1;
                for (i = r; 0 != i--; ) {
                  let r = a[i];
                  if (r && !e(t[r], n[r])) return !1;
                }
                return !0;
              }
              return t != t && n != n;
            };
          },
          zP: function () {
            return en;
          },
          EG: function () {
            return eh;
          },
          RQ: function () {
            return eC;
          },
          w6: function () {
            return eE;
          },
          Lk: function () {
            return ex;
          },
          jS: function () {
            return e_;
          },
          D0: function () {
            return em;
          },
          Hy: function () {
            return ey;
          },
          uV: function () {
            return ea;
          },
          xz: function () {
            return eo;
          },
          jr: function () {
            return es;
          },
          wp: function () {
            return Z;
          },
          JH: function () {
            return ep;
          },
          l: function () {
            return eg;
          },
          If: function () {
            return eb;
          },
          uH: function () {
            return ev;
          },
          QC: function () {
            return ew;
          },
          pC: function () {
            return eu;
          },
          Tb: function () {
            return el;
          },
          fq: function () {
            return ec;
          },
        });
        var r,
          i,
          a,
          o,
          s,
          u = n(92219),
          l = (e, t, n) => {
            if (!t.has(e)) throw TypeError("Cannot " + n);
          },
          c = (e, t, n) => (
            l(e, t, "read from private field"), n ? n.call(e) : t.get(e)
          ),
          d = (e, t, n) => {
            if (t.has(e))
              throw TypeError(
                "Cannot add the same private member more than once"
              );
            t instanceof WeakSet ? t.add(e) : t.set(e, n);
          },
          f = (e, t, n, r) => (
            l(e, t, "write to private field"), r ? r.call(e, n) : t.set(e, n), n
          ),
          p = (e, t, n) => (l(e, t, "access private method"), n),
          h = n(84178),
          m = n(37029),
          y = n(62914),
          g = n(31031);
        function b(e, t = {}) {
          let {
            key: n = "fallback",
            name: r = "Fallback",
            rank: i = !1,
            retryCount: a,
            retryDelay: o,
          } = t;
          return ({ chain: t, pollingInterval: s = 4e3, timeout: u }) => {
            let l = e,
              c = () => {},
              d = (0, g.q)(
                {
                  key: n,
                  name: r,
                  async request({ method: e, params: n }) {
                    let r = async (i = 0) => {
                      let a = l[i]({ chain: t, retryCount: 0, timeout: u });
                      try {
                        let t = await a.request({ method: e, params: n });
                        return (
                          c({
                            method: e,
                            params: n,
                            response: t,
                            transport: a,
                            status: "success",
                          }),
                          t
                        );
                      } catch (t) {
                        if (
                          (c({
                            error: t,
                            method: e,
                            params: n,
                            transport: a,
                            status: "error",
                          }),
                          (0, m.y)(t) || i === l.length - 1)
                        )
                          throw t;
                        return r(i + 1);
                      }
                    };
                    return r();
                  },
                  retryCount: a,
                  retryDelay: o,
                  type: "fallback",
                },
                {
                  onResponse: (e) => (c = e),
                  transports: l.map((e) => e({ chain: t, retryCount: 0 })),
                }
              );
            if (i) {
              let e = "object" == typeof i ? i : {};
              (function ({
                chain: e,
                interval: t = 4e3,
                onTransports: n,
                sampleCount: r = 10,
                timeout: i = 1e3,
                transports: a,
                weights: o = {},
              }) {
                let { stability: s = 0.7, latency: u = 0.3 } = o,
                  l = [],
                  c = async () => {
                    let o = await Promise.all(
                      a.map(async (t) => {
                        let n, r;
                        let a = t({ chain: e, retryCount: 0, timeout: i }),
                          o = Date.now();
                        try {
                          await a.request({ method: "net_listening" }), (r = 1);
                        } catch {
                          r = 0;
                        } finally {
                          n = Date.now();
                        }
                        let s = n - o;
                        return { latency: s, success: r };
                      })
                    );
                    l.push(o), l.length > r && l.shift();
                    let d = Math.max(
                        ...l.map((e) =>
                          Math.max(...e.map(({ latency: e }) => e))
                        )
                      ),
                      f = a
                        .map((e, t) => {
                          let n = l.map((e) => e[t].latency),
                            r = n.reduce((e, t) => e + t, 0) / n.length,
                            i = l.map((e) => e[t].success),
                            a = i.reduce((e, t) => e + t, 0) / i.length;
                          return 0 === a
                            ? [0, t]
                            : [u * (1 - r / d) + s * a, t];
                        })
                        .sort((e, t) => t[0] - e[0]);
                    n(f.map(([, e]) => a[e])), await (0, y.D)(t), c();
                  };
                c();
              })({
                chain: t,
                interval: e.interval ?? s,
                onTransports: (e) => (l = e),
                sampleCount: e.sampleCount,
                timeout: e.timeout,
                transports: l,
                weights: e.weights,
              });
            }
            return d;
          };
        }
        var v = n(71506),
          w = n(78863),
          E = n(43018),
          x = n(66558),
          C = n(57858),
          _ = n(84192);
        let T = (e) => (t, n, r) => {
            let i = r.subscribe;
            r.subscribe = (e, t, n) => {
              let a = e;
              if (t) {
                let i = (null == n ? void 0 : n.equalityFn) || Object.is,
                  o = e(r.getState());
                (a = (n) => {
                  let r = e(n);
                  if (!i(o, r)) {
                    let e = o;
                    t((o = r), e);
                  }
                }),
                  (null == n ? void 0 : n.fireImmediately) && t(o, o);
              }
              return i(a);
            };
            let a = e(t, n, r);
            return a;
          },
          S = (e) => (t) => {
            try {
              let n = e(t);
              if (n instanceof Promise) return n;
              return {
                then: (e) => S(e)(n),
                catch(e) {
                  return this;
                },
              };
            } catch (e) {
              return {
                then(e) {
                  return this;
                },
                catch: (t) => S(t)(e),
              };
            }
          },
          P = (e, t) => (n, r, i) => {
            let a,
              o,
              s = {
                getStorage: () => localStorage,
                serialize: JSON.stringify,
                deserialize: JSON.parse,
                partialize: (e) => e,
                version: 0,
                merge: (e, t) => ({ ...t, ...e }),
                ...t,
              },
              u = !1,
              l = new Set(),
              c = new Set();
            try {
              a = s.getStorage();
            } catch (e) {}
            if (!a)
              return e(
                (...e) => {
                  console.warn(
                    `[zustand persist middleware] Unable to update item '${s.name}', the given storage is currently unavailable.`
                  ),
                    n(...e);
                },
                r,
                i
              );
            let d = S(s.serialize),
              f = () => {
                let e;
                let t = s.partialize({ ...r() }),
                  n = d({ state: t, version: s.version })
                    .then((e) => a.setItem(s.name, e))
                    .catch((t) => {
                      e = t;
                    });
                if (e) throw e;
                return n;
              },
              p = i.setState;
            i.setState = (e, t) => {
              p(e, t), f();
            };
            let h = e(
                (...e) => {
                  n(...e), f();
                },
                r,
                i
              ),
              m = () => {
                var e;
                if (!a) return;
                (u = !1), l.forEach((e) => e(r()));
                let t =
                  (null == (e = s.onRehydrateStorage)
                    ? void 0
                    : e.call(s, r())) || void 0;
                return S(a.getItem.bind(a))(s.name)
                  .then((e) => {
                    if (e) return s.deserialize(e);
                  })
                  .then((e) => {
                    if (e) {
                      if (
                        "number" != typeof e.version ||
                        e.version === s.version
                      )
                        return e.state;
                      if (s.migrate) return s.migrate(e.state, e.version);
                      console.error(
                        "State loaded from storage couldn't be migrated since no migrate function was provided"
                      );
                    }
                  })
                  .then((e) => {
                    var t;
                    return (
                      n((o = s.merge(e, null != (t = r()) ? t : h)), !0), f()
                    );
                  })
                  .then(() => {
                    null == t || t(o, void 0), (u = !0), c.forEach((e) => e(o));
                  })
                  .catch((e) => {
                    null == t || t(void 0, e);
                  });
              };
            return (
              (i.persist = {
                setOptions: (e) => {
                  (s = { ...s, ...e }), e.getStorage && (a = e.getStorage());
                },
                clearStorage: () => {
                  null == a || a.removeItem(s.name);
                },
                getOptions: () => s,
                rehydrate: () => m(),
                hasHydrated: () => u,
                onHydrate: (e) => (
                  l.add(e),
                  () => {
                    l.delete(e);
                  }
                ),
                onFinishHydration: (e) => (
                  c.add(e),
                  () => {
                    c.delete(e);
                  }
                ),
              }),
              m(),
              o || h
            );
          },
          O = (e, t) => (n, r, i) => {
            let a,
              o = {
                storage: (function (e, t) {
                  let n;
                  try {
                    n = e();
                  } catch (e) {
                    return;
                  }
                  return {
                    getItem: (e) => {
                      var r;
                      let i = (e) =>
                          null === e
                            ? null
                            : JSON.parse(e, null == t ? void 0 : t.reviver),
                        a = null != (r = n.getItem(e)) ? r : null;
                      return a instanceof Promise ? a.then(i) : i(a);
                    },
                    setItem: (e, r) =>
                      n.setItem(
                        e,
                        JSON.stringify(r, null == t ? void 0 : t.replacer)
                      ),
                    removeItem: (e) => n.removeItem(e),
                  };
                })(() => localStorage),
                partialize: (e) => e,
                version: 0,
                merge: (e, t) => ({ ...t, ...e }),
                ...t,
              },
              s = !1,
              u = new Set(),
              l = new Set(),
              c = o.storage;
            if (!c)
              return e(
                (...e) => {
                  console.warn(
                    `[zustand persist middleware] Unable to update item '${o.name}', the given storage is currently unavailable.`
                  ),
                    n(...e);
                },
                r,
                i
              );
            let d = () => {
                let e = o.partialize({ ...r() });
                return c.setItem(o.name, { state: e, version: o.version });
              },
              f = i.setState;
            i.setState = (e, t) => {
              f(e, t), d();
            };
            let p = e(
                (...e) => {
                  n(...e), d();
                },
                r,
                i
              ),
              h = () => {
                var e, t;
                if (!c) return;
                (s = !1),
                  u.forEach((e) => {
                    var t;
                    return e(null != (t = r()) ? t : p);
                  });
                let i =
                  (null == (t = o.onRehydrateStorage)
                    ? void 0
                    : t.call(o, null != (e = r()) ? e : p)) || void 0;
                return S(c.getItem.bind(c))(o.name)
                  .then((e) => {
                    if (e) {
                      if (
                        "number" != typeof e.version ||
                        e.version === o.version
                      )
                        return e.state;
                      if (o.migrate) return o.migrate(e.state, e.version);
                      console.error(
                        "State loaded from storage couldn't be migrated since no migrate function was provided"
                      );
                    }
                  })
                  .then((e) => {
                    var t;
                    return (
                      n((a = o.merge(e, null != (t = r()) ? t : p)), !0), d()
                    );
                  })
                  .then(() => {
                    null == i || i(a, void 0),
                      (a = r()),
                      (s = !0),
                      l.forEach((e) => e(a));
                  })
                  .catch((e) => {
                    null == i || i(void 0, e);
                  });
              };
            return (
              (i.persist = {
                setOptions: (e) => {
                  (o = { ...o, ...e }), e.storage && (c = e.storage);
                },
                clearStorage: () => {
                  null == c || c.removeItem(o.name);
                },
                getOptions: () => o,
                rehydrate: () => h(),
                hasHydrated: () => s,
                onHydrate: (e) => (
                  u.add(e),
                  () => {
                    u.delete(e);
                  }
                ),
                onFinishHydration: (e) => (
                  l.add(e),
                  () => {
                    l.delete(e);
                  }
                ),
              }),
              o.skipHydration || h(),
              a || p
            );
          },
          I = (e, t) =>
            "getStorage" in t || "serialize" in t || "deserialize" in t
              ? (console.warn(
                  "[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead."
                ),
                P(e, t))
              : O(e, t);
        var A = n(43973),
          k = n(15229),
          j = n(97405),
          B = n(95946),
          M = n(61836),
          N = n(76248),
          D = n(45775),
          R = n(21803);
        function F(
          e,
          t,
          {
            batch: n = { multicall: { wait: 32 } },
            pollingInterval: r = 4e3,
            rank: i,
            retryCount: a,
            retryDelay: o,
            stallTimeout: s,
          } = {}
        ) {
          if (!e.length) throw Error("must have at least one chain");
          let u = [],
            l = {},
            c = {};
          for (let n of e) {
            let e = !1;
            for (let r of t) {
              let t = r(n);
              t &&
                ((e = !0),
                u.some(({ id: e }) => e === n.id) || (u = [...u, t.chain]),
                (l[n.id] = [...(l[n.id] || []), ...t.rpcUrls.http]),
                t.rpcUrls.webSocket &&
                  (c[n.id] = [...(c[n.id] || []), ...t.rpcUrls.webSocket]));
            }
            if (!e)
              throw Error(`Could not find valid provider configuration for chain "${n.name}".

You may need to add \`jsonRpcProvider\` to \`configureChains\` with the chain's RPC URLs.
Read more: https://wagmi.sh/core/providers/jsonRpc`);
          }
          return {
            chains: u,
            publicClient: ({ chainId: t }) => {
              let c = u.find((e) => e.id === t) ?? e[0],
                d = l[c.id];
              if (!d || !d[0])
                throw Error(`No providers configured for chain "${c.id}"`);
              let f = (0, h.v)({
                batch: n,
                chain: c,
                transport: b(
                  d.map((e) => (0, v.d)(e, { timeout: s })),
                  { rank: i, retryCount: a, retryDelay: o }
                ),
                pollingInterval: r,
              });
              return Object.assign(f, { chains: u });
            },
            webSocketPublicClient: ({ chainId: t }) => {
              let l = u.find((e) => e.id === t) ?? e[0],
                d = c[l.id];
              if (!d || !d[0]) return;
              let f = (0, h.v)({
                batch: n,
                chain: l,
                transport: b(
                  d.map((e) =>
                    (function (e, t = {}) {
                      let {
                        key: n = "webSocket",
                        name: r = "WebSocket JSON-RPC",
                        retryDelay: i,
                      } = t;
                      return ({ chain: a, retryCount: o, timeout: s }) => {
                        let u = t.retryCount ?? o,
                          l = s ?? t.timeout ?? 1e4,
                          c = e || a?.rpcUrls.default.webSocket?.[0];
                        if (!c) throw new E.I();
                        return (0, g.q)(
                          {
                            key: n,
                            name: r,
                            async request({ method: e, params: t }) {
                              let n = { method: e, params: t },
                                r = await (0, x.hb)(c),
                                { error: i, result: a } =
                                  await x.f4.webSocketAsync(r, {
                                    body: n,
                                    timeout: l,
                                  });
                              if (i)
                                throw new w.bs({ body: n, error: i, url: c });
                              return a;
                            },
                            retryCount: u,
                            retryDelay: i,
                            timeout: l,
                            type: "webSocket",
                          },
                          {
                            getSocket: () => (0, x.hb)(c),
                            async subscribe({
                              params: e,
                              onData: t,
                              onError: n,
                            }) {
                              let r = await (0, x.hb)(c),
                                { result: i } = await new Promise((i, a) =>
                                  x.f4.webSocket(r, {
                                    body: {
                                      method: "eth_subscribe",
                                      params: e,
                                    },
                                    onResponse(e) {
                                      if (e.error) {
                                        a(e.error), n?.(e.error);
                                        return;
                                      }
                                      if ("number" == typeof e.id) {
                                        i(e);
                                        return;
                                      }
                                      "eth_subscription" === e.method &&
                                        t(e.params);
                                    },
                                  })
                                );
                              return {
                                subscriptionId: i,
                                unsubscribe: async () =>
                                  new Promise((e) =>
                                    x.f4.webSocket(r, {
                                      body: {
                                        method: "eth_unsubscribe",
                                        params: [i],
                                      },
                                      onResponse: e,
                                    })
                                  ),
                              };
                            },
                          }
                        );
                      };
                    })(e, { timeout: s })
                  ),
                  { rank: i, retryCount: a, retryDelay: o }
                ),
                pollingInterval: r,
              });
              return Object.assign(f, { chains: u });
            },
          };
        }
        var L = class extends Error {
            constructor({ chainId: e, connectorId: t }) {
              super(
                `Chain "${e}" not configured${
                  t ? ` for connector "${t}"` : ""
                }.`
              ),
                (this.name = "ChainNotConfigured");
            }
          },
          U = class extends Error {
            constructor() {
              super(...arguments),
                (this.name = "ConnectorAlreadyConnectedError"),
                (this.message = "Connector already connected");
            }
          },
          $ = class extends Error {
            constructor() {
              super(...arguments),
                (this.name = "ConfigChainsNotFound"),
                (this.message =
                  "No chains were found on the wagmi config. Some functions that require a chain may not work.");
            }
          },
          q = class extends Error {
            constructor({ connector: e }) {
              super(
                `"${e.name}" does not support programmatic chain switching.`
              ),
                (this.name = "SwitchChainNotSupportedError");
            }
          },
          H = (e, { find: t, replace: n }) =>
            e && t(e)
              ? n(e)
              : "object" != typeof e
              ? e
              : Array.isArray(e)
              ? e.map((e) => H(e, { find: t, replace: n }))
              : e instanceof Object
              ? Object.entries(e).reduce(
                  (e, [r, i]) => ({ ...e, [r]: H(i, { find: t, replace: n }) }),
                  {}
                )
              : e;
        function z(e) {
          let t = JSON.parse(e),
            n = H(t, {
              find: (e) => "string" == typeof e && e.startsWith("#bigint."),
              replace: (e) => BigInt(e.replace("#bigint.", "")),
            });
          return n;
        }
        function G(e) {
          return "number" == typeof e ? e : "wei" === e ? 0 : Math.abs(_.Bd[e]);
        }
        function W(e, t) {
          return e.slice(0, t).join(".") || ".";
        }
        function V(e, t) {
          let { length: n } = e;
          for (let r = 0; r < n; ++r) if (e[r] === t) return r + 1;
          return 0;
        }
        function K(e, t, n, r) {
          return JSON.stringify(
            e,
            (function (e, t) {
              let n = "function" == typeof e,
                r = "function" == typeof t,
                i = [],
                a = [];
              return function (o, s) {
                if ("object" == typeof s) {
                  if (i.length) {
                    let e = V(i, this);
                    0 === e ? (i[i.length] = this) : (i.splice(e), a.splice(e)),
                      (a[a.length] = o);
                    let n = V(i, s);
                    if (0 !== n)
                      return r
                        ? t.call(this, o, s, W(a, n))
                        : `[ref=${W(a, n)}]`;
                  } else (i[0] = s), (a[0] = o);
                }
                return n ? e.call(this, o, s) : s;
              };
            })((e, n) => {
              let r = "bigint" == typeof n ? `#bigint.${n.toString()}` : n;
              return t?.(e, r) || r;
            }, r),
            n ?? void 0
          );
        }
        var Z = {
          getItem: (e) => "",
          setItem: (e, t) => null,
          removeItem: (e) => null,
        };
        function J({
          deserialize: e = z,
          key: t = "wagmi",
          serialize: n = K,
          storage: r,
        }) {
          return {
            ...r,
            getItem: (n, i = null) => {
              let a = r.getItem(`${t}.${n}`);
              try {
                return a ? e(a) : i;
              } catch (e) {
                return console.warn(e), i;
              }
            },
            setItem: (e, i) => {
              if (null === i) r.removeItem(`${t}.${e}`);
              else
                try {
                  r.setItem(`${t}.${e}`, n(i));
                } catch (e) {
                  console.error(e);
                }
            },
            removeItem: (e) => r.removeItem(`${t}.${e}`),
          };
        }
        var Y = "store",
          X = class {
            constructor({
              autoConnect: e = !1,
              connectors: t = [new u._()],
              publicClient: n,
              storage: s = J({
                storage: "undefined" != typeof window ? window.localStorage : Z,
              }),
              logger: l = { warn: console.warn },
              webSocketPublicClient: c,
            }) {
              let h;
              d(this, a),
                (this.publicClients = new Map()),
                (this.webSocketPublicClients = new Map()),
                d(this, r, void 0),
                d(this, i, void 0),
                (this.args = {
                  autoConnect: e,
                  connectors: t,
                  logger: l,
                  publicClient: n,
                  storage: s,
                  webSocketPublicClient: c,
                });
              let m = "disconnected";
              if (e)
                try {
                  let e = s.getItem(Y),
                    t = e?.state?.data;
                  (m = t?.account ? "reconnecting" : "connecting"),
                    (h = t?.chain?.id);
                } catch (e) {}
              let y = "function" == typeof t ? t() : t;
              y.forEach((e) => e.setStorage(s)),
                (this.store = (0, A.M)(
                  T(
                    I(
                      () => ({
                        connectors: y,
                        publicClient: this.getPublicClient({ chainId: h }),
                        status: m,
                        webSocketPublicClient: this.getWebSocketPublicClient({
                          chainId: h,
                        }),
                      }),
                      {
                        name: Y,
                        storage: s,
                        partialize: (t) => ({
                          ...(e && {
                            data: {
                              account: t?.data?.account,
                              chain: t?.data?.chain,
                            },
                          }),
                          chains: t?.chains,
                        }),
                        version: 2,
                      }
                    )
                  )
                )),
                (this.storage = s),
                f(this, i, s?.getItem("wallet")),
                p(this, a, o).call(this),
                e &&
                  "undefined" != typeof window &&
                  setTimeout(async () => await this.autoConnect(), 0);
            }
            get chains() {
              return this.store.getState().chains;
            }
            get connectors() {
              return this.store.getState().connectors;
            }
            get connector() {
              return this.store.getState().connector;
            }
            get data() {
              return this.store.getState().data;
            }
            get error() {
              return this.store.getState().error;
            }
            get lastUsedChainId() {
              return this.data?.chain?.id;
            }
            get publicClient() {
              return this.store.getState().publicClient;
            }
            get status() {
              return this.store.getState().status;
            }
            get subscribe() {
              return this.store.subscribe;
            }
            get webSocketPublicClient() {
              return this.store.getState().webSocketPublicClient;
            }
            setState(e) {
              let t = "function" == typeof e ? e(this.store.getState()) : e;
              this.store.setState(t, !0);
            }
            clearState() {
              this.setState((e) => ({
                ...e,
                chains: void 0,
                connector: void 0,
                data: void 0,
                error: void 0,
                status: "disconnected",
              }));
            }
            async destroy() {
              this.connector && (await this.connector.disconnect?.()),
                f(this, r, !1),
                this.clearState(),
                this.store.destroy();
            }
            async autoConnect() {
              if (c(this, r)) return;
              f(this, r, !0),
                this.setState((e) => ({
                  ...e,
                  status: e.data?.account ? "reconnecting" : "connecting",
                }));
              let e = c(this, i)
                  ? [...this.connectors].sort((e) =>
                      e.id === c(this, i) ? -1 : 1
                    )
                  : this.connectors,
                t = !1;
              for (let n of e) {
                if (!n.ready || !n.isAuthorized) continue;
                let e = await n.isAuthorized();
                if (!e) continue;
                let r = await n.connect();
                this.setState((e) => ({
                  ...e,
                  connector: n,
                  chains: n?.chains,
                  data: r,
                  status: "connected",
                })),
                  (t = !0);
                break;
              }
              return (
                t ||
                  this.setState((e) => ({
                    ...e,
                    data: void 0,
                    status: "disconnected",
                  })),
                f(this, r, !1),
                this.data
              );
            }
            setConnectors(e) {
              this.args = { ...this.args, connectors: e };
              let t = "function" == typeof e ? e() : e;
              t.forEach((e) => e.setStorage(this.args.storage)),
                this.setState((e) => ({ ...e, connectors: t }));
            }
            getPublicClient({ chainId: e } = {}) {
              let t = this.publicClients.get(-1);
              if (
                (t && t?.chain.id === e) ||
                (t = this.publicClients.get(e ?? -1))
              )
                return t;
              let { publicClient: n } = this.args;
              return (
                (t = "function" == typeof n ? n({ chainId: e }) : n),
                this.publicClients.set(e ?? -1, t),
                t
              );
            }
            setPublicClient(e) {
              let t = this.data?.chain?.id;
              (this.args = { ...this.args, publicClient: e }),
                this.publicClients.clear(),
                this.setState((e) => ({
                  ...e,
                  publicClient: this.getPublicClient({ chainId: t }),
                }));
            }
            getWebSocketPublicClient({ chainId: e } = {}) {
              let t = this.webSocketPublicClients.get(-1);
              if (
                (t && t?.chain.id === e) ||
                (t = this.webSocketPublicClients.get(e ?? -1))
              )
                return t;
              let { webSocketPublicClient: n } = this.args;
              return (
                (t = "function" == typeof n ? n({ chainId: e }) : n) &&
                  this.webSocketPublicClients.set(e ?? -1, t),
                t
              );
            }
            setWebSocketPublicClient(e) {
              let t = this.data?.chain?.id;
              (this.args = { ...this.args, webSocketPublicClient: e }),
                this.webSocketPublicClients.clear(),
                this.setState((e) => ({
                  ...e,
                  webSocketPublicClient: this.getWebSocketPublicClient({
                    chainId: t,
                  }),
                }));
            }
            setLastUsedConnector(e = null) {
              this.storage?.setItem("wallet", e);
            }
          };
        function Q(e) {
          let t = new X(e);
          return (s = t), t;
        }
        function ee() {
          if (!s)
            throw Error(
              "No wagmi config found. Ensure you have set up a config: https://wagmi.sh/react/config"
            );
          return s;
        }
        async function et({ chainId: e, connector: t }) {
          let n = ee(),
            r = n.connector;
          if (r && t.id === r.id) throw new U();
          try {
            n.setState((e) => ({ ...e, status: "connecting" }));
            let r = await t.connect({ chainId: e });
            return (
              n.setLastUsedConnector(t.id),
              n.setState((e) => ({
                ...e,
                connector: t,
                chains: t?.chains,
                data: r,
                status: "connected",
              })),
              n.storage.setItem("connected", !0),
              { ...r, connector: t }
            );
          } catch (e) {
            throw (
              (n.setState((e) => ({
                ...e,
                status: e.connector ? "connected" : "disconnected",
              })),
              e)
            );
          }
        }
        async function en() {
          let e = ee();
          e.connector && (await e.connector.disconnect()),
            e.clearState(),
            e.storage.removeItem("connected");
        }
        (r = new WeakMap()),
          (i = new WeakMap()),
          (a = new WeakSet()),
          (o = function () {
            let e = (e) => {
                this.setState((t) => ({ ...t, data: { ...t.data, ...e } }));
              },
              t = () => {
                this.clearState();
              },
              n = (e) => {
                this.setState((t) => ({ ...t, error: e }));
              };
            this.store.subscribe(
              ({ connector: e }) => e,
              (r, i) => {
                i?.off?.("change", e),
                  i?.off?.("disconnect", t),
                  i?.off?.("error", n),
                  r &&
                    (r.on?.("change", e),
                    r.on?.("disconnect", t),
                    r.on?.("error", n));
              }
            );
            let { publicClient: r, webSocketPublicClient: i } = this.args;
            ("function" == typeof r || "function" == typeof i) &&
              this.store.subscribe(
                ({ data: e }) => e?.chain?.id,
                (e) => {
                  this.setState((t) => ({
                    ...t,
                    publicClient: this.getPublicClient({ chainId: e }),
                    webSocketPublicClient: this.getWebSocketPublicClient({
                      chainId: e,
                    }),
                  }));
                }
              );
          });
        var er = [
            {
              type: "event",
              name: "Approval",
              inputs: [
                { indexed: !0, name: "owner", type: "address" },
                { indexed: !0, name: "spender", type: "address" },
                { indexed: !1, name: "value", type: "uint256" },
              ],
            },
            {
              type: "event",
              name: "Transfer",
              inputs: [
                { indexed: !0, name: "from", type: "address" },
                { indexed: !0, name: "to", type: "address" },
                { indexed: !1, name: "value", type: "uint256" },
              ],
            },
            {
              type: "function",
              name: "allowance",
              stateMutability: "view",
              inputs: [
                { name: "owner", type: "address" },
                { name: "spender", type: "address" },
              ],
              outputs: [{ name: "", type: "uint256" }],
            },
            {
              type: "function",
              name: "approve",
              stateMutability: "nonpayable",
              inputs: [
                { name: "spender", type: "address" },
                { name: "amount", type: "uint256" },
              ],
              outputs: [{ name: "", type: "bool" }],
            },
            {
              type: "function",
              name: "balanceOf",
              stateMutability: "view",
              inputs: [{ name: "account", type: "address" }],
              outputs: [{ name: "", type: "uint256" }],
            },
            {
              type: "function",
              name: "decimals",
              stateMutability: "view",
              inputs: [],
              outputs: [{ name: "", type: "uint8" }],
            },
            {
              type: "function",
              name: "name",
              stateMutability: "view",
              inputs: [],
              outputs: [{ name: "", type: "string" }],
            },
            {
              type: "function",
              name: "symbol",
              stateMutability: "view",
              inputs: [],
              outputs: [{ name: "", type: "string" }],
            },
            {
              type: "function",
              name: "totalSupply",
              stateMutability: "view",
              inputs: [],
              outputs: [{ name: "", type: "uint256" }],
            },
            {
              type: "function",
              name: "transfer",
              stateMutability: "nonpayable",
              inputs: [
                { name: "recipient", type: "address" },
                { name: "amount", type: "uint256" },
              ],
              outputs: [{ name: "", type: "bool" }],
            },
            {
              type: "function",
              name: "transferFrom",
              stateMutability: "nonpayable",
              inputs: [
                { name: "sender", type: "address" },
                { name: "recipient", type: "address" },
                { name: "amount", type: "uint256" },
              ],
              outputs: [{ name: "", type: "bool" }],
            },
          ],
          ei = [
            {
              type: "event",
              name: "Approval",
              inputs: [
                { indexed: !0, name: "owner", type: "address" },
                { indexed: !0, name: "spender", type: "address" },
                { indexed: !1, name: "value", type: "uint256" },
              ],
            },
            {
              type: "event",
              name: "Transfer",
              inputs: [
                { indexed: !0, name: "from", type: "address" },
                { indexed: !0, name: "to", type: "address" },
                { indexed: !1, name: "value", type: "uint256" },
              ],
            },
            {
              type: "function",
              name: "allowance",
              stateMutability: "view",
              inputs: [
                { name: "owner", type: "address" },
                { name: "spender", type: "address" },
              ],
              outputs: [{ name: "", type: "uint256" }],
            },
            {
              type: "function",
              name: "approve",
              stateMutability: "nonpayable",
              inputs: [
                { name: "spender", type: "address" },
                { name: "amount", type: "uint256" },
              ],
              outputs: [{ name: "", type: "bool" }],
            },
            {
              type: "function",
              name: "balanceOf",
              stateMutability: "view",
              inputs: [{ name: "account", type: "address" }],
              outputs: [{ name: "", type: "uint256" }],
            },
            {
              type: "function",
              name: "decimals",
              stateMutability: "view",
              inputs: [],
              outputs: [{ name: "", type: "uint8" }],
            },
            {
              type: "function",
              name: "name",
              stateMutability: "view",
              inputs: [],
              outputs: [{ name: "", type: "bytes32" }],
            },
            {
              type: "function",
              name: "symbol",
              stateMutability: "view",
              inputs: [],
              outputs: [{ name: "", type: "bytes32" }],
            },
            {
              type: "function",
              name: "totalSupply",
              stateMutability: "view",
              inputs: [],
              outputs: [{ name: "", type: "uint256" }],
            },
            {
              type: "function",
              name: "transfer",
              stateMutability: "nonpayable",
              inputs: [
                { name: "recipient", type: "address" },
                { name: "amount", type: "uint256" },
              ],
              outputs: [{ name: "", type: "bool" }],
            },
            {
              type: "function",
              name: "transferFrom",
              stateMutability: "nonpayable",
              inputs: [
                { name: "sender", type: "address" },
                { name: "recipient", type: "address" },
                { name: "amount", type: "uint256" },
              ],
              outputs: [{ name: "", type: "bool" }],
            },
          ];
        function ea({ chainId: e } = {}) {
          let t = ee();
          return (e && t.getPublicClient({ chainId: e })) || t.publicClient;
        }
        async function eo({ chainId: e } = {}) {
          let t = ee(),
            n = (await t.connector?.getWalletClient?.({ chainId: e })) || null;
          return n;
        }
        function es({ chainId: e } = {}) {
          let t = ee();
          return (
            (e && t.getWebSocketPublicClient({ chainId: e })) ||
            t.webSocketPublicClient
          );
        }
        function eu(e, t) {
          let n = ee(),
            r = async () => t(ea(e)),
            i = n.subscribe(({ publicClient: e }) => e, r);
          return i;
        }
        function el({ chainId: e }, t) {
          let n = ee(),
            r = async ({ chainId: n }) => {
              if (e && n && e !== n) return;
              let r = await eo({ chainId: e });
              return ee().connector ? t(r) : t(null);
            },
            i = n.subscribe(
              ({ data: e, connector: t }) => ({
                account: e?.account,
                chainId: e?.chain?.id,
                connector: t,
              }),
              r,
              { equalityFn: N.X }
            );
          return i;
        }
        function ec(e, t) {
          let n = ee(),
            r = async () => t(es(e)),
            i = n.subscribe(({ webSocketPublicClient: e }) => e, r);
          return i;
        }
        async function ed({
          chainId: e,
          contracts: t,
          blockNumber: n,
          blockTag: r,
          ...i
        }) {
          let a = ea({ chainId: e });
          if (!a.chains) throw new $();
          if (e && a.chain.id !== e) throw new L({ chainId: e });
          return a.multicall({
            allowFailure: i.allowFailure ?? !0,
            blockNumber: n,
            blockTag: r,
            contracts: t,
          });
        }
        async function ef({
          address: e,
          account: t,
          chainId: n,
          abi: r,
          args: i,
          functionName: a,
          blockNumber: o,
          blockTag: s,
        }) {
          let u = ea({ chainId: n });
          return u.readContract({
            abi: r,
            address: e,
            account: t,
            functionName: a,
            args: i,
            blockNumber: o,
            blockTag: s,
          });
        }
        async function ep({ contracts: e, blockNumber: t, blockTag: n, ...r }) {
          let { allowFailure: i = !0 } = r;
          try {
            let r = ea(),
              a = e.reduce((e, t, n) => {
                let i = t.chainId ?? r.chain.id;
                return {
                  ...e,
                  [i]: [...(e[i] || []), { contract: t, index: n }],
                };
              }, {}),
              o = (
                await Promise.all(
                  Object.entries(a).map(([e, r]) =>
                    ed({
                      allowFailure: i,
                      chainId: parseInt(e),
                      contracts: r.map(({ contract: e }) => e),
                      blockNumber: t,
                      blockTag: n,
                    })
                  )
                )
              ).flat(),
              s = Object.values(a).flatMap((e) => e.map(({ index: e }) => e));
            return o.reduce((e, t, n) => (e && (e[s[n]] = t), e), []);
          } catch (a) {
            if (a instanceof j.uq) throw a;
            let r = () =>
              e.map((e) => ef({ ...e, blockNumber: t, blockTag: n }));
            if (i)
              return (await Promise.allSettled(r())).map((e) =>
                "fulfilled" === e.status
                  ? { result: e.value, status: "success" }
                  : { error: e.reason, result: void 0, status: "failure" }
              );
            return await Promise.all(r());
          }
        }
        async function eh({
          address: e,
          chainId: t,
          formatUnits: n,
          token: r,
        }) {
          let i = ee(),
            a = ea({ chainId: t });
          if (r) {
            let i = async ({ abi: i }) => {
              let a = { abi: i, address: r, chainId: t },
                [o, s, u] = await ep({
                  allowFailure: !1,
                  contracts: [
                    { ...a, functionName: "balanceOf", args: [e] },
                    { ...a, functionName: "decimals" },
                    { ...a, functionName: "symbol" },
                  ],
                });
              return {
                decimals: s,
                formatted: (0, k.b)(o ?? "0", G(n ?? s)),
                symbol: u,
                value: o,
              };
            };
            try {
              return await i({ abi: er });
            } catch (e) {
              if (e instanceof j.uq) {
                let { symbol: e, ...t } = await i({ abi: ei });
                return {
                  symbol: (0, B.rR)((0, M.f)(e, { dir: "right" })),
                  ...t,
                };
              }
              throw e;
            }
          }
          let o = [...(i.publicClient.chains || []), ...(i.chains ?? [])],
            s = await a.getBalance({ address: e }),
            u = o.find((e) => e.id === a.chain.id);
          return {
            decimals: u?.nativeCurrency.decimals ?? 18,
            formatted: (0, k.b)(s ?? "0", G(n ?? 18)),
            symbol: u?.nativeCurrency.symbol ?? "ETH",
            value: s,
          };
        }
        function em() {
          let { data: e, connector: t, status: n } = ee();
          switch (n) {
            case "connected":
              return {
                address: e?.account,
                connector: t,
                isConnected: !0,
                isConnecting: !1,
                isDisconnected: !1,
                isReconnecting: !1,
                status: n,
              };
            case "reconnecting":
              return {
                address: e?.account,
                connector: t,
                isConnected: !!e?.account,
                isConnecting: !1,
                isDisconnected: !1,
                isReconnecting: !0,
                status: n,
              };
            case "connecting":
              return {
                address: e?.account,
                connector: t,
                isConnected: !1,
                isConnecting: !0,
                isDisconnected: !1,
                isReconnecting: !1,
                status: n,
              };
            case "disconnected":
              return {
                address: void 0,
                connector: void 0,
                isConnected: !1,
                isConnecting: !1,
                isDisconnected: !0,
                isReconnecting: !1,
                status: n,
              };
          }
        }
        function ey() {
          let e = ee(),
            t = e.data?.chain?.id,
            n = e.chains ?? [],
            r = [...(e.publicClient?.chains || []), ...n].find(
              (e) => e.id === t
            ) ?? {
              id: t,
              name: `Chain ${t}`,
              network: `${t}`,
              nativeCurrency: { name: "Ether", decimals: 18, symbol: "ETH" },
              rpcUrls: { default: { http: [""] }, public: { http: [""] } },
            };
          return {
            chain: t ? { ...r, ...e.data?.chain, id: t } : void 0,
            chains: n,
          };
        }
        async function eg(e) {
          let t = await eo();
          if (!t) throw new C.N();
          return await t.signMessage({ message: e.message });
        }
        async function eb({ chainId: e }) {
          let { connector: t } = ee();
          if (!t) throw new C.N();
          if (!t.switchChain) throw new q({ connector: t });
          return t.switchChain(e);
        }
        function ev(e, { selector: t = (e) => e } = {}) {
          let n = ee(),
            r = n.subscribe(
              ({ data: e, connector: n, status: r }) =>
                t({ address: e?.account, connector: n, status: r }),
              () => e(em()),
              { equalityFn: N.X }
            );
          return r;
        }
        function ew(e, { selector: t = (e) => e } = {}) {
          let n = ee(),
            r = n.subscribe(
              ({ data: e, chains: n }) =>
                t({ chainId: e?.chain?.id, chains: n }),
              () => e(ey()),
              { equalityFn: N.X }
            );
          return r;
        }
        async function eE({ name: e, chainId: t }) {
          let { normalize: r } = await n.e(6512).then(n.bind(n, 46512)),
            i = ea({ chainId: t }),
            a = await i.getEnsAvatar({ name: r(e) });
          return a;
        }
        async function ex({ address: e, chainId: t }) {
          let n = ea({ chainId: t });
          return n.getEnsName({ address: (0, D.K)(e) });
        }
        async function eC({ chainId: e } = {}) {
          let t = ea({ chainId: e }),
            n = await t.getBlockNumber();
          return n;
        }
        async function e_({ chainId: e, formatUnits: t = "gwei" } = {}) {
          let n = ea({ chainId: e }),
            r = await n.getBlock(),
            i = null;
          try {
            i = await n.getGasPrice();
          } catch {}
          let a = null,
            o = null,
            s = null;
          r?.baseFeePerGas &&
            ((a = r.baseFeePerGas),
            (s = (function (e, t = "wei") {
              return (0, R.v)("1", _.Zn[t]);
            })(0)),
            (o = 2n * r.baseFeePerGas + s));
          let u = G(t),
            l = {
              gasPrice: i ? (0, k.b)(i, u) : null,
              maxFeePerGas: o ? (0, k.b)(o, u) : null,
              maxPriorityFeePerGas: s ? (0, k.b)(s, u) : null,
            };
          return {
            lastBaseFeePerGas: a,
            gasPrice: i,
            maxFeePerGas: o,
            maxPriorityFeePerGas: s,
            formatted: l,
          };
        }
      },
      87066: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return ty;
          },
        });
        var r,
          i,
          a,
          o,
          s,
          u,
          l,
          c,
          d = {};
        function f(e, t) {
          return function () {
            return e.apply(t, arguments);
          };
        }
        n.r(d),
          n.d(d, {
            hasBrowserEnv: function () {
              return eg;
            },
            hasStandardBrowserEnv: function () {
              return ev;
            },
            hasStandardBrowserWebWorkerEnv: function () {
              return ew;
            },
            navigator: function () {
              return eb;
            },
            origin: function () {
              return eE;
            },
          });
        var p = n(34155);
        let { toString: h } = Object.prototype,
          { getPrototypeOf: m } = Object,
          y =
            ((s = Object.create(null)),
            (e) => {
              let t = h.call(e);
              return s[t] || (s[t] = t.slice(8, -1).toLowerCase());
            }),
          g = (e) => ((e = e.toLowerCase()), (t) => y(t) === e),
          b = (e) => (t) => typeof t === e,
          { isArray: v } = Array,
          w = b("undefined"),
          E = g("ArrayBuffer"),
          x = b("string"),
          C = b("function"),
          _ = b("number"),
          T = (e) => null !== e && "object" == typeof e,
          S = (e) => {
            if ("object" !== y(e)) return !1;
            let t = m(e);
            return (
              (null === t ||
                t === Object.prototype ||
                null === Object.getPrototypeOf(t)) &&
              !(Symbol.toStringTag in e) &&
              !(Symbol.iterator in e)
            );
          },
          P = g("Date"),
          O = g("File"),
          I = g("Blob"),
          A = g("FileList"),
          k = g("URLSearchParams"),
          [j, B, M, N] = [
            "ReadableStream",
            "Request",
            "Response",
            "Headers",
          ].map(g);
        function D(e, t, { allOwnKeys: n = !1 } = {}) {
          let r, i;
          if (null != e) {
            if (("object" != typeof e && (e = [e]), v(e)))
              for (r = 0, i = e.length; r < i; r++) t.call(null, e[r], r, e);
            else {
              let i;
              let a = n ? Object.getOwnPropertyNames(e) : Object.keys(e),
                o = a.length;
              for (r = 0; r < o; r++) (i = a[r]), t.call(null, e[i], i, e);
            }
          }
        }
        function R(e, t) {
          let n;
          t = t.toLowerCase();
          let r = Object.keys(e),
            i = r.length;
          for (; i-- > 0; ) if (t === (n = r[i]).toLowerCase()) return n;
          return null;
        }
        let F =
            "undefined" != typeof globalThis
              ? globalThis
              : "undefined" != typeof self
              ? self
              : "undefined" != typeof window
              ? window
              : global,
          L = (e) => !w(e) && e !== F,
          U =
            ((u = "undefined" != typeof Uint8Array && m(Uint8Array)),
            (e) => u && e instanceof u),
          $ = g("HTMLFormElement"),
          q = (
            ({ hasOwnProperty: e }) =>
            (t, n) =>
              e.call(t, n)
          )(Object.prototype),
          H = g("RegExp"),
          z = (e, t) => {
            let n = Object.getOwnPropertyDescriptors(e),
              r = {};
            D(n, (n, i) => {
              let a;
              !1 !== (a = t(n, i, e)) && (r[i] = a || n);
            }),
              Object.defineProperties(e, r);
          },
          G = "abcdefghijklmnopqrstuvwxyz",
          W = "0123456789",
          V = { DIGIT: W, ALPHA: G, ALPHA_DIGIT: G + G.toUpperCase() + W },
          K = g("AsyncFunction"),
          Z =
            ((r = "function" == typeof setImmediate),
            (i = C(F.postMessage)),
            r
              ? setImmediate
              : i
              ? ((a = `axios@${Math.random()}`),
                (o = []),
                F.addEventListener(
                  "message",
                  ({ source: e, data: t }) => {
                    e === F && t === a && o.length && o.shift()();
                  },
                  !1
                ),
                (e) => {
                  o.push(e), F.postMessage(a, "*");
                })
              : (e) => setTimeout(e)),
          J =
            "undefined" != typeof queueMicrotask
              ? queueMicrotask.bind(F)
              : (void 0 !== p && p.nextTick) || Z;
        var Y = {
          isArray: v,
          isArrayBuffer: E,
          isBuffer: function (e) {
            return (
              null !== e &&
              !w(e) &&
              null !== e.constructor &&
              !w(e.constructor) &&
              C(e.constructor.isBuffer) &&
              e.constructor.isBuffer(e)
            );
          },
          isFormData: (e) => {
            let t;
            return (
              e &&
              (("function" == typeof FormData && e instanceof FormData) ||
                (C(e.append) &&
                  ("formdata" === (t = y(e)) ||
                    ("object" === t &&
                      C(e.toString) &&
                      "[object FormData]" === e.toString()))))
            );
          },
          isArrayBufferView: function (e) {
            return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView
              ? ArrayBuffer.isView(e)
              : e && e.buffer && E(e.buffer);
          },
          isString: x,
          isNumber: _,
          isBoolean: (e) => !0 === e || !1 === e,
          isObject: T,
          isPlainObject: S,
          isReadableStream: j,
          isRequest: B,
          isResponse: M,
          isHeaders: N,
          isUndefined: w,
          isDate: P,
          isFile: O,
          isBlob: I,
          isRegExp: H,
          isFunction: C,
          isStream: (e) => T(e) && C(e.pipe),
          isURLSearchParams: k,
          isTypedArray: U,
          isFileList: A,
          forEach: D,
          merge: function e() {
            let { caseless: t } = (L(this) && this) || {},
              n = {},
              r = (r, i) => {
                let a = (t && R(n, i)) || i;
                S(n[a]) && S(r)
                  ? (n[a] = e(n[a], r))
                  : S(r)
                  ? (n[a] = e({}, r))
                  : v(r)
                  ? (n[a] = r.slice())
                  : (n[a] = r);
              };
            for (let e = 0, t = arguments.length; e < t; e++)
              arguments[e] && D(arguments[e], r);
            return n;
          },
          extend: (e, t, n, { allOwnKeys: r } = {}) => (
            D(
              t,
              (t, r) => {
                n && C(t) ? (e[r] = f(t, n)) : (e[r] = t);
              },
              { allOwnKeys: r }
            ),
            e
          ),
          trim: (e) =>
            e.trim
              ? e.trim()
              : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ""),
          stripBOM: (e) => (65279 === e.charCodeAt(0) && (e = e.slice(1)), e),
          inherits: (e, t, n, r) => {
            (e.prototype = Object.create(t.prototype, r)),
              (e.prototype.constructor = e),
              Object.defineProperty(e, "super", { value: t.prototype }),
              n && Object.assign(e.prototype, n);
          },
          toFlatObject: (e, t, n, r) => {
            let i, a, o;
            let s = {};
            if (((t = t || {}), null == e)) return t;
            do {
              for (a = (i = Object.getOwnPropertyNames(e)).length; a-- > 0; )
                (o = i[a]),
                  (!r || r(o, e, t)) && !s[o] && ((t[o] = e[o]), (s[o] = !0));
              e = !1 !== n && m(e);
            } while (e && (!n || n(e, t)) && e !== Object.prototype);
            return t;
          },
          kindOf: y,
          kindOfTest: g,
          endsWith: (e, t, n) => {
            (e = String(e)),
              (void 0 === n || n > e.length) && (n = e.length),
              (n -= t.length);
            let r = e.indexOf(t, n);
            return -1 !== r && r === n;
          },
          toArray: (e) => {
            if (!e) return null;
            if (v(e)) return e;
            let t = e.length;
            if (!_(t)) return null;
            let n = Array(t);
            for (; t-- > 0; ) n[t] = e[t];
            return n;
          },
          forEachEntry: (e, t) => {
            let n;
            let r = e && e[Symbol.iterator],
              i = r.call(e);
            for (; (n = i.next()) && !n.done; ) {
              let r = n.value;
              t.call(e, r[0], r[1]);
            }
          },
          matchAll: (e, t) => {
            let n;
            let r = [];
            for (; null !== (n = e.exec(t)); ) r.push(n);
            return r;
          },
          isHTMLForm: $,
          hasOwnProperty: q,
          hasOwnProp: q,
          reduceDescriptors: z,
          freezeMethods: (e) => {
            z(e, (t, n) => {
              if (C(e) && -1 !== ["arguments", "caller", "callee"].indexOf(n))
                return !1;
              let r = e[n];
              if (C(r)) {
                if (((t.enumerable = !1), "writable" in t)) {
                  t.writable = !1;
                  return;
                }
                t.set ||
                  (t.set = () => {
                    throw Error("Can not rewrite read-only method '" + n + "'");
                  });
              }
            });
          },
          toObjectSet: (e, t) => {
            let n = {};
            return (
              ((e) => {
                e.forEach((e) => {
                  n[e] = !0;
                });
              })(v(e) ? e : String(e).split(t)),
              n
            );
          },
          toCamelCase: (e) =>
            e
              .toLowerCase()
              .replace(/[-_\s]([a-z\d])(\w*)/g, function (e, t, n) {
                return t.toUpperCase() + n;
              }),
          noop: () => {},
          toFiniteNumber: (e, t) =>
            null != e && Number.isFinite((e = +e)) ? e : t,
          findKey: R,
          global: F,
          isContextDefined: L,
          ALPHABET: V,
          generateString: (e = 16, t = V.ALPHA_DIGIT) => {
            let n = "",
              { length: r } = t;
            for (; e--; ) n += t[(Math.random() * r) | 0];
            return n;
          },
          isSpecCompliantForm: function (e) {
            return !!(
              e &&
              C(e.append) &&
              "FormData" === e[Symbol.toStringTag] &&
              e[Symbol.iterator]
            );
          },
          toJSONObject: (e) => {
            let t = Array(10),
              n = (e, r) => {
                if (T(e)) {
                  if (t.indexOf(e) >= 0) return;
                  if (!("toJSON" in e)) {
                    t[r] = e;
                    let i = v(e) ? [] : {};
                    return (
                      D(e, (e, t) => {
                        let a = n(e, r + 1);
                        w(a) || (i[t] = a);
                      }),
                      (t[r] = void 0),
                      i
                    );
                  }
                }
                return e;
              };
            return n(e, 0);
          },
          isAsyncFn: K,
          isThenable: (e) => e && (T(e) || C(e)) && C(e.then) && C(e.catch),
          setImmediate: Z,
          asap: J,
        };
        function X(e, t, n, r, i) {
          Error.call(this),
            Error.captureStackTrace
              ? Error.captureStackTrace(this, this.constructor)
              : (this.stack = Error().stack),
            (this.message = e),
            (this.name = "AxiosError"),
            t && (this.code = t),
            n && (this.config = n),
            r && (this.request = r),
            i &&
              ((this.response = i), (this.status = i.status ? i.status : null));
        }
        Y.inherits(X, Error, {
          toJSON: function () {
            return {
              message: this.message,
              name: this.name,
              description: this.description,
              number: this.number,
              fileName: this.fileName,
              lineNumber: this.lineNumber,
              columnNumber: this.columnNumber,
              stack: this.stack,
              config: Y.toJSONObject(this.config),
              code: this.code,
              status: this.status,
            };
          },
        });
        let Q = X.prototype,
          ee = {};
        [
          "ERR_BAD_OPTION_VALUE",
          "ERR_BAD_OPTION",
          "ECONNABORTED",
          "ETIMEDOUT",
          "ERR_NETWORK",
          "ERR_FR_TOO_MANY_REDIRECTS",
          "ERR_DEPRECATED",
          "ERR_BAD_RESPONSE",
          "ERR_BAD_REQUEST",
          "ERR_CANCELED",
          "ERR_NOT_SUPPORT",
          "ERR_INVALID_URL",
        ].forEach((e) => {
          ee[e] = { value: e };
        }),
          Object.defineProperties(X, ee),
          Object.defineProperty(Q, "isAxiosError", { value: !0 }),
          (X.from = (e, t, n, r, i, a) => {
            let o = Object.create(Q);
            return (
              Y.toFlatObject(
                e,
                o,
                function (e) {
                  return e !== Error.prototype;
                },
                (e) => "isAxiosError" !== e
              ),
              X.call(o, e.message, t, n, r, i),
              (o.cause = e),
              (o.name = e.name),
              a && Object.assign(o, a),
              o
            );
          });
        var et = n(48764).Buffer;
        function en(e) {
          return Y.isPlainObject(e) || Y.isArray(e);
        }
        function er(e) {
          return Y.endsWith(e, "[]") ? e.slice(0, -2) : e;
        }
        function ei(e, t, n) {
          return e
            ? e
                .concat(t)
                .map(function (e, t) {
                  return (e = er(e)), !n && t ? "[" + e + "]" : e;
                })
                .join(n ? "." : "")
            : t;
        }
        let ea = Y.toFlatObject(Y, {}, null, function (e) {
          return /^is[A-Z]/.test(e);
        });
        var eo = function (e, t, n) {
          if (!Y.isObject(e)) throw TypeError("target must be an object");
          (t = t || new FormData()),
            (n = Y.toFlatObject(
              n,
              { metaTokens: !0, dots: !1, indexes: !1 },
              !1,
              function (e, t) {
                return !Y.isUndefined(t[e]);
              }
            ));
          let r = n.metaTokens,
            i = n.visitor || c,
            a = n.dots,
            o = n.indexes,
            s = n.Blob || ("undefined" != typeof Blob && Blob),
            u = s && Y.isSpecCompliantForm(t);
          if (!Y.isFunction(i)) throw TypeError("visitor must be a function");
          function l(e) {
            if (null === e) return "";
            if (Y.isDate(e)) return e.toISOString();
            if (!u && Y.isBlob(e))
              throw new X("Blob is not supported. Use a Buffer instead.");
            return Y.isArrayBuffer(e) || Y.isTypedArray(e)
              ? u && "function" == typeof Blob
                ? new Blob([e])
                : et.from(e)
              : e;
          }
          function c(e, n, i) {
            let s = e;
            if (e && !i && "object" == typeof e) {
              if (Y.endsWith(n, "{}"))
                (n = r ? n : n.slice(0, -2)), (e = JSON.stringify(e));
              else {
                var u;
                if (
                  (Y.isArray(e) && ((u = e), Y.isArray(u) && !u.some(en))) ||
                  ((Y.isFileList(e) || Y.endsWith(n, "[]")) &&
                    (s = Y.toArray(e)))
                )
                  return (
                    (n = er(n)),
                    s.forEach(function (e, r) {
                      Y.isUndefined(e) ||
                        null === e ||
                        t.append(
                          !0 === o ? ei([n], r, a) : null === o ? n : n + "[]",
                          l(e)
                        );
                    }),
                    !1
                  );
              }
            }
            return !!en(e) || (t.append(ei(i, n, a), l(e)), !1);
          }
          let d = [],
            f = Object.assign(ea, {
              defaultVisitor: c,
              convertValue: l,
              isVisitable: en,
            });
          if (!Y.isObject(e)) throw TypeError("data must be an object");
          return (
            (function e(n, r) {
              if (!Y.isUndefined(n)) {
                if (-1 !== d.indexOf(n))
                  throw Error("Circular reference detected in " + r.join("."));
                d.push(n),
                  Y.forEach(n, function (n, a) {
                    let o =
                      !(Y.isUndefined(n) || null === n) &&
                      i.call(t, n, Y.isString(a) ? a.trim() : a, r, f);
                    !0 === o && e(n, r ? r.concat(a) : [a]);
                  }),
                  d.pop();
              }
            })(e),
            t
          );
        };
        function es(e) {
          let t = {
            "!": "%21",
            "'": "%27",
            "(": "%28",
            ")": "%29",
            "~": "%7E",
            "%20": "+",
            "%00": "\x00",
          };
          return encodeURIComponent(e).replace(
            /[!'()~]|%20|%00/g,
            function (e) {
              return t[e];
            }
          );
        }
        function eu(e, t) {
          (this._pairs = []), e && eo(e, this, t);
        }
        let el = eu.prototype;
        function ec(e) {
          return encodeURIComponent(e)
            .replace(/%3A/gi, ":")
            .replace(/%24/g, "$")
            .replace(/%2C/gi, ",")
            .replace(/%20/g, "+")
            .replace(/%5B/gi, "[")
            .replace(/%5D/gi, "]");
        }
        function ed(e, t, n) {
          let r;
          if (!t) return e;
          let i = (n && n.encode) || ec,
            a = n && n.serialize;
          if (
            (r = a
              ? a(t, n)
              : Y.isURLSearchParams(t)
              ? t.toString()
              : new eu(t, n).toString(i))
          ) {
            let t = e.indexOf("#");
            -1 !== t && (e = e.slice(0, t)),
              (e += (-1 === e.indexOf("?") ? "?" : "&") + r);
          }
          return e;
        }
        (el.append = function (e, t) {
          this._pairs.push([e, t]);
        }),
          (el.toString = function (e) {
            let t = e
              ? function (t) {
                  return e.call(this, t, es);
                }
              : es;
            return this._pairs
              .map(function (e) {
                return t(e[0]) + "=" + t(e[1]);
              }, "")
              .join("&");
          });
        var ef = class {
            constructor() {
              this.handlers = [];
            }
            use(e, t, n) {
              return (
                this.handlers.push({
                  fulfilled: e,
                  rejected: t,
                  synchronous: !!n && n.synchronous,
                  runWhen: n ? n.runWhen : null,
                }),
                this.handlers.length - 1
              );
            }
            eject(e) {
              this.handlers[e] && (this.handlers[e] = null);
            }
            clear() {
              this.handlers && (this.handlers = []);
            }
            forEach(e) {
              Y.forEach(this.handlers, function (t) {
                null !== t && e(t);
              });
            }
          },
          ep = {
            silentJSONParsing: !0,
            forcedJSONParsing: !0,
            clarifyTimeoutError: !1,
          },
          eh = "undefined" != typeof URLSearchParams ? URLSearchParams : eu,
          em = "undefined" != typeof FormData ? FormData : null,
          ey = "undefined" != typeof Blob ? Blob : null;
        let eg = "undefined" != typeof window && "undefined" != typeof document,
          eb = ("object" == typeof navigator && navigator) || void 0,
          ev =
            eg &&
            (!eb ||
              0 > ["ReactNative", "NativeScript", "NS"].indexOf(eb.product)),
          ew =
            "undefined" != typeof WorkerGlobalScope &&
            self instanceof WorkerGlobalScope &&
            "function" == typeof self.importScripts,
          eE = (eg && window.location.href) || "http://localhost";
        var ex = {
            ...d,
            isBrowser: !0,
            classes: { URLSearchParams: eh, FormData: em, Blob: ey },
            protocols: ["http", "https", "file", "blob", "url", "data"],
          },
          eC = function (e) {
            if (Y.isFormData(e) && Y.isFunction(e.entries)) {
              let t = {};
              return (
                Y.forEachEntry(e, (e, n) => {
                  !(function e(t, n, r, i) {
                    let a = t[i++];
                    if ("__proto__" === a) return !0;
                    let o = Number.isFinite(+a),
                      s = i >= t.length;
                    if (((a = !a && Y.isArray(r) ? r.length : a), s))
                      return (
                        Y.hasOwnProp(r, a) ? (r[a] = [r[a], n]) : (r[a] = n), !o
                      );
                    (r[a] && Y.isObject(r[a])) || (r[a] = []);
                    let u = e(t, n, r[a], i);
                    return (
                      u &&
                        Y.isArray(r[a]) &&
                        (r[a] = (function (e) {
                          let t, n;
                          let r = {},
                            i = Object.keys(e),
                            a = i.length;
                          for (t = 0; t < a; t++) r[(n = i[t])] = e[n];
                          return r;
                        })(r[a])),
                      !o
                    );
                  })(
                    Y.matchAll(/\w+|\[(\w*)]/g, e).map((e) =>
                      "[]" === e[0] ? "" : e[1] || e[0]
                    ),
                    n,
                    t,
                    0
                  );
                }),
                t
              );
            }
            return null;
          };
        let e_ = {
          transitional: ep,
          adapter: ["xhr", "http", "fetch"],
          transformRequest: [
            function (e, t) {
              let n;
              let r = t.getContentType() || "",
                i = r.indexOf("application/json") > -1,
                a = Y.isObject(e);
              a && Y.isHTMLForm(e) && (e = new FormData(e));
              let o = Y.isFormData(e);
              if (o) return i ? JSON.stringify(eC(e)) : e;
              if (
                Y.isArrayBuffer(e) ||
                Y.isBuffer(e) ||
                Y.isStream(e) ||
                Y.isFile(e) ||
                Y.isBlob(e) ||
                Y.isReadableStream(e)
              )
                return e;
              if (Y.isArrayBufferView(e)) return e.buffer;
              if (Y.isURLSearchParams(e))
                return (
                  t.setContentType(
                    "application/x-www-form-urlencoded;charset=utf-8",
                    !1
                  ),
                  e.toString()
                );
              if (a) {
                if (r.indexOf("application/x-www-form-urlencoded") > -1) {
                  var s, u;
                  return ((s = e),
                  (u = this.formSerializer),
                  eo(
                    s,
                    new ex.classes.URLSearchParams(),
                    Object.assign(
                      {
                        visitor: function (e, t, n, r) {
                          return ex.isNode && Y.isBuffer(e)
                            ? (this.append(t, e.toString("base64")), !1)
                            : r.defaultVisitor.apply(this, arguments);
                        },
                      },
                      u
                    )
                  )).toString();
                }
                if (
                  (n = Y.isFileList(e)) ||
                  r.indexOf("multipart/form-data") > -1
                ) {
                  let t = this.env && this.env.FormData;
                  return eo(
                    n ? { "files[]": e } : e,
                    t && new t(),
                    this.formSerializer
                  );
                }
              }
              return a || i
                ? (t.setContentType("application/json", !1),
                  (function (e, t, n) {
                    if (Y.isString(e))
                      try {
                        return (0, JSON.parse)(e), Y.trim(e);
                      } catch (e) {
                        if ("SyntaxError" !== e.name) throw e;
                      }
                    return (0, JSON.stringify)(e);
                  })(e))
                : e;
            },
          ],
          transformResponse: [
            function (e) {
              let t = this.transitional || e_.transitional,
                n = t && t.forcedJSONParsing,
                r = "json" === this.responseType;
              if (Y.isResponse(e) || Y.isReadableStream(e)) return e;
              if (e && Y.isString(e) && ((n && !this.responseType) || r)) {
                let n = t && t.silentJSONParsing;
                try {
                  return JSON.parse(e);
                } catch (e) {
                  if (!n && r) {
                    if ("SyntaxError" === e.name)
                      throw X.from(
                        e,
                        X.ERR_BAD_RESPONSE,
                        this,
                        null,
                        this.response
                      );
                    throw e;
                  }
                }
              }
              return e;
            },
          ],
          timeout: 0,
          xsrfCookieName: "XSRF-TOKEN",
          xsrfHeaderName: "X-XSRF-TOKEN",
          maxContentLength: -1,
          maxBodyLength: -1,
          env: { FormData: ex.classes.FormData, Blob: ex.classes.Blob },
          validateStatus: function (e) {
            return e >= 200 && e < 300;
          },
          headers: {
            common: {
              Accept: "application/json, text/plain, */*",
              "Content-Type": void 0,
            },
          },
        };
        Y.forEach(["delete", "get", "head", "post", "put", "patch"], (e) => {
          e_.headers[e] = {};
        });
        let eT = Y.toObjectSet([
          "age",
          "authorization",
          "content-length",
          "content-type",
          "etag",
          "expires",
          "from",
          "host",
          "if-modified-since",
          "if-unmodified-since",
          "last-modified",
          "location",
          "max-forwards",
          "proxy-authorization",
          "referer",
          "retry-after",
          "user-agent",
        ]);
        var eS = (e) => {
          let t, n, r;
          let i = {};
          return (
            e &&
              e.split("\n").forEach(function (e) {
                (r = e.indexOf(":")),
                  (t = e.substring(0, r).trim().toLowerCase()),
                  (n = e.substring(r + 1).trim()),
                  !t ||
                    (i[t] && eT[t]) ||
                    ("set-cookie" === t
                      ? i[t]
                        ? i[t].push(n)
                        : (i[t] = [n])
                      : (i[t] = i[t] ? i[t] + ", " + n : n));
              }),
            i
          );
        };
        let eP = Symbol("internals");
        function eO(e) {
          return e && String(e).trim().toLowerCase();
        }
        function eI(e) {
          return !1 === e || null == e
            ? e
            : Y.isArray(e)
            ? e.map(eI)
            : String(e);
        }
        let eA = (e) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());
        function ek(e, t, n, r, i) {
          if (Y.isFunction(r)) return r.call(this, t, n);
          if ((i && (t = n), Y.isString(t))) {
            if (Y.isString(r)) return -1 !== t.indexOf(r);
            if (Y.isRegExp(r)) return r.test(t);
          }
        }
        class ej {
          constructor(e) {
            e && this.set(e);
          }
          set(e, t, n) {
            let r = this;
            function i(e, t, n) {
              let i = eO(t);
              if (!i) throw Error("header name must be a non-empty string");
              let a = Y.findKey(r, i);
              (a &&
                void 0 !== r[a] &&
                !0 !== n &&
                (void 0 !== n || !1 === r[a])) ||
                (r[a || t] = eI(e));
            }
            let a = (e, t) => Y.forEach(e, (e, n) => i(e, n, t));
            if (Y.isPlainObject(e) || e instanceof this.constructor) a(e, t);
            else if (Y.isString(e) && (e = e.trim()) && !eA(e)) a(eS(e), t);
            else if (Y.isHeaders(e)) for (let [t, r] of e.entries()) i(r, t, n);
            else null != e && i(t, e, n);
            return this;
          }
          get(e, t) {
            if ((e = eO(e))) {
              let n = Y.findKey(this, e);
              if (n) {
                let e = this[n];
                if (!t) return e;
                if (!0 === t)
                  return (function (e) {
                    let t;
                    let n = Object.create(null),
                      r = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
                    for (; (t = r.exec(e)); ) n[t[1]] = t[2];
                    return n;
                  })(e);
                if (Y.isFunction(t)) return t.call(this, e, n);
                if (Y.isRegExp(t)) return t.exec(e);
                throw TypeError("parser must be boolean|regexp|function");
              }
            }
          }
          has(e, t) {
            if ((e = eO(e))) {
              let n = Y.findKey(this, e);
              return !!(
                n &&
                void 0 !== this[n] &&
                (!t || ek(this, this[n], n, t))
              );
            }
            return !1;
          }
          delete(e, t) {
            let n = this,
              r = !1;
            function i(e) {
              if ((e = eO(e))) {
                let i = Y.findKey(n, e);
                i && (!t || ek(n, n[i], i, t)) && (delete n[i], (r = !0));
              }
            }
            return Y.isArray(e) ? e.forEach(i) : i(e), r;
          }
          clear(e) {
            let t = Object.keys(this),
              n = t.length,
              r = !1;
            for (; n--; ) {
              let i = t[n];
              (!e || ek(this, this[i], i, e, !0)) && (delete this[i], (r = !0));
            }
            return r;
          }
          normalize(e) {
            let t = this,
              n = {};
            return (
              Y.forEach(this, (r, i) => {
                let a = Y.findKey(n, i);
                if (a) {
                  (t[a] = eI(r)), delete t[i];
                  return;
                }
                let o = e
                  ? i
                      .trim()
                      .toLowerCase()
                      .replace(
                        /([a-z\d])(\w*)/g,
                        (e, t, n) => t.toUpperCase() + n
                      )
                  : String(i).trim();
                o !== i && delete t[i], (t[o] = eI(r)), (n[o] = !0);
              }),
              this
            );
          }
          concat(...e) {
            return this.constructor.concat(this, ...e);
          }
          toJSON(e) {
            let t = Object.create(null);
            return (
              Y.forEach(this, (n, r) => {
                null != n &&
                  !1 !== n &&
                  (t[r] = e && Y.isArray(n) ? n.join(", ") : n);
              }),
              t
            );
          }
          [Symbol.iterator]() {
            return Object.entries(this.toJSON())[Symbol.iterator]();
          }
          toString() {
            return Object.entries(this.toJSON())
              .map(([e, t]) => e + ": " + t)
              .join("\n");
          }
          get [Symbol.toStringTag]() {
            return "AxiosHeaders";
          }
          static from(e) {
            return e instanceof this ? e : new this(e);
          }
          static concat(e, ...t) {
            let n = new this(e);
            return t.forEach((e) => n.set(e)), n;
          }
          static accessor(e) {
            let t = (this[eP] = this[eP] = { accessors: {} }),
              n = t.accessors,
              r = this.prototype;
            function i(e) {
              let t = eO(e);
              n[t] ||
                ((function (e, t) {
                  let n = Y.toCamelCase(" " + t);
                  ["get", "set", "has"].forEach((r) => {
                    Object.defineProperty(e, r + n, {
                      value: function (e, n, i) {
                        return this[r].call(this, t, e, n, i);
                      },
                      configurable: !0,
                    });
                  });
                })(r, e),
                (n[t] = !0));
            }
            return Y.isArray(e) ? e.forEach(i) : i(e), this;
          }
        }
        function eB(e, t) {
          let n = this || e_,
            r = t || n,
            i = ej.from(r.headers),
            a = r.data;
          return (
            Y.forEach(e, function (e) {
              a = e.call(n, a, i.normalize(), t ? t.status : void 0);
            }),
            i.normalize(),
            a
          );
        }
        function eM(e) {
          return !!(e && e.__CANCEL__);
        }
        function eN(e, t, n) {
          X.call(this, null == e ? "canceled" : e, X.ERR_CANCELED, t, n),
            (this.name = "CanceledError");
        }
        function eD(e, t, n) {
          let r = n.config.validateStatus;
          !n.status || !r || r(n.status)
            ? e(n)
            : t(
                new X(
                  "Request failed with status code " + n.status,
                  [X.ERR_BAD_REQUEST, X.ERR_BAD_RESPONSE][
                    Math.floor(n.status / 100) - 4
                  ],
                  n.config,
                  n.request,
                  n
                )
              );
        }
        ej.accessor([
          "Content-Type",
          "Content-Length",
          "Accept",
          "Accept-Encoding",
          "User-Agent",
          "Authorization",
        ]),
          Y.reduceDescriptors(ej.prototype, ({ value: e }, t) => {
            let n = t[0].toUpperCase() + t.slice(1);
            return {
              get: () => e,
              set(e) {
                this[n] = e;
              },
            };
          }),
          Y.freezeMethods(ej),
          Y.inherits(eN, X, { __CANCEL__: !0 });
        var eR = function (e, t) {
            let n;
            e = e || 10;
            let r = Array(e),
              i = Array(e),
              a = 0,
              o = 0;
            return (
              (t = void 0 !== t ? t : 1e3),
              function (s) {
                let u = Date.now(),
                  l = i[o];
                n || (n = u), (r[a] = s), (i[a] = u);
                let c = o,
                  d = 0;
                for (; c !== a; ) (d += r[c++]), (c %= e);
                if (((a = (a + 1) % e) === o && (o = (o + 1) % e), u - n < t))
                  return;
                let f = l && u - l;
                return f ? Math.round((1e3 * d) / f) : void 0;
              }
            );
          },
          eF = function (e, t) {
            let n,
              r,
              i = 0,
              a = 1e3 / t,
              o = (t, a = Date.now()) => {
                (i = a),
                  (n = null),
                  r && (clearTimeout(r), (r = null)),
                  e.apply(null, t);
              };
            return [
              (...e) => {
                let t = Date.now(),
                  s = t - i;
                s >= a
                  ? o(e, t)
                  : ((n = e),
                    r ||
                      (r = setTimeout(() => {
                        (r = null), o(n);
                      }, a - s)));
              },
              () => n && o(n),
            ];
          };
        let eL = (e, t, n = 3) => {
            let r = 0,
              i = eR(50, 250);
            return eF((n) => {
              let a = n.loaded,
                o = n.lengthComputable ? n.total : void 0,
                s = a - r,
                u = i(s),
                l = a <= o;
              (r = a),
                e({
                  loaded: a,
                  total: o,
                  progress: o ? a / o : void 0,
                  bytes: s,
                  rate: u || void 0,
                  estimated: u && o && l ? (o - a) / u : void 0,
                  event: n,
                  lengthComputable: null != o,
                  [t ? "download" : "upload"]: !0,
                });
            }, n);
          },
          eU = (e, t) => {
            let n = null != e;
            return [
              (r) => t[0]({ lengthComputable: n, total: e, loaded: r }),
              t[1],
            ];
          },
          e$ =
            (e) =>
            (...t) =>
              Y.asap(() => e(...t));
        var eq = ex.hasStandardBrowserEnv
            ? (function () {
                let e;
                let t =
                    ex.navigator &&
                    /(msie|trident)/i.test(ex.navigator.userAgent),
                  n = document.createElement("a");
                function r(e) {
                  let r = e;
                  return (
                    t && (n.setAttribute("href", r), (r = n.href)),
                    n.setAttribute("href", r),
                    {
                      href: n.href,
                      protocol: n.protocol ? n.protocol.replace(/:$/, "") : "",
                      host: n.host,
                      search: n.search ? n.search.replace(/^\?/, "") : "",
                      hash: n.hash ? n.hash.replace(/^#/, "") : "",
                      hostname: n.hostname,
                      port: n.port,
                      pathname:
                        "/" === n.pathname.charAt(0)
                          ? n.pathname
                          : "/" + n.pathname,
                    }
                  );
                }
                return (
                  (e = r(window.location.href)),
                  function (t) {
                    let n = Y.isString(t) ? r(t) : t;
                    return n.protocol === e.protocol && n.host === e.host;
                  }
                );
              })()
            : function () {
                return !0;
              },
          eH = ex.hasStandardBrowserEnv
            ? {
                write(e, t, n, r, i, a) {
                  let o = [e + "=" + encodeURIComponent(t)];
                  Y.isNumber(n) &&
                    o.push("expires=" + new Date(n).toGMTString()),
                    Y.isString(r) && o.push("path=" + r),
                    Y.isString(i) && o.push("domain=" + i),
                    !0 === a && o.push("secure"),
                    (document.cookie = o.join("; "));
                },
                read(e) {
                  let t = document.cookie.match(
                    RegExp("(^|;\\s*)(" + e + ")=([^;]*)")
                  );
                  return t ? decodeURIComponent(t[3]) : null;
                },
                remove(e) {
                  this.write(e, "", Date.now() - 864e5);
                },
              }
            : { write() {}, read: () => null, remove() {} };
        function ez(e, t) {
          return e && !/^([a-z][a-z\d+\-.]*:)?\/\//i.test(t)
            ? t
              ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "")
              : e
            : t;
        }
        let eG = (e) => (e instanceof ej ? { ...e } : e);
        function eW(e, t) {
          t = t || {};
          let n = {};
          function r(e, t, n) {
            return Y.isPlainObject(e) && Y.isPlainObject(t)
              ? Y.merge.call({ caseless: n }, e, t)
              : Y.isPlainObject(t)
              ? Y.merge({}, t)
              : Y.isArray(t)
              ? t.slice()
              : t;
          }
          function i(e, t, n) {
            return Y.isUndefined(t)
              ? Y.isUndefined(e)
                ? void 0
                : r(void 0, e, n)
              : r(e, t, n);
          }
          function a(e, t) {
            if (!Y.isUndefined(t)) return r(void 0, t);
          }
          function o(e, t) {
            return Y.isUndefined(t)
              ? Y.isUndefined(e)
                ? void 0
                : r(void 0, e)
              : r(void 0, t);
          }
          function s(n, i, a) {
            return a in t ? r(n, i) : a in e ? r(void 0, n) : void 0;
          }
          let u = {
            url: a,
            method: a,
            data: a,
            baseURL: o,
            transformRequest: o,
            transformResponse: o,
            paramsSerializer: o,
            timeout: o,
            timeoutMessage: o,
            withCredentials: o,
            withXSRFToken: o,
            adapter: o,
            responseType: o,
            xsrfCookieName: o,
            xsrfHeaderName: o,
            onUploadProgress: o,
            onDownloadProgress: o,
            decompress: o,
            maxContentLength: o,
            maxBodyLength: o,
            beforeRedirect: o,
            transport: o,
            httpAgent: o,
            httpsAgent: o,
            cancelToken: o,
            socketPath: o,
            responseEncoding: o,
            validateStatus: s,
            headers: (e, t) => i(eG(e), eG(t), !0),
          };
          return (
            Y.forEach(Object.keys(Object.assign({}, e, t)), function (r) {
              let a = u[r] || i,
                o = a(e[r], t[r], r);
              (Y.isUndefined(o) && a !== s) || (n[r] = o);
            }),
            n
          );
        }
        var eV = (e) => {
          let t;
          let n = eW({}, e),
            {
              data: r,
              withXSRFToken: i,
              xsrfHeaderName: a,
              xsrfCookieName: o,
              headers: s,
              auth: u,
            } = n;
          if (
            ((n.headers = s = ej.from(s)),
            (n.url = ed(ez(n.baseURL, n.url), e.params, e.paramsSerializer)),
            u &&
              s.set(
                "Authorization",
                "Basic " +
                  btoa(
                    (u.username || "") +
                      ":" +
                      (u.password
                        ? unescape(encodeURIComponent(u.password))
                        : "")
                  )
              ),
            Y.isFormData(r))
          ) {
            if (ex.hasStandardBrowserEnv || ex.hasStandardBrowserWebWorkerEnv)
              s.setContentType(void 0);
            else if (!1 !== (t = s.getContentType())) {
              let [e, ...n] = t
                ? t
                    .split(";")
                    .map((e) => e.trim())
                    .filter(Boolean)
                : [];
              s.setContentType([e || "multipart/form-data", ...n].join("; "));
            }
          }
          if (
            ex.hasStandardBrowserEnv &&
            (i && Y.isFunction(i) && (i = i(n)), i || (!1 !== i && eq(n.url)))
          ) {
            let e = a && o && eH.read(o);
            e && s.set(a, e);
          }
          return n;
        };
        let eK = "undefined" != typeof XMLHttpRequest;
        var eZ =
            eK &&
            function (e) {
              return new Promise(function (t, n) {
                let r, i, a, o, s;
                let u = eV(e),
                  l = u.data,
                  c = ej.from(u.headers).normalize(),
                  {
                    responseType: d,
                    onUploadProgress: f,
                    onDownloadProgress: p,
                  } = u;
                function h() {
                  o && o(),
                    s && s(),
                    u.cancelToken && u.cancelToken.unsubscribe(r),
                    u.signal && u.signal.removeEventListener("abort", r);
                }
                let m = new XMLHttpRequest();
                function y() {
                  if (!m) return;
                  let r = ej.from(
                      "getAllResponseHeaders" in m && m.getAllResponseHeaders()
                    ),
                    i =
                      d && "text" !== d && "json" !== d
                        ? m.response
                        : m.responseText,
                    a = {
                      data: i,
                      status: m.status,
                      statusText: m.statusText,
                      headers: r,
                      config: e,
                      request: m,
                    };
                  eD(
                    function (e) {
                      t(e), h();
                    },
                    function (e) {
                      n(e), h();
                    },
                    a
                  ),
                    (m = null);
                }
                m.open(u.method.toUpperCase(), u.url, !0),
                  (m.timeout = u.timeout),
                  "onloadend" in m
                    ? (m.onloadend = y)
                    : (m.onreadystatechange = function () {
                        m &&
                          4 === m.readyState &&
                          (0 !== m.status ||
                            (m.responseURL &&
                              0 === m.responseURL.indexOf("file:"))) &&
                          setTimeout(y);
                      }),
                  (m.onabort = function () {
                    m &&
                      (n(new X("Request aborted", X.ECONNABORTED, e, m)),
                      (m = null));
                  }),
                  (m.onerror = function () {
                    n(new X("Network Error", X.ERR_NETWORK, e, m)), (m = null);
                  }),
                  (m.ontimeout = function () {
                    let t = u.timeout
                        ? "timeout of " + u.timeout + "ms exceeded"
                        : "timeout exceeded",
                      r = u.transitional || ep;
                    u.timeoutErrorMessage && (t = u.timeoutErrorMessage),
                      n(
                        new X(
                          t,
                          r.clarifyTimeoutError ? X.ETIMEDOUT : X.ECONNABORTED,
                          e,
                          m
                        )
                      ),
                      (m = null);
                  }),
                  void 0 === l && c.setContentType(null),
                  "setRequestHeader" in m &&
                    Y.forEach(c.toJSON(), function (e, t) {
                      m.setRequestHeader(t, e);
                    }),
                  Y.isUndefined(u.withCredentials) ||
                    (m.withCredentials = !!u.withCredentials),
                  d && "json" !== d && (m.responseType = u.responseType),
                  p &&
                    (([a, s] = eL(p, !0)), m.addEventListener("progress", a)),
                  f &&
                    m.upload &&
                    (([i, o] = eL(f)),
                    m.upload.addEventListener("progress", i),
                    m.upload.addEventListener("loadend", o)),
                  (u.cancelToken || u.signal) &&
                    ((r = (t) => {
                      m &&
                        (n(!t || t.type ? new eN(null, e, m) : t),
                        m.abort(),
                        (m = null));
                    }),
                    u.cancelToken && u.cancelToken.subscribe(r),
                    u.signal &&
                      (u.signal.aborted
                        ? r()
                        : u.signal.addEventListener("abort", r)));
                let g = (function (e) {
                  let t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
                  return (t && t[1]) || "";
                })(u.url);
                if (g && -1 === ex.protocols.indexOf(g)) {
                  n(
                    new X(
                      "Unsupported protocol " + g + ":",
                      X.ERR_BAD_REQUEST,
                      e
                    )
                  );
                  return;
                }
                m.send(l || null);
              });
            },
          eJ = (e, t) => {
            let { length: n } = (e = e ? e.filter(Boolean) : []);
            if (t || n) {
              let n,
                r = new AbortController(),
                i = function (e) {
                  if (!n) {
                    (n = !0), o();
                    let t = e instanceof Error ? e : this.reason;
                    r.abort(
                      t instanceof X
                        ? t
                        : new eN(t instanceof Error ? t.message : t)
                    );
                  }
                },
                a =
                  t &&
                  setTimeout(() => {
                    (a = null),
                      i(new X(`timeout ${t} of ms exceeded`, X.ETIMEDOUT));
                  }, t),
                o = () => {
                  e &&
                    (a && clearTimeout(a),
                    (a = null),
                    e.forEach((e) => {
                      e.unsubscribe
                        ? e.unsubscribe(i)
                        : e.removeEventListener("abort", i);
                    }),
                    (e = null));
                };
              e.forEach((e) => e.addEventListener("abort", i));
              let { signal: s } = r;
              return (s.unsubscribe = () => Y.asap(o)), s;
            }
          };
        let eY = function* (e, t) {
            let n,
              r = e.byteLength;
            if (!t || r < t) {
              yield e;
              return;
            }
            let i = 0;
            for (; i < r; ) (n = i + t), yield e.slice(i, n), (i = n);
          },
          eX = async function* (e, t) {
            for await (let n of eQ(e)) yield* eY(n, t);
          },
          eQ = async function* (e) {
            if (e[Symbol.asyncIterator]) {
              yield* e;
              return;
            }
            let t = e.getReader();
            try {
              for (;;) {
                let { done: e, value: n } = await t.read();
                if (e) break;
                yield n;
              }
            } finally {
              await t.cancel();
            }
          },
          e0 = (e, t, n, r) => {
            let i;
            let a = eX(e, t),
              o = 0,
              s = (e) => {
                !i && ((i = !0), r && r(e));
              };
            return new ReadableStream(
              {
                async pull(e) {
                  try {
                    let { done: t, value: r } = await a.next();
                    if (t) {
                      s(), e.close();
                      return;
                    }
                    let i = r.byteLength;
                    if (n) {
                      let e = (o += i);
                      n(e);
                    }
                    e.enqueue(new Uint8Array(r));
                  } catch (e) {
                    throw (s(e), e);
                  }
                },
                cancel: (e) => (s(e), a.return()),
              },
              { highWaterMark: 2 }
            );
          },
          e1 =
            "function" == typeof fetch &&
            "function" == typeof Request &&
            "function" == typeof Response,
          e2 = e1 && "function" == typeof ReadableStream,
          e6 =
            e1 &&
            ("function" == typeof TextEncoder
              ? ((l = new TextEncoder()), (e) => l.encode(e))
              : async (e) =>
                  new Uint8Array(await new Response(e).arrayBuffer())),
          e3 = (e, ...t) => {
            try {
              return !!e(...t);
            } catch (e) {
              return !1;
            }
          },
          e5 =
            e2 &&
            e3(() => {
              let e = !1,
                t = new Request(ex.origin, {
                  body: new ReadableStream(),
                  method: "POST",
                  get duplex() {
                    return (e = !0), "half";
                  },
                }).headers.has("Content-Type");
              return e && !t;
            }),
          e4 = e2 && e3(() => Y.isReadableStream(new Response("").body)),
          e8 = { stream: e4 && ((e) => e.body) };
        e1 &&
          ((c = new Response()),
          ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((e) => {
            e8[e] ||
              (e8[e] = Y.isFunction(c[e])
                ? (t) => t[e]()
                : (t, n) => {
                    throw new X(
                      `Response type '${e}' is not supported`,
                      X.ERR_NOT_SUPPORT,
                      n
                    );
                  });
          }));
        let e7 = async (e) => {
            if (null == e) return 0;
            if (Y.isBlob(e)) return e.size;
            if (Y.isSpecCompliantForm(e)) {
              let t = new Request(ex.origin, { method: "POST", body: e });
              return (await t.arrayBuffer()).byteLength;
            }
            return Y.isArrayBufferView(e) || Y.isArrayBuffer(e)
              ? e.byteLength
              : (Y.isURLSearchParams(e) && (e += ""), Y.isString(e))
              ? (await e6(e)).byteLength
              : void 0;
          },
          e9 = async (e, t) => {
            let n = Y.toFiniteNumber(e.getContentLength());
            return null == n ? e7(t) : n;
          };
        var te =
          e1 &&
          (async (e) => {
            let t,
              n,
              {
                url: r,
                method: i,
                data: a,
                signal: o,
                cancelToken: s,
                timeout: u,
                onDownloadProgress: l,
                onUploadProgress: c,
                responseType: d,
                headers: f,
                withCredentials: p = "same-origin",
                fetchOptions: h,
              } = eV(e);
            d = d ? (d + "").toLowerCase() : "text";
            let m = eJ([o, s && s.toAbortSignal()], u),
              y =
                m &&
                m.unsubscribe &&
                (() => {
                  m.unsubscribe();
                });
            try {
              if (
                c &&
                e5 &&
                "get" !== i &&
                "head" !== i &&
                0 !== (n = await e9(f, a))
              ) {
                let e,
                  t = new Request(r, {
                    method: "POST",
                    body: a,
                    duplex: "half",
                  });
                if (
                  (Y.isFormData(a) &&
                    (e = t.headers.get("content-type")) &&
                    f.setContentType(e),
                  t.body)
                ) {
                  let [e, r] = eU(n, eL(e$(c)));
                  a = e0(t.body, 65536, e, r);
                }
              }
              Y.isString(p) || (p = p ? "include" : "omit");
              let o = "credentials" in Request.prototype;
              t = new Request(r, {
                ...h,
                signal: m,
                method: i.toUpperCase(),
                headers: f.normalize().toJSON(),
                body: a,
                duplex: "half",
                credentials: o ? p : void 0,
              });
              let s = await fetch(t),
                u = e4 && ("stream" === d || "response" === d);
              if (e4 && (l || (u && y))) {
                let e = {};
                ["status", "statusText", "headers"].forEach((t) => {
                  e[t] = s[t];
                });
                let t = Y.toFiniteNumber(s.headers.get("content-length")),
                  [n, r] = (l && eU(t, eL(e$(l), !0))) || [];
                s = new Response(
                  e0(s.body, 65536, n, () => {
                    r && r(), y && y();
                  }),
                  e
                );
              }
              d = d || "text";
              let g = await e8[Y.findKey(e8, d) || "text"](s, e);
              return (
                !u && y && y(),
                await new Promise((n, r) => {
                  eD(n, r, {
                    data: g,
                    headers: ej.from(s.headers),
                    status: s.status,
                    statusText: s.statusText,
                    config: e,
                    request: t,
                  });
                })
              );
            } catch (n) {
              if (
                (y && y(),
                n && "TypeError" === n.name && /fetch/i.test(n.message))
              )
                throw Object.assign(
                  new X("Network Error", X.ERR_NETWORK, e, t),
                  { cause: n.cause || n }
                );
              throw X.from(n, n && n.code, e, t);
            }
          });
        let tt = { http: null, xhr: eZ, fetch: te };
        Y.forEach(tt, (e, t) => {
          if (e) {
            try {
              Object.defineProperty(e, "name", { value: t });
            } catch (e) {}
            Object.defineProperty(e, "adapterName", { value: t });
          }
        });
        let tn = (e) => `- ${e}`,
          tr = (e) => Y.isFunction(e) || null === e || !1 === e;
        var ti = {
          getAdapter: (e) => {
            let t, n;
            e = Y.isArray(e) ? e : [e];
            let { length: r } = e,
              i = {};
            for (let a = 0; a < r; a++) {
              let r;
              if (
                ((n = t = e[a]),
                !tr(t) && void 0 === (n = tt[(r = String(t)).toLowerCase()]))
              )
                throw new X(`Unknown adapter '${r}'`);
              if (n) break;
              i[r || "#" + a] = n;
            }
            if (!n) {
              let e = Object.entries(i).map(
                  ([e, t]) =>
                    `adapter ${e} ` +
                    (!1 === t
                      ? "is not supported by the environment"
                      : "is not available in the build")
                ),
                t = r
                  ? e.length > 1
                    ? "since :\n" + e.map(tn).join("\n")
                    : " " + tn(e[0])
                  : "as no adapter specified";
              throw new X(
                "There is no suitable adapter to dispatch the request " + t,
                "ERR_NOT_SUPPORT"
              );
            }
            return n;
          },
          adapters: tt,
        };
        function ta(e) {
          if (
            (e.cancelToken && e.cancelToken.throwIfRequested(),
            e.signal && e.signal.aborted)
          )
            throw new eN(null, e);
        }
        function to(e) {
          ta(e),
            (e.headers = ej.from(e.headers)),
            (e.data = eB.call(e, e.transformRequest)),
            -1 !== ["post", "put", "patch"].indexOf(e.method) &&
              e.headers.setContentType("application/x-www-form-urlencoded", !1);
          let t = ti.getAdapter(e.adapter || e_.adapter);
          return t(e).then(
            function (t) {
              return (
                ta(e),
                (t.data = eB.call(e, e.transformResponse, t)),
                (t.headers = ej.from(t.headers)),
                t
              );
            },
            function (t) {
              return (
                !eM(t) &&
                  (ta(e),
                  t &&
                    t.response &&
                    ((t.response.data = eB.call(
                      e,
                      e.transformResponse,
                      t.response
                    )),
                    (t.response.headers = ej.from(t.response.headers)))),
                Promise.reject(t)
              );
            }
          );
        }
        let ts = "1.7.7",
          tu = {};
        ["object", "boolean", "number", "function", "string", "symbol"].forEach(
          (e, t) => {
            tu[e] = function (n) {
              return typeof n === e || "a" + (t < 1 ? "n " : " ") + e;
            };
          }
        );
        let tl = {};
        tu.transitional = function (e, t, n) {
          function r(e, t) {
            return (
              "[Axios v" +
              ts +
              "] Transitional option '" +
              e +
              "'" +
              t +
              (n ? ". " + n : "")
            );
          }
          return (n, i, a) => {
            if (!1 === e)
              throw new X(
                r(i, " has been removed" + (t ? " in " + t : "")),
                X.ERR_DEPRECATED
              );
            return (
              t &&
                !tl[i] &&
                ((tl[i] = !0),
                console.warn(
                  r(
                    i,
                    " has been deprecated since v" +
                      t +
                      " and will be removed in the near future"
                  )
                )),
              !e || e(n, i, a)
            );
          };
        };
        var tc = {
          assertOptions: function (e, t, n) {
            if ("object" != typeof e)
              throw new X("options must be an object", X.ERR_BAD_OPTION_VALUE);
            let r = Object.keys(e),
              i = r.length;
            for (; i-- > 0; ) {
              let a = r[i],
                o = t[a];
              if (o) {
                let t = e[a],
                  n = void 0 === t || o(t, a, e);
                if (!0 !== n)
                  throw new X(
                    "option " + a + " must be " + n,
                    X.ERR_BAD_OPTION_VALUE
                  );
                continue;
              }
              if (!0 !== n)
                throw new X("Unknown option " + a, X.ERR_BAD_OPTION);
            }
          },
          validators: tu,
        };
        let td = tc.validators;
        class tf {
          constructor(e) {
            (this.defaults = e),
              (this.interceptors = { request: new ef(), response: new ef() });
          }
          async request(e, t) {
            try {
              return await this._request(e, t);
            } catch (e) {
              if (e instanceof Error) {
                let t;
                Error.captureStackTrace
                  ? Error.captureStackTrace((t = {}))
                  : (t = Error());
                let n = t.stack ? t.stack.replace(/^.+\n/, "") : "";
                try {
                  e.stack
                    ? n &&
                      !String(e.stack).endsWith(n.replace(/^.+\n.+\n/, "")) &&
                      (e.stack += "\n" + n)
                    : (e.stack = n);
                } catch (e) {}
              }
              throw e;
            }
          }
          _request(e, t) {
            let n, r;
            "string" == typeof e ? ((t = t || {}).url = e) : (t = e || {}),
              (t = eW(this.defaults, t));
            let { transitional: i, paramsSerializer: a, headers: o } = t;
            void 0 !== i &&
              tc.assertOptions(
                i,
                {
                  silentJSONParsing: td.transitional(td.boolean),
                  forcedJSONParsing: td.transitional(td.boolean),
                  clarifyTimeoutError: td.transitional(td.boolean),
                },
                !1
              ),
              null != a &&
                (Y.isFunction(a)
                  ? (t.paramsSerializer = { serialize: a })
                  : tc.assertOptions(
                      a,
                      { encode: td.function, serialize: td.function },
                      !0
                    )),
              (t.method = (
                t.method ||
                this.defaults.method ||
                "get"
              ).toLowerCase());
            let s = o && Y.merge(o.common, o[t.method]);
            o &&
              Y.forEach(
                ["delete", "get", "head", "post", "put", "patch", "common"],
                (e) => {
                  delete o[e];
                }
              ),
              (t.headers = ej.concat(s, o));
            let u = [],
              l = !0;
            this.interceptors.request.forEach(function (e) {
              ("function" != typeof e.runWhen || !1 !== e.runWhen(t)) &&
                ((l = l && e.synchronous), u.unshift(e.fulfilled, e.rejected));
            });
            let c = [];
            this.interceptors.response.forEach(function (e) {
              c.push(e.fulfilled, e.rejected);
            });
            let d = 0;
            if (!l) {
              let e = [to.bind(this), void 0];
              for (
                e.unshift.apply(e, u),
                  e.push.apply(e, c),
                  r = e.length,
                  n = Promise.resolve(t);
                d < r;

              )
                n = n.then(e[d++], e[d++]);
              return n;
            }
            r = u.length;
            let f = t;
            for (d = 0; d < r; ) {
              let e = u[d++],
                t = u[d++];
              try {
                f = e(f);
              } catch (e) {
                t.call(this, e);
                break;
              }
            }
            try {
              n = to.call(this, f);
            } catch (e) {
              return Promise.reject(e);
            }
            for (d = 0, r = c.length; d < r; ) n = n.then(c[d++], c[d++]);
            return n;
          }
          getUri(e) {
            e = eW(this.defaults, e);
            let t = ez(e.baseURL, e.url);
            return ed(t, e.params, e.paramsSerializer);
          }
        }
        Y.forEach(["delete", "get", "head", "options"], function (e) {
          tf.prototype[e] = function (t, n) {
            return this.request(
              eW(n || {}, { method: e, url: t, data: (n || {}).data })
            );
          };
        }),
          Y.forEach(["post", "put", "patch"], function (e) {
            function t(t) {
              return function (n, r, i) {
                return this.request(
                  eW(i || {}, {
                    method: e,
                    headers: t ? { "Content-Type": "multipart/form-data" } : {},
                    url: n,
                    data: r,
                  })
                );
              };
            }
            (tf.prototype[e] = t()), (tf.prototype[e + "Form"] = t(!0));
          });
        class tp {
          constructor(e) {
            let t;
            if ("function" != typeof e)
              throw TypeError("executor must be a function.");
            this.promise = new Promise(function (e) {
              t = e;
            });
            let n = this;
            this.promise.then((e) => {
              if (!n._listeners) return;
              let t = n._listeners.length;
              for (; t-- > 0; ) n._listeners[t](e);
              n._listeners = null;
            }),
              (this.promise.then = (e) => {
                let t;
                let r = new Promise((e) => {
                  n.subscribe(e), (t = e);
                }).then(e);
                return (
                  (r.cancel = function () {
                    n.unsubscribe(t);
                  }),
                  r
                );
              }),
              e(function (e, r, i) {
                n.reason || ((n.reason = new eN(e, r, i)), t(n.reason));
              });
          }
          throwIfRequested() {
            if (this.reason) throw this.reason;
          }
          subscribe(e) {
            if (this.reason) {
              e(this.reason);
              return;
            }
            this._listeners ? this._listeners.push(e) : (this._listeners = [e]);
          }
          unsubscribe(e) {
            if (!this._listeners) return;
            let t = this._listeners.indexOf(e);
            -1 !== t && this._listeners.splice(t, 1);
          }
          toAbortSignal() {
            let e = new AbortController(),
              t = (t) => {
                e.abort(t);
              };
            return (
              this.subscribe(t),
              (e.signal.unsubscribe = () => this.unsubscribe(t)),
              e.signal
            );
          }
          static source() {
            let e;
            let t = new tp(function (t) {
              e = t;
            });
            return { token: t, cancel: e };
          }
        }
        let th = {
          Continue: 100,
          SwitchingProtocols: 101,
          Processing: 102,
          EarlyHints: 103,
          Ok: 200,
          Created: 201,
          Accepted: 202,
          NonAuthoritativeInformation: 203,
          NoContent: 204,
          ResetContent: 205,
          PartialContent: 206,
          MultiStatus: 207,
          AlreadyReported: 208,
          ImUsed: 226,
          MultipleChoices: 300,
          MovedPermanently: 301,
          Found: 302,
          SeeOther: 303,
          NotModified: 304,
          UseProxy: 305,
          Unused: 306,
          TemporaryRedirect: 307,
          PermanentRedirect: 308,
          BadRequest: 400,
          Unauthorized: 401,
          PaymentRequired: 402,
          Forbidden: 403,
          NotFound: 404,
          MethodNotAllowed: 405,
          NotAcceptable: 406,
          ProxyAuthenticationRequired: 407,
          RequestTimeout: 408,
          Conflict: 409,
          Gone: 410,
          LengthRequired: 411,
          PreconditionFailed: 412,
          PayloadTooLarge: 413,
          UriTooLong: 414,
          UnsupportedMediaType: 415,
          RangeNotSatisfiable: 416,
          ExpectationFailed: 417,
          ImATeapot: 418,
          MisdirectedRequest: 421,
          UnprocessableEntity: 422,
          Locked: 423,
          FailedDependency: 424,
          TooEarly: 425,
          UpgradeRequired: 426,
          PreconditionRequired: 428,
          TooManyRequests: 429,
          RequestHeaderFieldsTooLarge: 431,
          UnavailableForLegalReasons: 451,
          InternalServerError: 500,
          NotImplemented: 501,
          BadGateway: 502,
          ServiceUnavailable: 503,
          GatewayTimeout: 504,
          HttpVersionNotSupported: 505,
          VariantAlsoNegotiates: 506,
          InsufficientStorage: 507,
          LoopDetected: 508,
          NotExtended: 510,
          NetworkAuthenticationRequired: 511,
        };
        Object.entries(th).forEach(([e, t]) => {
          th[t] = e;
        });
        let tm = (function e(t) {
          let n = new tf(t),
            r = f(tf.prototype.request, n);
          return (
            Y.extend(r, tf.prototype, n, { allOwnKeys: !0 }),
            Y.extend(r, n, null, { allOwnKeys: !0 }),
            (r.create = function (n) {
              return e(eW(t, n));
            }),
            r
          );
        })(e_);
        (tm.Axios = tf),
          (tm.CanceledError = eN),
          (tm.CancelToken = tp),
          (tm.isCancel = eM),
          (tm.VERSION = ts),
          (tm.toFormData = eo),
          (tm.AxiosError = X),
          (tm.Cancel = tm.CanceledError),
          (tm.all = function (e) {
            return Promise.all(e);
          }),
          (tm.spread = function (e) {
            return function (t) {
              return e.apply(null, t);
            };
          }),
          (tm.isAxiosError = function (e) {
            return Y.isObject(e) && !0 === e.isAxiosError;
          }),
          (tm.mergeConfig = eW),
          (tm.AxiosHeaders = ej),
          (tm.formToJSON = (e) => eC(Y.isHTMLForm(e) ? new FormData(e) : e)),
          (tm.getAdapter = ti.getAdapter),
          (tm.HttpStatusCode = th),
          (tm.default = tm);
        var ty = tm;
      },
      70794: function (e, t, n) {
        "use strict";
        var r = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
          i = Math.ceil,
          a = Math.floor,
          o = "[BigNumber Error] ",
          s = o + "Number primitive has more than 15 significant digits: ",
          u = [
            1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12,
            1e13,
          ];
        function l(e) {
          var t = 0 | e;
          return e > 0 || e === t ? t : t - 1;
        }
        function c(e) {
          for (var t, n, r = 1, i = e.length, a = e[0] + ""; r < i; ) {
            for (n = 14 - (t = e[r++] + "").length; n--; t = "0" + t);
            a += t;
          }
          for (i = a.length; 48 === a.charCodeAt(--i); );
          return a.slice(0, i + 1 || 1);
        }
        function d(e, t) {
          var n,
            r,
            i = e.c,
            a = t.c,
            o = e.s,
            s = t.s,
            u = e.e,
            l = t.e;
          if (!o || !s) return null;
          if (((n = i && !i[0]), (r = a && !a[0]), n || r))
            return n ? (r ? 0 : -s) : o;
          if (o != s) return o;
          if (((n = o < 0), (r = u == l), !i || !a))
            return r ? 0 : !i ^ n ? 1 : -1;
          if (!r) return (u > l) ^ n ? 1 : -1;
          for (o = 0, s = (u = i.length) < (l = a.length) ? u : l; o < s; o++)
            if (i[o] != a[o]) return (i[o] > a[o]) ^ n ? 1 : -1;
          return u == l ? 0 : (u > l) ^ n ? 1 : -1;
        }
        function f(e, t, n, r) {
          if (e < t || e > n || e !== a(e))
            throw Error(
              o +
                (r || "Argument") +
                ("number" == typeof e
                  ? e < t || e > n
                    ? " out of range: "
                    : " not an integer: "
                  : " not a primitive number: ") +
                String(e)
            );
        }
        function p(e) {
          var t = e.c.length - 1;
          return l(e.e / 14) == t && e.c[t] % 2 != 0;
        }
        function h(e, t) {
          return (
            (e.length > 1 ? e.charAt(0) + "." + e.slice(1) : e) +
            (t < 0 ? "e" : "e+") +
            t
          );
        }
        function m(e, t, n) {
          var r, i;
          if (t < 0) {
            for (i = n + "."; ++t; i += n);
            e = i + e;
          } else if (((r = e.length), ++t > r)) {
            for (i = n, t -= r; --t; i += n);
            e += i;
          } else t < r && (e = e.slice(0, t) + "." + e.slice(t));
          return e;
        }
        var y = (function e(t) {
          var n,
            y,
            g,
            b,
            v,
            w,
            E,
            x,
            C,
            _ = (F.prototype = {
              constructor: F,
              toString: null,
              valueOf: null,
            }),
            T = new F(1),
            S = 20,
            P = 4,
            O = -7,
            I = 21,
            A = -1e7,
            k = 1e7,
            j = !1,
            B = 1,
            M = 0,
            N = {
              prefix: "",
              groupSize: 3,
              secondaryGroupSize: 0,
              groupSeparator: ",",
              decimalSeparator: ".",
              fractionGroupSize: 0,
              fractionGroupSeparator: "\xa0",
              suffix: "",
            },
            D = "0123456789abcdefghijklmnopqrstuvwxyz",
            R = !0;
          function F(e, t) {
            var n,
              i,
              o,
              u,
              l,
              c,
              d,
              p,
              h = this;
            if (!(h instanceof F)) return new F(e, t);
            if (null == t) {
              if (e && !0 === e._isBigNumber) {
                (h.s = e.s),
                  !e.c || e.e > k
                    ? (h.c = h.e = null)
                    : e.e < A
                    ? (h.c = [(h.e = 0)])
                    : ((h.e = e.e), (h.c = e.c.slice()));
                return;
              }
              if ((c = "number" == typeof e) && 0 * e == 0) {
                if (((h.s = 1 / e < 0 ? ((e = -e), -1) : 1), e === ~~e)) {
                  for (u = 0, l = e; l >= 10; l /= 10, u++);
                  u > k ? (h.c = h.e = null) : ((h.e = u), (h.c = [e]));
                  return;
                }
                p = String(e);
              } else {
                if (!r.test((p = String(e)))) return C(h, p, c);
                h.s = 45 == p.charCodeAt(0) ? ((p = p.slice(1)), -1) : 1;
              }
              (u = p.indexOf(".")) > -1 && (p = p.replace(".", "")),
                (l = p.search(/e/i)) > 0
                  ? (u < 0 && (u = l),
                    (u += +p.slice(l + 1)),
                    (p = p.substring(0, l)))
                  : u < 0 && (u = p.length);
            } else {
              if ((f(t, 2, D.length, "Base"), 10 == t && R))
                return q((h = new F(e)), S + h.e + 1, P);
              if (((p = String(e)), (c = "number" == typeof e))) {
                if (0 * e != 0) return C(h, p, c, t);
                if (
                  ((h.s = 1 / e < 0 ? ((p = p.slice(1)), -1) : 1),
                  F.DEBUG && p.replace(/^0\.0*|\./, "").length > 15)
                )
                  throw Error(s + e);
              } else h.s = 45 === p.charCodeAt(0) ? ((p = p.slice(1)), -1) : 1;
              for (n = D.slice(0, t), u = l = 0, d = p.length; l < d; l++)
                if (0 > n.indexOf((i = p.charAt(l)))) {
                  if ("." == i) {
                    if (l > u) {
                      u = d;
                      continue;
                    }
                  } else if (
                    !o &&
                    ((p == p.toUpperCase() && (p = p.toLowerCase())) ||
                      (p == p.toLowerCase() && (p = p.toUpperCase())))
                  ) {
                    (o = !0), (l = -1), (u = 0);
                    continue;
                  }
                  return C(h, String(e), c, t);
                }
              (c = !1),
                (u = (p = x(p, t, 10, h.s)).indexOf(".")) > -1
                  ? (p = p.replace(".", ""))
                  : (u = p.length);
            }
            for (l = 0; 48 === p.charCodeAt(l); l++);
            for (d = p.length; 48 === p.charCodeAt(--d); );
            if ((p = p.slice(l, ++d))) {
              if (
                ((d -= l),
                c && F.DEBUG && d > 15 && (e > 9007199254740991 || e !== a(e)))
              )
                throw Error(s + h.s * e);
              if ((u = u - l - 1) > k) h.c = h.e = null;
              else if (u < A) h.c = [(h.e = 0)];
              else {
                if (
                  ((h.e = u),
                  (h.c = []),
                  (l = (u + 1) % 14),
                  u < 0 && (l += 14),
                  l < d)
                ) {
                  for (l && h.c.push(+p.slice(0, l)), d -= 14; l < d; )
                    h.c.push(+p.slice(l, (l += 14)));
                  l = 14 - (p = p.slice(l)).length;
                } else l -= d;
                for (; l--; p += "0");
                h.c.push(+p);
              }
            } else h.c = [(h.e = 0)];
          }
          function L(e, t, n, r) {
            var i, a, o, s, u;
            if ((null == n ? (n = P) : f(n, 0, 8), !e.c)) return e.toString();
            if (((i = e.c[0]), (o = e.e), null == t))
              (u = c(e.c)),
                (u =
                  1 == r || (2 == r && (o <= O || o >= I))
                    ? h(u, o)
                    : m(u, o, "0"));
            else if (
              ((a = (e = q(new F(e), t, n)).e),
              (s = (u = c(e.c)).length),
              1 == r || (2 == r && (t <= a || a <= O)))
            ) {
              for (; s < t; u += "0", s++);
              u = h(u, a);
            } else if (((t -= o), (u = m(u, a, "0")), a + 1 > s)) {
              if (--t > 0) for (u += "."; t--; u += "0");
            } else if ((t += a - s) > 0)
              for (a + 1 == s && (u += "."); t--; u += "0");
            return e.s < 0 && i ? "-" + u : u;
          }
          function U(e, t) {
            for (var n, r, i = 1, a = new F(e[0]); i < e.length; i++)
              ((r = new F(e[i])).s &&
                (n = d(a, r)) !== t &&
                (0 !== n || a.s !== t)) ||
                (a = r);
            return a;
          }
          function $(e, t, n) {
            for (var r = 1, i = t.length; !t[--i]; t.pop());
            for (i = t[0]; i >= 10; i /= 10, r++);
            return (
              (n = r + 14 * n - 1) > k
                ? (e.c = e.e = null)
                : n < A
                ? (e.c = [(e.e = 0)])
                : ((e.e = n), (e.c = t)),
              e
            );
          }
          function q(e, t, n, r) {
            var o,
              s,
              l,
              c,
              d,
              f,
              p,
              h = e.c;
            if (h) {
              e: {
                for (o = 1, c = h[0]; c >= 10; c /= 10, o++);
                if ((s = t - o) < 0)
                  (s += 14),
                    (l = t),
                    (p = a(((d = h[(f = 0)]) / u[o - l - 1]) % 10));
                else if ((f = i((s + 1) / 14)) >= h.length) {
                  if (r) {
                    for (; h.length <= f; h.push(0));
                    (d = p = 0), (o = 1), (s %= 14), (l = s - 14 + 1);
                  } else break e;
                } else {
                  for (o = 1, d = c = h[f]; c >= 10; c /= 10, o++);
                  (s %= 14),
                    (p = (l = s - 14 + o) < 0 ? 0 : a((d / u[o - l - 1]) % 10));
                }
                if (
                  ((r =
                    r ||
                    t < 0 ||
                    null != h[f + 1] ||
                    (l < 0 ? d : d % u[o - l - 1])),
                  (r =
                    n < 4
                      ? (p || r) && (0 == n || n == (e.s < 0 ? 3 : 2))
                      : p > 5 ||
                        (5 == p &&
                          (4 == n ||
                            r ||
                            (6 == n &&
                              (s > 0 ? (l > 0 ? d / u[o - l] : 0) : h[f - 1]) %
                                10 &
                                1) ||
                            n == (e.s < 0 ? 8 : 7)))),
                  t < 1 || !h[0])
                )
                  return (
                    (h.length = 0),
                    r
                      ? ((t -= e.e + 1),
                        (h[0] = u[(14 - (t % 14)) % 14]),
                        (e.e = -t || 0))
                      : (h[0] = e.e = 0),
                    e
                  );
                if (
                  (0 == s
                    ? ((h.length = f), (c = 1), f--)
                    : ((h.length = f + 1),
                      (c = u[14 - s]),
                      (h[f] = l > 0 ? a((d / u[o - l]) % u[l]) * c : 0)),
                  r)
                )
                  for (;;) {
                    if (0 == f) {
                      for (s = 1, l = h[0]; l >= 10; l /= 10, s++);
                      for (l = h[0] += c, c = 1; l >= 10; l /= 10, c++);
                      s != c && (e.e++, 1e14 == h[0] && (h[0] = 1));
                      break;
                    }
                    if (((h[f] += c), 1e14 != h[f])) break;
                    (h[f--] = 0), (c = 1);
                  }
                for (s = h.length; 0 === h[--s]; h.pop());
              }
              e.e > k ? (e.c = e.e = null) : e.e < A && (e.c = [(e.e = 0)]);
            }
            return e;
          }
          function H(e) {
            var t,
              n = e.e;
            return null === n
              ? e.toString()
              : ((t = c(e.c)),
                (t = n <= O || n >= I ? h(t, n) : m(t, n, "0")),
                e.s < 0 ? "-" + t : t);
          }
          return (
            (F.clone = e),
            (F.ROUND_UP = 0),
            (F.ROUND_DOWN = 1),
            (F.ROUND_CEIL = 2),
            (F.ROUND_FLOOR = 3),
            (F.ROUND_HALF_UP = 4),
            (F.ROUND_HALF_DOWN = 5),
            (F.ROUND_HALF_EVEN = 6),
            (F.ROUND_HALF_CEIL = 7),
            (F.ROUND_HALF_FLOOR = 8),
            (F.EUCLID = 9),
            (F.config = F.set =
              function (e) {
                var t, n;
                if (null != e) {
                  if ("object" == typeof e) {
                    if (
                      (e.hasOwnProperty((t = "DECIMAL_PLACES")) &&
                        (f((n = e[t]), 0, 1e9, t), (S = n)),
                      e.hasOwnProperty((t = "ROUNDING_MODE")) &&
                        (f((n = e[t]), 0, 8, t), (P = n)),
                      e.hasOwnProperty((t = "EXPONENTIAL_AT")) &&
                        ((n = e[t]) && n.pop
                          ? (f(n[0], -1e9, 0, t),
                            f(n[1], 0, 1e9, t),
                            (O = n[0]),
                            (I = n[1]))
                          : (f(n, -1e9, 1e9, t), (O = -(I = n < 0 ? -n : n)))),
                      e.hasOwnProperty((t = "RANGE")))
                    ) {
                      if ((n = e[t]) && n.pop)
                        f(n[0], -1e9, -1, t),
                          f(n[1], 1, 1e9, t),
                          (A = n[0]),
                          (k = n[1]);
                      else if ((f(n, -1e9, 1e9, t), n))
                        A = -(k = n < 0 ? -n : n);
                      else throw Error(o + t + " cannot be zero: " + n);
                    }
                    if (e.hasOwnProperty((t = "CRYPTO"))) {
                      if (!!(n = e[t]) === n) {
                        if (n) {
                          if (
                            "undefined" != typeof crypto &&
                            crypto &&
                            (crypto.getRandomValues || crypto.randomBytes)
                          )
                            j = n;
                          else
                            throw ((j = !n), Error(o + "crypto unavailable"));
                        } else j = n;
                      } else throw Error(o + t + " not true or false: " + n);
                    }
                    if (
                      (e.hasOwnProperty((t = "MODULO_MODE")) &&
                        (f((n = e[t]), 0, 9, t), (B = n)),
                      e.hasOwnProperty((t = "POW_PRECISION")) &&
                        (f((n = e[t]), 0, 1e9, t), (M = n)),
                      e.hasOwnProperty((t = "FORMAT")))
                    ) {
                      if ("object" == typeof (n = e[t])) N = n;
                      else throw Error(o + t + " not an object: " + n);
                    }
                    if (e.hasOwnProperty((t = "ALPHABET"))) {
                      if (
                        "string" != typeof (n = e[t]) ||
                        /^.?$|[+\-.\s]|(.).*\1/.test(n)
                      )
                        throw Error(o + t + " invalid: " + n);
                      (R = "0123456789" == n.slice(0, 10)), (D = n);
                    }
                  } else throw Error(o + "Object expected: " + e);
                }
                return {
                  DECIMAL_PLACES: S,
                  ROUNDING_MODE: P,
                  EXPONENTIAL_AT: [O, I],
                  RANGE: [A, k],
                  CRYPTO: j,
                  MODULO_MODE: B,
                  POW_PRECISION: M,
                  FORMAT: N,
                  ALPHABET: D,
                };
              }),
            (F.isBigNumber = function (e) {
              if (!e || !0 !== e._isBigNumber) return !1;
              if (!F.DEBUG) return !0;
              var t,
                n,
                r = e.c,
                i = e.e,
                s = e.s;
              e: if ("[object Array]" == {}.toString.call(r)) {
                if (
                  (1 === s || -1 === s) &&
                  i >= -1e9 &&
                  i <= 1e9 &&
                  i === a(i)
                ) {
                  if (0 === r[0]) {
                    if (0 === i && 1 === r.length) return !0;
                    break e;
                  }
                  if (
                    ((t = (i + 1) % 14) < 1 && (t += 14),
                    String(r[0]).length == t)
                  ) {
                    for (t = 0; t < r.length; t++)
                      if ((n = r[t]) < 0 || n >= 1e14 || n !== a(n)) break e;
                    if (0 !== n) return !0;
                  }
                }
              } else if (
                null === r &&
                null === i &&
                (null === s || 1 === s || -1 === s)
              )
                return !0;
              throw Error(o + "Invalid BigNumber: " + e);
            }),
            (F.maximum = F.max =
              function () {
                return U(arguments, -1);
              }),
            (F.minimum = F.min =
              function () {
                return U(arguments, 1);
              }),
            (F.random =
              ((n =
                (9007199254740992 * Math.random()) & 2097151
                  ? function () {
                      return a(9007199254740992 * Math.random());
                    }
                  : function () {
                      return (
                        ((1073741824 * Math.random()) | 0) * 8388608 +
                        ((8388608 * Math.random()) | 0)
                      );
                    }),
              function (e) {
                var t,
                  r,
                  s,
                  l,
                  c,
                  d = 0,
                  p = [],
                  h = new F(T);
                if ((null == e ? (e = S) : f(e, 0, 1e9), (l = i(e / 14)), j)) {
                  if (crypto.getRandomValues) {
                    for (
                      t = crypto.getRandomValues(new Uint32Array((l *= 2)));
                      d < l;

                    )
                      (c = 131072 * t[d] + (t[d + 1] >>> 11)) >= 9e15
                        ? ((r = crypto.getRandomValues(new Uint32Array(2))),
                          (t[d] = r[0]),
                          (t[d + 1] = r[1]))
                        : (p.push(c % 1e14), (d += 2));
                    d = l / 2;
                  } else if (crypto.randomBytes) {
                    for (t = crypto.randomBytes((l *= 7)); d < l; )
                      (c =
                        (31 & t[d]) * 281474976710656 +
                        1099511627776 * t[d + 1] +
                        4294967296 * t[d + 2] +
                        16777216 * t[d + 3] +
                        (t[d + 4] << 16) +
                        (t[d + 5] << 8) +
                        t[d + 6]) >= 9e15
                        ? crypto.randomBytes(7).copy(t, d)
                        : (p.push(c % 1e14), (d += 7));
                    d = l / 7;
                  } else throw ((j = !1), Error(o + "crypto unavailable"));
                }
                if (!j) for (; d < l; ) (c = n()) < 9e15 && (p[d++] = c % 1e14);
                for (
                  l = p[--d],
                    e %= 14,
                    l && e && ((c = u[14 - e]), (p[d] = a(l / c) * c));
                  0 === p[d];
                  p.pop(), d--
                );
                if (d < 0) p = [(s = 0)];
                else {
                  for (s = -1; 0 === p[0]; p.splice(0, 1), s -= 14);
                  for (d = 1, c = p[0]; c >= 10; c /= 10, d++);
                  d < 14 && (s -= 14 - d);
                }
                return (h.e = s), (h.c = p), h;
              })),
            (F.sum = function () {
              for (var e = 1, t = arguments, n = new F(t[0]); e < t.length; )
                n = n.plus(t[e++]);
              return n;
            }),
            (x = (function () {
              var e = "0123456789";
              function t(e, t, n, r) {
                for (var i, a, o = [0], s = 0, u = e.length; s < u; ) {
                  for (a = o.length; a--; o[a] *= t);
                  for (
                    o[0] += r.indexOf(e.charAt(s++)), i = 0;
                    i < o.length;
                    i++
                  )
                    o[i] > n - 1 &&
                      (null == o[i + 1] && (o[i + 1] = 0),
                      (o[i + 1] += (o[i] / n) | 0),
                      (o[i] %= n));
                }
                return o.reverse();
              }
              return function (n, r, i, a, o) {
                var s,
                  u,
                  l,
                  d,
                  f,
                  p,
                  h,
                  y,
                  g = n.indexOf("."),
                  b = S,
                  v = P;
                for (
                  g >= 0 &&
                    ((d = M),
                    (M = 0),
                    (n = n.replace(".", "")),
                    (p = (y = new F(r)).pow(n.length - g)),
                    (M = d),
                    (y.c = t(m(c(p.c), p.e, "0"), 10, i, e)),
                    (y.e = y.c.length)),
                    l = d =
                      (h = t(n, r, i, o ? ((s = D), e) : ((s = e), D))).length;
                  0 == h[--d];
                  h.pop()
                );
                if (!h[0]) return s.charAt(0);
                if (
                  (g < 0
                    ? --l
                    : ((p.c = h),
                      (p.e = l),
                      (p.s = a),
                      (h = (p = E(p, y, b, v, i)).c),
                      (f = p.r),
                      (l = p.e)),
                  (g = h[(u = l + b + 1)]),
                  (d = i / 2),
                  (f = f || u < 0 || null != h[u + 1]),
                  (f =
                    v < 4
                      ? (null != g || f) && (0 == v || v == (p.s < 0 ? 3 : 2))
                      : g > d ||
                        (g == d &&
                          (4 == v ||
                            f ||
                            (6 == v && 1 & h[u - 1]) ||
                            v == (p.s < 0 ? 8 : 7)))),
                  u < 1 || !h[0])
                )
                  n = f ? m(s.charAt(1), -b, s.charAt(0)) : s.charAt(0);
                else {
                  if (((h.length = u), f))
                    for (--i; ++h[--u] > i; )
                      (h[u] = 0), u || (++l, (h = [1].concat(h)));
                  for (d = h.length; !h[--d]; );
                  for (g = 0, n = ""; g <= d; n += s.charAt(h[g++]));
                  n = m(n, l, s.charAt(0));
                }
                return n;
              };
            })()),
            (E = (function () {
              function e(e, t, n) {
                var r,
                  i,
                  a,
                  o,
                  s = 0,
                  u = e.length,
                  l = t % 1e7,
                  c = (t / 1e7) | 0;
                for (e = e.slice(); u--; )
                  (r = c * (a = e[u] % 1e7) + (o = (e[u] / 1e7) | 0) * l),
                    (s =
                      (((i = l * a + (r % 1e7) * 1e7 + s) / n) | 0) +
                      ((r / 1e7) | 0) +
                      c * o),
                    (e[u] = i % n);
                return s && (e = [s].concat(e)), e;
              }
              function t(e, t, n, r) {
                var i, a;
                if (n != r) a = n > r ? 1 : -1;
                else
                  for (i = a = 0; i < n; i++)
                    if (e[i] != t[i]) {
                      a = e[i] > t[i] ? 1 : -1;
                      break;
                    }
                return a;
              }
              function n(e, t, n, r) {
                for (var i = 0; n--; )
                  (e[n] -= i),
                    (i = e[n] < t[n] ? 1 : 0),
                    (e[n] = i * r + e[n] - t[n]);
                for (; !e[0] && e.length > 1; e.splice(0, 1));
              }
              return function (r, i, o, s, u) {
                var c,
                  d,
                  f,
                  p,
                  h,
                  m,
                  y,
                  g,
                  b,
                  v,
                  w,
                  E,
                  x,
                  C,
                  _,
                  T,
                  S,
                  P = r.s == i.s ? 1 : -1,
                  O = r.c,
                  I = i.c;
                if (!O || !O[0] || !I || !I[0])
                  return new F(
                    r.s && i.s && (O ? !I || O[0] != I[0] : I)
                      ? (O && 0 == O[0]) || !I
                        ? 0 * P
                        : P / 0
                      : NaN
                  );
                for (
                  b = (g = new F(P)).c = [],
                    P = o + (d = r.e - i.e) + 1,
                    u ||
                      ((u = 1e14),
                      (d = l(r.e / 14) - l(i.e / 14)),
                      (P = (P / 14) | 0)),
                    f = 0;
                  I[f] == (O[f] || 0);
                  f++
                );
                if ((I[f] > (O[f] || 0) && d--, P < 0)) b.push(1), (p = !0);
                else {
                  for (
                    C = O.length,
                      T = I.length,
                      f = 0,
                      P += 2,
                      (h = a(u / (I[0] + 1))) > 1 &&
                        ((I = e(I, h, u)),
                        (O = e(O, h, u)),
                        (T = I.length),
                        (C = O.length)),
                      x = T,
                      w = (v = O.slice(0, T)).length;
                    w < T;
                    v[w++] = 0
                  );
                  (S = [0].concat((S = I.slice()))),
                    (_ = I[0]),
                    I[1] >= u / 2 && _++;
                  do {
                    if (((h = 0), (c = t(I, v, T, w)) < 0)) {
                      if (
                        ((E = v[0]),
                        T != w && (E = E * u + (v[1] || 0)),
                        (h = a(E / _)) > 1)
                      )
                        for (
                          h >= u && (h = u - 1),
                            y = (m = e(I, h, u)).length,
                            w = v.length;
                          1 == t(m, v, y, w);

                        )
                          h--,
                            n(m, T < y ? S : I, y, u),
                            (y = m.length),
                            (c = 1);
                      else 0 == h && (c = h = 1), (y = (m = I.slice()).length);
                      if (
                        (y < w && (m = [0].concat(m)),
                        n(v, m, w, u),
                        (w = v.length),
                        -1 == c)
                      )
                        for (; 1 > t(I, v, T, w); )
                          h++, n(v, T < w ? S : I, w, u), (w = v.length);
                    } else 0 === c && (h++, (v = [0]));
                    (b[f++] = h),
                      v[0] ? (v[w++] = O[x] || 0) : ((v = [O[x]]), (w = 1));
                  } while ((x++ < C || null != v[0]) && P--);
                  (p = null != v[0]), b[0] || b.splice(0, 1);
                }
                if (1e14 == u) {
                  for (f = 1, P = b[0]; P >= 10; P /= 10, f++);
                  q(g, o + (g.e = f + 14 * d - 1) + 1, s, p);
                } else (g.e = d), (g.r = +p);
                return g;
              };
            })()),
            (y = /^(-?)0([xbo])(?=\w[\w.]*$)/i),
            (g = /^([^.]+)\.$/),
            (b = /^\.([^.]+)$/),
            (v = /^-?(Infinity|NaN)$/),
            (w = /^\s*\+(?=[\w.])|^\s+|\s+$/g),
            (C = function (e, t, n, r) {
              var i,
                a = n ? t : t.replace(w, "");
              if (v.test(a)) e.s = isNaN(a) ? null : a < 0 ? -1 : 1;
              else {
                if (
                  !n &&
                  ((a = a.replace(y, function (e, t, n) {
                    return (
                      (i =
                        "x" == (n = n.toLowerCase()) ? 16 : "b" == n ? 2 : 8),
                      r && r != i ? e : t
                    );
                  })),
                  r && ((i = r), (a = a.replace(g, "$1").replace(b, "0.$1"))),
                  t != a)
                )
                  return new F(a, i);
                if (F.DEBUG)
                  throw Error(
                    o + "Not a" + (r ? " base " + r : "") + " number: " + t
                  );
                e.s = null;
              }
              e.c = e.e = null;
            }),
            (_.absoluteValue = _.abs =
              function () {
                var e = new F(this);
                return e.s < 0 && (e.s = 1), e;
              }),
            (_.comparedTo = function (e, t) {
              return d(this, new F(e, t));
            }),
            (_.decimalPlaces = _.dp =
              function (e, t) {
                var n, r, i;
                if (null != e)
                  return (
                    f(e, 0, 1e9),
                    null == t ? (t = P) : f(t, 0, 8),
                    q(new F(this), e + this.e + 1, t)
                  );
                if (!(n = this.c)) return null;
                if (
                  ((r = ((i = n.length - 1) - l(this.e / 14)) * 14), (i = n[i]))
                )
                  for (; i % 10 == 0; i /= 10, r--);
                return r < 0 && (r = 0), r;
              }),
            (_.dividedBy = _.div =
              function (e, t) {
                return E(this, new F(e, t), S, P);
              }),
            (_.dividedToIntegerBy = _.idiv =
              function (e, t) {
                return E(this, new F(e, t), 0, 1);
              }),
            (_.exponentiatedBy = _.pow =
              function (e, t) {
                var n,
                  r,
                  s,
                  u,
                  l,
                  c,
                  d,
                  f,
                  h,
                  m = this;
                if ((e = new F(e)).c && !e.isInteger())
                  throw Error(o + "Exponent not an integer: " + H(e));
                if (
                  (null != t && (t = new F(t)),
                  (c = e.e > 14),
                  !m.c ||
                    !m.c[0] ||
                    (1 == m.c[0] && !m.e && 1 == m.c.length) ||
                    !e.c ||
                    !e.c[0])
                )
                  return (
                    (h = new F(Math.pow(+H(m), c ? e.s * (2 - p(e)) : +H(e)))),
                    t ? h.mod(t) : h
                  );
                if (((d = e.s < 0), t)) {
                  if (t.c ? !t.c[0] : !t.s) return new F(NaN);
                  (r = !d && m.isInteger() && t.isInteger()) && (m = m.mod(t));
                } else {
                  if (
                    e.e > 9 &&
                    (m.e > 0 ||
                      m.e < -1 ||
                      (0 == m.e
                        ? m.c[0] > 1 || (c && m.c[1] >= 24e7)
                        : m.c[0] < 8e13 || (c && m.c[0] <= 9999975e7)))
                  )
                    return (
                      (u = m.s < 0 && p(e) ? -0 : 0),
                      m.e > -1 && (u = 1 / u),
                      new F(d ? 1 / u : u)
                    );
                  M && (u = i(M / 14 + 2));
                }
                for (
                  c
                    ? ((n = new F(0.5)), d && (e.s = 1), (f = p(e)))
                    : (f = (s = Math.abs(+H(e))) % 2),
                    h = new F(T);
                  ;

                ) {
                  if (f) {
                    if (!(h = h.times(m)).c) break;
                    u
                      ? h.c.length > u && (h.c.length = u)
                      : r && (h = h.mod(t));
                  }
                  if (s) {
                    if (0 === (s = a(s / 2))) break;
                    f = s % 2;
                  } else if ((q((e = e.times(n)), e.e + 1, 1), e.e > 14))
                    f = p(e);
                  else {
                    if (0 == (s = +H(e))) break;
                    f = s % 2;
                  }
                  (m = m.times(m)),
                    u
                      ? m.c && m.c.length > u && (m.c.length = u)
                      : r && (m = m.mod(t));
                }
                return r
                  ? h
                  : (d && (h = T.div(h)), t ? h.mod(t) : u ? q(h, M, P, l) : h);
              }),
            (_.integerValue = function (e) {
              var t = new F(this);
              return null == e ? (e = P) : f(e, 0, 8), q(t, t.e + 1, e);
            }),
            (_.isEqualTo = _.eq =
              function (e, t) {
                return 0 === d(this, new F(e, t));
              }),
            (_.isFinite = function () {
              return !!this.c;
            }),
            (_.isGreaterThan = _.gt =
              function (e, t) {
                return d(this, new F(e, t)) > 0;
              }),
            (_.isGreaterThanOrEqualTo = _.gte =
              function (e, t) {
                return 1 === (t = d(this, new F(e, t))) || 0 === t;
              }),
            (_.isInteger = function () {
              return !!this.c && l(this.e / 14) > this.c.length - 2;
            }),
            (_.isLessThan = _.lt =
              function (e, t) {
                return 0 > d(this, new F(e, t));
              }),
            (_.isLessThanOrEqualTo = _.lte =
              function (e, t) {
                return -1 === (t = d(this, new F(e, t))) || 0 === t;
              }),
            (_.isNaN = function () {
              return !this.s;
            }),
            (_.isNegative = function () {
              return this.s < 0;
            }),
            (_.isPositive = function () {
              return this.s > 0;
            }),
            (_.isZero = function () {
              return !!this.c && 0 == this.c[0];
            }),
            (_.minus = function (e, t) {
              var n,
                r,
                i,
                a,
                o = this.s;
              if (((t = (e = new F(e, t)).s), !o || !t)) return new F(NaN);
              if (o != t) return (e.s = -t), this.plus(e);
              var s = this.e / 14,
                u = e.e / 14,
                c = this.c,
                d = e.c;
              if (!s || !u) {
                if (!c || !d)
                  return c ? ((e.s = -t), e) : new F(d ? this : NaN);
                if (!c[0] || !d[0])
                  return d[0]
                    ? ((e.s = -t), e)
                    : new F(c[0] ? this : 3 == P ? -0 : 0);
              }
              if (((s = l(s)), (u = l(u)), (c = c.slice()), (o = s - u))) {
                for (
                  (a = o < 0) ? ((o = -o), (i = c)) : ((u = s), (i = d)),
                    i.reverse(),
                    t = o;
                  t--;
                  i.push(0)
                );
                i.reverse();
              } else
                for (
                  r = (a = (o = c.length) < (t = d.length)) ? o : t, o = t = 0;
                  t < r;
                  t++
                )
                  if (c[t] != d[t]) {
                    a = c[t] < d[t];
                    break;
                  }
              if (
                (a && ((i = c), (c = d), (d = i), (e.s = -e.s)),
                (t = (r = d.length) - (n = c.length)) > 0)
              )
                for (; t--; c[n++] = 0);
              for (t = 1e14 - 1; r > o; ) {
                if (c[--r] < d[r]) {
                  for (n = r; n && !c[--n]; c[n] = t);
                  --c[n], (c[r] += 1e14);
                }
                c[r] -= d[r];
              }
              for (; 0 == c[0]; c.splice(0, 1), --u);
              return c[0]
                ? $(e, c, u)
                : ((e.s = 3 == P ? -1 : 1), (e.c = [(e.e = 0)]), e);
            }),
            (_.modulo = _.mod =
              function (e, t) {
                var n, r;
                return ((e = new F(e, t)), this.c && e.s && (!e.c || e.c[0]))
                  ? e.c && (!this.c || this.c[0])
                    ? (9 == B
                        ? ((r = e.s),
                          (e.s = 1),
                          (n = E(this, e, 0, 3)),
                          (e.s = r),
                          (n.s *= r))
                        : (n = E(this, e, 0, B)),
                      (e = this.minus(n.times(e))).c[0] ||
                        1 != B ||
                        (e.s = this.s),
                      e)
                    : new F(this)
                  : new F(NaN);
              }),
            (_.multipliedBy = _.times =
              function (e, t) {
                var n,
                  r,
                  i,
                  a,
                  o,
                  s,
                  u,
                  c,
                  d,
                  f,
                  p,
                  h,
                  m,
                  y = this.c,
                  g = (e = new F(e, t)).c;
                if (!y || !g || !y[0] || !g[0])
                  return (
                    this.s && e.s && (!y || y[0] || g) && (!g || g[0] || y)
                      ? ((e.s *= this.s),
                        y && g ? ((e.c = [0]), (e.e = 0)) : (e.c = e.e = null))
                      : (e.c = e.e = e.s = null),
                    e
                  );
                for (
                  r = l(this.e / 14) + l(e.e / 14),
                    e.s *= this.s,
                    (u = y.length) < (f = g.length) &&
                      ((m = y), (y = g), (g = m), (i = u), (u = f), (f = i)),
                    i = u + f,
                    m = [];
                  i--;
                  m.push(0)
                );
                for (i = f; --i >= 0; ) {
                  for (
                    n = 0,
                      p = g[i] % 1e7,
                      h = (g[i] / 1e7) | 0,
                      o = u,
                      a = i + o;
                    a > i;

                  )
                    (s = h * (c = y[--o] % 1e7) + (d = (y[o] / 1e7) | 0) * p),
                      (n =
                        (((c = p * c + (s % 1e7) * 1e7 + m[a] + n) / 1e14) |
                          0) +
                        ((s / 1e7) | 0) +
                        h * d),
                      (m[a--] = c % 1e14);
                  m[a] = n;
                }
                return n ? ++r : m.splice(0, 1), $(e, m, r);
              }),
            (_.negated = function () {
              var e = new F(this);
              return (e.s = -e.s || null), e;
            }),
            (_.plus = function (e, t) {
              var n,
                r = this.s;
              if (((t = (e = new F(e, t)).s), !r || !t)) return new F(NaN);
              if (r != t) return (e.s = -t), this.minus(e);
              var i = this.e / 14,
                a = e.e / 14,
                o = this.c,
                s = e.c;
              if (!i || !a) {
                if (!o || !s) return new F(r / 0);
                if (!o[0] || !s[0])
                  return s[0] ? e : new F(o[0] ? this : 0 * r);
              }
              if (((i = l(i)), (a = l(a)), (o = o.slice()), (r = i - a))) {
                for (
                  r > 0 ? ((a = i), (n = s)) : ((r = -r), (n = o)), n.reverse();
                  r--;
                  n.push(0)
                );
                n.reverse();
              }
              for (
                (r = o.length) - (t = s.length) < 0 &&
                  ((n = s), (s = o), (o = n), (t = r)),
                  r = 0;
                t;

              )
                (r = ((o[--t] = o[t] + s[t] + r) / 1e14) | 0),
                  (o[t] = 1e14 === o[t] ? 0 : o[t] % 1e14);
              return r && ((o = [r].concat(o)), ++a), $(e, o, a);
            }),
            (_.precision = _.sd =
              function (e, t) {
                var n, r, i;
                if (null != e && !!e !== e)
                  return (
                    f(e, 1, 1e9),
                    null == t ? (t = P) : f(t, 0, 8),
                    q(new F(this), e, t)
                  );
                if (!(n = this.c)) return null;
                if (((r = 14 * (i = n.length - 1) + 1), (i = n[i]))) {
                  for (; i % 10 == 0; i /= 10, r--);
                  for (i = n[0]; i >= 10; i /= 10, r++);
                }
                return e && this.e + 1 > r && (r = this.e + 1), r;
              }),
            (_.shiftedBy = function (e) {
              return (
                f(e, -9007199254740991, 9007199254740991), this.times("1e" + e)
              );
            }),
            (_.squareRoot = _.sqrt =
              function () {
                var e,
                  t,
                  n,
                  r,
                  i,
                  a = this.c,
                  o = this.s,
                  s = this.e,
                  u = S + 4,
                  d = new F("0.5");
                if (1 !== o || !a || !a[0])
                  return new F(
                    !o || (o < 0 && (!a || a[0])) ? NaN : a ? this : 1 / 0
                  );
                if (
                  (0 == (o = Math.sqrt(+H(this))) || o == 1 / 0
                    ? (((t = c(a)).length + s) % 2 == 0 && (t += "0"),
                      (o = Math.sqrt(+t)),
                      (s = l((s + 1) / 2) - (s < 0 || s % 2)),
                      (t =
                        o == 1 / 0
                          ? "5e" + s
                          : (t = o.toExponential()).slice(
                              0,
                              t.indexOf("e") + 1
                            ) + s),
                      (n = new F(t)))
                    : (n = new F(o + "")),
                  n.c[0])
                ) {
                  for ((o = (s = n.e) + u) < 3 && (o = 0); ; )
                    if (
                      ((i = n),
                      (n = d.times(i.plus(E(this, i, u, 1)))),
                      c(i.c).slice(0, o) === (t = c(n.c)).slice(0, o))
                    ) {
                      if (
                        (n.e < s && --o,
                        "9999" != (t = t.slice(o - 3, o + 1)) &&
                          (r || "4999" != t))
                      ) {
                        (+t && (+t.slice(1) || "5" != t.charAt(0))) ||
                          (q(n, n.e + S + 2, 1), (e = !n.times(n).eq(this)));
                        break;
                      }
                      if (!r && (q(i, i.e + S + 2, 0), i.times(i).eq(this))) {
                        n = i;
                        break;
                      }
                      (u += 4), (o += 4), (r = 1);
                    }
                }
                return q(n, n.e + S + 1, P, e);
              }),
            (_.toExponential = function (e, t) {
              return null != e && (f(e, 0, 1e9), e++), L(this, e, t, 1);
            }),
            (_.toFixed = function (e, t) {
              return (
                null != e && (f(e, 0, 1e9), (e = e + this.e + 1)), L(this, e, t)
              );
            }),
            (_.toFormat = function (e, t, n) {
              var r;
              if (null == n)
                null != e && t && "object" == typeof t
                  ? ((n = t), (t = null))
                  : e && "object" == typeof e
                  ? ((n = e), (e = t = null))
                  : (n = N);
              else if ("object" != typeof n)
                throw Error(o + "Argument not an object: " + n);
              if (((r = this.toFixed(e, t)), this.c)) {
                var i,
                  a = r.split("."),
                  s = +n.groupSize,
                  u = +n.secondaryGroupSize,
                  l = n.groupSeparator || "",
                  c = a[0],
                  d = a[1],
                  f = this.s < 0,
                  p = f ? c.slice(1) : c,
                  h = p.length;
                if (
                  (u && ((i = s), (s = u), (u = i), (h -= i)), s > 0 && h > 0)
                ) {
                  for (i = h % s || s, c = p.substr(0, i); i < h; i += s)
                    c += l + p.substr(i, s);
                  u > 0 && (c += l + p.slice(i)), f && (c = "-" + c);
                }
                r = d
                  ? c +
                    (n.decimalSeparator || "") +
                    ((u = +n.fractionGroupSize)
                      ? d.replace(
                          RegExp("\\d{" + u + "}\\B", "g"),
                          "$&" + (n.fractionGroupSeparator || "")
                        )
                      : d)
                  : c;
              }
              return (n.prefix || "") + r + (n.suffix || "");
            }),
            (_.toFraction = function (e) {
              var t,
                n,
                r,
                i,
                a,
                s,
                l,
                d,
                f,
                p,
                h,
                m,
                y = this.c;
              if (
                null != e &&
                ((!(l = new F(e)).isInteger() && (l.c || 1 !== l.s)) || l.lt(T))
              )
                throw Error(
                  o +
                    "Argument " +
                    (l.isInteger() ? "out of range: " : "not an integer: ") +
                    H(l)
                );
              if (!y) return new F(this);
              for (
                t = new F(T),
                  f = n = new F(T),
                  r = d = new F(T),
                  m = c(y),
                  a = t.e = m.length - this.e - 1,
                  t.c[0] = u[(s = a % 14) < 0 ? 14 + s : s],
                  e = !e || l.comparedTo(t) > 0 ? (a > 0 ? t : f) : l,
                  s = k,
                  k = 1 / 0,
                  l = new F(m),
                  d.c[0] = 0;
                (p = E(l, t, 0, 1)),
                  1 != (i = n.plus(p.times(r))).comparedTo(e);

              )
                (n = r),
                  (r = i),
                  (f = d.plus(p.times((i = f)))),
                  (d = i),
                  (t = l.minus(p.times((i = t)))),
                  (l = i);
              return (
                (i = E(e.minus(n), r, 0, 1)),
                (d = d.plus(i.times(f))),
                (n = n.plus(i.times(r))),
                (d.s = f.s = this.s),
                (a *= 2),
                (h =
                  1 >
                  E(f, r, a, P)
                    .minus(this)
                    .abs()
                    .comparedTo(E(d, n, a, P).minus(this).abs())
                    ? [f, r]
                    : [d, n]),
                (k = s),
                h
              );
            }),
            (_.toNumber = function () {
              return +H(this);
            }),
            (_.toPrecision = function (e, t) {
              return null != e && f(e, 1, 1e9), L(this, e, t, 2);
            }),
            (_.toString = function (e) {
              var t,
                n = this,
                r = n.s,
                i = n.e;
              return (
                null === i
                  ? r
                    ? ((t = "Infinity"), r < 0 && (t = "-" + t))
                    : (t = "NaN")
                  : (null == e
                      ? (t =
                          i <= O || i >= I ? h(c(n.c), i) : m(c(n.c), i, "0"))
                      : 10 === e && R
                      ? (t = m(c((n = q(new F(n), S + i + 1, P)).c), n.e, "0"))
                      : (f(e, 2, D.length, "Base"),
                        (t = x(m(c(n.c), i, "0"), 10, e, r, !0))),
                    r < 0 && n.c[0] && (t = "-" + t)),
                t
              );
            }),
            (_.valueOf = _.toJSON =
              function () {
                return H(this);
              }),
            (_._isBigNumber = !0),
            (_[Symbol.toStringTag] = "BigNumber"),
            (_[Symbol.for("nodejs.util.inspect.custom")] = _.valueOf),
            null != t && F.set(t),
            F
          );
        })();
        t.Z = y;
      },
      54943: function (e, t, n) {
        "use strict";
        n.r(t),
          n.d(t, {
            WebSocket: function () {
              return r;
            },
          });
        let r = (function () {
          if ("undefined" != typeof WebSocket) return WebSocket;
          if (void 0 !== global.WebSocket) return global.WebSocket;
          if (void 0 !== window.WebSocket) return window.WebSocket;
          if (void 0 !== self.WebSocket) return self.WebSocket;
          throw Error("`WebSocket` is not supported in this environment");
        })();
      },
      97582: function (e, t, n) {
        "use strict";
        n.r(t),
          n.d(t, {
            __addDisposableResource: function () {
              return M;
            },
            __assign: function () {
              return a;
            },
            __asyncDelegator: function () {
              return T;
            },
            __asyncGenerator: function () {
              return _;
            },
            __asyncValues: function () {
              return S;
            },
            __await: function () {
              return C;
            },
            __awaiter: function () {
              return h;
            },
            __classPrivateFieldGet: function () {
              return k;
            },
            __classPrivateFieldIn: function () {
              return B;
            },
            __classPrivateFieldSet: function () {
              return j;
            },
            __createBinding: function () {
              return y;
            },
            __decorate: function () {
              return s;
            },
            __disposeResources: function () {
              return D;
            },
            __esDecorate: function () {
              return l;
            },
            __exportStar: function () {
              return g;
            },
            __extends: function () {
              return i;
            },
            __generator: function () {
              return m;
            },
            __importDefault: function () {
              return A;
            },
            __importStar: function () {
              return I;
            },
            __makeTemplateObject: function () {
              return P;
            },
            __metadata: function () {
              return p;
            },
            __param: function () {
              return u;
            },
            __propKey: function () {
              return d;
            },
            __read: function () {
              return v;
            },
            __rest: function () {
              return o;
            },
            __runInitializers: function () {
              return c;
            },
            __setFunctionName: function () {
              return f;
            },
            __spread: function () {
              return w;
            },
            __spreadArray: function () {
              return x;
            },
            __spreadArrays: function () {
              return E;
            },
            __values: function () {
              return b;
            },
          });
        var r = function (e, t) {
          return (r =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function (e, t) {
                e.__proto__ = t;
              }) ||
            function (e, t) {
              for (var n in t)
                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            })(e, t);
        };
        function i(e, t) {
          if ("function" != typeof t && null !== t)
            throw TypeError(
              "Class extends value " +
                String(t) +
                " is not a constructor or null"
            );
          function n() {
            this.constructor = e;
          }
          r(e, t),
            (e.prototype =
              null === t
                ? Object.create(t)
                : ((n.prototype = t.prototype), new n()));
        }
        var a = function () {
          return (a =
            Object.assign ||
            function (e) {
              for (var t, n = 1, r = arguments.length; n < r; n++)
                for (var i in (t = arguments[n]))
                  Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
              return e;
            }).apply(this, arguments);
        };
        function o(e, t) {
          var n = {};
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) &&
              0 > t.indexOf(r) &&
              (n[r] = e[r]);
          if (null != e && "function" == typeof Object.getOwnPropertySymbols)
            for (
              var i = 0, r = Object.getOwnPropertySymbols(e);
              i < r.length;
              i++
            )
              0 > t.indexOf(r[i]) &&
                Object.prototype.propertyIsEnumerable.call(e, r[i]) &&
                (n[r[i]] = e[r[i]]);
          return n;
        }
        function s(e, t, n, r) {
          var i,
            a = arguments.length,
            o =
              a < 3
                ? t
                : null === r
                ? (r = Object.getOwnPropertyDescriptor(t, n))
                : r;
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.decorate
          )
            o = Reflect.decorate(e, t, n, r);
          else
            for (var s = e.length - 1; s >= 0; s--)
              (i = e[s]) &&
                (o = (a < 3 ? i(o) : a > 3 ? i(t, n, o) : i(t, n)) || o);
          return a > 3 && o && Object.defineProperty(t, n, o), o;
        }
        function u(e, t) {
          return function (n, r) {
            t(n, r, e);
          };
        }
        function l(e, t, n, r, i, a) {
          function o(e) {
            if (void 0 !== e && "function" != typeof e)
              throw TypeError("Function expected");
            return e;
          }
          for (
            var s,
              u = r.kind,
              l = "getter" === u ? "get" : "setter" === u ? "set" : "value",
              c = !t && e ? (r.static ? e : e.prototype) : null,
              d = t || (c ? Object.getOwnPropertyDescriptor(c, r.name) : {}),
              f = !1,
              p = n.length - 1;
            p >= 0;
            p--
          ) {
            var h = {};
            for (var m in r) h[m] = "access" === m ? {} : r[m];
            for (var m in r.access) h.access[m] = r.access[m];
            h.addInitializer = function (e) {
              if (f)
                throw TypeError(
                  "Cannot add initializers after decoration has completed"
                );
              a.push(o(e || null));
            };
            var y = (0, n[p])(
              "accessor" === u ? { get: d.get, set: d.set } : d[l],
              h
            );
            if ("accessor" === u) {
              if (void 0 === y) continue;
              if (null === y || "object" != typeof y)
                throw TypeError("Object expected");
              (s = o(y.get)) && (d.get = s),
                (s = o(y.set)) && (d.set = s),
                (s = o(y.init)) && i.unshift(s);
            } else (s = o(y)) && ("field" === u ? i.unshift(s) : (d[l] = s));
          }
          c && Object.defineProperty(c, r.name, d), (f = !0);
        }
        function c(e, t, n) {
          for (var r = arguments.length > 2, i = 0; i < t.length; i++)
            n = r ? t[i].call(e, n) : t[i].call(e);
          return r ? n : void 0;
        }
        function d(e) {
          return "symbol" == typeof e ? e : "".concat(e);
        }
        function f(e, t, n) {
          return (
            "symbol" == typeof t &&
              (t = t.description ? "[".concat(t.description, "]") : ""),
            Object.defineProperty(e, "name", {
              configurable: !0,
              value: n ? "".concat(n, " ", t) : t,
            })
          );
        }
        function p(e, t) {
          if (
            "object" == typeof Reflect &&
            "function" == typeof Reflect.metadata
          )
            return Reflect.metadata(e, t);
        }
        function h(e, t, n, r) {
          return new (n || (n = Promise))(function (i, a) {
            function o(e) {
              try {
                u(r.next(e));
              } catch (e) {
                a(e);
              }
            }
            function s(e) {
              try {
                u(r.throw(e));
              } catch (e) {
                a(e);
              }
            }
            function u(e) {
              var t;
              e.done
                ? i(e.value)
                : ((t = e.value) instanceof n
                    ? t
                    : new n(function (e) {
                        e(t);
                      })
                  ).then(o, s);
            }
            u((r = r.apply(e, t || [])).next());
          });
        }
        function m(e, t) {
          var n,
            r,
            i,
            a,
            o = {
              label: 0,
              sent: function () {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: [],
            };
          return (
            (a = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (a[Symbol.iterator] = function () {
                return this;
              }),
            a
          );
          function s(s) {
            return function (u) {
              return (function (s) {
                if (n) throw TypeError("Generator is already executing.");
                for (; a && ((a = 0), s[0] && (o = 0)), o; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & s[0]
                            ? r.return
                            : s[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, s[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (s = [2 & s[0], i.value]), s[0])) {
                      case 0:
                      case 1:
                        i = s;
                        break;
                      case 4:
                        return o.label++, { value: s[1], done: !1 };
                      case 5:
                        o.label++, (r = s[1]), (s = [0]);
                        continue;
                      case 7:
                        (s = o.ops.pop()), o.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = o.trys).length > 0 && i[i.length - 1]) &&
                          (6 === s[0] || 2 === s[0])
                        ) {
                          o = 0;
                          continue;
                        }
                        if (
                          3 === s[0] &&
                          (!i || (s[1] > i[0] && s[1] < i[3]))
                        ) {
                          o.label = s[1];
                          break;
                        }
                        if (6 === s[0] && o.label < i[1]) {
                          (o.label = i[1]), (i = s);
                          break;
                        }
                        if (i && o.label < i[2]) {
                          (o.label = i[2]), o.ops.push(s);
                          break;
                        }
                        i[2] && o.ops.pop(), o.trys.pop();
                        continue;
                    }
                    s = t.call(e, o);
                  } catch (e) {
                    (s = [6, e]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & s[0]) throw s[1];
                return { value: s[0] ? s[1] : void 0, done: !0 };
              })([s, u]);
            };
          }
        }
        var y = Object.create
          ? function (e, t, n, r) {
              void 0 === r && (r = n);
              var i = Object.getOwnPropertyDescriptor(t, n);
              (!i ||
                ("get" in i ? !t.__esModule : i.writable || i.configurable)) &&
                (i = {
                  enumerable: !0,
                  get: function () {
                    return t[n];
                  },
                }),
                Object.defineProperty(e, r, i);
            }
          : function (e, t, n, r) {
              void 0 === r && (r = n), (e[r] = t[n]);
            };
        function g(e, t) {
          for (var n in e)
            "default" === n ||
              Object.prototype.hasOwnProperty.call(t, n) ||
              y(t, e, n);
        }
        function b(e) {
          var t = "function" == typeof Symbol && Symbol.iterator,
            n = t && e[t],
            r = 0;
          if (n) return n.call(e);
          if (e && "number" == typeof e.length)
            return {
              next: function () {
                return (
                  e && r >= e.length && (e = void 0),
                  { value: e && e[r++], done: !e }
                );
              },
            };
          throw TypeError(
            t ? "Object is not iterable." : "Symbol.iterator is not defined."
          );
        }
        function v(e, t) {
          var n = "function" == typeof Symbol && e[Symbol.iterator];
          if (!n) return e;
          var r,
            i,
            a = n.call(e),
            o = [];
          try {
            for (; (void 0 === t || t-- > 0) && !(r = a.next()).done; )
              o.push(r.value);
          } catch (e) {
            i = { error: e };
          } finally {
            try {
              r && !r.done && (n = a.return) && n.call(a);
            } finally {
              if (i) throw i.error;
            }
          }
          return o;
        }
        function w() {
          for (var e = [], t = 0; t < arguments.length; t++)
            e = e.concat(v(arguments[t]));
          return e;
        }
        function E() {
          for (var e = 0, t = 0, n = arguments.length; t < n; t++)
            e += arguments[t].length;
          for (var r = Array(e), i = 0, t = 0; t < n; t++)
            for (var a = arguments[t], o = 0, s = a.length; o < s; o++, i++)
              r[i] = a[o];
          return r;
        }
        function x(e, t, n) {
          if (n || 2 == arguments.length)
            for (var r, i = 0, a = t.length; i < a; i++)
              (!r && i in t) ||
                (r || (r = Array.prototype.slice.call(t, 0, i)), (r[i] = t[i]));
          return e.concat(r || Array.prototype.slice.call(t));
        }
        function C(e) {
          return this instanceof C ? ((this.v = e), this) : new C(e);
        }
        function _(e, t, n) {
          if (!Symbol.asyncIterator)
            throw TypeError("Symbol.asyncIterator is not defined.");
          var r,
            i = n.apply(e, t || []),
            a = [];
          return (
            (r = {}),
            o("next"),
            o("throw"),
            o("return"),
            (r[Symbol.asyncIterator] = function () {
              return this;
            }),
            r
          );
          function o(e) {
            i[e] &&
              (r[e] = function (t) {
                return new Promise(function (n, r) {
                  a.push([e, t, n, r]) > 1 || s(e, t);
                });
              });
          }
          function s(e, t) {
            try {
              var n;
              (n = i[e](t)).value instanceof C
                ? Promise.resolve(n.value.v).then(u, l)
                : c(a[0][2], n);
            } catch (e) {
              c(a[0][3], e);
            }
          }
          function u(e) {
            s("next", e);
          }
          function l(e) {
            s("throw", e);
          }
          function c(e, t) {
            e(t), a.shift(), a.length && s(a[0][0], a[0][1]);
          }
        }
        function T(e) {
          var t, n;
          return (
            (t = {}),
            r("next"),
            r("throw", function (e) {
              throw e;
            }),
            r("return"),
            (t[Symbol.iterator] = function () {
              return this;
            }),
            t
          );
          function r(r, i) {
            t[r] = e[r]
              ? function (t) {
                  return (n = !n)
                    ? { value: C(e[r](t)), done: !1 }
                    : i
                    ? i(t)
                    : t;
                }
              : i;
          }
        }
        function S(e) {
          if (!Symbol.asyncIterator)
            throw TypeError("Symbol.asyncIterator is not defined.");
          var t,
            n = e[Symbol.asyncIterator];
          return n
            ? n.call(e)
            : ((e = b(e)),
              (t = {}),
              r("next"),
              r("throw"),
              r("return"),
              (t[Symbol.asyncIterator] = function () {
                return this;
              }),
              t);
          function r(n) {
            t[n] =
              e[n] &&
              function (t) {
                return new Promise(function (r, i) {
                  (function (e, t, n, r) {
                    Promise.resolve(r).then(function (t) {
                      e({ value: t, done: n });
                    }, t);
                  })(r, i, (t = e[n](t)).done, t.value);
                });
              };
          }
        }
        function P(e, t) {
          return (
            Object.defineProperty
              ? Object.defineProperty(e, "raw", { value: t })
              : (e.raw = t),
            e
          );
        }
        var O = Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: !0, value: t });
            }
          : function (e, t) {
              e.default = t;
            };
        function I(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              "default" !== n &&
                Object.prototype.hasOwnProperty.call(e, n) &&
                y(t, e, n);
          return O(t, e), t;
        }
        function A(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function k(e, t, n, r) {
          if ("a" === n && !r)
            throw TypeError("Private accessor was defined without a getter");
          if ("function" == typeof t ? e !== t || !r : !t.has(e))
            throw TypeError(
              "Cannot read private member from an object whose class did not declare it"
            );
          return "m" === n ? r : "a" === n ? r.call(e) : r ? r.value : t.get(e);
        }
        function j(e, t, n, r, i) {
          if ("m" === r) throw TypeError("Private method is not writable");
          if ("a" === r && !i)
            throw TypeError("Private accessor was defined without a setter");
          if ("function" == typeof t ? e !== t || !i : !t.has(e))
            throw TypeError(
              "Cannot write private member to an object whose class did not declare it"
            );
          return "a" === r ? i.call(e, n) : i ? (i.value = n) : t.set(e, n), n;
        }
        function B(e, t) {
          if (null === t || ("object" != typeof t && "function" != typeof t))
            throw TypeError("Cannot use 'in' operator on non-object");
          return "function" == typeof e ? t === e : e.has(t);
        }
        function M(e, t, n) {
          if (null != t) {
            var r;
            if ("object" != typeof t && "function" != typeof t)
              throw TypeError("Object expected.");
            if (n) {
              if (!Symbol.asyncDispose)
                throw TypeError("Symbol.asyncDispose is not defined.");
              r = t[Symbol.asyncDispose];
            }
            if (void 0 === r) {
              if (!Symbol.dispose)
                throw TypeError("Symbol.dispose is not defined.");
              r = t[Symbol.dispose];
            }
            if ("function" != typeof r)
              throw TypeError("Object not disposable.");
            e.stack.push({ value: t, dispose: r, async: n });
          } else n && e.stack.push({ async: !0 });
          return t;
        }
        var N =
          "function" == typeof SuppressedError
            ? SuppressedError
            : function (e, t, n) {
                var r = Error(n);
                return (
                  (r.name = "SuppressedError"),
                  (r.error = e),
                  (r.suppressed = t),
                  r
                );
              };
        function D(e) {
          function t(t) {
            (e.error = e.hasError
              ? new N(t, e.error, "An error was suppressed during disposal.")
              : t),
              (e.hasError = !0);
          }
          return (function n() {
            for (; e.stack.length; ) {
              var r = e.stack.pop();
              try {
                var i = r.dispose && r.dispose.call(r.value);
                if (r.async)
                  return Promise.resolve(i).then(n, function (e) {
                    return t(e), n();
                  });
              } catch (e) {
                t(e);
              }
            }
            if (e.hasError) throw e.error;
          })();
        }
        t.default = {
          __extends: i,
          __assign: a,
          __rest: o,
          __decorate: s,
          __param: u,
          __metadata: p,
          __awaiter: h,
          __generator: m,
          __createBinding: y,
          __exportStar: g,
          __values: b,
          __read: v,
          __spread: w,
          __spreadArrays: E,
          __spreadArray: x,
          __await: C,
          __asyncGenerator: _,
          __asyncDelegator: T,
          __asyncValues: S,
          __makeTemplateObject: P,
          __importStar: I,
          __importDefault: A,
          __classPrivateFieldGet: k,
          __classPrivateFieldSet: j,
          __classPrivateFieldIn: B,
          __addDisposableResource: M,
          __disposeResources: D,
        };
      },
      53160: function (e, t, n) {
        "use strict";
        n.d(t, {
          E: function () {
            return i;
          },
        });
        var r = n(16867);
        function i(e = 0) {
          return null != globalThis.Buffer &&
            null != globalThis.Buffer.allocUnsafe
            ? (0, r.P)(globalThis.Buffer.allocUnsafe(e))
            : new Uint8Array(e);
        }
      },
      20605: function (e, t, n) {
        "use strict";
        n.d(t, {
          z: function () {
            return a;
          },
        });
        var r = n(53160),
          i = n(16867);
        function a(e, t) {
          t || (t = e.reduce((e, t) => e + t.length, 0));
          let n = (0, r.E)(t),
            a = 0;
          for (let t of e) n.set(t, a), (a += t.length);
          return (0, i.P)(n);
        }
      },
      52217: function (e, t, n) {
        "use strict";
        n.d(t, {
          m: function () {
            return a;
          },
        });
        var r = n(73149),
          i = n(16867);
        function a(e, t = "utf8") {
          let n = r.Z[t];
          if (!n) throw Error(`Unsupported encoding "${t}"`);
          return ("utf8" === t || "utf-8" === t) &&
            null != globalThis.Buffer &&
            null != globalThis.Buffer.from
            ? (0, i.P)(globalThis.Buffer.from(e, "utf-8"))
            : n.decoder.decode(`${n.prefix}${e}`);
        }
      },
      37466: function (e, t, n) {
        "use strict";
        n.d(t, {
          BB: function () {
            return a.B;
          },
          mL: function () {
            return i.m;
          },
          zo: function () {
            return r.z;
          },
        });
        var r = n(20605),
          i = n(52217),
          a = n(92263);
      },
      92263: function (e, t, n) {
        "use strict";
        n.d(t, {
          B: function () {
            return i;
          },
        });
        var r = n(73149);
        function i(e, t = "utf8") {
          let n = r.Z[t];
          if (!n) throw Error(`Unsupported encoding "${t}"`);
          return ("utf8" === t || "utf-8" === t) &&
            null != globalThis.Buffer &&
            null != globalThis.Buffer.from
            ? globalThis.Buffer.from(
                e.buffer,
                e.byteOffset,
                e.byteLength
              ).toString("utf8")
            : n.encoder.encode(e).substring(1);
        }
      },
      16867: function (e, t, n) {
        "use strict";
        function r(e) {
          return null != globalThis.Buffer
            ? new Uint8Array(e.buffer, e.byteOffset, e.byteLength)
            : e;
        }
        n.d(t, {
          P: function () {
            return r;
          },
        });
      },
      73149: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return eZ;
          },
        });
        var r = {};
        n.r(r),
          n.d(r, {
            identity: function () {
              return j;
            },
          });
        var i = {};
        n.r(i),
          n.d(i, {
            base2: function () {
              return B;
            },
          });
        var a = {};
        n.r(a),
          n.d(a, {
            base8: function () {
              return M;
            },
          });
        var o = {};
        n.r(o),
          n.d(o, {
            base10: function () {
              return N;
            },
          });
        var s = {};
        n.r(s),
          n.d(s, {
            base16: function () {
              return D;
            },
            base16upper: function () {
              return R;
            },
          });
        var u = {};
        n.r(u),
          n.d(u, {
            base32: function () {
              return F;
            },
            base32hex: function () {
              return q;
            },
            base32hexpad: function () {
              return z;
            },
            base32hexpadupper: function () {
              return G;
            },
            base32hexupper: function () {
              return H;
            },
            base32pad: function () {
              return U;
            },
            base32padupper: function () {
              return $;
            },
            base32upper: function () {
              return L;
            },
            base32z: function () {
              return W;
            },
          });
        var l = {};
        n.r(l),
          n.d(l, {
            base36: function () {
              return V;
            },
            base36upper: function () {
              return K;
            },
          });
        var c = {};
        n.r(c),
          n.d(c, {
            base58btc: function () {
              return Z;
            },
            base58flickr: function () {
              return J;
            },
          });
        var d = {};
        n.r(d),
          n.d(d, {
            base64: function () {
              return Y;
            },
            base64pad: function () {
              return X;
            },
            base64url: function () {
              return Q;
            },
            base64urlpad: function () {
              return ee;
            },
          });
        var f = {};
        n.r(f),
          n.d(f, {
            base256emoji: function () {
              return ei;
            },
          });
        var p = {};
        n.r(p),
          n.d(p, {
            sha256: function () {
              return eb;
            },
            sha512: function () {
              return ev;
            },
          });
        var h = {};
        n.r(h),
          n.d(h, {
            identity: function () {
              return ew;
            },
          });
        var m = {};
        n.r(m),
          n.d(m, {
            code: function () {
              return ex;
            },
            decode: function () {
              return e_;
            },
            encode: function () {
              return eC;
            },
            name: function () {
              return eE;
            },
          });
        var y = {};
        n.r(y),
          n.d(y, {
            code: function () {
              return eO;
            },
            decode: function () {
              return eA;
            },
            encode: function () {
              return eI;
            },
            name: function () {
              return eP;
            },
          });
        var g = function (e, t) {
          if (e.length >= 255) throw TypeError("Alphabet too long");
          for (var n = new Uint8Array(256), r = 0; r < n.length; r++)
            n[r] = 255;
          for (var i = 0; i < e.length; i++) {
            var a = e.charAt(i),
              o = a.charCodeAt(0);
            if (255 !== n[o]) throw TypeError(a + " is ambiguous");
            n[o] = i;
          }
          var s = e.length,
            u = e.charAt(0),
            l = Math.log(s) / Math.log(256),
            c = Math.log(256) / Math.log(s);
          function d(e) {
            if ("string" != typeof e) throw TypeError("Expected String");
            if (0 === e.length) return new Uint8Array();
            var t = 0;
            if (" " !== e[0]) {
              for (var r = 0, i = 0; e[t] === u; ) r++, t++;
              for (
                var a = ((e.length - t) * l + 1) >>> 0, o = new Uint8Array(a);
                e[t];

              ) {
                var c = n[e.charCodeAt(t)];
                if (255 === c) return;
                for (
                  var d = 0, f = a - 1;
                  (0 !== c || d < i) && -1 !== f;
                  f--, d++
                )
                  (c += (s * o[f]) >>> 0),
                    (o[f] = c % 256 >>> 0),
                    (c = (c / 256) >>> 0);
                if (0 !== c) throw Error("Non-zero carry");
                (i = d), t++;
              }
              if (" " !== e[t]) {
                for (var p = a - i; p !== a && 0 === o[p]; ) p++;
                for (var h = new Uint8Array(r + (a - p)), m = r; p !== a; )
                  h[m++] = o[p++];
                return h;
              }
            }
          }
          return {
            encode: function (t) {
              if (
                (t instanceof Uint8Array ||
                  (ArrayBuffer.isView(t)
                    ? (t = new Uint8Array(t.buffer, t.byteOffset, t.byteLength))
                    : Array.isArray(t) && (t = Uint8Array.from(t))),
                !(t instanceof Uint8Array))
              )
                throw TypeError("Expected Uint8Array");
              if (0 === t.length) return "";
              for (
                var n = 0, r = 0, i = 0, a = t.length;
                i !== a && 0 === t[i];

              )
                i++, n++;
              for (
                var o = ((a - i) * c + 1) >>> 0, l = new Uint8Array(o);
                i !== a;

              ) {
                for (
                  var d = t[i], f = 0, p = o - 1;
                  (0 !== d || f < r) && -1 !== p;
                  p--, f++
                )
                  (d += (256 * l[p]) >>> 0),
                    (l[p] = d % s >>> 0),
                    (d = (d / s) >>> 0);
                if (0 !== d) throw Error("Non-zero carry");
                (r = f), i++;
              }
              for (var h = o - r; h !== o && 0 === l[h]; ) h++;
              for (var m = u.repeat(n); h < o; ++h) m += e.charAt(l[h]);
              return m;
            },
            decodeUnsafe: d,
            decode: function (e) {
              var n = d(e);
              if (n) return n;
              throw Error(`Non-${t} character`);
            },
          };
        };
        new Uint8Array(0);
        let b = (e, t) => {
            if (e === t) return !0;
            if (e.byteLength !== t.byteLength) return !1;
            for (let n = 0; n < e.byteLength; n++) if (e[n] !== t[n]) return !1;
            return !0;
          },
          v = (e) => {
            if (e instanceof Uint8Array && "Uint8Array" === e.constructor.name)
              return e;
            if (e instanceof ArrayBuffer) return new Uint8Array(e);
            if (ArrayBuffer.isView(e))
              return new Uint8Array(e.buffer, e.byteOffset, e.byteLength);
            throw Error("Unknown type, must be binary type");
          },
          w = (e) => new TextEncoder().encode(e),
          E = (e) => new TextDecoder().decode(e);
        class x {
          constructor(e, t, n) {
            (this.name = e), (this.prefix = t), (this.baseEncode = n);
          }
          encode(e) {
            if (e instanceof Uint8Array)
              return `${this.prefix}${this.baseEncode(e)}`;
            throw Error("Unknown type, must be binary type");
          }
        }
        class C {
          constructor(e, t, n) {
            if (
              ((this.name = e), (this.prefix = t), void 0 === t.codePointAt(0))
            )
              throw Error("Invalid prefix character");
            (this.prefixCodePoint = t.codePointAt(0)), (this.baseDecode = n);
          }
          decode(e) {
            if ("string" == typeof e) {
              if (e.codePointAt(0) !== this.prefixCodePoint)
                throw Error(
                  `Unable to decode multibase string ${JSON.stringify(e)}, ${
                    this.name
                  } decoder only supports inputs prefixed with ${this.prefix}`
                );
              return this.baseDecode(e.slice(this.prefix.length));
            }
            throw Error("Can only multibase decode strings");
          }
          or(e) {
            return T(this, e);
          }
        }
        class _ {
          constructor(e) {
            this.decoders = e;
          }
          or(e) {
            return T(this, e);
          }
          decode(e) {
            let t = e[0],
              n = this.decoders[t];
            if (n) return n.decode(e);
            throw RangeError(
              `Unable to decode multibase string ${JSON.stringify(
                e
              )}, only inputs prefixed with ${Object.keys(
                this.decoders
              )} are supported`
            );
          }
        }
        let T = (e, t) =>
          new _({
            ...(e.decoders || { [e.prefix]: e }),
            ...(t.decoders || { [t.prefix]: t }),
          });
        class S {
          constructor(e, t, n, r) {
            (this.name = e),
              (this.prefix = t),
              (this.baseEncode = n),
              (this.baseDecode = r),
              (this.encoder = new x(e, t, n)),
              (this.decoder = new C(e, t, r));
          }
          encode(e) {
            return this.encoder.encode(e);
          }
          decode(e) {
            return this.decoder.decode(e);
          }
        }
        let P = ({ name: e, prefix: t, encode: n, decode: r }) =>
            new S(e, t, n, r),
          O = ({ prefix: e, name: t, alphabet: n }) => {
            let { encode: r, decode: i } = g(n, t);
            return P({ prefix: e, name: t, encode: r, decode: (e) => v(i(e)) });
          },
          I = (e, t, n, r) => {
            let i = {};
            for (let e = 0; e < t.length; ++e) i[t[e]] = e;
            let a = e.length;
            for (; "=" === e[a - 1]; ) --a;
            let o = new Uint8Array(((a * n) / 8) | 0),
              s = 0,
              u = 0,
              l = 0;
            for (let t = 0; t < a; ++t) {
              let a = i[e[t]];
              if (void 0 === a) throw SyntaxError(`Non-${r} character`);
              (u = (u << n) | a),
                (s += n) >= 8 && ((s -= 8), (o[l++] = 255 & (u >> s)));
            }
            if (s >= n || 255 & (u << (8 - s)))
              throw SyntaxError("Unexpected end of data");
            return o;
          },
          A = (e, t, n) => {
            let r = "=" === t[t.length - 1],
              i = (1 << n) - 1,
              a = "",
              o = 0,
              s = 0;
            for (let r = 0; r < e.length; ++r)
              for (s = (s << 8) | e[r], o += 8; o > n; )
                (o -= n), (a += t[i & (s >> o)]);
            if ((o && (a += t[i & (s << (n - o))]), r))
              for (; (a.length * n) & 7; ) a += "=";
            return a;
          },
          k = ({ name: e, prefix: t, bitsPerChar: n, alphabet: r }) =>
            P({
              prefix: t,
              name: e,
              encode: (e) => A(e, r, n),
              decode: (t) => I(t, r, n, e),
            }),
          j = P({
            prefix: "\x00",
            name: "identity",
            encode: (e) => E(e),
            decode: (e) => w(e),
          }),
          B = k({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 }),
          M = k({
            prefix: "7",
            name: "base8",
            alphabet: "01234567",
            bitsPerChar: 3,
          }),
          N = O({ prefix: "9", name: "base10", alphabet: "0123456789" }),
          D = k({
            prefix: "f",
            name: "base16",
            alphabet: "0123456789abcdef",
            bitsPerChar: 4,
          }),
          R = k({
            prefix: "F",
            name: "base16upper",
            alphabet: "0123456789ABCDEF",
            bitsPerChar: 4,
          }),
          F = k({
            prefix: "b",
            name: "base32",
            alphabet: "abcdefghijklmnopqrstuvwxyz234567",
            bitsPerChar: 5,
          }),
          L = k({
            prefix: "B",
            name: "base32upper",
            alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
            bitsPerChar: 5,
          }),
          U = k({
            prefix: "c",
            name: "base32pad",
            alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
            bitsPerChar: 5,
          }),
          $ = k({
            prefix: "C",
            name: "base32padupper",
            alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
            bitsPerChar: 5,
          }),
          q = k({
            prefix: "v",
            name: "base32hex",
            alphabet: "0123456789abcdefghijklmnopqrstuv",
            bitsPerChar: 5,
          }),
          H = k({
            prefix: "V",
            name: "base32hexupper",
            alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
            bitsPerChar: 5,
          }),
          z = k({
            prefix: "t",
            name: "base32hexpad",
            alphabet: "0123456789abcdefghijklmnopqrstuv=",
            bitsPerChar: 5,
          }),
          G = k({
            prefix: "T",
            name: "base32hexpadupper",
            alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
            bitsPerChar: 5,
          }),
          W = k({
            prefix: "h",
            name: "base32z",
            alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
            bitsPerChar: 5,
          }),
          V = O({
            prefix: "k",
            name: "base36",
            alphabet: "0123456789abcdefghijklmnopqrstuvwxyz",
          }),
          K = O({
            prefix: "K",
            name: "base36upper",
            alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",
          }),
          Z = O({
            name: "base58btc",
            prefix: "z",
            alphabet:
              "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
          }),
          J = O({
            name: "base58flickr",
            prefix: "Z",
            alphabet:
              "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ",
          }),
          Y = k({
            prefix: "m",
            name: "base64",
            alphabet:
              "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
            bitsPerChar: 6,
          }),
          X = k({
            prefix: "M",
            name: "base64pad",
            alphabet:
              "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
            bitsPerChar: 6,
          }),
          Q = k({
            prefix: "u",
            name: "base64url",
            alphabet:
              "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
            bitsPerChar: 6,
          }),
          ee = k({
            prefix: "U",
            name: "base64urlpad",
            alphabet:
              "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
            bitsPerChar: 6,
          }),
          et = Array.from(
            "\uD83D\uDE80\uD83E\uDE90☄\uD83D\uDEF0\uD83C\uDF0C\uD83C\uDF11\uD83C\uDF12\uD83C\uDF13\uD83C\uDF14\uD83C\uDF15\uD83C\uDF16\uD83C\uDF17\uD83C\uDF18\uD83C\uDF0D\uD83C\uDF0F\uD83C\uDF0E\uD83D\uDC09☀\uD83D\uDCBB\uD83D\uDDA5\uD83D\uDCBE\uD83D\uDCBF\uD83D\uDE02❤\uD83D\uDE0D\uD83E\uDD23\uD83D\uDE0A\uD83D\uDE4F\uD83D\uDC95\uD83D\uDE2D\uD83D\uDE18\uD83D\uDC4D\uD83D\uDE05\uD83D\uDC4F\uD83D\uDE01\uD83D\uDD25\uD83E\uDD70\uD83D\uDC94\uD83D\uDC96\uD83D\uDC99\uD83D\uDE22\uD83E\uDD14\uD83D\uDE06\uD83D\uDE44\uD83D\uDCAA\uD83D\uDE09☺\uD83D\uDC4C\uD83E\uDD17\uD83D\uDC9C\uD83D\uDE14\uD83D\uDE0E\uD83D\uDE07\uD83C\uDF39\uD83E\uDD26\uD83C\uDF89\uD83D\uDC9E✌✨\uD83E\uDD37\uD83D\uDE31\uD83D\uDE0C\uD83C\uDF38\uD83D\uDE4C\uD83D\uDE0B\uD83D\uDC97\uD83D\uDC9A\uD83D\uDE0F\uD83D\uDC9B\uD83D\uDE42\uD83D\uDC93\uD83E\uDD29\uD83D\uDE04\uD83D\uDE00\uD83D\uDDA4\uD83D\uDE03\uD83D\uDCAF\uD83D\uDE48\uD83D\uDC47\uD83C\uDFB6\uD83D\uDE12\uD83E\uDD2D❣\uD83D\uDE1C\uD83D\uDC8B\uD83D\uDC40\uD83D\uDE2A\uD83D\uDE11\uD83D\uDCA5\uD83D\uDE4B\uD83D\uDE1E\uD83D\uDE29\uD83D\uDE21\uD83E\uDD2A\uD83D\uDC4A\uD83E\uDD73\uD83D\uDE25\uD83E\uDD24\uD83D\uDC49\uD83D\uDC83\uD83D\uDE33✋\uD83D\uDE1A\uD83D\uDE1D\uD83D\uDE34\uD83C\uDF1F\uD83D\uDE2C\uD83D\uDE43\uD83C\uDF40\uD83C\uDF37\uD83D\uDE3B\uD83D\uDE13⭐✅\uD83E\uDD7A\uD83C\uDF08\uD83D\uDE08\uD83E\uDD18\uD83D\uDCA6✔\uD83D\uDE23\uD83C\uDFC3\uD83D\uDC90☹\uD83C\uDF8A\uD83D\uDC98\uD83D\uDE20☝\uD83D\uDE15\uD83C\uDF3A\uD83C\uDF82\uD83C\uDF3B\uD83D\uDE10\uD83D\uDD95\uD83D\uDC9D\uD83D\uDE4A\uD83D\uDE39\uD83D\uDDE3\uD83D\uDCAB\uD83D\uDC80\uD83D\uDC51\uD83C\uDFB5\uD83E\uDD1E\uD83D\uDE1B\uD83D\uDD34\uD83D\uDE24\uD83C\uDF3C\uD83D\uDE2B⚽\uD83E\uDD19☕\uD83C\uDFC6\uD83E\uDD2B\uD83D\uDC48\uD83D\uDE2E\uD83D\uDE46\uD83C\uDF7B\uD83C\uDF43\uD83D\uDC36\uD83D\uDC81\uD83D\uDE32\uD83C\uDF3F\uD83E\uDDE1\uD83C\uDF81⚡\uD83C\uDF1E\uD83C\uDF88❌✊\uD83D\uDC4B\uD83D\uDE30\uD83E\uDD28\uD83D\uDE36\uD83E\uDD1D\uD83D\uDEB6\uD83D\uDCB0\uD83C\uDF53\uD83D\uDCA2\uD83E\uDD1F\uD83D\uDE41\uD83D\uDEA8\uD83D\uDCA8\uD83E\uDD2C✈\uD83C\uDF80\uD83C\uDF7A\uD83E\uDD13\uD83D\uDE19\uD83D\uDC9F\uD83C\uDF31\uD83D\uDE16\uD83D\uDC76\uD83E\uDD74▶➡❓\uD83D\uDC8E\uD83D\uDCB8⬇\uD83D\uDE28\uD83C\uDF1A\uD83E\uDD8B\uD83D\uDE37\uD83D\uDD7A⚠\uD83D\uDE45\uD83D\uDE1F\uD83D\uDE35\uD83D\uDC4E\uD83E\uDD32\uD83E\uDD20\uD83E\uDD27\uD83D\uDCCC\uD83D\uDD35\uD83D\uDC85\uD83E\uDDD0\uD83D\uDC3E\uD83C\uDF52\uD83D\uDE17\uD83E\uDD11\uD83C\uDF0A\uD83E\uDD2F\uD83D\uDC37☎\uD83D\uDCA7\uD83D\uDE2F\uD83D\uDC86\uD83D\uDC46\uD83C\uDFA4\uD83D\uDE47\uD83C\uDF51❄\uD83C\uDF34\uD83D\uDCA3\uD83D\uDC38\uD83D\uDC8C\uD83D\uDCCD\uD83E\uDD40\uD83E\uDD22\uD83D\uDC45\uD83D\uDCA1\uD83D\uDCA9\uD83D\uDC50\uD83D\uDCF8\uD83D\uDC7B\uD83E\uDD10\uD83E\uDD2E\uD83C\uDFBC\uD83E\uDD75\uD83D\uDEA9\uD83C\uDF4E\uD83C\uDF4A\uD83D\uDC7C\uD83D\uDC8D\uD83D\uDCE3\uD83E\uDD42"
          ),
          en = et.reduce((e, t, n) => ((e[n] = t), e), []),
          er = et.reduce((e, t, n) => ((e[t.codePointAt(0)] = n), e), []),
          ei = P({
            prefix: "\uD83D\uDE80",
            name: "base256emoji",
            encode: function (e) {
              return e.reduce((e, t) => (e += en[t]), "");
            },
            decode: function (e) {
              let t = [];
              for (let n of e) {
                let e = er[n.codePointAt(0)];
                if (void 0 === e)
                  throw Error(`Non-base256emoji character: ${n}`);
                t.push(e);
              }
              return new Uint8Array(t);
            },
          });
        function ea(e, t, n) {
          t = t || [];
          for (var r = (n = n || 0); e >= 2147483648; )
            (t[n++] = (255 & e) | 128), (e /= 128);
          for (; -128 & e; ) (t[n++] = (255 & e) | 128), (e >>>= 7);
          return (t[n] = 0 | e), (ea.bytes = n - r + 1), t;
        }
        function eo(e, t) {
          var n,
            r = 0,
            t = t || 0,
            i = 0,
            a = t,
            o = e.length;
          do {
            if (a >= o)
              throw ((eo.bytes = 0), RangeError("Could not decode varint"));
            (n = e[a++]),
              (r += i < 28 ? (127 & n) << i : (127 & n) * Math.pow(2, i)),
              (i += 7);
          } while (n >= 128);
          return (eo.bytes = a - t), r;
        }
        var es = {
          encode: ea,
          decode: eo,
          encodingLength: function (e) {
            return e < 128
              ? 1
              : e < 16384
              ? 2
              : e < 2097152
              ? 3
              : e < 268435456
              ? 4
              : e < 34359738368
              ? 5
              : e < 4398046511104
              ? 6
              : e < 562949953421312
              ? 7
              : e < 72057594037927940
              ? 8
              : e < 0x7fffffffffffffff
              ? 9
              : 10;
          },
        };
        let eu = (e, t = 0) => {
            let n = es.decode(e, t);
            return [n, es.decode.bytes];
          },
          el = (e, t, n = 0) => (es.encode(e, t, n), t),
          ec = (e) => es.encodingLength(e),
          ed = (e, t) => {
            let n = t.byteLength,
              r = ec(e),
              i = r + ec(n),
              a = new Uint8Array(i + n);
            return el(e, a, 0), el(n, a, r), a.set(t, i), new eh(e, n, t, a);
          },
          ef = (e) => {
            let t = v(e),
              [n, r] = eu(t),
              [i, a] = eu(t.subarray(r)),
              o = t.subarray(r + a);
            if (o.byteLength !== i) throw Error("Incorrect length");
            return new eh(n, i, o, t);
          },
          ep = (e, t) =>
            e === t ||
            (e.code === t.code && e.size === t.size && b(e.bytes, t.bytes));
        class eh {
          constructor(e, t, n, r) {
            (this.code = e),
              (this.size = t),
              (this.digest = n),
              (this.bytes = r);
          }
        }
        let em = ({ name: e, code: t, encode: n }) => new ey(e, t, n);
        class ey {
          constructor(e, t, n) {
            (this.name = e), (this.code = t), (this.encode = n);
          }
          digest(e) {
            if (e instanceof Uint8Array) {
              let t = this.encode(e);
              return t instanceof Uint8Array
                ? ed(this.code, t)
                : t.then((e) => ed(this.code, e));
            }
            throw Error("Unknown type, must be binary type");
          }
        }
        let eg = (e) => async (t) =>
            new Uint8Array(await crypto.subtle.digest(e, t)),
          eb = em({ name: "sha2-256", code: 18, encode: eg("SHA-256") }),
          ev = em({ name: "sha2-512", code: 19, encode: eg("SHA-512") }),
          ew = {
            code: 0,
            name: "identity",
            encode: v,
            digest: (e) => ed(0, v(e)),
          },
          eE = "raw",
          ex = 85,
          eC = (e) => v(e),
          e_ = (e) => v(e),
          eT = new TextEncoder(),
          eS = new TextDecoder(),
          eP = "json",
          eO = 512,
          eI = (e) => eT.encode(JSON.stringify(e)),
          eA = (e) => JSON.parse(eS.decode(e));
        class ek {
          constructor(e, t, n, r) {
            (this.code = t),
              (this.version = e),
              (this.multihash = n),
              (this.bytes = r),
              (this.byteOffset = r.byteOffset),
              (this.byteLength = r.byteLength),
              (this.asCID = this),
              (this._baseCache = new Map()),
              Object.defineProperties(this, {
                byteOffset: eU,
                byteLength: eU,
                code: eL,
                version: eL,
                multihash: eL,
                bytes: eL,
                _baseCache: eU,
                asCID: eU,
              });
          }
          toV0() {
            if (0 === this.version) return this;
            {
              let { code: e, multihash: t } = this;
              if (e !== eN)
                throw Error("Cannot convert a non dag-pb CID to CIDv0");
              if (t.code !== eD)
                throw Error(
                  "Cannot convert non sha2-256 multihash CID to CIDv0"
                );
              return ek.createV0(t);
            }
          }
          toV1() {
            switch (this.version) {
              case 0: {
                let { code: e, digest: t } = this.multihash,
                  n = ed(e, t);
                return ek.createV1(this.code, n);
              }
              case 1:
                return this;
              default:
                throw Error(
                  `Can not convert CID version ${this.version} to version 0. This is a bug please report`
                );
            }
          }
          equals(e) {
            return (
              e &&
              this.code === e.code &&
              this.version === e.version &&
              ep(this.multihash, e.multihash)
            );
          }
          toString(e) {
            let { bytes: t, version: n, _baseCache: r } = this;
            return 0 === n
              ? eB(t, r, e || Z.encoder)
              : eM(t, r, e || F.encoder);
          }
          toJSON() {
            return {
              code: this.code,
              version: this.version,
              hash: this.multihash.bytes,
            };
          }
          get [Symbol.toStringTag]() {
            return "CID";
          }
          [Symbol.for("nodejs.util.inspect.custom")]() {
            return "CID(" + this.toString() + ")";
          }
          static isCID(e) {
            return e$(/^0\.0/, eq), !!(e && (e[eF] || e.asCID === e));
          }
          get toBaseEncodedString() {
            throw Error("Deprecated, use .toString()");
          }
          get codec() {
            throw Error(
              '"codec" property is deprecated, use integer "code" property instead'
            );
          }
          get buffer() {
            throw Error(
              "Deprecated .buffer property, use .bytes to get Uint8Array instead"
            );
          }
          get multibaseName() {
            throw Error('"multibaseName" property is deprecated');
          }
          get prefix() {
            throw Error('"prefix" property is deprecated');
          }
          static asCID(e) {
            if (e instanceof ek) return e;
            if (null != e && e.asCID === e) {
              let { version: t, code: n, multihash: r, bytes: i } = e;
              return new ek(t, n, r, i || eR(t, n, r.bytes));
            }
            if (null == e || !0 !== e[eF]) return null;
            {
              let { version: t, multihash: n, code: r } = e,
                i = ef(n);
              return ek.create(t, r, i);
            }
          }
          static create(e, t, n) {
            if ("number" != typeof t)
              throw Error("String codecs are no longer supported");
            switch (e) {
              case 0:
                if (t === eN) return new ek(e, t, n, n.bytes);
                throw Error(
                  `Version 0 CID must use dag-pb (code: ${eN}) block encoding`
                );
              case 1: {
                let r = eR(e, t, n.bytes);
                return new ek(e, t, n, r);
              }
              default:
                throw Error("Invalid version");
            }
          }
          static createV0(e) {
            return ek.create(0, eN, e);
          }
          static createV1(e, t) {
            return ek.create(1, e, t);
          }
          static decode(e) {
            let [t, n] = ek.decodeFirst(e);
            if (n.length) throw Error("Incorrect length");
            return t;
          }
          static decodeFirst(e) {
            let t = ek.inspectBytes(e),
              n = t.size - t.multihashSize,
              r = v(e.subarray(n, n + t.multihashSize));
            if (r.byteLength !== t.multihashSize)
              throw Error("Incorrect length");
            let i = r.subarray(t.multihashSize - t.digestSize),
              a = new eh(t.multihashCode, t.digestSize, i, r),
              o = 0 === t.version ? ek.createV0(a) : ek.createV1(t.codec, a);
            return [o, e.subarray(t.size)];
          }
          static inspectBytes(e) {
            let t = 0,
              n = () => {
                let [n, r] = eu(e.subarray(t));
                return (t += r), n;
              },
              r = n(),
              i = eN;
            if (
              (18 === r ? ((r = 0), (t = 0)) : 1 === r && (i = n()),
              0 !== r && 1 !== r)
            )
              throw RangeError(`Invalid CID version ${r}`);
            let a = t,
              o = n(),
              s = n(),
              u = t + s;
            return {
              version: r,
              codec: i,
              multihashCode: o,
              digestSize: s,
              multihashSize: u - a,
              size: u,
            };
          }
          static parse(e, t) {
            let [n, r] = ej(e, t),
              i = ek.decode(r);
            return i._baseCache.set(n, e), i;
          }
        }
        let ej = (e, t) => {
            switch (e[0]) {
              case "Q":
                return [Z.prefix, (t || Z).decode(`${Z.prefix}${e}`)];
              case Z.prefix:
                return [Z.prefix, (t || Z).decode(e)];
              case F.prefix:
                return [F.prefix, (t || F).decode(e)];
              default:
                if (null == t)
                  throw Error(
                    "To parse non base32 or base58btc encoded CID multibase decoder must be provided"
                  );
                return [e[0], t.decode(e)];
            }
          },
          eB = (e, t, n) => {
            let { prefix: r } = n;
            if (r !== Z.prefix)
              throw Error(`Cannot string encode V0 in ${n.name} encoding`);
            let i = t.get(r);
            if (null != i) return i;
            {
              let i = n.encode(e).slice(1);
              return t.set(r, i), i;
            }
          },
          eM = (e, t, n) => {
            let { prefix: r } = n,
              i = t.get(r);
            if (null != i) return i;
            {
              let i = n.encode(e);
              return t.set(r, i), i;
            }
          },
          eN = 112,
          eD = 18,
          eR = (e, t, n) => {
            let r = ec(e),
              i = r + ec(t),
              a = new Uint8Array(i + n.byteLength);
            return el(e, a, 0), el(t, a, r), a.set(n, i), a;
          },
          eF = Symbol.for("@ipld/js-cid/CID"),
          eL = { writable: !1, configurable: !1, enumerable: !0 },
          eU = { writable: !1, enumerable: !1, configurable: !1 },
          e$ = (e, t) => {
            if (e.test("0.0.0-dev")) console.warn(t);
            else throw Error(t);
          },
          eq = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`,
          eH = { ...r, ...i, ...a, ...o, ...s, ...u, ...l, ...c, ...d, ...f };
        ({ ...p, ...h });
        var ez = n(53160);
        function eG(e, t, n, r) {
          return {
            name: e,
            prefix: t,
            encoder: { name: e, prefix: t, encode: n },
            decoder: { decode: r },
          };
        }
        let eW = eG(
            "utf8",
            "u",
            (e) => {
              let t = new TextDecoder("utf8");
              return "u" + t.decode(e);
            },
            (e) => {
              let t = new TextEncoder();
              return t.encode(e.substring(1));
            }
          ),
          eV = eG(
            "ascii",
            "a",
            (e) => {
              let t = "a";
              for (let n = 0; n < e.length; n++) t += String.fromCharCode(e[n]);
              return t;
            },
            (e) => {
              e = e.substring(1);
              let t = (0, ez.E)(e.length);
              for (let n = 0; n < e.length; n++) t[n] = e.charCodeAt(n);
              return t;
            }
          ),
          eK = {
            utf8: eW,
            "utf-8": eW,
            hex: eH.base16,
            latin1: eV,
            ascii: eV,
            binary: eV,
            ...eH,
          };
        var eZ = eK;
      },
      14503: function (e, t, n) {
        "use strict";
        function r(e) {
          return "string" == typeof e ? { address: e, type: "json-rpc" } : e;
        }
        n.d(t, {
          T: function () {
            return r;
          },
        });
      },
      61376: function (e, t, n) {
        "use strict";
        n.d(t, {
          R: function () {
            return b;
          },
        });
        var r = n(14503),
          i = n(16693),
          a = n(62027),
          o = n(80377),
          s = n(97405),
          u = n(7210),
          l = n(77799),
          c = n(47864),
          d = n(92106),
          f = n(26445),
          p = n(87469),
          h = n(61163),
          m = n(74688),
          y = n(32357),
          g = n(47531);
        async function b(e, t) {
          let {
              account: i = e.account,
              batch: u = !!e.batch?.multicall,
              blockNumber: l,
              blockTag: c = "latest",
              accessList: y,
              data: b,
              gas: w,
              gasPrice: E,
              maxFeePerGas: x,
              maxPriorityFeePerGas: C,
              nonce: _,
              to: T,
              value: S,
              ...P
            } = t,
            O = i ? (0, r.T)(i) : void 0;
          try {
            (0, g.F)(t);
            let n = l ? (0, d.eC)(l) : void 0,
              r = n || c,
              i = e.chain?.formatters?.transactionRequest?.format,
              a = i || m.tG,
              s = a({
                ...(0, h.K)(P, { format: i }),
                from: O?.address,
                accessList: y,
                data: b,
                gas: w,
                gasPrice: E,
                maxFeePerGas: x,
                maxPriorityFeePerGas: C,
                nonce: _,
                to: T,
                value: S,
              });
            if (
              u &&
              (function ({ request: e }) {
                let { data: t, to: n, ...r } = e;
                return (
                  !(!t || t.startsWith("0x82ad56cb")) &&
                  !!n &&
                  !(Object.values(r).filter((e) => void 0 !== e).length > 0)
                );
              })({ request: s })
            )
              try {
                return await v(e, { ...s, blockNumber: l, blockTag: c });
              } catch (e) {
                if (!(e instanceof o.pZ) && !(e instanceof o.mm)) throw e;
              }
            let f = await e.request({
              method: "eth_call",
              params: r ? [s, r] : [s],
            });
            if ("0x" === f) return { data: void 0 };
            return { data: f };
          } catch (u) {
            let r = (function (e) {
                if (!(e instanceof a.G)) return;
                let t = e.walk();
                return "object" == typeof t.data ? t.data.data : t.data;
              })(u),
              { offchainLookup: i, offchainLookupSignature: o } = await n
                .e(1785)
                .then(n.bind(n, 21785));
            if (r?.slice(0, 10) === o && T)
              return { data: await i(e, { data: r, to: T }) };
            throw (function (e, { docsPath: t, ...n }) {
              let r = (() => {
                let t = (0, p.k)(e, n);
                return t instanceof f.cj ? e : t;
              })();
              return new s.cg(r, { docsPath: t, ...n });
            })(u, { ...t, account: O, chain: e.chain });
          }
        }
        async function v(e, t) {
          let { batchSize: n = 1024, wait: r = 0 } =
              "object" == typeof e.batch?.multicall ? e.batch.multicall : {},
            {
              blockNumber: a,
              blockTag: f = "latest",
              data: p,
              multicallAddress: h,
              to: m,
            } = t,
            g = h;
          if (!g) {
            if (!e.chain) throw new o.pZ();
            g = (0, c.L)({
              blockNumber: a,
              chain: e.chain,
              contract: "multicall3",
            });
          }
          let b = a ? (0, d.eC)(a) : void 0,
            v = b || f,
            { schedule: w } = (0, y.S)({
              id: `${e.uid}.${v}`,
              wait: r,
              shouldSplitBatch(e) {
                let t = e.reduce((e, { data: t }) => e + (t.length - 2), 0);
                return t > 2 * n;
              },
              fn: async (t) => {
                let n = t.map((e) => ({
                    allowFailure: !0,
                    callData: e.data,
                    target: e.to,
                  })),
                  r = (0, l.R)({
                    abi: i.F8,
                    args: [n],
                    functionName: "aggregate3",
                  }),
                  a = await e.request({
                    method: "eth_call",
                    params: [{ data: r, to: g }, v],
                  });
                return (0, u.k)({
                  abi: i.F8,
                  args: [n],
                  functionName: "aggregate3",
                  data: a || "0x",
                });
              },
            }),
            [{ returnData: E, success: x }] = await w({ data: p, to: m });
          if (!x) throw new s.VQ({ data: E });
          return "0x" === E ? { data: void 0 } : { data: E };
        }
      },
      43861: function (e, t, n) {
        "use strict";
        n.d(t, {
          C: function () {
            return l;
          },
          X: function () {
            return u;
          },
        });
        var r = n(15371),
          i = n(93714),
          a = n(79379),
          o = n(75016),
          s = n(24453);
        async function u(e, t) {
          return l(e, t);
        }
        async function l(e, t) {
          let {
              block: n,
              chain: u = e.chain,
              request: l,
              type: c = "eip1559",
            } = t || {},
            d = await (async () =>
              "function" == typeof u?.fees?.baseFeeMultiplier
                ? u.fees.baseFeeMultiplier({ block: n, client: e, request: l })
                : u?.fees?.baseFeeMultiplier ?? 1.2)();
          if (d < 1) throw new r.Fz();
          let f = d.toString().split(".")[1]?.length ?? 0,
            p = 10 ** f,
            h = (e) => (e * BigInt(Math.ceil(d * p))) / BigInt(p),
            m = n || (await (0, i.s)(e, o.Q, "getBlock")({}));
          if ("function" == typeof u?.fees?.estimateFeesPerGas)
            return u.fees.estimateFeesPerGas({
              block: n,
              client: e,
              multiply: h,
              request: l,
              type: c,
            });
          if ("eip1559" === c) {
            if ("bigint" != typeof m.baseFeePerGas) throw new r.e5();
            let t = l?.maxPriorityFeePerGas
                ? l.maxPriorityFeePerGas
                : await (0, a.h)(e, { block: m, chain: u, request: l }),
              n = h(m.baseFeePerGas),
              i = l?.maxFeePerGas ?? n + t;
            return { maxFeePerGas: i, maxPriorityFeePerGas: t };
          }
          let y = l?.gasPrice ?? h(await (0, i.s)(e, s.o, "getGasPrice")({}));
          return { gasPrice: y };
        }
      },
      81841: function (e, t, n) {
        "use strict";
        n.d(t, {
          Q: function () {
            return g;
          },
        });
        var r = n(14503),
          i = n(8998),
          a = n(92106),
          o = n(39625),
          s = n(67795),
          u = n(62027),
          l = n(33639);
        class c extends u.G {
          constructor(
            e,
            {
              account: t,
              docsPath: n,
              chain: r,
              data: i,
              gas: a,
              gasPrice: u,
              maxFeePerGas: c,
              maxPriorityFeePerGas: d,
              nonce: f,
              to: p,
              value: h,
            }
          ) {
            let m = (0, l.xr)({
              from: t?.address,
              to: p,
              value:
                void 0 !== h &&
                `${(0, o.d)(h)} ${r?.nativeCurrency?.symbol || "ETH"}`,
              data: i,
              gas: a,
              gasPrice: void 0 !== u && `${(0, s.o)(u)} gwei`,
              maxFeePerGas: void 0 !== c && `${(0, s.o)(c)} gwei`,
              maxPriorityFeePerGas: void 0 !== d && `${(0, s.o)(d)} gwei`,
              nonce: f,
            });
            super(e.shortMessage, {
              cause: e,
              docsPath: n,
              metaMessages: [
                ...(e.metaMessages ? [...e.metaMessages, " "] : []),
                "Estimate Gas Arguments:",
                m,
              ].filter(Boolean),
            }),
              Object.defineProperty(this, "cause", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "EstimateGasExecutionError",
              }),
              (this.cause = e);
          }
        }
        var d = n(26445),
          f = n(87469),
          p = n(61163),
          h = n(74688),
          m = n(47531),
          y = n(37397);
        async function g(e, t) {
          let n = t.account ?? e.account;
          if (!n)
            throw new i.o({ docsPath: "/docs/actions/public/estimateGas" });
          let o = (0, r.T)(n);
          try {
            let {
                accessList: n,
                blockNumber: r,
                blockTag: i,
                data: s,
                gas: u,
                gasPrice: l,
                maxFeePerGas: c,
                maxPriorityFeePerGas: d,
                nonce: f,
                to: g,
                value: b,
                ...v
              } = "local" === o.type ? await (0, y.Z)(e, t) : t,
              w = r ? (0, a.eC)(r) : void 0,
              E = w || i;
            (0, m.F)(t);
            let x = e.chain?.formatters?.transactionRequest?.format,
              C = x || h.tG,
              _ = C({
                ...(0, p.K)(v, { format: x }),
                from: o.address,
                accessList: n,
                data: s,
                gas: u,
                gasPrice: l,
                maxFeePerGas: c,
                maxPriorityFeePerGas: d,
                nonce: f,
                to: g,
                value: b,
              }),
              T = await e.request({
                method: "eth_estimateGas",
                params: E ? [_, E] : [_],
              });
            return BigInt(T);
          } catch (n) {
            throw (function (e, { docsPath: t, ...n }) {
              let r = (() => {
                let t = (0, f.k)(e, n);
                return t instanceof d.cj ? e : t;
              })();
              return new c(r, { docsPath: t, ...n });
            })(n, { ...t, account: o, chain: e.chain });
          }
        }
      },
      79379: function (e, t, n) {
        "use strict";
        n.d(t, {
          _: function () {
            return u;
          },
          h: function () {
            return l;
          },
        });
        var r = n(15371),
          i = n(95946),
          a = n(93714),
          o = n(75016),
          s = n(24453);
        async function u(e, t) {
          return l(e, t);
        }
        async function l(e, t) {
          let { block: n, chain: u = e.chain, request: l } = t || {};
          if ("function" == typeof u?.fees?.defaultPriorityFee) {
            let t = n || (await (0, a.s)(e, o.Q, "getBlock")({}));
            return u.fees.defaultPriorityFee({
              block: t,
              client: e,
              request: l,
            });
          }
          if (void 0 !== u?.fees?.defaultPriorityFee)
            return u?.fees?.defaultPriorityFee;
          try {
            let t = await e.request({ method: "eth_maxPriorityFeePerGas" });
            return (0, i.y_)(t);
          } catch {
            let [t, i] = await Promise.all([
              n ? Promise.resolve(n) : (0, a.s)(e, o.Q, "getBlock")({}),
              (0, a.s)(e, s.o, "getGasPrice")({}),
            ]);
            if ("bigint" != typeof t.baseFeePerGas) throw new r.e5();
            let u = i - t.baseFeePerGas;
            if (u < 0n) return 0n;
            return u;
          }
        }
      },
      75016: function (e, t, n) {
        "use strict";
        n.d(t, {
          Q: function () {
            return o;
          },
        });
        var r = n(79814),
          i = n(92106),
          a = n(43310);
        async function o(
          e,
          {
            blockHash: t,
            blockNumber: n,
            blockTag: o,
            includeTransactions: s,
          } = {}
        ) {
          let u = s ?? !1,
            l = void 0 !== n ? (0, i.eC)(n) : void 0,
            c = null;
          if (
            !(c = t
              ? await e.request({
                  method: "eth_getBlockByHash",
                  params: [t, u],
                })
              : await e.request({
                  method: "eth_getBlockByNumber",
                  params: [l || (o ?? "latest"), u],
                }))
          )
            throw new r.f({ blockHash: t, blockNumber: n });
          let d = e.chain?.formatters?.block?.format || a.Z;
          return d(c);
        }
      },
      79524: function (e, t, n) {
        "use strict";
        n.d(t, {
          L: function () {
            return i;
          },
        });
        var r = n(95946);
        async function i(e) {
          let t = await e.request({ method: "eth_chainId" });
          return (0, r.ly)(t);
        }
      },
      24453: function (e, t, n) {
        "use strict";
        async function r(e) {
          let t = await e.request({ method: "eth_gasPrice" });
          return BigInt(t);
        }
        n.d(t, {
          o: function () {
            return r;
          },
        });
      },
      86162: function (e, t, n) {
        "use strict";
        n.d(t, {
          K: function () {
            return a;
          },
        });
        var r = n(95946),
          i = n(92106);
        async function a(
          e,
          { address: t, blockTag: n = "latest", blockNumber: a }
        ) {
          let o = await e.request({
            method: "eth_getTransactionCount",
            params: [t, a ? (0, i.eC)(a) : n],
          });
          return (0, r.ly)(o);
        }
      },
      37397: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return p;
          },
        });
        var r = n(14503),
          i = n(43861),
          a = n(81841),
          o = n(75016),
          s = n(86162),
          u = n(8998),
          l = n(15371),
          c = n(93714),
          d = n(47531),
          f = n(82994);
        async function p(e, t) {
          let {
            account: n = e.account,
            chain: p,
            gas: h,
            nonce: m,
            type: y,
          } = t;
          if (!n) throw new u.o();
          let g = (0, r.T)(n),
            b = await (0, c.s)(e, o.Q, "getBlock")({ blockTag: "latest" }),
            v = { ...t, from: g.address };
          if (
            (void 0 === m &&
              (v.nonce = await (0, c.s)(
                e,
                s.K,
                "getTransactionCount"
              )({ address: g.address, blockTag: "pending" })),
            void 0 === y)
          )
            try {
              v.type = (0, f.l)(v);
            } catch {
              v.type =
                "bigint" == typeof b.baseFeePerGas ? "eip1559" : "legacy";
            }
          if ("eip1559" === v.type) {
            let { maxFeePerGas: n, maxPriorityFeePerGas: r } = await (0, i.C)(
              e,
              { block: b, chain: p, request: v }
            );
            if (
              void 0 === t.maxPriorityFeePerGas &&
              t.maxFeePerGas &&
              t.maxFeePerGas < r
            )
              throw new l.ld({ maxPriorityFeePerGas: r });
            (v.maxPriorityFeePerGas = r), (v.maxFeePerGas = n);
          } else {
            if (void 0 !== t.maxFeePerGas || void 0 !== t.maxPriorityFeePerGas)
              throw new l.e5();
            let { gasPrice: n } = await (0, i.C)(e, {
              block: b,
              chain: p,
              request: v,
              type: "legacy",
            });
            v.gasPrice = n;
          }
          return (
            void 0 === h &&
              (v.gas = await (0, c.s)(
                e,
                a.Q,
                "estimateGas"
              )({ ...v, account: { address: g.address, type: "json-rpc" } })),
            (0, d.F)(v),
            v
          );
        }
      },
      99238: function (e, t, n) {
        "use strict";
        async function r(e, { serializedTransaction: t }) {
          return e.request({ method: "eth_sendRawTransaction", params: [t] });
        }
        n.d(t, {
          p: function () {
            return r;
          },
        });
      },
      66403: function (e, t, n) {
        "use strict";
        n.d(t, {
          R: function () {
            return i;
          },
        });
        var r = n(86164);
        let i = (0, r.a)({
          id: 1,
          network: "homestead",
          name: "Ethereum",
          nativeCurrency: { name: "Ether", symbol: "ETH", decimals: 18 },
          rpcUrls: {
            alchemy: {
              http: ["https://eth-mainnet.g.alchemy.com/v2"],
              webSocket: ["wss://eth-mainnet.g.alchemy.com/v2"],
            },
            infura: {
              http: ["https://mainnet.infura.io/v3"],
              webSocket: ["wss://mainnet.infura.io/ws/v3"],
            },
            default: { http: ["https://cloudflare-eth.com"] },
            public: { http: ["https://cloudflare-eth.com"] },
          },
          blockExplorers: {
            etherscan: { name: "Etherscan", url: "https://etherscan.io" },
            default: { name: "Etherscan", url: "https://etherscan.io" },
          },
          contracts: {
            ensRegistry: {
              address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
            },
            ensUniversalResolver: {
              address: "0xc0497E381f536Be9ce14B0dD3817cBcAe57d2F62",
              blockCreated: 16966585,
            },
            multicall3: {
              address: "0xca11bde05977b3631167028862be2a173976ca11",
              blockCreated: 14353601,
            },
          },
        });
      },
      16189: function (e, t, n) {
        "use strict";
        let r;
        n.d(t, {
          e: function () {
            return o;
          },
        });
        var i = n(14503);
        let a = 256;
        function o(e) {
          let {
              batch: t,
              cacheTime: n = e.pollingInterval ?? 4e3,
              key: o = "base",
              name: s = "Base Client",
              pollingInterval: u = 4e3,
              type: l = "base",
            } = e,
            c = e.chain,
            d = e.account ? (0, i.T)(e.account) : void 0,
            {
              config: f,
              request: p,
              value: h,
            } = e.transport({ chain: c, pollingInterval: u }),
            m = { ...f, ...h },
            y = {
              account: d,
              batch: t,
              cacheTime: n,
              chain: c,
              key: o,
              name: s,
              pollingInterval: u,
              request: p,
              transport: m,
              type: l,
              uid: (function (e = 11) {
                if (!r || a + e > 512) {
                  (r = ""), (a = 0);
                  for (let e = 0; e < 256; e++)
                    r += ((256 + 256 * Math.random()) | 0)
                      .toString(16)
                      .substring(1);
                }
                return r.substring(a, a++ + e);
              })(),
            };
          return Object.assign(y, {
            extend: (function e(t) {
              return (n) => {
                let r = n(t);
                for (let e in y) delete r[e];
                let i = { ...t, ...r };
                return Object.assign(i, { extend: e(i) });
              };
            })(y),
          });
        }
      },
      84178: function (e, t, n) {
        "use strict";
        n.d(t, {
          v: function () {
            return tr;
          },
        });
        var r = n(16189),
          i = n(16693),
          a = n(7210),
          o = n(77799),
          s = n(47864),
          u = n(61836),
          l = n(92106),
          c = n(21746),
          d = n(62027),
          f = n(97405);
        function p(e, t) {
          if (!(e instanceof d.G)) return !1;
          let n = e.walk((e) => e instanceof f.Lu);
          return (
            n instanceof f.Lu &&
            (!!(
              n.data?.errorName === "ResolverNotFound" ||
              n.data?.errorName === "ResolverWildcardNotSupported" ||
              n.reason?.includes(
                "Wildcard on non-extended resolvers is not supported"
              )
            ) ||
              ("reverse" === t && n.reason === c.$[50]))
          );
        }
        var h = n(57040),
          m = n(11187),
          y = n(88184),
          g = n(15102);
        function b(e) {
          if (66 !== e.length || 0 !== e.indexOf("[") || 65 !== e.indexOf("]"))
            return null;
          let t = `0x${e.slice(1, 65)}`;
          return (0, g.v)(t) ? t : null;
        }
        function v(e) {
          let t = new Uint8Array(32).fill(0);
          if (!e) return (0, l.ci)(t);
          let n = e.split(".");
          for (let e = n.length - 1; e >= 0; e -= 1) {
            let r = b(n[e]),
              i = r ? (0, m.O0)(r) : (0, y.w)((0, m.qX)(n[e]), "bytes");
            t = (0, y.w)((0, h.zo)([t, i]), "bytes");
          }
          return (0, l.ci)(t);
        }
        function w(e) {
          let t = e.replace(/^\.|\.$/gm, "");
          if (0 === t.length) return new Uint8Array(1);
          let n = new Uint8Array((0, m.qX)(t).byteLength + 2),
            r = 0,
            i = t.split(".");
          for (let e = 0; e < i.length; e++) {
            let t = (0, m.qX)(i[e]);
            t.byteLength > 255 &&
              (t = (0, m.qX)(
                `[${(function (e) {
                  let t = new Uint8Array(32).fill(0);
                  return e ? b(e) || (0, y.w)((0, m.qX)(e)) : (0, l.ci)(t);
                })(i[e]).slice(2)}]`
              )),
              (n[r] = t.length),
              n.set(t, r + 1),
              (r += t.length + 1);
          }
          return n.byteLength !== r + 1 ? n.slice(0, r + 1) : n;
        }
        var E = n(93714),
          x = n(57412),
          C = n(39028);
        function _(
          e,
          {
            abi: t,
            address: n,
            args: r,
            docsPath: i,
            functionName: a,
            sender: o,
          }
        ) {
          let {
              code: s,
              data: u,
              message: l,
              shortMessage: c,
            } = e instanceof f.VQ
              ? e
              : e instanceof d.G
              ? e.walk((e) => "data" in e) || e.walk()
              : {},
            p =
              e instanceof x.wb
                ? new f.Dk({ functionName: a })
                : [3, C.XS.code].includes(s) && (u || l || c)
                ? new f.Lu({
                    abi: t,
                    data: "object" == typeof u ? u.data : u,
                    functionName: a,
                    message: c ?? l,
                  })
                : e;
          return new f.uq(p, {
            abi: t,
            args: r,
            contractAddress: n,
            docsPath: i,
            functionName: a,
            sender: o,
          });
        }
        var T = n(61376);
        async function S(
          e,
          { abi: t, address: n, args: r, functionName: i, ...s }
        ) {
          let u = (0, o.R)({ abi: t, args: r, functionName: i });
          try {
            let { data: o } = await (0, E.s)(
              e,
              T.R,
              "call"
            )({ data: u, to: n, ...s });
            return (0, a.k)({
              abi: t,
              args: r,
              functionName: i,
              data: o || "0x",
            });
          } catch (e) {
            throw _(e, {
              abi: t,
              address: n,
              args: r,
              docsPath: "/docs/contract/readContract",
              functionName: i,
            });
          }
        }
        async function P(
          e,
          {
            blockNumber: t,
            blockTag: n,
            coinType: r,
            name: c,
            universalResolverAddress: d,
          }
        ) {
          let f = d;
          if (!f) {
            if (!e.chain)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            f = (0, s.L)({
              blockNumber: t,
              chain: e.chain,
              contract: "ensUniversalResolver",
            });
          }
          try {
            let s = (0, o.R)({
                abi: i.X$,
                functionName: "addr",
                ...(null != r ? { args: [v(c), BigInt(r)] } : { args: [v(c)] }),
              }),
              d = await (0, E.s)(
                e,
                S,
                "readContract"
              )({
                address: f,
                abi: i.k3,
                functionName: "resolve",
                args: [(0, l.NC)(w(c)), s],
                blockNumber: t,
                blockTag: n,
              });
            if ("0x" === d[0]) return null;
            let p = (0, a.k)({
              abi: i.X$,
              args: null != r ? [v(c), BigInt(r)] : void 0,
              functionName: "addr",
              data: d[0],
            });
            if ("0x" === p || "0x00" === (0, u.f)(p)) return null;
            return p;
          } catch (e) {
            if (p(e, "resolve")) return null;
            throw e;
          }
        }
        class O extends d.G {
          constructor({ data: e }) {
            super(
              "Unable to extract image from metadata. The metadata may be malformed or invalid.",
              {
                metaMessages: [
                  "- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.",
                  "",
                  `Provided data: ${JSON.stringify(e)}`,
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "EnsAvatarInvalidMetadataError",
              });
          }
        }
        class I extends d.G {
          constructor({ reason: e }) {
            super(`ENS NFT avatar URI is invalid. ${e}`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "EnsAvatarInvalidNftUriError",
              });
          }
        }
        class A extends d.G {
          constructor({ uri: e }) {
            super(
              `Unable to resolve ENS avatar URI "${e}". The URI may be malformed, invalid, or does not respond with a valid image.`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "EnsAvatarUriResolutionError",
              });
          }
        }
        class k extends d.G {
          constructor({ namespace: e }) {
            super(
              `ENS NFT avatar namespace "${e}" is not supported. Must be "erc721" or "erc1155".`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "EnsAvatarUnsupportedNamespaceError",
              });
          }
        }
        let j =
            /(?<protocol>https?:\/\/[^\/]*|ipfs:\/|ipns:\/|ar:\/)?(?<root>\/)?(?<subpath>ipfs\/|ipns\/)?(?<target>[\w\-.]+)(?<subtarget>\/.*)?/,
          B =
            /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\/(?<target>[\w\-.]+))?(?<subtarget>\/.*)?$/,
          M = /^data:([a-zA-Z\-/+]*);base64,([^"].*)/,
          N = /^data:([a-zA-Z\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/;
        async function D(e) {
          try {
            let t = await fetch(e, { method: "HEAD" });
            if (200 === t.status) {
              let e = t.headers.get("content-type");
              return e?.startsWith("image/");
            }
            return !1;
          } catch (t) {
            if (
              ("object" == typeof t && void 0 !== t.response) ||
              !globalThis.hasOwnProperty("Image")
            )
              return !1;
            return new Promise((t) => {
              let n = new Image();
              (n.onload = () => {
                t(!0);
              }),
                (n.onerror = () => {
                  t(!1);
                }),
                (n.src = e);
            });
          }
        }
        function R(e, t) {
          return e ? (e.endsWith("/") ? e.slice(0, -1) : e) : t;
        }
        function F({ uri: e, gatewayUrls: t }) {
          let n = M.test(e);
          if (n) return { uri: e, isOnChain: !0, isEncoded: n };
          let r = R(t?.ipfs, "https://ipfs.io"),
            i = R(t?.arweave, "https://arweave.net"),
            a = e.match(j),
            {
              protocol: o,
              subpath: s,
              target: u,
              subtarget: l = "",
            } = a?.groups || {},
            c = "ipns:/" === o || "ipns/" === s,
            d = "ipfs:/" === o || "ipfs/" === s || B.test(e);
          if (e.startsWith("http") && !c && !d) {
            let n = e;
            return (
              t?.arweave &&
                (n = e.replace(/https:\/\/arweave.net/g, t?.arweave)),
              { uri: n, isOnChain: !1, isEncoded: !1 }
            );
          }
          if ((c || d) && u)
            return {
              uri: `${r}/${c ? "ipns" : "ipfs"}/${u}${l}`,
              isOnChain: !1,
              isEncoded: !1,
            };
          if ("ar:/" === o && u)
            return { uri: `${i}/${u}${l || ""}`, isOnChain: !1, isEncoded: !1 };
          let f = e.replace(N, "");
          if (
            (f.startsWith("<svg") &&
              (f = `data:image/svg+xml;base64,${btoa(f)}`),
            f.startsWith("data:") || f.startsWith("{"))
          )
            return { uri: f, isOnChain: !0, isEncoded: !1 };
          throw new A({ uri: e });
        }
        function L(e) {
          if (
            "object" != typeof e ||
            (!("image" in e) && !("image_url" in e) && !("image_data" in e))
          )
            throw new O({ data: e });
          return e.image || e.image_url || e.image_data;
        }
        async function U({ gatewayUrls: e, uri: t }) {
          try {
            let n = await fetch(t).then((e) => e.json()),
              r = await $({ gatewayUrls: e, uri: L(n) });
            return r;
          } catch {
            throw new A({ uri: t });
          }
        }
        async function $({ gatewayUrls: e, uri: t }) {
          let { uri: n, isOnChain: r } = F({ uri: t, gatewayUrls: e });
          if (r) return n;
          let i = await D(n);
          if (i) return n;
          throw new A({ uri: t });
        }
        async function q(e, { nft: t }) {
          if ("erc721" === t.namespace)
            return S(e, {
              address: t.contractAddress,
              abi: [
                {
                  name: "tokenURI",
                  type: "function",
                  stateMutability: "view",
                  inputs: [{ name: "tokenId", type: "uint256" }],
                  outputs: [{ name: "", type: "string" }],
                },
              ],
              functionName: "tokenURI",
              args: [BigInt(t.tokenID)],
            });
          if ("erc1155" === t.namespace)
            return S(e, {
              address: t.contractAddress,
              abi: [
                {
                  name: "uri",
                  type: "function",
                  stateMutability: "view",
                  inputs: [{ name: "_id", type: "uint256" }],
                  outputs: [{ name: "", type: "string" }],
                },
              ],
              functionName: "uri",
              args: [BigInt(t.tokenID)],
            });
          throw new k({ namespace: t.namespace });
        }
        async function H(e, { gatewayUrls: t, record: n }) {
          return /eip155:/i.test(n)
            ? z(e, { gatewayUrls: t, record: n })
            : $({ uri: n, gatewayUrls: t });
        }
        async function z(e, { gatewayUrls: t, record: n }) {
          let r = (function (e) {
              let t = e;
              t.startsWith("did:nft:") &&
                (t = t.replace("did:nft:", "").replace(/_/g, "/"));
              let [n, r, i] = t.split("/"),
                [a, o] = n.split(":"),
                [s, u] = r.split(":");
              if (!a || "eip155" !== a.toLowerCase())
                throw new I({ reason: "Only EIP-155 supported" });
              if (!o) throw new I({ reason: "Chain ID not found" });
              if (!u) throw new I({ reason: "Contract address not found" });
              if (!i) throw new I({ reason: "Token ID not found" });
              if (!s) throw new I({ reason: "ERC namespace not found" });
              return {
                chainID: parseInt(o),
                namespace: s.toLowerCase(),
                contractAddress: u,
                tokenID: i,
              };
            })(n),
            i = await q(e, { nft: r }),
            {
              uri: a,
              isOnChain: o,
              isEncoded: s,
            } = F({ uri: i, gatewayUrls: t });
          if (
            o &&
            (a.includes("data:application/json;base64,") || a.startsWith("{"))
          ) {
            let e = s
                ? atob(a.replace("data:application/json;base64,", ""))
                : a,
              n = JSON.parse(e);
            return $({ uri: L(n), gatewayUrls: t });
          }
          let u = r.tokenID;
          return (
            "erc1155" === r.namespace &&
              (u = u.replace("0x", "").padStart(64, "0")),
            U({ gatewayUrls: t, uri: a.replace(/(?:0x)?{id}/, u) })
          );
        }
        async function G(
          e,
          {
            blockNumber: t,
            blockTag: n,
            name: r,
            key: u,
            universalResolverAddress: c,
          }
        ) {
          let d = c;
          if (!d) {
            if (!e.chain)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            d = (0, s.L)({
              blockNumber: t,
              chain: e.chain,
              contract: "ensUniversalResolver",
            });
          }
          try {
            let s = await (0, E.s)(
              e,
              S,
              "readContract"
            )({
              address: d,
              abi: i.k3,
              functionName: "resolve",
              args: [
                (0, l.NC)(w(r)),
                (0, o.R)({ abi: i.nZ, functionName: "text", args: [v(r), u] }),
              ],
              blockNumber: t,
              blockTag: n,
            });
            if ("0x" === s[0]) return null;
            let c = (0, a.k)({ abi: i.nZ, functionName: "text", data: s[0] });
            return "" === c ? null : c;
          } catch (e) {
            if (p(e, "resolve")) return null;
            throw e;
          }
        }
        async function W(
          e,
          {
            blockNumber: t,
            blockTag: n,
            gatewayUrls: r,
            name: i,
            universalResolverAddress: a,
          }
        ) {
          let o = await (0, E.s)(
            e,
            G,
            "getEnsText"
          )({
            blockNumber: t,
            blockTag: n,
            key: "avatar",
            name: i,
            universalResolverAddress: a,
          });
          if (!o) return null;
          try {
            return await H(e, { record: o, gatewayUrls: r });
          } catch {
            return null;
          }
        }
        async function V(
          e,
          {
            address: t,
            blockNumber: n,
            blockTag: r,
            universalResolverAddress: a,
          }
        ) {
          let o = a;
          if (!o) {
            if (!e.chain)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            o = (0, s.L)({
              blockNumber: n,
              chain: e.chain,
              contract: "ensUniversalResolver",
            });
          }
          let u = `${t.toLowerCase().substring(2)}.addr.reverse`;
          try {
            let [a, s] = await (0, E.s)(
              e,
              S,
              "readContract"
            )({
              address: o,
              abi: i.du,
              functionName: "reverse",
              args: [(0, l.NC)(w(u))],
              blockNumber: n,
              blockTag: r,
            });
            if (t.toLowerCase() !== s.toLowerCase()) return null;
            return a;
          } catch (e) {
            if (p(e, "reverse")) return null;
            throw e;
          }
        }
        async function K(
          e,
          { blockNumber: t, blockTag: n, name: r, universalResolverAddress: i }
        ) {
          let a = i;
          if (!a) {
            if (!e.chain)
              throw Error(
                "client chain not configured. universalResolverAddress is required."
              );
            a = (0, s.L)({
              blockNumber: t,
              chain: e.chain,
              contract: "ensUniversalResolver",
            });
          }
          let [o] = await (0, E.s)(
            e,
            S,
            "readContract"
          )({
            address: a,
            abi: [
              {
                inputs: [{ type: "bytes" }],
                name: "findResolver",
                outputs: [{ type: "address" }, { type: "bytes32" }],
                stateMutability: "view",
                type: "function",
              },
            ],
            functionName: "findResolver",
            args: [(0, l.NC)(w(r))],
            blockNumber: t,
            blockTag: n,
          });
          return o;
        }
        function Z(e, { method: t }) {
          let n = {};
          return (
            "fallback" === e.transport.type &&
              e.transport.onResponse?.(
                ({ method: e, response: r, status: i, transport: a }) => {
                  "success" === i && t === e && (n[r] = a.request);
                }
              ),
            (t) => n[t] || e.request
          );
        }
        async function J(e) {
          let t = Z(e, { method: "eth_newBlockFilter" }),
            n = await e.request({ method: "eth_newBlockFilter" });
          return { id: n, request: t(n), type: "block" };
        }
        class Y extends d.G {
          constructor(e) {
            super(`Filter type "${e}" is not supported.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "FilterTypeNotSupportedError",
              });
          }
        }
        var X = n(74059),
          Q = n(45444),
          ee = n(80522),
          et = n(40840);
        function en({ abi: e, eventName: t, args: n }) {
          let r = e[0];
          if (t && !(r = (0, et.mE)({ abi: e, args: n, name: t })))
            throw new x.mv(t, { docsPath: "/docs/contract/encodeEventTopics" });
          if ("event" !== r.type)
            throw new x.mv(void 0, {
              docsPath: "/docs/contract/encodeEventTopics",
            });
          let i = (0, ee.t)(r),
            a = (0, X.e)(i),
            o = [];
          if (n && "inputs" in r) {
            let e = r.inputs?.filter((e) => "indexed" in e && e.indexed),
              t = Array.isArray(n)
                ? n
                : Object.values(n).length > 0
                ? e?.map((e) => n[e.name]) ?? []
                : [];
            t.length > 0 &&
              (o =
                e?.map((e, n) =>
                  Array.isArray(t[n])
                    ? t[n].map((r, i) => er({ param: e, value: t[n][i] }))
                    : t[n]
                    ? er({ param: e, value: t[n] })
                    : null
                ) ?? []);
          }
          return [a, ...o];
        }
        function er({ param: e, value: t }) {
          if ("string" === e.type || "bytes" === e.type)
            return (0, y.w)((0, m.O0)(t));
          if ("tuple" === e.type || e.type.match(/^(.*)\[(\d+)?\]$/))
            throw new Y(e.type);
          return (0, Q.E)([e], [t]);
        }
        async function ei(
          e,
          {
            address: t,
            abi: n,
            args: r,
            eventName: i,
            fromBlock: a,
            strict: o,
            toBlock: s,
          }
        ) {
          let u = Z(e, { method: "eth_newFilter" }),
            c = i ? en({ abi: n, args: r, eventName: i }) : void 0,
            d = await e.request({
              method: "eth_newFilter",
              params: [
                {
                  address: t,
                  fromBlock: "bigint" == typeof a ? (0, l.eC)(a) : a,
                  toBlock: "bigint" == typeof s ? (0, l.eC)(s) : s,
                  topics: c,
                },
              ],
            });
          return {
            abi: n,
            args: r,
            eventName: i,
            id: d,
            request: u(d),
            strict: o,
            type: "event",
          };
        }
        async function ea(
          e,
          {
            address: t,
            args: n,
            event: r,
            events: i,
            fromBlock: a,
            strict: o,
            toBlock: s,
          } = {}
        ) {
          let u = i ?? (r ? [r] : void 0),
            c = Z(e, { method: "eth_newFilter" }),
            d = [];
          u &&
            ((d = [
              u.flatMap((e) => en({ abi: [e], eventName: e.name, args: n })),
            ]),
            r && (d = d[0]));
          let f = await e.request({
            method: "eth_newFilter",
            params: [
              {
                address: t,
                fromBlock: "bigint" == typeof a ? (0, l.eC)(a) : a,
                toBlock: "bigint" == typeof s ? (0, l.eC)(s) : s,
                ...(d.length ? { topics: d } : {}),
              },
            ],
          });
          return {
            abi: u,
            args: n,
            eventName: r ? r.name : void 0,
            fromBlock: a,
            id: f,
            request: c(f),
            strict: o,
            toBlock: s,
            type: "event",
          };
        }
        async function eo(e) {
          let t = Z(e, { method: "eth_newPendingTransactionFilter" }),
            n = await e.request({ method: "eth_newPendingTransactionFilter" });
          return { id: n, request: t(n), type: "transaction" };
        }
        var es = n(14503),
          eu = n(81841);
        async function el(
          e,
          { abi: t, address: n, args: r, functionName: i, ...a }
        ) {
          let s = (0, o.R)({ abi: t, args: r, functionName: i });
          try {
            let t = await (0, E.s)(
              e,
              eu.Q,
              "estimateGas"
            )({ data: s, to: n, ...a });
            return t;
          } catch (o) {
            let e = a.account ? (0, es.T)(a.account) : void 0;
            throw _(o, {
              abi: t,
              address: n,
              args: r,
              docsPath: "/docs/contract/estimateContractGas",
              functionName: i,
              sender: e?.address,
            });
          }
        }
        var ec = n(43861),
          ed = n(79379);
        async function ef(
          e,
          { address: t, blockNumber: n, blockTag: r = "latest" }
        ) {
          let i = n ? (0, l.eC)(n) : void 0,
            a = await e.request({
              method: "eth_getBalance",
              params: [t, i || r],
            });
          return BigInt(a);
        }
        var ep = n(75016);
        let eh = new Map(),
          em = new Map();
        async function ey(e, { cacheKey: t, cacheTime: n = 1 / 0 }) {
          let r = (function (e) {
              let t = (e, t) => ({
                  clear: () => t.delete(e),
                  get: () => t.get(e),
                  set: (n) => t.set(e, n),
                }),
                n = t(e, eh),
                r = t(e, em);
              return {
                clear: () => {
                  n.clear(), r.clear();
                },
                promise: n,
                response: r,
              };
            })(t),
            i = r.response.get();
          if (i && n > 0) {
            let e = new Date().getTime() - i.created.getTime();
            if (e < n) return i.data;
          }
          let a = r.promise.get();
          a || ((a = e()), r.promise.set(a));
          try {
            let e = await a;
            return r.response.set({ created: new Date(), data: e }), e;
          } finally {
            r.promise.clear();
          }
        }
        let eg = (e) => `blockNumber.${e}`;
        async function eb(e, { cacheTime: t = e.cacheTime, maxAge: n } = {}) {
          let r = await ey(() => e.request({ method: "eth_blockNumber" }), {
            cacheKey: eg(e.uid),
            cacheTime: n ?? t,
          });
          return BigInt(r);
        }
        var ev = n(95946);
        async function ew(
          e,
          { blockHash: t, blockNumber: n, blockTag: r = "latest" } = {}
        ) {
          let i;
          let a = void 0 !== n ? (0, l.eC)(n) : void 0;
          return (
            (i = t
              ? await e.request({
                  method: "eth_getBlockTransactionCountByHash",
                  params: [t],
                })
              : await e.request({
                  method: "eth_getBlockTransactionCountByNumber",
                  params: [a || r],
                })),
            (0, ev.ly)(i)
          );
        }
        async function eE(
          e,
          { address: t, blockNumber: n, blockTag: r = "latest" }
        ) {
          let i = void 0 !== n ? (0, l.eC)(n) : void 0,
            a = await e.request({ method: "eth_getCode", params: [t, i || r] });
          if ("0x" !== a) return a;
        }
        var ex = n(79524),
          eC = n(34450);
        let e_ = "/docs/contract/decodeEventLog";
        function eT({ abi: e, data: t, strict: n, topics: r }) {
          let i = n ?? !0,
            [a, ...o] = r;
          if (!a) throw new x.FM({ docsPath: e_ });
          let s = e.find(
            (e) => "event" === e.type && a === (0, X.e)((0, ee.t)(e))
          );
          if (!(s && "name" in s) || "event" !== s.type)
            throw new x.lC(a, { docsPath: e_ });
          let { name: u, inputs: l } = s,
            c = l?.some((e) => !("name" in e && e.name)),
            d = c ? [] : {},
            f = l.filter((e) => "indexed" in e && e.indexed);
          for (let e = 0; e < f.length; e++) {
            let t = f[e],
              n = o[e];
            if (!n) throw new x.Gy({ abiItem: s, param: t });
            d[t.name || e] = (function ({ param: e, value: t }) {
              if (
                "string" === e.type ||
                "bytes" === e.type ||
                "tuple" === e.type ||
                e.type.match(/^(.*)\[(\d+)?\]$/)
              )
                return t;
              let n = (0, eC.r)([e], t) || [];
              return n[0];
            })({ param: t, value: n });
          }
          let p = l.filter((e) => !("indexed" in e && e.indexed));
          if (p.length > 0) {
            if (t && "0x" !== t)
              try {
                let e = (0, eC.r)(p, t);
                if (e) {
                  if (c) d = [...d, ...e];
                  else for (let t = 0; t < p.length; t++) d[p[t].name] = e[t];
                }
              } catch (e) {
                if (i) {
                  if (e instanceof x.xB)
                    throw new x.SM({
                      abiItem: s,
                      data: e.data,
                      params: e.params,
                      size: e.size,
                    });
                  throw e;
                }
              }
            else if (i)
              throw new x.SM({ abiItem: s, data: "0x", params: p, size: 0 });
          }
          return {
            eventName: u,
            args: Object.values(d).length > 0 ? d : void 0,
          };
        }
        var eS = n(53992);
        async function eP(
          e,
          {
            address: t,
            blockHash: n,
            fromBlock: r,
            toBlock: i,
            event: a,
            events: o,
            args: s,
            strict: u,
          } = {}
        ) {
          let c = u ?? !1,
            d = o ?? (a ? [a] : void 0),
            f = [];
          return (
            d &&
              ((f = [
                d.flatMap((e) => en({ abi: [e], eventName: e.name, args: s })),
              ]),
              a && (f = f[0])),
            (n
              ? await e.request({
                  method: "eth_getLogs",
                  params: [{ address: t, topics: f, blockHash: n }],
                })
              : await e.request({
                  method: "eth_getLogs",
                  params: [
                    {
                      address: t,
                      topics: f,
                      fromBlock: "bigint" == typeof r ? (0, l.eC)(r) : r,
                      toBlock: "bigint" == typeof i ? (0, l.eC)(i) : i,
                    },
                  ],
                })
            )
              .map((e) => {
                try {
                  let { eventName: t, args: n } = d
                    ? eT({ abi: d, data: e.data, topics: e.topics, strict: c })
                    : { eventName: void 0, args: void 0 };
                  return (0, eS.U)(e, { args: n, eventName: t });
                } catch (r) {
                  let t, n;
                  if (r instanceof x.SM || r instanceof x.Gy) {
                    if (c) return;
                    (t = r.abiItem.name),
                      (n = r.abiItem.inputs?.some(
                        (e) => !("name" in e && e.name)
                      ));
                  }
                  return (0, eS.U)(e, { args: n ? [] : {}, eventName: t });
                }
              })
              .filter(Boolean)
          );
        }
        async function eO(
          e,
          {
            abi: t,
            address: n,
            args: r,
            blockHash: i,
            eventName: a,
            fromBlock: o,
            toBlock: s,
            strict: u,
          }
        ) {
          let l = a ? (0, et.mE)({ abi: t, name: a }) : void 0,
            c = l ? void 0 : t.filter((e) => "event" === e.type);
          return (0, E.s)(
            e,
            eP,
            "getLogs"
          )({
            address: n,
            args: r,
            blockHash: i,
            event: l,
            events: c,
            fromBlock: o,
            toBlock: s,
            strict: u,
          });
        }
        async function eI(
          e,
          {
            blockCount: t,
            blockNumber: n,
            blockTag: r = "latest",
            rewardPercentiles: i,
          }
        ) {
          let a = n ? (0, l.eC)(n) : void 0,
            o = await e.request({
              method: "eth_feeHistory",
              params: [(0, l.eC)(t), a || r, i],
            });
          return {
            baseFeePerGas: o.baseFeePerGas.map((e) => BigInt(e)),
            gasUsedRatio: o.gasUsedRatio,
            oldestBlock: BigInt(o.oldestBlock),
            reward: o.reward?.map((e) => e.map((e) => BigInt(e))),
          };
        }
        async function eA(e, { filter: t }) {
          let n = "strict" in t && t.strict,
            r = await t.request({
              method: "eth_getFilterChanges",
              params: [t.id],
            });
          return r
            .map((e) => {
              if ("string" == typeof e) return e;
              try {
                let { eventName: r, args: i } =
                  "abi" in t && t.abi
                    ? eT({
                        abi: t.abi,
                        data: e.data,
                        topics: e.topics,
                        strict: n,
                      })
                    : { eventName: void 0, args: void 0 };
                return (0, eS.U)(e, { args: i, eventName: r });
              } catch (i) {
                let n, r;
                if (i instanceof x.SM || i instanceof x.Gy) {
                  if ("strict" in t && t.strict) return;
                  (n = i.abiItem.name),
                    (r = i.abiItem.inputs?.some(
                      (e) => !("name" in e && e.name)
                    ));
                }
                return (0, eS.U)(e, { args: r ? [] : {}, eventName: n });
              }
            })
            .filter(Boolean);
        }
        async function ek(e, { filter: t }) {
          let n = t.strict ?? !1,
            r = await t.request({
              method: "eth_getFilterLogs",
              params: [t.id],
            });
          return r
            .map((e) => {
              try {
                let { eventName: r, args: i } =
                  "abi" in t && t.abi
                    ? eT({
                        abi: t.abi,
                        data: e.data,
                        topics: e.topics,
                        strict: n,
                      })
                    : { eventName: void 0, args: void 0 };
                return (0, eS.U)(e, { args: i, eventName: r });
              } catch (i) {
                let n, r;
                if (i instanceof x.SM || i instanceof x.Gy) {
                  if ("strict" in t && t.strict) return;
                  (n = i.abiItem.name),
                    (r = i.abiItem.inputs?.some(
                      (e) => !("name" in e && e.name)
                    ));
                }
                return (0, eS.U)(e, { args: r ? [] : {}, eventName: n });
              }
            })
            .filter(Boolean);
        }
        var ej = n(24453);
        async function eB(
          e,
          { address: t, blockNumber: n, blockTag: r, storageKeys: i }
        ) {
          let a = void 0 !== n ? (0, l.eC)(n) : void 0,
            o = await e.request({
              method: "eth_getProof",
              params: [t, i, a || (r ?? "latest")],
            });
          return {
            ...o,
            balance: o.balance ? BigInt(o.balance) : void 0,
            nonce: o.nonce ? (0, ev.ly)(o.nonce) : void 0,
            storageProof: o.storageProof
              ? o.storageProof.map((e) => ({ ...e, value: BigInt(e.value) }))
              : void 0,
          };
        }
        async function eM(
          e,
          { address: t, blockNumber: n, blockTag: r = "latest", slot: i }
        ) {
          let a = void 0 !== n ? (0, l.eC)(n) : void 0,
            o = await e.request({
              method: "eth_getStorageAt",
              params: [t, i, a || r],
            });
          return o;
        }
        var eN = n(33639),
          eD = n(6073);
        async function eR(
          e,
          { blockHash: t, blockNumber: n, blockTag: r, hash: i, index: a }
        ) {
          let o = r || "latest",
            s = void 0 !== n ? (0, l.eC)(n) : void 0,
            u = null;
          if (
            (i
              ? (u = await e.request({
                  method: "eth_getTransactionByHash",
                  params: [i],
                }))
              : t
              ? (u = await e.request({
                  method: "eth_getTransactionByBlockHashAndIndex",
                  params: [t, (0, l.eC)(a)],
                }))
              : (s || o) &&
                (u = await e.request({
                  method: "eth_getTransactionByBlockNumberAndIndex",
                  params: [s || o, (0, l.eC)(a)],
                })),
            !u)
          )
            throw new eN.Bh({
              blockHash: t,
              blockNumber: n,
              blockTag: o,
              hash: i,
              index: a,
            });
          let c = e.chain?.formatters?.transaction?.format || eD.Tr;
          return c(u);
        }
        async function eF(e, { hash: t, transactionReceipt: n }) {
          let [r, i] = await Promise.all([
              (0, E.s)(e, eb, "getBlockNumber")({}),
              t ? (0, E.s)(e, eR, "getBlockNumber")({ hash: t }) : void 0,
            ]),
            a = n?.blockNumber || i?.blockNumber;
          return a ? r - a + 1n : 0n;
        }
        var eL = n(86162),
          eU = n(30866);
        async function e$(e, { hash: t }) {
          let n = await e.request({
            method: "eth_getTransactionReceipt",
            params: [t],
          });
          if (!n) throw new eN.Yb({ hash: t });
          let r = e.chain?.formatters?.transactionReceipt?.format || eU.f;
          return r(n);
        }
        async function eq(e, t) {
          let {
              allowFailure: n = !0,
              batchSize: r,
              blockNumber: u,
              blockTag: l,
              contracts: c,
              multicallAddress: p,
            } = t,
            h =
              r ??
              (("object" == typeof e.batch?.multicall &&
                e.batch.multicall.batchSize) ||
                1024),
            m = p;
          if (!m) {
            if (!e.chain)
              throw Error(
                "client chain not configured. multicallAddress is required."
              );
            m = (0, s.L)({
              blockNumber: u,
              chain: e.chain,
              contract: "multicall3",
            });
          }
          let y = [[]],
            g = 0,
            b = 0;
          for (let e = 0; e < c.length; e++) {
            let { abi: t, address: r, args: i, functionName: a } = c[e];
            try {
              let e = (0, o.R)({ abi: t, args: i, functionName: a });
              (b += (e.length - 2) / 2),
                h > 0 &&
                  b > h &&
                  y[g].length > 0 &&
                  (g++, (b = (e.length - 2) / 2), (y[g] = [])),
                (y[g] = [
                  ...y[g],
                  { allowFailure: !0, callData: e, target: r },
                ]);
            } catch (o) {
              let e = _(o, {
                abi: t,
                address: r,
                args: i,
                docsPath: "/docs/contract/multicall",
                functionName: a,
              });
              if (!n) throw e;
              y[g] = [...y[g], { allowFailure: !0, callData: "0x", target: r }];
            }
          }
          let v = await Promise.allSettled(
              y.map((t) =>
                (0, E.s)(
                  e,
                  S,
                  "readContract"
                )({
                  abi: i.F8,
                  address: m,
                  args: [t],
                  blockNumber: u,
                  blockTag: l,
                  functionName: "aggregate3",
                })
              )
            ),
            w = [];
          for (let e = 0; e < v.length; e++) {
            let t = v[e];
            if ("rejected" === t.status) {
              if (!n) throw t.reason;
              for (let n = 0; n < y[e].length; n++)
                w.push({ status: "failure", error: t.reason, result: void 0 });
              continue;
            }
            let r = t.value;
            for (let t = 0; t < r.length; t++) {
              let { returnData: i, success: o } = r[t],
                { callData: s } = y[e][t],
                { abi: u, address: l, functionName: d, args: p } = c[w.length];
              try {
                if ("0x" === s) throw new x.wb();
                if (!o) throw new f.VQ({ data: i });
                let e = (0, a.k)({ abi: u, args: p, data: i, functionName: d });
                w.push(n ? { result: e, status: "success" } : e);
              } catch (t) {
                let e = _(t, {
                  abi: u,
                  address: l,
                  args: p,
                  docsPath: "/docs/contract/multicall",
                  functionName: d,
                });
                if (!n) throw e;
                w.push({ error: e, result: void 0, status: "failure" });
              }
            }
          }
          if (w.length !== c.length)
            throw new d.G("multicall results mismatch");
          return w;
        }
        async function eH(
          e,
          { abi: t, address: n, args: r, dataSuffix: i, functionName: s, ...u }
        ) {
          let l = u.account ? (0, es.T)(u.account) : void 0,
            c = (0, o.R)({ abi: t, args: r, functionName: s });
          try {
            let { data: o } = await (0, E.s)(
                e,
                T.R,
                "call"
              )({
                batch: !1,
                data: `${c}${i ? i.replace("0x", "") : ""}`,
                to: n,
                ...u,
              }),
              l = (0, a.k)({
                abi: t,
                args: r,
                functionName: s,
                data: o || "0x",
              });
            return {
              result: l,
              request: {
                abi: t,
                address: n,
                args: r,
                dataSuffix: i,
                functionName: s,
                ...u,
              },
            };
          } catch (e) {
            throw _(e, {
              abi: t,
              address: n,
              args: r,
              docsPath: "/docs/contract/simulateContract",
              functionName: s,
              sender: l?.address,
            });
          }
        }
        async function ez(e, { filter: t }) {
          return t.request({ method: "eth_uninstallFilter", params: [t.id] });
        }
        var eG = n(27499),
          eW = n(30286);
        async function eV(e, { address: t, hash: n, signature: r, ...a }) {
          let o = (0, g.v)(r) ? r : (0, l.NC)(r);
          try {
            let { data: r } = await (0, E.s)(
              e,
              T.R,
              "call"
            )({
              data: (0, eW.w)({
                abi: i.$o,
                args: [t, n, o],
                bytecode:
                  "0x60806040523480156200001157600080fd5b50604051620007003803806200070083398101604081905262000034916200056f565b6000620000438484846200004f565b9050806000526001601ff35b600080846001600160a01b0316803b806020016040519081016040528181526000908060200190933c90507f6492649264926492649264926492649264926492649264926492649264926492620000a68462000451565b036200021f57600060608085806020019051810190620000c79190620005ce565b8651929550909350915060000362000192576000836001600160a01b031683604051620000f5919062000643565b6000604051808303816000865af19150503d806000811462000134576040519150601f19603f3d011682016040523d82523d6000602084013e62000139565b606091505b5050905080620001905760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b505b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90620001c4908b90869060040162000661565b602060405180830381865afa158015620001e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020891906200069d565b6001600160e01b031916149450505050506200044a565b805115620002b157604051630b135d3f60e11b808252906001600160a01b03871690631626ba7e9062000259908890889060040162000661565b602060405180830381865afa15801562000277573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029d91906200069d565b6001600160e01b031916149150506200044a565b8251604114620003195760405162461bcd60e51b815260206004820152603a6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e677468000000000000606482015260840162000187565b620003236200046b565b506020830151604080850151855186939260009185919081106200034b576200034b620006c9565b016020015160f81c9050601b81148015906200036b57508060ff16601c14155b15620003cf5760405162461bcd60e51b815260206004820152603b6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c75650000000000606482015260840162000187565b6040805160008152602081018083528a905260ff83169181019190915260608101849052608081018390526001600160a01b038a169060019060a0016020604051602081039080840390855afa1580156200042e573d6000803e3d6000fd5b505050602060405103516001600160a01b031614955050505050505b9392505050565b60006020825110156200046357600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b03811681146200049f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004d5578181015183820152602001620004bb565b50506000910152565b600082601f830112620004f057600080fd5b81516001600160401b03808211156200050d576200050d620004a2565b604051601f8301601f19908116603f01168101908282118183101715620005385762000538620004a2565b816040528381528660208588010111156200055257600080fd5b62000565846020830160208901620004b8565b9695505050505050565b6000806000606084860312156200058557600080fd5b8351620005928162000489565b6020850151604086015191945092506001600160401b03811115620005b657600080fd5b620005c486828701620004de565b9150509250925092565b600080600060608486031215620005e457600080fd5b8351620005f18162000489565b60208501519093506001600160401b03808211156200060f57600080fd5b6200061d87838801620004de565b935060408601519150808211156200063457600080fd5b50620005c486828701620004de565b6000825162000657818460208701620004b8565b9190910192915050565b828152604060208201526000825180604084015262000688816060850160208701620004b8565b601f01601f1916919091016060019392505050565b600060208284031215620006b057600080fd5b81516001600160e01b0319811681146200044a57600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572",
              }),
              ...a,
            });
            return (function (e, t) {
              let n = (0, g.v)(e) ? (0, m.O0)(e) : e,
                r = (0, g.v)(t) ? (0, m.O0)(t) : t;
              return (0, eG.Wd)(n, r);
            })(r ?? "0x0", "0x1");
          } catch (e) {
            if (e instanceof f.cg) return !1;
            throw e;
          }
        }
        async function eK(e, { address: t, message: n, signature: r, ...i }) {
          let a = (function (e, t) {
            let n =
                "string" == typeof e
                  ? (0, m.qX)(e)
                  : e.raw instanceof Uint8Array
                  ? e.raw
                  : (0, m.O0)(e.raw),
              r = (0, m.qX)(`Ethereum Signed Message:
${n.length}`);
            return (0, y.w)((0, h.zo)([r, n]), void 0);
          })(n);
          return eV(e, { address: t, hash: a, signature: r, ...i });
        }
        var eZ = n(71352);
        function eJ({ data: e, primaryType: t, types: n }) {
          let r = (function e({ data: t, primaryType: n, types: r }) {
            let i = [{ type: "bytes32" }],
              a = [
                (function ({ primaryType: e, types: t }) {
                  let n = (0, l.NC)(
                    (function ({ primaryType: e, types: t }) {
                      let n = "",
                        r = (function e(
                          { primaryType: t, types: n },
                          r = new Set()
                        ) {
                          let i = t.match(/^\w*/u)?.[0];
                          if (r.has(i) || void 0 === n[i]) return r;
                          for (let t of (r.add(i), n[i]))
                            e({ primaryType: t.type, types: n }, r);
                          return r;
                        })({ primaryType: e, types: t });
                      r.delete(e);
                      let i = [e, ...Array.from(r).sort()];
                      for (let e of i)
                        n += `${e}(${t[e]
                          .map(({ name: e, type: t }) => `${t} ${e}`)
                          .join(",")})`;
                      return n;
                    })({ primaryType: e, types: t })
                  );
                  return (0, y.w)(n);
                })({ primaryType: n, types: r }),
              ];
            for (let o of r[n]) {
              let [n, s] = (function t({
                types: n,
                name: r,
                type: i,
                value: a,
              }) {
                if (void 0 !== n[i])
                  return [
                    { type: "bytes32" },
                    (0, y.w)(e({ data: a, primaryType: i, types: n })),
                  ];
                if ("bytes" === i) {
                  let e = a.length % 2 ? "0" : "";
                  return (
                    (a = `0x${e + a.slice(2)}`),
                    [{ type: "bytes32" }, (0, y.w)(a)]
                  );
                }
                if ("string" === i)
                  return [{ type: "bytes32" }, (0, y.w)((0, l.NC)(a))];
                if (i.lastIndexOf("]") === i.length - 1) {
                  let e = i.slice(0, i.lastIndexOf("[")),
                    o = a.map((i) =>
                      t({ name: r, type: e, types: n, value: i })
                    );
                  return [
                    { type: "bytes32" },
                    (0, y.w)(
                      (0, Q.E)(
                        o.map(([e]) => e),
                        o.map(([, e]) => e)
                      )
                    ),
                  ];
                }
                return [{ type: i }, a];
              })({ types: r, name: o.name, type: o.type, value: t[o.name] });
              i.push(n), a.push(s);
            }
            return (0, Q.E)(i, a);
          })({ data: e, primaryType: t, types: n });
          return (0, y.w)(r);
        }
        async function eY(
          e,
          {
            address: t,
            signature: n,
            message: r,
            primaryType: i,
            types: a,
            domain: o,
            ...s
          }
        ) {
          let u = (function ({
            domain: e,
            message: t,
            primaryType: n,
            types: r,
          }) {
            let i = void 0 === e ? {} : e,
              a = { EIP712Domain: (0, eZ.cj)({ domain: i }), ...r };
            (0, eZ.iC)({ domain: i, message: t, primaryType: n, types: a });
            let o = ["0x1901"];
            return (
              i &&
                o.push(
                  (function ({ domain: e, types: t }) {
                    return eJ({
                      data: e,
                      primaryType: "EIP712Domain",
                      types: t,
                    });
                  })({ domain: i, types: a })
                ),
              "EIP712Domain" !== n &&
                o.push(eJ({ data: t, primaryType: n, types: a })),
              (0, y.w)((0, h.zo)(o))
            );
          })({ message: r, primaryType: i, types: a, domain: o });
          return eV(e, { address: t, hash: u, signature: n, ...s });
        }
        var eX = n(79814);
        let eQ = new Map(),
          e0 = new Map(),
          e1 = 0;
        function e2(e, t, n) {
          let r = ++e1,
            i = () => eQ.get(e) || [],
            a = () => {
              let t = i();
              eQ.set(
                e,
                t.filter((e) => e.id !== r)
              );
            },
            o = () => {
              let t = e0.get(e);
              1 === i().length && t && t(), a();
            },
            s = i();
          if ((eQ.set(e, [...s, { id: r, fns: t }]), s && s.length > 0))
            return o;
          let u = {};
          for (let e in t)
            u[e] = (...t) => {
              let n = i();
              if (0 !== n.length) for (let r of n) r.fns[e]?.(...t);
            };
          let l = n(u);
          return "function" == typeof l && e0.set(e, l), o;
        }
        var e6 = n(7760),
          e3 = n(96070),
          e5 = n(62914);
        function e4(e, { emitOnBegin: t, initialWaitTime: n, interval: r }) {
          let i = !0,
            a = () => (i = !1),
            o = async () => {
              let o;
              t && (o = await e({ unpoll: a }));
              let s = (await n?.(o)) ?? r;
              await (0, e5.D)(s);
              let u = async () => {
                i && (await e({ unpoll: a }), await (0, e5.D)(r), u());
              };
              u();
            };
          return o(), a;
        }
        function e8(
          e,
          {
            emitOnBegin: t = !1,
            emitMissed: n = !1,
            onBlockNumber: r,
            onError: i,
            poll: a,
            pollingInterval: o = e.pollingInterval,
          }
        ) {
          let s, u, l;
          let c = void 0 !== a ? a : "webSocket" !== e.transport.type;
          return c
            ? (() => {
                let a = (0, e3.P)(["watchBlockNumber", e.uid, t, n, o]);
                return e2(a, { onBlockNumber: r, onError: i }, (r) =>
                  e4(
                    async () => {
                      try {
                        let t = await (0, E.s)(
                          e,
                          eb,
                          "getBlockNumber"
                        )({ cacheTime: 0 });
                        if (s) {
                          if (t === s) return;
                          if (t - s > 1 && n)
                            for (let e = s + 1n; e < t; e++)
                              r.onBlockNumber(e, s), (s = e);
                        }
                        (!s || t > s) && (r.onBlockNumber(t, s), (s = t));
                      } catch (e) {
                        r.onError?.(e);
                      }
                    },
                    { emitOnBegin: t, interval: o }
                  )
                );
              })()
            : ((u = !0),
              (l = () => (u = !1)),
              (async () => {
                try {
                  let { unsubscribe: t } = await e.transport.subscribe({
                    params: ["newHeads"],
                    onData(e) {
                      if (!u) return;
                      let t = (0, ev.y_)(e.result?.number);
                      r(t, s), (s = t);
                    },
                    onError(e) {
                      i?.(e);
                    },
                  });
                  (l = t), u || l();
                } catch (e) {
                  i?.(e);
                }
              })(),
              l);
        }
        async function e7(
          e,
          {
            confirmations: t = 1,
            hash: n,
            onReplaced: r,
            pollingInterval: i = e.pollingInterval,
            timeout: a,
          }
        ) {
          let o, s, u;
          let l = (0, e3.P)(["waitForTransactionReceipt", e.uid, n]),
            c = !1;
          return new Promise((d, f) => {
            a && setTimeout(() => f(new eN.mc({ hash: n })), a);
            let p = e2(l, { onReplaced: r, resolve: d, reject: f }, (r) => {
              let a = (0, E.s)(
                e,
                e8,
                "watchBlockNumber"
              )({
                emitMissed: !0,
                emitOnBegin: !0,
                poll: !0,
                pollingInterval: i,
                async onBlockNumber(i) {
                  if (c) return;
                  let l = i,
                    d = (e) => {
                      a(), e(), p();
                    };
                  try {
                    if (u) {
                      if (
                        t > 1 &&
                        (!u.blockNumber || l - u.blockNumber + 1n < t)
                      )
                        return;
                      d(() => r.resolve(u));
                      return;
                    }
                    if (
                      (o ||
                        ((c = !0),
                        await (0, e6.J)(
                          async () => {
                            (o = await (0, E.s)(
                              e,
                              eR,
                              "getTransaction"
                            )({ hash: n })).blockNumber && (l = o.blockNumber);
                          },
                          {
                            delay: ({ count: e }) => 200 * ~~(1 << e),
                            retryCount: 6,
                          }
                        ),
                        (c = !1)),
                      (u = await (0, E.s)(
                        e,
                        e$,
                        "getTransactionReceipt"
                      )({ hash: n })),
                      t > 1 && (!u.blockNumber || l - u.blockNumber + 1n < t))
                    )
                      return;
                    d(() => r.resolve(u));
                  } catch (n) {
                    if (o && (n instanceof eN.Bh || n instanceof eN.Yb))
                      try {
                        (s = o), (c = !0);
                        let n = await (0, e6.J)(
                          () =>
                            (0, E.s)(
                              e,
                              ep.Q,
                              "getBlock"
                            )({ blockNumber: l, includeTransactions: !0 }),
                          {
                            delay: ({ count: e }) => 200 * ~~(1 << e),
                            retryCount: 6,
                            shouldRetry: ({ error: e }) => e instanceof eX.f,
                          }
                        );
                        c = !1;
                        let i = n.transactions.find(
                          ({ from: e, nonce: t }) =>
                            e === s.from && t === s.nonce
                        );
                        if (
                          !i ||
                          ((u = await (0, E.s)(
                            e,
                            e$,
                            "getTransactionReceipt"
                          )({ hash: i.hash })),
                          t > 1 &&
                            (!u.blockNumber || l - u.blockNumber + 1n < t))
                        )
                          return;
                        let a = "replaced";
                        i.to === s.to && i.value === s.value
                          ? (a = "repriced")
                          : i.from === i.to &&
                            0n === i.value &&
                            (a = "cancelled"),
                          d(() => {
                            r.onReplaced?.({
                              reason: a,
                              replacedTransaction: s,
                              transaction: i,
                              transactionReceipt: u,
                            }),
                              r.resolve(u);
                          });
                      } catch (e) {
                        d(() => r.reject(e));
                      }
                    else d(() => r.reject(n));
                  }
                },
              });
            });
          });
        }
        var e9 = n(43310),
          te = n(37397),
          tt = n(99238);
        function tn(e) {
          return {
            call: (t) => (0, T.R)(e, t),
            createBlockFilter: () => J(e),
            createContractEventFilter: (t) => ei(e, t),
            createEventFilter: (t) => ea(e, t),
            createPendingTransactionFilter: () => eo(e),
            estimateContractGas: (t) => el(e, t),
            estimateGas: (t) => (0, eu.Q)(e, t),
            getBalance: (t) => ef(e, t),
            getBlock: (t) => (0, ep.Q)(e, t),
            getBlockNumber: (t) => eb(e, t),
            getBlockTransactionCount: (t) => ew(e, t),
            getBytecode: (t) => eE(e, t),
            getChainId: () => (0, ex.L)(e),
            getContractEvents: (t) => eO(e, t),
            getEnsAddress: (t) => P(e, t),
            getEnsAvatar: (t) => W(e, t),
            getEnsName: (t) => V(e, t),
            getEnsResolver: (t) => K(e, t),
            getEnsText: (t) => G(e, t),
            getFeeHistory: (t) => eI(e, t),
            estimateFeesPerGas: (t) => (0, ec.X)(e, t),
            getFilterChanges: (t) => eA(e, t),
            getFilterLogs: (t) => ek(e, t),
            getGasPrice: () => (0, ej.o)(e),
            getLogs: (t) => eP(e, t),
            getProof: (t) => eB(e, t),
            estimateMaxPriorityFeePerGas: (t) => (0, ed._)(e, t),
            getStorageAt: (t) => eM(e, t),
            getTransaction: (t) => eR(e, t),
            getTransactionConfirmations: (t) => eF(e, t),
            getTransactionCount: (t) => (0, eL.K)(e, t),
            getTransactionReceipt: (t) => e$(e, t),
            multicall: (t) => eq(e, t),
            prepareTransactionRequest: (t) => (0, te.Z)(e, t),
            readContract: (t) => S(e, t),
            sendRawTransaction: (t) => (0, tt.p)(e, t),
            simulateContract: (t) => eH(e, t),
            verifyMessage: (t) => eK(e, t),
            verifyTypedData: (t) => eY(e, t),
            uninstallFilter: (t) => ez(e, t),
            waitForTransactionReceipt: (t) => e7(e, t),
            watchBlocks: (t) =>
              (function (
                e,
                {
                  blockTag: t = "latest",
                  emitMissed: n = !1,
                  emitOnBegin: r = !1,
                  onBlock: i,
                  onError: a,
                  includeTransactions: o,
                  poll: s,
                  pollingInterval: u = e.pollingInterval,
                }
              ) {
                let l, c, d;
                let f = void 0 !== s ? s : "webSocket" !== e.transport.type,
                  p = o ?? !1;
                return f
                  ? (() => {
                      let o = (0, e3.P)(["watchBlocks", e.uid, n, r, p, u]);
                      return e2(o, { onBlock: i, onError: a }, (i) =>
                        e4(
                          async () => {
                            try {
                              let r = await (0, E.s)(
                                e,
                                ep.Q,
                                "getBlock"
                              )({ blockTag: t, includeTransactions: p });
                              if (r.number && l?.number) {
                                if (r.number === l.number) return;
                                if (r.number - l.number > 1 && n)
                                  for (
                                    let t = l?.number + 1n;
                                    t < r.number;
                                    t++
                                  ) {
                                    let n = await (0, E.s)(
                                      e,
                                      ep.Q,
                                      "getBlock"
                                    )({
                                      blockNumber: t,
                                      includeTransactions: p,
                                    });
                                    i.onBlock(n, l), (l = n);
                                  }
                              }
                              (!l?.number ||
                                ("pending" === t && !r?.number) ||
                                (r.number && r.number > l.number)) &&
                                (i.onBlock(r, l), (l = r));
                            } catch (e) {
                              i.onError?.(e);
                            }
                          },
                          { emitOnBegin: r, interval: u }
                        )
                      );
                    })()
                  : ((c = !0),
                    (d = () => (c = !1)),
                    (async () => {
                      try {
                        let { unsubscribe: t } = await e.transport.subscribe({
                          params: ["newHeads"],
                          onData(t) {
                            if (!c) return;
                            let n = e.chain?.formatters?.block?.format || e9.Z,
                              r = n(t.result);
                            i(r, l), (l = r);
                          },
                          onError(e) {
                            a?.(e);
                          },
                        });
                        (d = t), c || d();
                      } catch (e) {
                        a?.(e);
                      }
                    })(),
                    d);
              })(e, t),
            watchBlockNumber: (t) => e8(e, t),
            watchContractEvent: (t) =>
              (function (
                e,
                {
                  abi: t,
                  address: n,
                  args: r,
                  batch: i = !0,
                  eventName: a,
                  onError: o,
                  onLogs: s,
                  poll: u,
                  pollingInterval: l = e.pollingInterval,
                  strict: c,
                }
              ) {
                let d, f;
                let p = void 0 !== u ? u : "webSocket" !== e.transport.type;
                return p
                  ? (() => {
                      let u = (0, e3.P)([
                          "watchContractEvent",
                          n,
                          r,
                          i,
                          e.uid,
                          a,
                          l,
                        ]),
                        d = c ?? !1;
                      return e2(u, { onLogs: s, onError: o }, (o) => {
                        let s, u;
                        let c = !1,
                          f = e4(
                            async () => {
                              if (!c) {
                                try {
                                  u = await (0, E.s)(
                                    e,
                                    ei,
                                    "createContractEventFilter"
                                  )({
                                    abi: t,
                                    address: n,
                                    args: r,
                                    eventName: a,
                                    strict: d,
                                  });
                                } catch {}
                                c = !0;
                                return;
                              }
                              try {
                                let l;
                                if (u)
                                  l = await (0, E.s)(
                                    e,
                                    eA,
                                    "getFilterChanges"
                                  )({ filter: u });
                                else {
                                  let i = await (0, E.s)(
                                    e,
                                    eb,
                                    "getBlockNumber"
                                  )({});
                                  (l =
                                    s && s !== i
                                      ? await (0, E.s)(
                                          e,
                                          eO,
                                          "getContractEvents"
                                        )({
                                          abi: t,
                                          address: n,
                                          args: r,
                                          eventName: a,
                                          fromBlock: s + 1n,
                                          toBlock: i,
                                          strict: d,
                                        })
                                      : []),
                                    (s = i);
                                }
                                if (0 === l.length) return;
                                if (i) o.onLogs(l);
                                else for (let e of l) o.onLogs([e]);
                              } catch (e) {
                                u && e instanceof C.yR && (c = !1),
                                  o.onError?.(e);
                              }
                            },
                            { emitOnBegin: !0, interval: l }
                          );
                        return async () => {
                          u &&
                            (await (0, E.s)(
                              e,
                              ez,
                              "uninstallFilter"
                            )({ filter: u })),
                            f();
                        };
                      });
                    })()
                  : ((d = !0),
                    (f = () => (d = !1)),
                    (async () => {
                      try {
                        let i = a ? en({ abi: t, eventName: a, args: r }) : [],
                          { unsubscribe: u } = await e.transport.subscribe({
                            params: ["logs", { address: n, topics: i }],
                            onData(e) {
                              if (!d) return;
                              let n = e.result;
                              try {
                                let { eventName: e, args: r } = eT({
                                    abi: t,
                                    data: n.data,
                                    topics: n.topics,
                                    strict: c,
                                  }),
                                  i = (0, eS.U)(n, { args: r, eventName: e });
                                s([i]);
                              } catch (i) {
                                let e, t;
                                if (i instanceof x.SM || i instanceof x.Gy) {
                                  if (c) return;
                                  (e = i.abiItem.name),
                                    (t = i.abiItem.inputs?.some(
                                      (e) => !("name" in e && e.name)
                                    ));
                                }
                                let r = (0, eS.U)(n, {
                                  args: t ? [] : {},
                                  eventName: e,
                                });
                                s([r]);
                              }
                            },
                            onError(e) {
                              o?.(e);
                            },
                          });
                        (f = u), d || f();
                      } catch (e) {
                        o?.(e);
                      }
                    })(),
                    f);
              })(e, t),
            watchEvent: (t) =>
              (function (
                e,
                {
                  address: t,
                  args: n,
                  batch: r = !0,
                  event: i,
                  events: a,
                  onError: o,
                  onLogs: s,
                  poll: u,
                  pollingInterval: l = e.pollingInterval,
                  strict: c,
                }
              ) {
                let d, f;
                let p = void 0 !== u ? u : "webSocket" !== e.transport.type,
                  h = c ?? !1;
                return p
                  ? (() => {
                      let u = (0, e3.P)(["watchEvent", t, n, r, e.uid, i, l]);
                      return e2(u, { onLogs: s, onError: o }, (o) => {
                        let s, u;
                        let c = !1,
                          d = e4(
                            async () => {
                              if (!c) {
                                try {
                                  u = await (0, E.s)(
                                    e,
                                    ea,
                                    "createEventFilter"
                                  )({
                                    address: t,
                                    args: n,
                                    event: i,
                                    events: a,
                                    strict: h,
                                  });
                                } catch {}
                                c = !0;
                                return;
                              }
                              try {
                                let l;
                                if (u)
                                  l = await (0, E.s)(
                                    e,
                                    eA,
                                    "getFilterChanges"
                                  )({ filter: u });
                                else {
                                  let r = await (0, E.s)(
                                    e,
                                    eb,
                                    "getBlockNumber"
                                  )({});
                                  (l =
                                    s && s !== r
                                      ? await (0, E.s)(
                                          e,
                                          eP,
                                          "getLogs"
                                        )({
                                          address: t,
                                          args: n,
                                          event: i,
                                          events: a,
                                          fromBlock: s + 1n,
                                          toBlock: r,
                                        })
                                      : []),
                                    (s = r);
                                }
                                if (0 === l.length) return;
                                if (r) o.onLogs(l);
                                else for (let e of l) o.onLogs([e]);
                              } catch (e) {
                                u && e instanceof C.yR && (c = !1),
                                  o.onError?.(e);
                              }
                            },
                            { emitOnBegin: !0, interval: l }
                          );
                        return async () => {
                          u &&
                            (await (0, E.s)(
                              e,
                              ez,
                              "uninstallFilter"
                            )({ filter: u })),
                            d();
                        };
                      });
                    })()
                  : ((d = !0),
                    (f = () => (d = !1)),
                    (async () => {
                      try {
                        let r = a ?? (i ? [i] : void 0),
                          u = [];
                        r &&
                          ((u = [
                            r.flatMap((e) =>
                              en({ abi: [e], eventName: e.name, args: n })
                            ),
                          ]),
                          i && (u = u[0]));
                        let { unsubscribe: l } = await e.transport.subscribe({
                          params: ["logs", { address: t, topics: u }],
                          onData(e) {
                            if (!d) return;
                            let t = e.result;
                            try {
                              let { eventName: e, args: n } = eT({
                                  abi: r,
                                  data: t.data,
                                  topics: t.topics,
                                  strict: h,
                                }),
                                i = (0, eS.U)(t, { args: n, eventName: e });
                              s([i]);
                            } catch (i) {
                              let e, n;
                              if (i instanceof x.SM || i instanceof x.Gy) {
                                if (c) return;
                                (e = i.abiItem.name),
                                  (n = i.abiItem.inputs?.some(
                                    (e) => !("name" in e && e.name)
                                  ));
                              }
                              let r = (0, eS.U)(t, {
                                args: n ? [] : {},
                                eventName: e,
                              });
                              s([r]);
                            }
                          },
                          onError(e) {
                            o?.(e);
                          },
                        });
                        (f = l), d || f();
                      } catch (e) {
                        o?.(e);
                      }
                    })(),
                    f);
              })(e, t),
            watchPendingTransactions: (t) =>
              (function (
                e,
                {
                  batch: t = !0,
                  onError: n,
                  onTransactions: r,
                  poll: i,
                  pollingInterval: a = e.pollingInterval,
                }
              ) {
                let o, s;
                let u = void 0 !== i ? i : "webSocket" !== e.transport.type;
                return u
                  ? (() => {
                      let i = (0, e3.P)([
                        "watchPendingTransactions",
                        e.uid,
                        t,
                        a,
                      ]);
                      return e2(i, { onTransactions: r, onError: n }, (n) => {
                        let r;
                        let i = e4(
                          async () => {
                            try {
                              if (!r)
                                try {
                                  r = await (0, E.s)(
                                    e,
                                    eo,
                                    "createPendingTransactionFilter"
                                  )({});
                                  return;
                                } catch (e) {
                                  throw (i(), e);
                                }
                              let a = await (0, E.s)(
                                e,
                                eA,
                                "getFilterChanges"
                              )({ filter: r });
                              if (0 === a.length) return;
                              if (t) n.onTransactions(a);
                              else for (let e of a) n.onTransactions([e]);
                            } catch (e) {
                              n.onError?.(e);
                            }
                          },
                          { emitOnBegin: !0, interval: a }
                        );
                        return async () => {
                          r &&
                            (await (0, E.s)(
                              e,
                              ez,
                              "uninstallFilter"
                            )({ filter: r })),
                            i();
                        };
                      });
                    })()
                  : ((o = !0),
                    (s = () => (o = !1)),
                    (async () => {
                      try {
                        let { unsubscribe: t } = await e.transport.subscribe({
                          params: ["newPendingTransactions"],
                          onData(e) {
                            if (!o) return;
                            let t = e.result;
                            r([t]);
                          },
                          onError(e) {
                            n?.(e);
                          },
                        });
                        (s = t), o || s();
                      } catch (e) {
                        n?.(e);
                      }
                    })(),
                    s);
              })(e, t),
          };
        }
        function tr(e) {
          let { key: t = "public", name: n = "Public Client" } = e,
            i = (0, r.e)({ ...e, key: t, name: n, type: "publicClient" });
          return i.extend(tn);
        }
      },
      79578: function (e, t, n) {
        "use strict";
        n.d(t, {
          K: function () {
            return F;
          },
        });
        var r = n(16189),
          i = n(79524),
          a = n(92106);
        async function o(e, { chain: t }) {
          let {
            id: n,
            name: r,
            nativeCurrency: i,
            rpcUrls: o,
            blockExplorers: s,
          } = t;
          await e.request({
            method: "wallet_addEthereumChain",
            params: [
              {
                chainId: (0, a.eC)(n),
                chainName: r,
                nativeCurrency: i,
                rpcUrls: o.default.http,
                blockExplorerUrls: s
                  ? Object.values(s).map(({ url: e }) => e)
                  : void 0,
              },
            ],
          });
        }
        var s = n(30286),
          u = n(14503),
          l = n(8998),
          c = n(80377);
        function d({ chain: e, currentChainId: t }) {
          if (!e) throw new c.Bk();
          if (t !== e.id) throw new c.Yl({ chain: e, currentChainId: t });
        }
        var f = n(26445),
          p = n(33639),
          h = n(87469),
          m = n(61163),
          y = n(74688),
          g = n(93714),
          b = n(47531),
          v = n(37397),
          w = n(99238);
        async function E(e, t) {
          let {
            account: n = e.account,
            chain: r = e.chain,
            accessList: a,
            data: o,
            gas: s,
            gasPrice: c,
            maxFeePerGas: E,
            maxPriorityFeePerGas: x,
            nonce: C,
            to: _,
            value: T,
            ...S
          } = t;
          if (!n)
            throw new l.o({ docsPath: "/docs/actions/wallet/sendTransaction" });
          let P = (0, u.T)(n);
          try {
            let n;
            if (
              ((0, b.F)(t),
              null !== r &&
                ((n = await (0, g.s)(e, i.L, "getChainId")({})),
                d({ currentChainId: n, chain: r })),
              "local" === P.type)
            ) {
              let t = await (0, g.s)(
                e,
                v.Z,
                "prepareTransactionRequest"
              )({
                account: P,
                accessList: a,
                chain: r,
                data: o,
                gas: s,
                gasPrice: c,
                maxFeePerGas: E,
                maxPriorityFeePerGas: x,
                nonce: C,
                to: _,
                value: T,
                ...S,
              });
              n || (n = await (0, g.s)(e, i.L, "getChainId")({}));
              let u = r?.serializers?.transaction,
                l = await P.signTransaction(
                  { ...t, chainId: n },
                  { serializer: u }
                );
              return await (0, g.s)(
                e,
                w.p,
                "sendRawTransaction"
              )({ serializedTransaction: l });
            }
            let u = e.chain?.formatters?.transactionRequest?.format,
              l = u || y.tG,
              f = l({
                ...(0, m.K)(S, { format: u }),
                accessList: a,
                data: o,
                from: P.address,
                gas: s,
                gasPrice: c,
                maxFeePerGas: E,
                maxPriorityFeePerGas: x,
                nonce: C,
                to: _,
                value: T,
              });
            return await e.request({
              method: "eth_sendTransaction",
              params: [f],
            });
          } catch (e) {
            throw (function (e, { docsPath: t, ...n }) {
              let r = (() => {
                let t = (0, h.k)(e, n);
                return t instanceof f.cj ? e : t;
              })();
              return new p.mk(r, { docsPath: t, ...n });
            })(e, { ...t, account: P, chain: t.chain || void 0 });
          }
        }
        var x = n(45775);
        async function C(e) {
          if (e.account?.type === "local") return [e.account.address];
          let t = await e.request({ method: "eth_accounts" });
          return t.map((e) => (0, x.x)(e));
        }
        async function _(e) {
          let t = await e.request({ method: "wallet_getPermissions" });
          return t;
        }
        async function T(e) {
          let t = await e.request({ method: "eth_requestAccounts" });
          return t.map((e) => (0, x.K)(e));
        }
        async function S(e, t) {
          return e.request({
            method: "wallet_requestPermissions",
            params: [t],
          });
        }
        async function P(e, { account: t = e.account, message: n }) {
          if (!t)
            throw new l.o({ docsPath: "/docs/actions/wallet/signMessage" });
          let r = (0, u.T)(t);
          if ("local" === r.type) return r.signMessage({ message: n });
          let i =
            "string" == typeof n
              ? (0, a.$G)(n)
              : n.raw instanceof Uint8Array
              ? (0, a.NC)(n.raw)
              : n.raw;
          return e.request({ method: "personal_sign", params: [i, r.address] });
        }
        async function O(e, t) {
          let { account: n = e.account, chain: r = e.chain, ...o } = t;
          if (!n)
            throw new l.o({ docsPath: "/docs/actions/wallet/signTransaction" });
          let s = (0, u.T)(n);
          (0, b.F)({ account: s, ...t });
          let c = await (0, g.s)(e, i.L, "getChainId")({});
          null !== r && d({ currentChainId: c, chain: r });
          let f = r?.formatters || e.chain?.formatters,
            p = f?.transactionRequest?.format || y.tG;
          return "local" === s.type
            ? s.signTransaction(
                { ...o, chainId: c },
                { serializer: e.chain?.serializers?.transaction }
              )
            : await e.request({
                method: "eth_signTransaction",
                params: [{ ...p(o), chainId: (0, a.eC)(c), from: s.address }],
              });
        }
        var I = n(15102),
          A = n(96070),
          k = n(71352);
        async function j(
          e,
          {
            account: t = e.account,
            domain: n,
            message: r,
            primaryType: i,
            types: a,
          }
        ) {
          if (!t)
            throw new l.o({ docsPath: "/docs/actions/wallet/signTypedData" });
          let o = (0, u.T)(t),
            s = { EIP712Domain: (0, k.cj)({ domain: n }), ...a };
          if (
            ((0, k.iC)({ domain: n, message: r, primaryType: i, types: s }),
            "local" === o.type)
          )
            return o.signTypedData({
              domain: n,
              primaryType: i,
              types: s,
              message: r,
            });
          let c = (0, A.P)(
            { domain: n ?? {}, primaryType: i, types: s, message: r },
            (e, t) => ((0, I.v)(t) ? t.toLowerCase() : t)
          );
          return e.request({
            method: "eth_signTypedData_v4",
            params: [o.address, c],
          });
        }
        async function B(e, { id: t }) {
          await e.request({
            method: "wallet_switchEthereumChain",
            params: [{ chainId: (0, a.eC)(t) }],
          });
        }
        async function M(e, t) {
          let n = await e.request({ method: "wallet_watchAsset", params: t });
          return n;
        }
        var N = n(77799);
        async function D(
          e,
          { abi: t, address: n, args: r, dataSuffix: i, functionName: a, ...o }
        ) {
          let s = (0, N.R)({ abi: t, args: r, functionName: a }),
            u = await (0, g.s)(
              e,
              E,
              "sendTransaction"
            )({ data: `${s}${i ? i.replace("0x", "") : ""}`, to: n, ...o });
          return u;
        }
        function R(e) {
          return {
            addChain: (t) => o(e, t),
            deployContract: (t) =>
              (function (e, { abi: t, args: n, bytecode: r, ...i }) {
                let a = (0, s.w)({ abi: t, args: n, bytecode: r });
                return E(e, { ...i, data: a });
              })(e, t),
            getAddresses: () => C(e),
            getChainId: () => (0, i.L)(e),
            getPermissions: () => _(e),
            prepareTransactionRequest: (t) => (0, v.Z)(e, t),
            requestAddresses: () => T(e),
            requestPermissions: (t) => S(e, t),
            sendRawTransaction: (t) => (0, w.p)(e, t),
            sendTransaction: (t) => E(e, t),
            signMessage: (t) => P(e, t),
            signTransaction: (t) => O(e, t),
            signTypedData: (t) => j(e, t),
            switchChain: (t) => B(e, t),
            watchAsset: (t) => M(e, t),
            writeContract: (t) => D(e, t),
          };
        }
        function F(e) {
          let {
              key: t = "wallet",
              name: n = "Wallet Client",
              transport: i,
            } = e,
            a = (0, r.e)({
              ...e,
              key: t,
              name: n,
              transport: (e) => i({ ...e, retryCount: 0 }),
              type: "walletClient",
            });
          return a.extend(R);
        }
      },
      31031: function (e, t, n) {
        "use strict";
        n.d(t, {
          q: function () {
            return i;
          },
        });
        var r = n(37029);
        function i(
          {
            key: e,
            name: t,
            request: n,
            retryCount: i = 3,
            retryDelay: a = 150,
            timeout: o,
            type: s,
          },
          u
        ) {
          return {
            config: {
              key: e,
              name: t,
              request: n,
              retryCount: i,
              retryDelay: a,
              timeout: o,
              type: s,
            },
            request: (0, r.n)(n, { retryCount: i, retryDelay: a }),
            value: u,
          };
        }
      },
      3980: function (e, t, n) {
        "use strict";
        n.d(t, {
          P: function () {
            return i;
          },
        });
        var r = n(31031);
        function i(e, t = {}) {
          let {
            key: n = "custom",
            name: i = "Custom Provider",
            retryDelay: a,
          } = t;
          return ({ retryCount: o }) =>
            (0, r.q)({
              key: n,
              name: i,
              request: e.request.bind(e),
              retryCount: t.retryCount ?? o,
              retryDelay: a,
              type: "custom",
            });
        }
      },
      71506: function (e, t, n) {
        "use strict";
        n.d(t, {
          d: function () {
            return u;
          },
        });
        var r = n(78863),
          i = n(43018),
          a = n(32357),
          o = n(66558),
          s = n(31031);
        function u(e, t = {}) {
          let {
            batch: n,
            fetchOptions: u,
            key: l = "http",
            name: c = "HTTP JSON-RPC",
            retryDelay: d,
          } = t;
          return ({ chain: f, retryCount: p, timeout: h }) => {
            let { batchSize: m = 1e3, wait: y = 0 } =
                "object" == typeof n ? n : {},
              g = t.retryCount ?? p,
              b = h ?? t.timeout ?? 1e4,
              v = e || f?.rpcUrls.default.http[0];
            if (!v) throw new i.I();
            return (0, s.q)(
              {
                key: l,
                name: c,
                async request({ method: t, params: i }) {
                  let s = { method: t, params: i },
                    { schedule: l } = (0, a.S)({
                      id: `${e}`,
                      wait: y,
                      shouldSplitBatch: (e) => e.length > m,
                      fn: (e) =>
                        o.f4.http(v, { body: e, fetchOptions: u, timeout: b }),
                      sort: (e, t) => e.id - t.id,
                    }),
                    c = async (e) =>
                      n
                        ? l(e)
                        : [
                            await o.f4.http(v, {
                              body: e,
                              fetchOptions: u,
                              timeout: b,
                            }),
                          ],
                    [{ error: d, result: f }] = await c(s);
                  if (d) throw new r.bs({ body: s, error: d, url: v });
                  return f;
                },
                retryCount: g,
                retryDelay: d,
                timeout: b,
                type: "http",
              },
              { fetchOptions: u, url: e }
            );
          };
        }
      },
      16693: function (e, t, n) {
        "use strict";
        n.d(t, {
          $o: function () {
            return l;
          },
          F8: function () {
            return r;
          },
          X$: function () {
            return u;
          },
          du: function () {
            return o;
          },
          k3: function () {
            return a;
          },
          nZ: function () {
            return s;
          },
        });
        let r = [
            {
              inputs: [
                {
                  components: [
                    { name: "target", type: "address" },
                    { name: "allowFailure", type: "bool" },
                    { name: "callData", type: "bytes" },
                  ],
                  name: "calls",
                  type: "tuple[]",
                },
              ],
              name: "aggregate3",
              outputs: [
                {
                  components: [
                    { name: "success", type: "bool" },
                    { name: "returnData", type: "bytes" },
                  ],
                  name: "returnData",
                  type: "tuple[]",
                },
              ],
              stateMutability: "view",
              type: "function",
            },
          ],
          i = [
            { inputs: [], name: "ResolverNotFound", type: "error" },
            { inputs: [], name: "ResolverWildcardNotSupported", type: "error" },
          ],
          a = [
            ...i,
            {
              name: "resolve",
              type: "function",
              stateMutability: "view",
              inputs: [
                { name: "name", type: "bytes" },
                { name: "data", type: "bytes" },
              ],
              outputs: [
                { name: "", type: "bytes" },
                { name: "address", type: "address" },
              ],
            },
          ],
          o = [
            ...i,
            {
              name: "reverse",
              type: "function",
              stateMutability: "view",
              inputs: [{ type: "bytes", name: "reverseName" }],
              outputs: [
                { type: "string", name: "resolvedName" },
                { type: "address", name: "resolvedAddress" },
                { type: "address", name: "reverseResolver" },
                { type: "address", name: "resolver" },
              ],
            },
          ],
          s = [
            {
              name: "text",
              type: "function",
              stateMutability: "view",
              inputs: [
                { name: "name", type: "bytes32" },
                { name: "key", type: "string" },
              ],
              outputs: [{ name: "", type: "string" }],
            },
          ],
          u = [
            {
              name: "addr",
              type: "function",
              stateMutability: "view",
              inputs: [{ name: "name", type: "bytes32" }],
              outputs: [{ name: "", type: "address" }],
            },
            {
              name: "addr",
              type: "function",
              stateMutability: "view",
              inputs: [
                { name: "name", type: "bytes32" },
                { name: "coinType", type: "uint256" },
              ],
              outputs: [{ name: "", type: "bytes" }],
            },
          ],
          l = [
            {
              inputs: [
                { internalType: "address", name: "_signer", type: "address" },
                { internalType: "bytes32", name: "_hash", type: "bytes32" },
                { internalType: "bytes", name: "_signature", type: "bytes" },
              ],
              stateMutability: "nonpayable",
              type: "constructor",
            },
          ];
      },
      1958: function (e, t, n) {
        "use strict";
        n.d(t, {
          D: function () {
            return r;
          },
        });
        let r = "0x0000000000000000000000000000000000000000";
      },
      35816: function (e, t, n) {
        "use strict";
        n.d(t, {
          Z: function () {
            return r;
          },
        });
        let r =
          "0x0000000000000000000000000000000000000000000000000000000000000000";
      },
      21746: function (e, t, n) {
        "use strict";
        n.d(t, {
          $: function () {
            return r;
          },
          Up: function () {
            return i;
          },
          hZ: function () {
            return a;
          },
        });
        let r = {
            1: "An `assert` condition failed.",
            17: "Arithmic operation resulted in underflow or overflow.",
            18: "Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).",
            33: "Attempted to convert to an invalid type.",
            34: "Attempted to access a storage byte array that is incorrectly encoded.",
            49: "Performed `.pop()` on an empty array",
            50: "Array index is out of bounds.",
            65: "Allocated too much memory or created an array which is too large.",
            81: "Attempted to call a zero-initialized variable of internal function type.",
          },
          i = {
            inputs: [{ name: "message", type: "string" }],
            name: "Error",
            type: "error",
          },
          a = {
            inputs: [{ name: "reason", type: "uint256" }],
            name: "Panic",
            type: "error",
          };
      },
      84192: function (e, t, n) {
        "use strict";
        n.d(t, {
          Bd: function () {
            return a;
          },
          Zn: function () {
            return i;
          },
          ez: function () {
            return r;
          },
        });
        let r = { gwei: 9, wei: 18 },
          i = { ether: -9, wei: 9 },
          a = { ether: -18, gwei: -9 };
      },
      57412: function (e, t, n) {
        "use strict";
        n.d(t, {
          CI: function () {
            return _;
          },
          FM: function () {
            return h;
          },
          Gy: function () {
            return x;
          },
          KY: function () {
            return w;
          },
          M4: function () {
            return d;
          },
          MX: function () {
            return b;
          },
          S4: function () {
            return v;
          },
          SM: function () {
            return E;
          },
          cO: function () {
            return s;
          },
          dh: function () {
            return C;
          },
          fM: function () {
            return o;
          },
          fs: function () {
            return f;
          },
          gr: function () {
            return c;
          },
          hn: function () {
            return T;
          },
          lC: function () {
            return m;
          },
          mv: function () {
            return y;
          },
          wM: function () {
            return S;
          },
          wb: function () {
            return l;
          },
          xB: function () {
            return u;
          },
          xL: function () {
            return g;
          },
          yP: function () {
            return p;
          },
        });
        var r = n(80522),
          i = n(39135),
          a = n(62027);
        class o extends a.G {
          constructor({ docsPath: e }) {
            super(
              "A constructor was not found on the ABI.\nMake sure you are using the correct ABI and that the constructor exists on it.",
              { docsPath: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiConstructorNotFoundError",
              });
          }
        }
        class s extends a.G {
          constructor({ docsPath: e }) {
            super(
              "Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.\nMake sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.",
              { docsPath: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiConstructorParamsNotFoundError",
              });
          }
        }
        class u extends a.G {
          constructor({ data: e, params: t, size: n }) {
            super(
              `Data size of ${n} bytes is too small for given parameters.`,
              {
                metaMessages: [
                  `Params: (${(0, r.h)(t, { includeName: !0 })})`,
                  `Data:   ${e} (${n} bytes)`,
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiDecodingDataSizeTooSmallError",
              }),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "params", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "size", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.data = e),
              (this.params = t),
              (this.size = n);
          }
        }
        class l extends a.G {
          constructor() {
            super('Cannot decode zero data ("0x") with ABI parameters.'),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiDecodingZeroDataError",
              });
          }
        }
        class c extends a.G {
          constructor({ expectedLength: e, givenLength: t, type: n }) {
            super(`ABI encoding array length mismatch for type ${n}.
Expected length: ${e}
Given length: ${t}`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEncodingArrayLengthMismatchError",
              });
          }
        }
        class d extends a.G {
          constructor({ expectedSize: e, value: t }) {
            super(
              `Size of bytes "${t}" (bytes${(0, i.d)(
                t
              )}) does not match expected size (bytes${e}).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEncodingBytesSizeMismatchError",
              });
          }
        }
        class f extends a.G {
          constructor({ expectedLength: e, givenLength: t }) {
            super(`ABI encoding params/values length mismatch.
Expected length (params): ${e}
Given length (values): ${t}`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEncodingLengthMismatchError",
              });
          }
        }
        class p extends a.G {
          constructor(e, { docsPath: t }) {
            super(
              `Encoded error signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the error exists on it.
You can look up the decoded signature here: https://openchain.xyz/signatures?query=${e}.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiErrorSignatureNotFoundError",
              }),
              Object.defineProperty(this, "signature", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.signature = e);
          }
        }
        class h extends a.G {
          constructor({ docsPath: e }) {
            super("Cannot extract event signature from empty topics.", {
              docsPath: e,
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEventSignatureEmptyTopicsError",
              });
          }
        }
        class m extends a.G {
          constructor(e, { docsPath: t }) {
            super(
              `Encoded event signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.
You can look up the signature here: https://openchain.xyz/signatures?query=${e}.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEventSignatureNotFoundError",
              });
          }
        }
        class y extends a.G {
          constructor(e, { docsPath: t } = {}) {
            super(
              `Event ${e ? `"${e}" ` : ""}not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiEventNotFoundError",
              });
          }
        }
        class g extends a.G {
          constructor(e, { docsPath: t } = {}) {
            super(
              `Function ${e ? `"${e}" ` : ""}not found on ABI.
Make sure you are using the correct ABI and that the function exists on it.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiFunctionNotFoundError",
              });
          }
        }
        class b extends a.G {
          constructor(e, { docsPath: t }) {
            super(
              `Function "${e}" does not contain any \`outputs\` on ABI.
Cannot decode function result without knowing what the parameter types are.
Make sure you are using the correct ABI and that the function exists on it.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiFunctionOutputsNotFoundError",
              });
          }
        }
        class v extends a.G {
          constructor(e, t) {
            super("Found ambiguous types in overloaded ABI items.", {
              metaMessages: [
                `\`${e.type}\` in \`${(0, r.t)(e.abiItem)}\`, and`,
                `\`${t.type}\` in \`${(0, r.t)(t.abiItem)}\``,
                "",
                "These types encode differently and cannot be distinguished at runtime.",
                "Remove one of the ambiguous items in the ABI.",
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AbiItemAmbiguityError",
              });
          }
        }
        class w extends a.G {
          constructor({ expectedSize: e, givenSize: t }) {
            super(`Expected bytes${e}, got bytes${t}.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "BytesSizeMismatchError",
              });
          }
        }
        class E extends a.G {
          constructor({ abiItem: e, data: t, params: n, size: i }) {
            super(
              `Data size of ${i} bytes is too small for non-indexed event parameters.`,
              {
                metaMessages: [
                  `Params: (${(0, r.h)(n, { includeName: !0 })})`,
                  `Data:   ${t} (${i} bytes)`,
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "DecodeLogDataMismatch",
              }),
              Object.defineProperty(this, "abiItem", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "params", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "size", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.abiItem = e),
              (this.data = t),
              (this.params = n),
              (this.size = i);
          }
        }
        class x extends a.G {
          constructor({ abiItem: e, param: t }) {
            super(
              `Expected a topic for indexed event parameter${
                t.name ? ` "${t.name}"` : ""
              } on event "${(0, r.t)(e, { includeName: !0 })}".`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "DecodeLogTopicsMismatch",
              }),
              Object.defineProperty(this, "abiItem", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.abiItem = e);
          }
        }
        class C extends a.G {
          constructor(e, { docsPath: t }) {
            super(
              `Type "${e}" is not a valid encoding type.
Please provide a valid ABI type.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidAbiEncodingType",
              });
          }
        }
        class _ extends a.G {
          constructor(e, { docsPath: t }) {
            super(
              `Type "${e}" is not a valid decoding type.
Please provide a valid ABI type.`,
              { docsPath: t }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidAbiDecodingType",
              });
          }
        }
        class T extends a.G {
          constructor(e) {
            super(`Value "${e}" is not a valid array.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidArrayError",
              });
          }
        }
        class S extends a.G {
          constructor(e) {
            super(`"${e}" is not a valid definition type.
Valid types: "function", "event", "error"`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidDefinitionTypeError",
              });
          }
        }
      },
      8998: function (e, t, n) {
        "use strict";
        n.d(t, {
          o: function () {
            return i;
          },
        });
        var r = n(62027);
        class i extends r.G {
          constructor({ docsPath: e } = {}) {
            super(
              "Could not find an Account to execute with this Action.\nPlease provide an Account with the `account` argument on the Action, or by supplying an `account` to the WalletClient.",
              { docsPath: e, docsSlug: "account" }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "AccountNotFoundError",
              });
          }
        }
      },
      26087: function (e, t, n) {
        "use strict";
        n.d(t, {
          b: function () {
            return i;
          },
        });
        var r = n(62027);
        class i extends r.G {
          constructor({ address: e }) {
            super(`Address "${e}" is invalid.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidAddressError",
              });
          }
        }
      },
      62027: function (e, t, n) {
        "use strict";
        n.d(t, {
          G: function () {
            return i;
          },
        });
        var r = n(35280);
        class i extends Error {
          constructor(e, t = {}) {
            super(),
              Object.defineProperty(this, "details", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "docsPath", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "metaMessages", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "shortMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ViemError",
              }),
              Object.defineProperty(this, "version", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: (0, r.bo)(),
              });
            let n =
                t.cause instanceof i
                  ? t.cause.details
                  : t.cause?.message
                  ? t.cause.message
                  : t.details,
              a = (t.cause instanceof i && t.cause.docsPath) || t.docsPath;
            (this.message = [
              e || "An error occurred.",
              "",
              ...(t.metaMessages ? [...t.metaMessages, ""] : []),
              ...(a
                ? [
                    `Docs: https://viem.sh${a}.html${
                      t.docsSlug ? `#${t.docsSlug}` : ""
                    }`,
                  ]
                : []),
              ...(n ? [`Details: ${n}`] : []),
              `Version: ${this.version}`,
            ].join("\n")),
              t.cause && (this.cause = t.cause),
              (this.details = n),
              (this.docsPath = a),
              (this.metaMessages = t.metaMessages),
              (this.shortMessage = e);
          }
          walk(e) {
            return (function e(t, n) {
              return n?.(t)
                ? t
                : t && "object" == typeof t && "cause" in t
                ? e(t.cause, n)
                : n
                ? null
                : t;
            })(this, e);
          }
        }
      },
      79814: function (e, t, n) {
        "use strict";
        n.d(t, {
          f: function () {
            return i;
          },
        });
        var r = n(62027);
        class i extends r.G {
          constructor({ blockHash: e, blockNumber: t }) {
            let n = "Block";
            e && (n = `Block at hash "${e}"`),
              t && (n = `Block at number "${t}"`),
              super(`${n} could not be found.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "BlockNotFoundError",
              });
          }
        }
      },
      80377: function (e, t, n) {
        "use strict";
        n.d(t, {
          Bk: function () {
            return o;
          },
          Yl: function () {
            return a;
          },
          hJ: function () {
            return u;
          },
          mm: function () {
            return i;
          },
          pZ: function () {
            return s;
          },
        });
        var r = n(62027);
        class i extends r.G {
          constructor({ blockNumber: e, chain: t, contract: n }) {
            super(`Chain "${t.name}" does not support contract "${n.name}".`, {
              metaMessages: [
                "This could be due to any of the following:",
                ...(e && n.blockCreated && n.blockCreated > e
                  ? [
                      `- The contract "${n.name}" was not deployed until block ${n.blockCreated} (current block ${e}).`,
                    ]
                  : [
                      `- The chain does not have the contract "${n.name}" configured.`,
                    ]),
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ChainDoesNotSupportContract",
              });
          }
        }
        class a extends r.G {
          constructor({ chain: e, currentChainId: t }) {
            super(
              `The current chain of the wallet (id: ${t}) does not match the target chain for the transaction (id: ${e.id} – ${e.name}).`,
              {
                metaMessages: [
                  `Current Chain ID:  ${t}`,
                  `Expected Chain ID: ${e.id} – ${e.name}`,
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ChainMismatchError",
              });
          }
        }
        class o extends r.G {
          constructor() {
            super(
              "No chain was provided to the request.\nPlease provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient."
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ChainNotFoundError",
              });
          }
        }
        class s extends r.G {
          constructor() {
            super("No chain was provided to the Client."),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ClientChainNotConfiguredError",
              });
          }
        }
        class u extends r.G {
          constructor({ chainId: e }) {
            super(`Chain ID "${e}" is invalid.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidChainIdError",
              });
          }
        }
      },
      97405: function (e, t, n) {
        "use strict";
        n.d(t, {
          cg: function () {
            return y;
          },
          uq: function () {
            return g;
          },
          Lu: function () {
            return b;
          },
          Dk: function () {
            return v;
          },
          VQ: function () {
            return w;
          },
        });
        var r = n(14503),
          i = n(21746),
          a = n(86899),
          o = n(80522),
          s = n(96070);
        function u({
          abiItem: e,
          args: t,
          includeFunctionName: n = !0,
          includeName: r = !1,
        }) {
          if ("name" in e && "inputs" in e && e.inputs)
            return `${n ? e.name : ""}(${e.inputs
              .map(
                (e, n) =>
                  `${r && e.name ? `${e.name}: ` : ""}${
                    "object" == typeof t[n] ? (0, s.P)(t[n]) : t[n]
                  }`
              )
              .join(", ")})`;
        }
        var l = n(40840),
          c = n(39625),
          d = n(67795),
          f = n(57412),
          p = n(62027),
          h = n(33639),
          m = n(35280);
        class y extends p.G {
          constructor(
            e,
            {
              account: t,
              docsPath: n,
              chain: i,
              data: a,
              gas: o,
              gasPrice: s,
              maxFeePerGas: u,
              maxPriorityFeePerGas: l,
              nonce: f,
              to: p,
              value: m,
            }
          ) {
            let y = t ? (0, r.T)(t) : void 0,
              g = (0, h.xr)({
                from: y?.address,
                to: p,
                value:
                  void 0 !== m &&
                  `${(0, c.d)(m)} ${i?.nativeCurrency?.symbol || "ETH"}`,
                data: a,
                gas: o,
                gasPrice: void 0 !== s && `${(0, d.o)(s)} gwei`,
                maxFeePerGas: void 0 !== u && `${(0, d.o)(u)} gwei`,
                maxPriorityFeePerGas: void 0 !== l && `${(0, d.o)(l)} gwei`,
                nonce: f,
              });
            super(e.shortMessage, {
              cause: e,
              docsPath: n,
              metaMessages: [
                ...(e.metaMessages ? [...e.metaMessages, " "] : []),
                "Raw Call Arguments:",
                g,
              ].filter(Boolean),
            }),
              Object.defineProperty(this, "cause", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "CallExecutionError",
              }),
              (this.cause = e);
          }
        }
        class g extends p.G {
          constructor(
            e,
            {
              abi: t,
              args: n,
              contractAddress: r,
              docsPath: i,
              functionName: a,
              sender: s,
            }
          ) {
            let c = (0, l.mE)({ abi: t, args: n, name: a }),
              d = c
                ? u({
                    abiItem: c,
                    args: n,
                    includeFunctionName: !1,
                    includeName: !1,
                  })
                : void 0,
              f = c ? (0, o.t)(c, { includeName: !0 }) : void 0,
              p = (0, h.xr)({
                address: r && (0, m.CR)(r),
                function: f,
                args:
                  d &&
                  "()" !== d &&
                  `${[...Array(a?.length ?? 0).keys()]
                    .map(() => " ")
                    .join("")}${d}`,
                sender: s,
              });
            super(
              e.shortMessage ||
                `An unknown error occurred while executing the contract function "${a}".`,
              {
                cause: e,
                docsPath: i,
                metaMessages: [
                  ...(e.metaMessages ? [...e.metaMessages, " "] : []),
                  "Contract Call:",
                  p,
                ].filter(Boolean),
              }
            ),
              Object.defineProperty(this, "abi", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "args", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "cause", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "contractAddress", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "formattedArgs", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "functionName", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "sender", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ContractFunctionExecutionError",
              }),
              (this.abi = t),
              (this.args = n),
              (this.cause = e),
              (this.contractAddress = r),
              (this.functionName = a),
              (this.sender = s);
          }
        }
        class b extends p.G {
          constructor({ abi: e, data: t, functionName: n, message: r }) {
            let s, l, c, d, p;
            if (t && "0x" !== t)
              try {
                p = (0, a.p)({ abi: e, data: t });
                let { abiItem: n, errorName: r, args: s } = p;
                if ("Error" === r) c = s[0];
                else if ("Panic" === r) {
                  let [e] = s;
                  c = i.$[e];
                } else {
                  let e = n ? (0, o.t)(n, { includeName: !0 }) : void 0,
                    t =
                      n && s
                        ? u({
                            abiItem: n,
                            args: s,
                            includeFunctionName: !1,
                            includeName: !1,
                          })
                        : void 0;
                  l = [
                    e ? `Error: ${e}` : "",
                    t && "()" !== t
                      ? `       ${[...Array(r?.length ?? 0).keys()]
                          .map(() => " ")
                          .join("")}${t}`
                      : "",
                  ];
                }
              } catch (e) {
                s = e;
              }
            else r && (c = r);
            s instanceof f.yP &&
              (l = [
                `Unable to decode signature "${(d =
                  s.signature)}" as it was not found on the provided ABI.`,
                "Make sure you are using the correct ABI and that the error exists on it.",
                `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${d}.`,
              ]),
              super(
                (c && "execution reverted" !== c) || d
                  ? [
                      `The contract function "${n}" reverted with the following ${
                        d ? "signature" : "reason"
                      }:`,
                      c || d,
                    ].join("\n")
                  : `The contract function "${n}" reverted.`,
                { cause: s, metaMessages: l }
              ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ContractFunctionRevertedError",
              }),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "reason", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "signature", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.data = p),
              (this.reason = c),
              (this.signature = d);
          }
        }
        class v extends p.G {
          constructor({ functionName: e }) {
            super(`The contract function "${e}" returned no data ("0x").`, {
              metaMessages: [
                "This could be due to any of the following:",
                `  - The contract does not have the function "${e}",`,
                "  - The parameters passed to the contract function may be invalid, or",
                "  - The address is not a contract.",
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ContractFunctionZeroDataError",
              });
          }
        }
        class w extends p.G {
          constructor({ data: e, message: t }) {
            super(t || ""),
              Object.defineProperty(this, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 3,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "RawContractError",
              }),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.data = e);
          }
        }
      },
      69760: function (e, t, n) {
        "use strict";
        n.d(t, {
          $: function () {
            return a;
          },
          m: function () {
            return i;
          },
        });
        var r = n(62027);
        class i extends r.G {
          constructor({ offset: e, position: t, size: n }) {
            super(
              `Slice ${
                "start" === t ? "starting" : "ending"
              } at offset "${e}" is out-of-bounds (size: ${n}).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "SliceOffsetOutOfBoundsError",
              });
          }
        }
        class a extends r.G {
          constructor({ size: e, targetSize: t, type: n }) {
            super(
              `${n.charAt(0).toUpperCase()}${n
                .slice(1)
                .toLowerCase()} size (${e}) exceeds padding size (${t}).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "SizeExceedsPaddingSizeError",
              });
          }
        }
      },
      87788: function (e, t, n) {
        "use strict";
        n.d(t, {
          Cd: function () {
            return a;
          },
          J5: function () {
            return i;
          },
          M6: function () {
            return o;
          },
        });
        var r = n(62027);
        class i extends r.G {
          constructor({ max: e, min: t, signed: n, size: r, value: i }) {
            super(
              `Number "${i}" is not in safe ${
                r ? `${8 * r}-bit ${n ? "signed" : "unsigned"} ` : ""
              }integer range ${e ? `(${t} to ${e})` : `(above ${t})`}`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "IntegerOutOfRangeError",
              });
          }
        }
        class a extends r.G {
          constructor(e) {
            super(
              `Hex value "${e}" is not a valid boolean. The hex value must be "0x0" (false) or "0x1" (true).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidHexBooleanError",
              });
          }
        }
        class o extends r.G {
          constructor({ givenSize: e, maxSize: t }) {
            super(`Size cannot exceed ${t} bytes. Given size: ${e} bytes.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "SizeOverflowError",
              });
          }
        }
      },
      15371: function (e, t, n) {
        "use strict";
        n.d(t, {
          Fz: function () {
            return a;
          },
          e5: function () {
            return o;
          },
          ld: function () {
            return s;
          },
        });
        var r = n(67795),
          i = n(62027);
        class a extends i.G {
          constructor() {
            super("`baseFeeMultiplier` must be greater than 1."),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "BaseFeeScalarError",
              });
          }
        }
        class o extends i.G {
          constructor() {
            super("Chain does not support EIP-1559 fees."),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Eip1559FeesNotSupportedError",
              });
          }
        }
        class s extends i.G {
          constructor({ maxPriorityFeePerGas: e }) {
            super(
              `\`maxFeePerGas\` cannot be less than the \`maxPriorityFeePerGas\` (${(0,
              r.o)(e)} gwei).`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "MaxFeePerGasTooLowError",
              });
          }
        }
      },
      26445: function (e, t, n) {
        "use strict";
        n.d(t, {
          C_: function () {
            return d;
          },
          G$: function () {
            return s;
          },
          Hh: function () {
            return o;
          },
          M_: function () {
            return a;
          },
          WF: function () {
            return f;
          },
          ZI: function () {
            return u;
          },
          cj: function () {
            return y;
          },
          cs: function () {
            return m;
          },
          dR: function () {
            return p;
          },
          pZ: function () {
            return h;
          },
          se: function () {
            return c;
          },
          vU: function () {
            return l;
          },
        });
        var r = n(67795),
          i = n(62027);
        class a extends i.G {
          constructor({ cause: e, message: t } = {}) {
            let n = t
              ?.replace("execution reverted: ", "")
              ?.replace("execution reverted", "");
            super(
              `Execution reverted ${
                n ? `with reason: ${n}` : "for an unknown reason"
              }.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ExecutionRevertedError",
              });
          }
        }
        Object.defineProperty(a, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 3,
        }),
          Object.defineProperty(a, "nodeMessage", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: /execution reverted/,
          });
        class o extends i.G {
          constructor({ cause: e, maxFeePerGas: t } = {}) {
            super(
              `The fee cap (\`maxFeePerGas\`${
                t ? ` = ${(0, r.o)(t)} gwei` : ""
              }) cannot be higher than the maximum allowed value (2^256-1).`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "FeeCapTooHigh",
              });
          }
        }
        Object.defineProperty(o, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value:
            /max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/,
        });
        class s extends i.G {
          constructor({ cause: e, maxFeePerGas: t } = {}) {
            super(
              `The fee cap (\`maxFeePerGas\`${
                t ? ` = ${(0, r.o)(t)}` : ""
              } gwei) cannot be lower than the block base fee.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "FeeCapTooLow",
              });
          }
        }
        Object.defineProperty(s, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value:
            /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/,
        });
        class u extends i.G {
          constructor({ cause: e, nonce: t } = {}) {
            super(
              `Nonce provided for the transaction ${
                t ? `(${t}) ` : ""
              }is higher than the next one expected.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "NonceTooHighError",
              });
          }
        }
        Object.defineProperty(u, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /nonce too high/,
        });
        class l extends i.G {
          constructor({ cause: e, nonce: t } = {}) {
            super(
              `Nonce provided for the transaction ${
                t ? `(${t}) ` : ""
              }is lower than the current nonce of the account.
Try increasing the nonce or find the latest nonce with \`getTransactionCount\`.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "NonceTooLowError",
              });
          }
        }
        Object.defineProperty(l, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /nonce too low|transaction already imported|already known/,
        });
        class c extends i.G {
          constructor({ cause: e, nonce: t } = {}) {
            super(
              `Nonce provided for the transaction ${
                t ? `(${t}) ` : ""
              }exceeds the maximum allowed nonce.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "NonceMaxValueError",
              });
          }
        }
        Object.defineProperty(c, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /nonce has max value/,
        });
        class d extends i.G {
          constructor({ cause: e } = {}) {
            super(
              "The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.",
              {
                cause: e,
                metaMessages: [
                  "This error could arise when the account does not have enough funds to:",
                  " - pay for the total gas fee,",
                  " - pay for the value to send.",
                  " ",
                  "The cost of the transaction is calculated as `gas * gas fee + value`, where:",
                  " - `gas` is the amount of gas needed for transaction to execute,",
                  " - `gas fee` is the gas fee,",
                  " - `value` is the amount of ether to send to the recipient.",
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InsufficientFundsError",
              });
          }
        }
        Object.defineProperty(d, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /insufficient funds/,
        });
        class f extends i.G {
          constructor({ cause: e, gas: t } = {}) {
            super(
              `The amount of gas ${
                t ? `(${t}) ` : ""
              }provided for the transaction exceeds the limit allowed for the block.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "IntrinsicGasTooHighError",
              });
          }
        }
        Object.defineProperty(f, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /intrinsic gas too high|gas limit reached/,
        });
        class p extends i.G {
          constructor({ cause: e, gas: t } = {}) {
            super(
              `The amount of gas ${
                t ? `(${t}) ` : ""
              }provided for the transaction is too low.`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "IntrinsicGasTooLowError",
              });
          }
        }
        Object.defineProperty(p, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /intrinsic gas too low/,
        });
        class h extends i.G {
          constructor({ cause: e }) {
            super("The transaction type is not supported for this chain.", {
              cause: e,
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TransactionTypeNotSupportedError",
              });
          }
        }
        Object.defineProperty(h, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: /transaction type not valid/,
        });
        class m extends i.G {
          constructor({
            cause: e,
            maxPriorityFeePerGas: t,
            maxFeePerGas: n,
          } = {}) {
            super(
              `The provided tip (\`maxPriorityFeePerGas\`${
                t ? ` = ${(0, r.o)(t)} gwei` : ""
              }) cannot be higher than the fee cap (\`maxFeePerGas\`${
                n ? ` = ${(0, r.o)(n)} gwei` : ""
              }).`,
              { cause: e }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TipAboveFeeCapError",
              });
          }
        }
        Object.defineProperty(m, "nodeMessage", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value:
            /max priority fee per gas higher than max fee per gas|tip higher than fee cap/,
        });
        class y extends i.G {
          constructor({ cause: e }) {
            super(`An error occurred while executing: ${e?.shortMessage}`, {
              cause: e,
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnknownNodeError",
              });
          }
        }
      },
      78863: function (e, t, n) {
        "use strict";
        n.d(t, {
          Gg: function () {
            return o;
          },
          W5: function () {
            return l;
          },
          bs: function () {
            return u;
          },
          c9: function () {
            return s;
          },
        });
        var r = n(96070),
          i = n(62027),
          a = n(35280);
        class o extends i.G {
          constructor({ body: e, details: t, headers: n, status: i, url: o }) {
            super("HTTP request failed.", {
              details: t,
              metaMessages: [
                i && `Status: ${i}`,
                `URL: ${(0, a.Gr)(o)}`,
                e && `Request body: ${(0, r.P)(e)}`,
              ].filter(Boolean),
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "HttpRequestError",
              }),
              Object.defineProperty(this, "body", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "headers", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "status", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "url", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.body = e),
              (this.headers = n),
              (this.status = i),
              (this.url = o);
          }
        }
        class s extends i.G {
          constructor({ body: e, details: t, url: n }) {
            super("WebSocket request failed.", {
              details: t,
              metaMessages: [
                `URL: ${(0, a.Gr)(n)}`,
                `Request body: ${(0, r.P)(e)}`,
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "WebSocketRequestError",
              });
          }
        }
        class u extends i.G {
          constructor({ body: e, error: t, url: n }) {
            super("RPC Request failed.", {
              cause: t,
              details: t.message,
              metaMessages: [
                `URL: ${(0, a.Gr)(n)}`,
                `Request body: ${(0, r.P)(e)}`,
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "RpcRequestError",
              }),
              Object.defineProperty(this, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.code = t.code);
          }
        }
        class l extends i.G {
          constructor({ body: e, url: t }) {
            super("The request took too long to respond.", {
              details: "The request timed out.",
              metaMessages: [
                `URL: ${(0, a.Gr)(t)}`,
                `Request body: ${(0, r.P)(e)}`,
              ],
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TimeoutError",
              });
          }
        }
      },
      39028: function (e, t, n) {
        "use strict";
        n.d(t, {
          B: function () {
            return u;
          },
          GD: function () {
            return b;
          },
          I0: function () {
            return C;
          },
          KB: function () {
            return m;
          },
          LX: function () {
            return l;
          },
          Og: function () {
            return p;
          },
          PE: function () {
            return w;
          },
          Pv: function () {
            return g;
          },
          Ts: function () {
            return E;
          },
          XS: function () {
            return d;
          },
          ab: function () {
            return v;
          },
          gS: function () {
            return y;
          },
          ir: function () {
            return T;
          },
          nY: function () {
            return c;
          },
          pT: function () {
            return h;
          },
          s7: function () {
            return s;
          },
          u5: function () {
            return x;
          },
          x3: function () {
            return _;
          },
          yR: function () {
            return f;
          },
        });
        var r = n(62027),
          i = n(78863);
        class a extends r.G {
          constructor(
            e,
            { code: t, docsPath: n, metaMessages: r, shortMessage: a }
          ) {
            super(a, {
              cause: e,
              docsPath: n,
              metaMessages: r || e?.metaMessages,
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "RpcError",
              }),
              Object.defineProperty(this, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.name = e.name),
              (this.code = e instanceof i.bs ? e.code : t ?? -1);
          }
        }
        class o extends a {
          constructor(e, t) {
            super(e, t),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ProviderRpcError",
              }),
              Object.defineProperty(this, "data", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              (this.data = t.data);
          }
        }
        class s extends a {
          constructor(e) {
            super(e, {
              code: s.code,
              shortMessage:
                "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ParseRpcError",
              });
          }
        }
        Object.defineProperty(s, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32700,
        });
        class u extends a {
          constructor(e) {
            super(e, {
              code: u.code,
              shortMessage: "JSON is not a valid request object.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidRequestRpcError",
              });
          }
        }
        Object.defineProperty(u, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32600,
        });
        class l extends a {
          constructor(e) {
            super(e, {
              code: l.code,
              shortMessage: "The method does not exist / is not available.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "MethodNotFoundRpcError",
              });
          }
        }
        Object.defineProperty(l, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32601,
        });
        class c extends a {
          constructor(e) {
            super(e, {
              code: c.code,
              shortMessage:
                "Invalid parameters were provided to the RPC method.\nDouble check you have provided the correct parameters.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidParamsRpcError",
              });
          }
        }
        Object.defineProperty(c, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32602,
        });
        class d extends a {
          constructor(e) {
            super(e, {
              code: d.code,
              shortMessage: "An internal error was received.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InternalRpcError",
              });
          }
        }
        Object.defineProperty(d, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32603,
        });
        class f extends a {
          constructor(e) {
            super(e, {
              code: f.code,
              shortMessage:
                "Missing or invalid parameters.\nDouble check you have provided the correct parameters.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidInputRpcError",
              });
          }
        }
        Object.defineProperty(f, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32e3,
        });
        class p extends a {
          constructor(e) {
            super(e, {
              code: p.code,
              shortMessage: "Requested resource not found.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ResourceNotFoundRpcError",
              });
          }
        }
        Object.defineProperty(p, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32001,
        });
        class h extends a {
          constructor(e) {
            super(e, {
              code: h.code,
              shortMessage: "Requested resource not available.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ResourceUnavailableRpcError",
              });
          }
        }
        Object.defineProperty(h, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32002,
        });
        class m extends a {
          constructor(e) {
            super(e, {
              code: m.code,
              shortMessage: "Transaction creation failed.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TransactionRejectedRpcError",
              });
          }
        }
        Object.defineProperty(m, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32003,
        });
        class y extends a {
          constructor(e) {
            super(e, {
              code: y.code,
              shortMessage: "Method is not implemented.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "MethodNotSupportedRpcError",
              });
          }
        }
        Object.defineProperty(y, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32004,
        });
        class g extends a {
          constructor(e) {
            super(e, {
              code: g.code,
              shortMessage: "Request exceeds defined limit.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "LimitExceededRpcError",
              });
          }
        }
        Object.defineProperty(g, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32005,
        });
        class b extends a {
          constructor(e) {
            super(e, {
              code: b.code,
              shortMessage: "Version of JSON-RPC protocol is not supported.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "JsonRpcVersionUnsupportedError",
              });
          }
        }
        Object.defineProperty(b, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: -32006,
        });
        class v extends o {
          constructor(e) {
            super(e, {
              code: v.code,
              shortMessage: "User rejected the request.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UserRejectedRequestError",
              });
          }
        }
        Object.defineProperty(v, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4001,
        });
        class w extends o {
          constructor(e) {
            super(e, {
              code: w.code,
              shortMessage:
                "The requested method and/or account has not been authorized by the user.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnauthorizedProviderError",
              });
          }
        }
        Object.defineProperty(w, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4100,
        });
        class E extends o {
          constructor(e) {
            super(e, {
              code: E.code,
              shortMessage:
                "The Provider does not support the requested method.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnsupportedProviderMethodError",
              });
          }
        }
        Object.defineProperty(E, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4200,
        });
        class x extends o {
          constructor(e) {
            super(e, {
              code: x.code,
              shortMessage: "The Provider is disconnected from all chains.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ProviderDisconnectedError",
              });
          }
        }
        Object.defineProperty(x, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4900,
        });
        class C extends o {
          constructor(e) {
            super(e, {
              code: C.code,
              shortMessage:
                "The Provider is not connected to the requested chain.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ChainDisconnectedError",
              });
          }
        }
        Object.defineProperty(C, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4901,
        });
        class _ extends o {
          constructor(e) {
            super(e, {
              code: _.code,
              shortMessage:
                "An error occurred when attempting to switch chain.",
            }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "SwitchChainError",
              });
          }
        }
        Object.defineProperty(_, "code", {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: 4902,
        });
        class T extends a {
          constructor(e) {
            super(e, { shortMessage: "An unknown RPC error occurred." }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "UnknownRpcError",
              });
          }
        }
      },
      33639: function (e, t, n) {
        "use strict";
        n.d(t, {
          Bh: function () {
            return f;
          },
          JC: function () {
            return c;
          },
          Yb: function () {
            return p;
          },
          j3: function () {
            return l;
          },
          mc: function () {
            return h;
          },
          mk: function () {
            return d;
          },
          vl: function () {
            return u;
          },
          xY: function () {
            return s;
          },
          xr: function () {
            return o;
          },
        });
        var r = n(39625),
          i = n(67795),
          a = n(62027);
        function o(e) {
          let t = Object.entries(e)
              .map(([e, t]) => (void 0 === t || !1 === t ? null : [e, t]))
              .filter(Boolean),
            n = t.reduce((e, [t]) => Math.max(e, t.length), 0);
          return t
            .map(([e, t]) => `  ${`${e}:`.padEnd(n + 1)}  ${t}`)
            .join("\n");
        }
        class s extends a.G {
          constructor() {
            super(
              "Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.\nUse `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others."
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "FeeConflictError",
              });
          }
        }
        class u extends a.G {
          constructor({ v: e }) {
            super(`Invalid \`v\` value "${e}". Expected 27 or 28.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidLegacyVError",
              });
          }
        }
        class l extends a.G {
          constructor({ transaction: e }) {
            super(
              "Cannot infer a transaction type from provided transaction.",
              {
                metaMessages: [
                  "Provided Transaction:",
                  "{",
                  o(e),
                  "}",
                  "",
                  "To infer the type, either provide:",
                  "- a `type` to the Transaction, or",
                  "- an EIP-1559 Transaction with `maxFeePerGas`, or",
                  "- an EIP-2930 Transaction with `gasPrice` & `accessList`, or",
                  "- a Legacy Transaction with `gasPrice`",
                ],
              }
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidSerializableTransactionError",
              });
          }
        }
        class c extends a.G {
          constructor({ storageKey: e }) {
            super(
              `Size for storage key "${e}" is invalid. Expected 32 bytes. Got ${Math.floor(
                (e.length - 2) / 2
              )} bytes.`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InvalidStorageKeySizeError",
              });
          }
        }
        class d extends a.G {
          constructor(
            e,
            {
              account: t,
              docsPath: n,
              chain: a,
              data: s,
              gas: u,
              gasPrice: l,
              maxFeePerGas: c,
              maxPriorityFeePerGas: d,
              nonce: f,
              to: p,
              value: h,
            }
          ) {
            let m = o({
              chain: a && `${a?.name} (id: ${a?.id})`,
              from: t?.address,
              to: p,
              value:
                void 0 !== h &&
                `${(0, r.d)(h)} ${a?.nativeCurrency?.symbol || "ETH"}`,
              data: s,
              gas: u,
              gasPrice: void 0 !== l && `${(0, i.o)(l)} gwei`,
              maxFeePerGas: void 0 !== c && `${(0, i.o)(c)} gwei`,
              maxPriorityFeePerGas: void 0 !== d && `${(0, i.o)(d)} gwei`,
              nonce: f,
            });
            super(e.shortMessage, {
              cause: e,
              docsPath: n,
              metaMessages: [
                ...(e.metaMessages ? [...e.metaMessages, " "] : []),
                "Request Arguments:",
                m,
              ].filter(Boolean),
            }),
              Object.defineProperty(this, "cause", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: void 0,
              }),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TransactionExecutionError",
              }),
              (this.cause = e);
          }
        }
        class f extends a.G {
          constructor({
            blockHash: e,
            blockNumber: t,
            blockTag: n,
            hash: r,
            index: i,
          }) {
            let a = "Transaction";
            n &&
              void 0 !== i &&
              (a = `Transaction at block time "${n}" at index "${i}"`),
              e &&
                void 0 !== i &&
                (a = `Transaction at block hash "${e}" at index "${i}"`),
              t &&
                void 0 !== i &&
                (a = `Transaction at block number "${t}" at index "${i}"`),
              r && (a = `Transaction with hash "${r}"`),
              super(`${a} could not be found.`),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TransactionNotFoundError",
              });
          }
        }
        class p extends a.G {
          constructor({ hash: e }) {
            super(
              `Transaction receipt with hash "${e}" could not be found. The Transaction may not be processed on a block yet.`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "TransactionReceiptNotFoundError",
              });
          }
        }
        class h extends a.G {
          constructor({ hash: e }) {
            super(
              `Timed out while waiting for transaction with hash "${e}" to be confirmed.`
            ),
              Object.defineProperty(this, "name", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "WaitForTransactionReceiptTimeoutError",
              });
          }
        }
      },
      43018: function (e, t, n) {
        "use strict";
        n.d(t, {
          I: function () {
            return i;
          },
        });
        var r = n(62027);
        class i extends r.G {
          constructor() {
            super(
              "No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.",
              { docsPath: "/docs/clients/intro" }
            );
          }
        }
      },
      35280: function (e, t, n) {
        "use strict";
        n.d(t, {
          CR: function () {
            return r;
          },
          Gr: function () {
            return i;
          },
          bo: function () {
            return a;
          },
        });
        let r = (e) => e,
          i = (e) => e,
          a = () => "viem@1.21.3";
      },
      34450: function (e, t, n) {
        "use strict";
        n.d(t, {
          r: function () {
            return c;
          },
        });
        var r = n(57412),
          i = n(45775),
          a = n(39135),
          o = n(3972),
          s = n(61836),
          u = n(95946),
          l = n(45444);
        function c(e, t) {
          if ("0x" === t && e.length > 0) throw new r.wb();
          if ((0, a.d)(t) && 32 > (0, a.d)(t))
            throw new r.xB({ data: t, params: e, size: (0, a.d)(t) });
          return (function ({ data: e, params: t }) {
            let n = [],
              c = 0;
            for (let f = 0; f < t.length; f++) {
              if (c >= (0, a.d)(e))
                throw new r.xB({ data: e, params: t, size: (0, a.d)(e) });
              let p = t[f],
                { consumed: h, value: m } = (function e({
                  data: t,
                  param: n,
                  position: a,
                }) {
                  let c = (0, l.S)(n.type);
                  if (c) {
                    let [r, i] = c;
                    return (function (t, { param: n, length: r, position: i }) {
                      if (!r) {
                        let r = (0, u.ly)(
                            (0, o.tP)(t, i, i + 32, { strict: !0 })
                          ),
                          a = (0, u.ly)(
                            (0, o.tP)(t, r, r + 32, { strict: !0 })
                          ),
                          s = 0,
                          l = [];
                        for (let i = 0; i < a; ++i) {
                          let i = e({
                            data: (0, o.tP)(t, r + 32),
                            param: n,
                            position: s,
                          });
                          (s += i.consumed), l.push(i.value);
                        }
                        return { value: l, consumed: 32 };
                      }
                      if (d(n)) {
                        let a = (0, l.S)(n.type),
                          s = !a?.[0],
                          c = 0,
                          d = [];
                        for (let a = 0; a < r; ++a) {
                          let r = (0, u.ly)(
                              (0, o.tP)(t, i, i + 32, { strict: !0 })
                            ),
                            l = e({
                              data: (0, o.tP)(t, r),
                              param: n,
                              position: s ? c : 32 * a,
                            });
                          (c += l.consumed), d.push(l.value);
                        }
                        return { value: d, consumed: 32 };
                      }
                      let a = 0,
                        s = [];
                      for (let o = 0; o < r; ++o) {
                        let r = e({ data: t, param: n, position: i + a });
                        (a += r.consumed), s.push(r.value);
                      }
                      return { value: s, consumed: a };
                    })(t, { length: r, param: { ...n, type: i }, position: a });
                  }
                  if ("tuple" === n.type)
                    return (function (t, { param: n, position: r }) {
                      let i =
                          0 === n.components.length ||
                          n.components.some(({ name: e }) => !e),
                        a = i ? [] : {},
                        s = 0;
                      if (d(n)) {
                        let l = (0, u.ly)(
                          (0, o.tP)(t, r, r + 32, { strict: !0 })
                        );
                        for (let r = 0; r < n.components.length; ++r) {
                          let u = n.components[r],
                            c = e({
                              data: (0, o.tP)(t, l),
                              param: u,
                              position: s,
                            });
                          (s += c.consumed), (a[i ? r : u?.name] = c.value);
                        }
                        return { consumed: 32, value: a };
                      }
                      for (let o = 0; o < n.components.length; ++o) {
                        let u = n.components[o],
                          l = e({ data: t, param: u, position: r + s });
                        (s += l.consumed), (a[i ? o : u?.name] = l.value);
                      }
                      return { consumed: s, value: a };
                    })(t, { param: n, position: a });
                  if ("string" === n.type)
                    return (function (e, { position: t }) {
                      let n = (0, u.ly)(
                          (0, o.tP)(e, t, t + 32, { strict: !0 })
                        ),
                        r = (0, u.ly)((0, o.tP)(e, n, n + 32, { strict: !0 }));
                      if (0 === r) return { consumed: 32, value: "" };
                      let i = (0, u.rR)(
                        (0, s.f)(
                          (0, o.tP)(e, n + 32, n + 32 + r, { strict: !0 })
                        )
                      );
                      return { consumed: 32, value: i };
                    })(t, { position: a });
                  if (n.type.startsWith("bytes"))
                    return (function (e, { param: t, position: n }) {
                      let [r, i] = t.type.split("bytes");
                      if (!i) {
                        let t = (0, u.ly)(
                            (0, o.tP)(e, n, n + 32, { strict: !0 })
                          ),
                          r = (0, u.ly)(
                            (0, o.tP)(e, t, t + 32, { strict: !0 })
                          );
                        if (0 === r) return { consumed: 32, value: "0x" };
                        let i = (0, o.tP)(e, t + 32, t + 32 + r, {
                          strict: !0,
                        });
                        return { consumed: 32, value: i };
                      }
                      let a = (0, o.tP)(e, n, n + parseInt(i), { strict: !0 });
                      return { consumed: 32, value: a };
                    })(t, { param: n, position: a });
                  let f = (0, o.tP)(t, a, a + 32, { strict: !0 });
                  if (n.type.startsWith("uint") || n.type.startsWith("int"))
                    return (function (e, { param: t }) {
                      let n = t.type.startsWith("int"),
                        r = parseInt(t.type.split("int")[1] || "256");
                      return {
                        consumed: 32,
                        value:
                          r > 48
                            ? (0, u.y_)(e, { signed: n })
                            : (0, u.ly)(e, { signed: n }),
                      };
                    })(f, { param: n });
                  if ("address" === n.type)
                    return { consumed: 32, value: (0, i.x)((0, o.tP)(f, -20)) };
                  if ("bool" === n.type)
                    return { consumed: 32, value: (0, u.XA)(f) };
                  throw new r.CI(n.type, {
                    docsPath: "/docs/contract/decodeAbiParameters",
                  });
                })({ data: e, param: p, position: c });
              n.push(m), (c += h);
            }
            return n;
          })({ data: t, params: e });
        }
        function d(e) {
          let { type: t } = e;
          if ("string" === t || "bytes" === t || t.endsWith("[]")) return !0;
          if ("tuple" === t) return e.components?.some(d);
          let n = (0, l.S)(e.type);
          return !!(n && d({ ...e, type: n[1] }));
        }
      },
      86899: function (e, t, n) {
        "use strict";
        n.d(t, {
          p: function () {
            return l;
          },
        });
        var r = n(21746),
          i = n(57412),
          a = n(3972),
          o = n(40552),
          s = n(34450),
          u = n(80522);
        function l({ abi: e, data: t }) {
          let n = (0, a.tP)(t, 0, 4);
          if ("0x" === n) throw new i.wb();
          let l = [...(e || []), r.Up, r.hZ],
            c = l.find(
              (e) => "error" === e.type && n === (0, o.o)((0, u.t)(e))
            );
          if (!c)
            throw new i.yP(n, { docsPath: "/docs/contract/decodeErrorResult" });
          return {
            abiItem: c,
            args:
              "inputs" in c && c.inputs && c.inputs.length > 0
                ? (0, s.r)(c.inputs, (0, a.tP)(t, 4))
                : void 0,
            errorName: c.name,
          };
        }
      },
      7210: function (e, t, n) {
        "use strict";
        n.d(t, {
          k: function () {
            return s;
          },
        });
        var r = n(57412),
          i = n(34450),
          a = n(40840);
        let o = "/docs/contract/decodeFunctionResult";
        function s({ abi: e, args: t, functionName: n, data: s }) {
          let u = e[0];
          if (n && !(u = (0, a.mE)({ abi: e, args: t, name: n })))
            throw new r.xL(n, { docsPath: o });
          if ("function" !== u.type) throw new r.xL(void 0, { docsPath: o });
          if (!u.outputs) throw new r.MX(u.name, { docsPath: o });
          let l = (0, i.r)(u.outputs, s);
          return l && l.length > 1 ? l : l && 1 === l.length ? l[0] : void 0;
        }
      },
      45444: function (e, t, n) {
        "use strict";
        n.d(t, {
          E: function () {
            return d;
          },
          S: function () {
            return p;
          },
        });
        var r = n(57412),
          i = n(26087),
          a = n(49321),
          o = n(57040),
          s = n(61769),
          u = n(39135),
          l = n(3972),
          c = n(92106);
        function d(e, t) {
          if (e.length !== t.length)
            throw new r.fs({ expectedLength: e.length, givenLength: t.length });
          let n = (function ({ params: e, values: t }) {
              let n = [];
              for (let d = 0; d < e.length; d++)
                n.push(
                  (function e({ param: t, value: n }) {
                    let d = p(t.type);
                    if (d) {
                      let [i, a] = d;
                      return (function (t, { length: n, param: i }) {
                        let a = null === n;
                        if (!Array.isArray(t)) throw new r.hn(t);
                        if (!a && t.length !== n)
                          throw new r.gr({
                            expectedLength: n,
                            givenLength: t.length,
                            type: `${i.type}[${n}]`,
                          });
                        let s = !1,
                          u = [];
                        for (let n = 0; n < t.length; n++) {
                          let r = e({ param: i, value: t[n] });
                          r.dynamic && (s = !0), u.push(r);
                        }
                        if (a || s) {
                          let e = f(u);
                          if (a) {
                            let t = (0, c.eC)(u.length, { size: 32 });
                            return {
                              dynamic: !0,
                              encoded: u.length > 0 ? (0, o.zo)([t, e]) : t,
                            };
                          }
                          if (s) return { dynamic: !0, encoded: e };
                        }
                        return {
                          dynamic: !1,
                          encoded: (0, o.zo)(u.map(({ encoded: e }) => e)),
                        };
                      })(n, { length: i, param: { ...t, type: a } });
                    }
                    if ("tuple" === t.type)
                      return (function (t, { param: n }) {
                        let r = !1,
                          i = [];
                        for (let a = 0; a < n.components.length; a++) {
                          let o = n.components[a],
                            s = Array.isArray(t) ? a : o.name,
                            u = e({ param: o, value: t[s] });
                          i.push(u), u.dynamic && (r = !0);
                        }
                        return {
                          dynamic: r,
                          encoded: r
                            ? f(i)
                            : (0, o.zo)(i.map(({ encoded: e }) => e)),
                        };
                      })(n, { param: t });
                    if ("address" === t.type)
                      return (function (e) {
                        if (!(0, a.U)(e)) throw new i.b({ address: e });
                        return {
                          dynamic: !1,
                          encoded: (0, s.gc)(e.toLowerCase()),
                        };
                      })(n);
                    if ("bool" === t.type)
                      return { dynamic: !1, encoded: (0, s.gc)((0, c.C4)(n)) };
                    if (t.type.startsWith("uint") || t.type.startsWith("int")) {
                      let e = t.type.startsWith("int");
                      return (function (e, { signed: t }) {
                        return {
                          dynamic: !1,
                          encoded: (0, c.eC)(e, { size: 32, signed: t }),
                        };
                      })(n, { signed: e });
                    }
                    if (t.type.startsWith("bytes"))
                      return (function (e, { param: t }) {
                        let [, n] = t.type.split("bytes"),
                          i = (0, u.d)(e);
                        if (!n) {
                          let t = e;
                          return (
                            i % 32 != 0 &&
                              (t = (0, s.gc)(t, {
                                dir: "right",
                                size: 32 * Math.ceil((e.length - 2) / 2 / 32),
                              })),
                            {
                              dynamic: !0,
                              encoded: (0, o.zo)([
                                (0, s.gc)((0, c.eC)(i, { size: 32 })),
                                t,
                              ]),
                            }
                          );
                        }
                        if (i !== parseInt(n))
                          throw new r.M4({
                            expectedSize: parseInt(n),
                            value: e,
                          });
                        return {
                          dynamic: !1,
                          encoded: (0, s.gc)(e, { dir: "right" }),
                        };
                      })(n, { param: t });
                    if ("string" === t.type)
                      return (function (e) {
                        let t = (0, c.$G)(e),
                          n = Math.ceil((0, u.d)(t) / 32),
                          r = [];
                        for (let e = 0; e < n; e++)
                          r.push(
                            (0, s.gc)((0, l.tP)(t, 32 * e, (e + 1) * 32), {
                              dir: "right",
                            })
                          );
                        return {
                          dynamic: !0,
                          encoded: (0, o.zo)([
                            (0, s.gc)((0, c.eC)((0, u.d)(t), { size: 32 })),
                            ...r,
                          ]),
                        };
                      })(n);
                    throw new r.dh(t.type, {
                      docsPath: "/docs/contract/encodeAbiParameters",
                    });
                  })({ param: e[d], value: t[d] })
                );
              return n;
            })({ params: e, values: t }),
            d = f(n);
          return 0 === d.length ? "0x" : d;
        }
        function f(e) {
          let t = 0;
          for (let n = 0; n < e.length; n++) {
            let { dynamic: r, encoded: i } = e[n];
            r ? (t += 32) : (t += (0, u.d)(i));
          }
          let n = [],
            r = [],
            i = 0;
          for (let a = 0; a < e.length; a++) {
            let { dynamic: o, encoded: s } = e[a];
            o
              ? (n.push((0, c.eC)(t + i, { size: 32 })),
                r.push(s),
                (i += (0, u.d)(s)))
              : n.push(s);
          }
          return (0, o.zo)([...n, ...r]);
        }
        function p(e) {
          let t = e.match(/^(.*)\[(\d+)?\]$/);
          return t ? [t[2] ? Number(t[2]) : null, t[1]] : void 0;
        }
      },
      30286: function (e, t, n) {
        "use strict";
        n.d(t, {
          w: function () {
            return s;
          },
        });
        var r = n(57412),
          i = n(57040),
          a = n(45444);
        let o = "/docs/contract/encodeDeployData";
        function s({ abi: e, args: t, bytecode: n }) {
          if (!t || 0 === t.length) return n;
          let s = e.find((e) => "type" in e && "constructor" === e.type);
          if (!s) throw new r.fM({ docsPath: o });
          if (!("inputs" in s) || !s.inputs || 0 === s.inputs.length)
            throw new r.cO({ docsPath: o });
          let u = (0, a.E)(s.inputs, t);
          return (0, i.SM)([n, u]);
        }
      },
      77799: function (e, t, n) {
        "use strict";
        n.d(t, {
          R: function () {
            return l;
          },
        });
        var r = n(57412),
          i = n(57040),
          a = n(40552),
          o = n(45444),
          s = n(80522),
          u = n(40840);
        function l({ abi: e, args: t, functionName: n }) {
          let l = e[0];
          if (n && !(l = (0, u.mE)({ abi: e, args: t, name: n })))
            throw new r.xL(n, {
              docsPath: "/docs/contract/encodeFunctionData",
            });
          if ("function" !== l.type)
            throw new r.xL(void 0, {
              docsPath: "/docs/contract/encodeFunctionData",
            });
          let c = (0, s.t)(l),
            d = (0, a.o)(c),
            f =
              "inputs" in l && l.inputs ? (0, o.E)(l.inputs, t ?? []) : void 0;
          return (0, i.SM)([d, f ?? "0x"]);
        }
      },
      80522: function (e, t, n) {
        "use strict";
        n.d(t, {
          h: function () {
            return a;
          },
          t: function () {
            return i;
          },
        });
        var r = n(57412);
        function i(e, { includeName: t = !1 } = {}) {
          if ("function" !== e.type && "event" !== e.type && "error" !== e.type)
            throw new r.wM(e.type);
          return `${e.name}(${a(e.inputs, { includeName: t })})`;
        }
        function a(e, { includeName: t = !1 } = {}) {
          return e
            ? e
                .map((e) =>
                  (function (e, { includeName: t }) {
                    return e.type.startsWith("tuple")
                      ? `(${a(e.components, { includeName: t })})${e.type.slice(
                          5
                        )}`
                      : e.type + (t && e.name ? ` ${e.name}` : "");
                  })(e, { includeName: t })
                )
                .join(t ? ", " : ",")
            : "";
        }
      },
      40840: function (e, t, n) {
        "use strict";
        n.d(t, {
          mE: function () {
            return u;
          },
        });
        var r = n(57412),
          i = n(15102),
          a = n(74059),
          o = n(40552),
          s = n(49321);
        function u({ abi: e, args: t = [], name: n }) {
          let u;
          let l = (0, i.v)(n, { strict: !1 }),
            c = e.filter((e) =>
              l
                ? "function" === e.type
                  ? (0, o.o)(e) === n
                  : "event" === e.type && (0, a.e)(e) === n
                : "name" in e && e.name === n
            );
          if (0 !== c.length) {
            if (1 === c.length) return c[0];
            for (let e of c) {
              if (!("inputs" in e)) continue;
              if (!t || 0 === t.length) {
                if (!e.inputs || 0 === e.inputs.length) return e;
                continue;
              }
              if (
                !e.inputs ||
                0 === e.inputs.length ||
                e.inputs.length !== t.length
              )
                continue;
              let n = t.every((t, n) => {
                let r = "inputs" in e && e.inputs[n];
                return (
                  !!r &&
                  (function e(t, n) {
                    let r = typeof t,
                      i = n.type;
                    switch (i) {
                      case "address":
                        return (0, s.U)(t);
                      case "bool":
                        return "boolean" === r;
                      case "function":
                      case "string":
                        return "string" === r;
                      default:
                        if ("tuple" === i && "components" in n)
                          return Object.values(n.components).every((n, r) =>
                            e(Object.values(t)[r], n)
                          );
                        if (
                          /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(
                            i
                          )
                        )
                          return "number" === r || "bigint" === r;
                        if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(i))
                          return "string" === r || t instanceof Uint8Array;
                        if (/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(i))
                          return (
                            Array.isArray(t) &&
                            t.every((t) =>
                              e(t, {
                                ...n,
                                type: i.replace(/(\[[0-9]{0,}\])$/, ""),
                              })
                            )
                          );
                        return !1;
                    }
                  })(t, r)
                );
              });
              if (n) {
                if (u && "inputs" in u && u.inputs) {
                  let n = (function e(t, n, r) {
                    for (let i in t) {
                      let a = t[i],
                        o = n[i];
                      if (
                        "tuple" === a.type &&
                        "tuple" === o.type &&
                        "components" in a &&
                        "components" in o
                      )
                        return e(a.components, o.components, r[i]);
                      let u = [a.type, o.type],
                        l =
                          !!(u.includes("address") && u.includes("bytes20")) ||
                          (!!(
                            (u.includes("address") && u.includes("string")) ||
                            (u.includes("address") && u.includes("bytes"))
                          ) &&
                            (0, s.U)(r[i]));
                      if (l) return u;
                    }
                  })(e.inputs, u.inputs, t);
                  if (n)
                    throw new r.S4(
                      { abiItem: e, type: n[0] },
                      { abiItem: u, type: n[1] }
                    );
                }
                u = e;
              }
            }
            return u || c[0];
          }
        }
      },
      45775: function (e, t, n) {
        "use strict";
        n.d(t, {
          K: function () {
            return u;
          },
          x: function () {
            return s;
          },
        });
        var r = n(26087),
          i = n(11187),
          a = n(88184),
          o = n(49321);
        function s(e, t) {
          let n = t ? `${t}${e.toLowerCase()}` : e.substring(2).toLowerCase(),
            r = (0, a.w)((0, i.qX)(n), "bytes"),
            o = (t ? n.substring(`${t}0x`.length) : n).split("");
          for (let e = 0; e < 40; e += 2)
            r[e >> 1] >> 4 >= 8 && o[e] && (o[e] = o[e].toUpperCase()),
              (15 & r[e >> 1]) >= 8 &&
                o[e + 1] &&
                (o[e + 1] = o[e + 1].toUpperCase());
          return `0x${o.join("")}`;
        }
        function u(e, t) {
          if (!(0, o.U)(e)) throw new r.b({ address: e });
          return s(e, t);
        }
      },
      49321: function (e, t, n) {
        "use strict";
        n.d(t, {
          U: function () {
            return i;
          },
        });
        let r = /^0x[a-fA-F0-9]{40}$/;
        function i(e) {
          return r.test(e);
        }
      },
      61228: function (e, t, n) {
        "use strict";
        n.d(t, {
          E: function () {
            return a;
          },
        });
        var r = n(26087),
          i = n(49321);
        function a(e, t) {
          if (!(0, i.U)(e)) throw new r.b({ address: e });
          if (!(0, i.U)(t)) throw new r.b({ address: t });
          return e.toLowerCase() === t.toLowerCase();
        }
      },
      37029: function (e, t, n) {
        "use strict";
        n.d(t, {
          n: function () {
            return u;
          },
          y: function () {
            return s;
          },
        });
        var r = n(62027),
          i = n(78863),
          a = n(39028),
          o = n(7760);
        let s = (e) =>
          "code" in e
            ? -1 !== e.code &&
              -32004 !== e.code &&
              -32005 !== e.code &&
              -32042 !== e.code &&
              -32603 !== e.code
            : e instanceof i.Gg &&
              !!e.status &&
              403 !== e.status &&
              408 !== e.status &&
              413 !== e.status &&
              429 !== e.status &&
              500 !== e.status &&
              502 !== e.status &&
              503 !== e.status &&
              504 !== e.status;
        function u(e, { retryDelay: t = 150, retryCount: n = 3 } = {}) {
          return async (u) =>
            (0, o.J)(
              async () => {
                try {
                  return await e(u);
                } catch (e) {
                  switch (e.code) {
                    case a.s7.code:
                      throw new a.s7(e);
                    case a.B.code:
                      throw new a.B(e);
                    case a.LX.code:
                      throw new a.LX(e);
                    case a.nY.code:
                      throw new a.nY(e);
                    case a.XS.code:
                      throw new a.XS(e);
                    case a.yR.code:
                      throw new a.yR(e);
                    case a.Og.code:
                      throw new a.Og(e);
                    case a.pT.code:
                      throw new a.pT(e);
                    case a.KB.code:
                      throw new a.KB(e);
                    case a.gS.code:
                      throw new a.gS(e);
                    case a.Pv.code:
                      throw new a.Pv(e);
                    case a.GD.code:
                      throw new a.GD(e);
                    case a.ab.code:
                      throw new a.ab(e);
                    case a.PE.code:
                      throw new a.PE(e);
                    case a.Ts.code:
                      throw new a.Ts(e);
                    case a.u5.code:
                      throw new a.u5(e);
                    case a.I0.code:
                      throw new a.I0(e);
                    case a.x3.code:
                      throw new a.x3(e);
                    case 5e3:
                      throw new a.ab(e);
                    default:
                      if (e instanceof r.G) throw e;
                      throw new a.ir(e);
                  }
                }
              },
              {
                delay: ({ count: e, error: n }) => {
                  if (n && n instanceof i.Gg) {
                    let e = n?.headers?.get("Retry-After");
                    if (e?.match(/\d/)) return 1e3 * parseInt(e);
                  }
                  return ~~(1 << e) * t;
                },
                retryCount: n,
                shouldRetry: ({ error: e }) => !s(e),
              }
            );
        }
      },
      86164: function (e, t, n) {
        "use strict";
        function r(e, t = {}) {
          let {
            fees: n = e.fees,
            formatters: r = e.formatters,
            serializers: i = e.serializers,
          } = t;
          return { ...e, fees: n, formatters: r, serializers: i };
        }
        n.d(t, {
          a: function () {
            return r;
          },
        });
      },
      47864: function (e, t, n) {
        "use strict";
        n.d(t, {
          L: function () {
            return i;
          },
        });
        var r = n(80377);
        function i({ blockNumber: e, chain: t, contract: n }) {
          let i = t?.contracts?.[n];
          if (!i) throw new r.mm({ chain: t, contract: { name: n } });
          if (e && i.blockCreated && i.blockCreated > e)
            throw new r.mm({
              blockNumber: e,
              chain: t,
              contract: { name: n, blockCreated: i.blockCreated },
            });
          return i.address;
        }
      },
      57040: function (e, t, n) {
        "use strict";
        function r(e) {
          return "string" == typeof e[0]
            ? i(e)
            : (function (e) {
                let t = 0;
                for (let n of e) t += n.length;
                let n = new Uint8Array(t),
                  r = 0;
                for (let t of e) n.set(t, r), (r += t.length);
                return n;
              })(e);
        }
        function i(e) {
          return `0x${e.reduce((e, t) => e + t.replace("0x", ""), "")}`;
        }
        n.d(t, {
          SM: function () {
            return i;
          },
          zo: function () {
            return r;
          },
        });
      },
      15102: function (e, t, n) {
        "use strict";
        function r(e, { strict: t = !0 } = {}) {
          return (
            !!e &&
            "string" == typeof e &&
            (t ? /^0x[0-9a-fA-F]*$/.test(e) : e.startsWith("0x"))
          );
        }
        n.d(t, {
          v: function () {
            return r;
          },
        });
      },
      61769: function (e, t, n) {
        "use strict";
        n.d(t, {
          gc: function () {
            return a;
          },
          vk: function () {
            return i;
          },
        });
        var r = n(69760);
        function i(e, { dir: t, size: n = 32 } = {}) {
          return "string" == typeof e
            ? a(e, { dir: t, size: n })
            : (function (e, { dir: t, size: n = 32 } = {}) {
                if (null === n) return e;
                if (e.length > n)
                  throw new r.$({
                    size: e.length,
                    targetSize: n,
                    type: "bytes",
                  });
                let i = new Uint8Array(n);
                for (let r = 0; r < n; r++) {
                  let a = "right" === t;
                  i[a ? r : n - r - 1] = e[a ? r : e.length - r - 1];
                }
                return i;
              })(e, { dir: t, size: n });
        }
        function a(e, { dir: t, size: n = 32 } = {}) {
          if (null === n) return e;
          let i = e.replace("0x", "");
          if (i.length > 2 * n)
            throw new r.$({
              size: Math.ceil(i.length / 2),
              targetSize: n,
              type: "hex",
            });
          return `0x${i["right" === t ? "padEnd" : "padStart"](2 * n, "0")}`;
        }
      },
      39135: function (e, t, n) {
        "use strict";
        n.d(t, {
          d: function () {
            return i;
          },
        });
        var r = n(15102);
        function i(e) {
          return (0, r.v)(e, { strict: !1 })
            ? Math.ceil((e.length - 2) / 2)
            : e.length;
        }
      },
      3972: function (e, t, n) {
        "use strict";
        n.d(t, {
          tP: function () {
            return o;
          },
        });
        var r = n(69760),
          i = n(15102),
          a = n(39135);
        function o(e, t, n, { strict: r } = {}) {
          return (0, i.v)(e, { strict: !1 })
            ? (function (e, t, n, { strict: r } = {}) {
                s(e, t);
                let i = `0x${e
                  .replace("0x", "")
                  .slice((t ?? 0) * 2, (n ?? e.length) * 2)}`;
                return r && u(i, t, n), i;
              })(e, t, n, { strict: r })
            : (function (e, t, n, { strict: r } = {}) {
                s(e, t);
                let i = e.slice(t, n);
                return r && u(i, t, n), i;
              })(e, t, n, { strict: r });
        }
        function s(e, t) {
          if ("number" == typeof t && t > 0 && t > (0, a.d)(e) - 1)
            throw new r.m({ offset: t, position: "start", size: (0, a.d)(e) });
        }
        function u(e, t, n) {
          if (
            "number" == typeof t &&
            "number" == typeof n &&
            (0, a.d)(e) !== n - t
          )
            throw new r.m({ offset: n, position: "end", size: (0, a.d)(e) });
        }
      },
      61836: function (e, t, n) {
        "use strict";
        function r(e, { dir: t = "left" } = {}) {
          let n = "string" == typeof e ? e.replace("0x", "") : e,
            r = 0;
          for (
            let e = 0;
            e < n.length - 1 &&
            "0" === n["left" === t ? e : n.length - e - 1].toString();
            e++
          )
            r++;
          return ((n = "left" === t ? n.slice(r) : n.slice(0, n.length - r)),
          "string" == typeof e)
            ? (1 === n.length && "right" === t && (n = `${n}0`),
              `0x${n.length % 2 == 1 ? `0${n}` : n}`)
            : n;
        }
        n.d(t, {
          f: function () {
            return r;
          },
        });
      },
      95946: function (e, t, n) {
        "use strict";
        n.d(t, {
          XA: function () {
            return l;
          },
          Yf: function () {
            return s;
          },
          ly: function () {
            return c;
          },
          rR: function () {
            return d;
          },
          y_: function () {
            return u;
          },
        });
        var r = n(87788),
          i = n(39135),
          a = n(61836),
          o = n(11187);
        function s(e, { size: t }) {
          if ((0, i.d)(e) > t)
            throw new r.M6({ givenSize: (0, i.d)(e), maxSize: t });
        }
        function u(e, t = {}) {
          let { signed: n } = t;
          t.size && s(e, { size: t.size });
          let r = BigInt(e);
          if (!n) return r;
          let i = (e.length - 2) / 2,
            a = (1n << (8n * BigInt(i) - 1n)) - 1n;
          return r <= a ? r : r - BigInt(`0x${"f".padStart(2 * i, "f")}`) - 1n;
        }
        function l(e, t = {}) {
          let n = e;
          if (
            (t.size && (s(n, { size: t.size }), (n = (0, a.f)(n))),
            "0x00" === (0, a.f)(n))
          )
            return !1;
          if ("0x01" === (0, a.f)(n)) return !0;
          throw new r.Cd(n);
        }
        function c(e, t = {}) {
          return Number(u(e, t));
        }
        function d(e, t = {}) {
          let n = (0, o.nr)(e);
          return (
            t.size &&
              (s(n, { size: t.size }), (n = (0, a.f)(n, { dir: "right" }))),
            new TextDecoder().decode(n)
          );
        }
      },
      11187: function (e, t, n) {
        "use strict";
        n.d(t, {
          O0: function () {
            return l;
          },
          nr: function () {
            return f;
          },
          qX: function () {
            return p;
          },
        });
        var r = n(62027),
          i = n(15102),
          a = n(61769),
          o = n(95946),
          s = n(92106);
        let u = new TextEncoder();
        function l(e, t = {}) {
          return "number" == typeof e || "bigint" == typeof e
            ? (function (e, t) {
                let n = (0, s.eC)(e, t);
                return f(n);
              })(e, t)
            : "boolean" == typeof e
            ? (function (e, t = {}) {
                let n = new Uint8Array(1);
                return ((n[0] = Number(e)), "number" == typeof t.size)
                  ? ((0, o.Yf)(n, { size: t.size }),
                    (0, a.vk)(n, { size: t.size }))
                  : n;
              })(e, t)
            : (0, i.v)(e)
            ? f(e, t)
            : p(e, t);
        }
        let c = { zero: 48, nine: 57, A: 65, F: 70, a: 97, f: 102 };
        function d(e) {
          return e >= c.zero && e <= c.nine
            ? e - c.zero
            : e >= c.A && e <= c.F
            ? e - (c.A - 10)
            : e >= c.a && e <= c.f
            ? e - (c.a - 10)
            : void 0;
        }
        function f(e, t = {}) {
          let n = e;
          t.size &&
            ((0, o.Yf)(n, { size: t.size }),
            (n = (0, a.vk)(n, { dir: "right", size: t.size })));
          let i = n.slice(2);
          i.length % 2 && (i = `0${i}`);
          let s = i.length / 2,
            u = new Uint8Array(s);
          for (let e = 0, t = 0; e < s; e++) {
            let n = d(i.charCodeAt(t++)),
              a = d(i.charCodeAt(t++));
            if (void 0 === n || void 0 === a)
              throw new r.G(
                `Invalid byte sequence ("${i[t - 2]}${i[t - 1]}" in "${i}").`
              );
            u[e] = 16 * n + a;
          }
          return u;
        }
        function p(e, t = {}) {
          let n = u.encode(e);
          return "number" == typeof t.size
            ? ((0, o.Yf)(n, { size: t.size }),
              (0, a.vk)(n, { dir: "right", size: t.size }))
            : n;
        }
      },
      92106: function (e, t, n) {
        "use strict";
        n.d(t, {
          $G: function () {
            return f;
          },
          C4: function () {
            return u;
          },
          NC: function () {
            return s;
          },
          ci: function () {
            return l;
          },
          eC: function () {
            return c;
          },
        });
        var r = n(87788),
          i = n(61769),
          a = n(95946);
        let o = Array.from({ length: 256 }, (e, t) =>
          t.toString(16).padStart(2, "0")
        );
        function s(e, t = {}) {
          return "number" == typeof e || "bigint" == typeof e
            ? c(e, t)
            : "string" == typeof e
            ? f(e, t)
            : "boolean" == typeof e
            ? u(e, t)
            : l(e, t);
        }
        function u(e, t = {}) {
          let n = `0x${Number(e)}`;
          return "number" == typeof t.size
            ? ((0, a.Yf)(n, { size: t.size }), (0, i.vk)(n, { size: t.size }))
            : n;
        }
        function l(e, t = {}) {
          let n = "";
          for (let t = 0; t < e.length; t++) n += o[e[t]];
          let r = `0x${n}`;
          return "number" == typeof t.size
            ? ((0, a.Yf)(r, { size: t.size }),
              (0, i.vk)(r, { dir: "right", size: t.size }))
            : r;
        }
        function c(e, t = {}) {
          let n;
          let { signed: a, size: o } = t,
            s = BigInt(e);
          o
            ? (n = a
                ? (1n << (8n * BigInt(o) - 1n)) - 1n
                : 2n ** (8n * BigInt(o)) - 1n)
            : "number" == typeof e && (n = BigInt(Number.MAX_SAFE_INTEGER));
          let u = "bigint" == typeof n && a ? -n - 1n : 0;
          if ((n && s > n) || s < u) {
            let t = "bigint" == typeof e ? "n" : "";
            throw new r.J5({
              max: n ? `${n}${t}` : void 0,
              min: `${u}${t}`,
              signed: a,
              size: o,
              value: `${e}${t}`,
            });
          }
          let l = `0x${(a && s < 0
            ? (1n << BigInt(8 * o)) + BigInt(s)
            : s
          ).toString(16)}`;
          return o ? (0, i.vk)(l, { size: o }) : l;
        }
        let d = new TextEncoder();
        function f(e, t = {}) {
          let n = d.encode(e);
          return l(n, t);
        }
      },
      87469: function (e, t, n) {
        "use strict";
        n.d(t, {
          k: function () {
            return a;
          },
        });
        var r = n(62027),
          i = n(26445);
        function a(e, t) {
          let n = (e.details || "").toLowerCase(),
            a = e.walk((e) => e.code === i.M_.code);
          return a instanceof r.G
            ? new i.M_({ cause: e, message: a.details })
            : i.M_.nodeMessage.test(n)
            ? new i.M_({ cause: e, message: e.details })
            : i.Hh.nodeMessage.test(n)
            ? new i.Hh({ cause: e, maxFeePerGas: t?.maxFeePerGas })
            : i.G$.nodeMessage.test(n)
            ? new i.G$({ cause: e, maxFeePerGas: t?.maxFeePerGas })
            : i.ZI.nodeMessage.test(n)
            ? new i.ZI({ cause: e, nonce: t?.nonce })
            : i.vU.nodeMessage.test(n)
            ? new i.vU({ cause: e, nonce: t?.nonce })
            : i.se.nodeMessage.test(n)
            ? new i.se({ cause: e, nonce: t?.nonce })
            : i.C_.nodeMessage.test(n)
            ? new i.C_({ cause: e })
            : i.WF.nodeMessage.test(n)
            ? new i.WF({ cause: e, gas: t?.gas })
            : i.dR.nodeMessage.test(n)
            ? new i.dR({ cause: e, gas: t?.gas })
            : i.pZ.nodeMessage.test(n)
            ? new i.pZ({ cause: e })
            : i.cs.nodeMessage.test(n)
            ? new i.cs({
                cause: e,
                maxFeePerGas: t?.maxFeePerGas,
                maxPriorityFeePerGas: t?.maxPriorityFeePerGas,
              })
            : new i.cj({ cause: e });
        }
      },
      43310: function (e, t, n) {
        "use strict";
        n.d(t, {
          G: function () {
            return o;
          },
          Z: function () {
            return a;
          },
        });
        var r = n(21366),
          i = n(6073);
        function a(e) {
          let t = e.transactions?.map((e) =>
            "string" == typeof e ? e : i.Tr(e)
          );
          return {
            ...e,
            baseFeePerGas: e.baseFeePerGas ? BigInt(e.baseFeePerGas) : null,
            difficulty: e.difficulty ? BigInt(e.difficulty) : void 0,
            gasLimit: e.gasLimit ? BigInt(e.gasLimit) : void 0,
            gasUsed: e.gasUsed ? BigInt(e.gasUsed) : void 0,
            hash: e.hash ? e.hash : null,
            logsBloom: e.logsBloom ? e.logsBloom : null,
            nonce: e.nonce ? e.nonce : null,
            number: e.number ? BigInt(e.number) : null,
            size: e.size ? BigInt(e.size) : void 0,
            timestamp: e.timestamp ? BigInt(e.timestamp) : void 0,
            transactions: t,
            totalDifficulty: e.totalDifficulty
              ? BigInt(e.totalDifficulty)
              : null,
          };
        }
        let o = (0, r.$)("block", a);
      },
      61163: function (e, t, n) {
        "use strict";
        function r(e, { format: t }) {
          if (!t) return {};
          let n = {},
            r = t(e || {});
          return (
            (function t(r) {
              let i = Object.keys(r);
              for (let a of i)
                a in e && (n[a] = e[a]),
                  r[a] &&
                    "object" == typeof r[a] &&
                    !Array.isArray(r[a]) &&
                    t(r[a]);
            })(r),
            n
          );
        }
        n.d(t, {
          K: function () {
            return r;
          },
        });
      },
      21366: function (e, t, n) {
        "use strict";
        function r(e, t) {
          return ({ exclude: n, format: r }) => ({
            exclude: n,
            format: (e) => {
              let i = t(e);
              if (n) for (let e of n) delete i[e];
              return { ...i, ...r(e) };
            },
            type: e,
          });
        }
        n.d(t, {
          $: function () {
            return r;
          },
        });
      },
      53992: function (e, t, n) {
        "use strict";
        function r(e, { args: t, eventName: n } = {}) {
          return {
            ...e,
            blockHash: e.blockHash ? e.blockHash : null,
            blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
            logIndex: e.logIndex ? Number(e.logIndex) : null,
            transactionHash: e.transactionHash ? e.transactionHash : null,
            transactionIndex: e.transactionIndex
              ? Number(e.transactionIndex)
              : null,
            ...(n ? { args: t, eventName: n } : {}),
          };
        }
        n.d(t, {
          U: function () {
            return r;
          },
        });
      },
      6073: function (e, t, n) {
        "use strict";
        n.d(t, {
          Tr: function () {
            return o;
          },
          c8: function () {
            return a;
          },
          y_: function () {
            return s;
          },
        });
        var r = n(95946),
          i = n(21366);
        let a = { "0x0": "legacy", "0x1": "eip2930", "0x2": "eip1559" };
        function o(e) {
          let t = {
            ...e,
            blockHash: e.blockHash ? e.blockHash : null,
            blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
            chainId: e.chainId ? (0, r.ly)(e.chainId) : void 0,
            gas: e.gas ? BigInt(e.gas) : void 0,
            gasPrice: e.gasPrice ? BigInt(e.gasPrice) : void 0,
            maxFeePerGas: e.maxFeePerGas ? BigInt(e.maxFeePerGas) : void 0,
            maxPriorityFeePerGas: e.maxPriorityFeePerGas
              ? BigInt(e.maxPriorityFeePerGas)
              : void 0,
            nonce: e.nonce ? (0, r.ly)(e.nonce) : void 0,
            to: e.to ? e.to : null,
            transactionIndex: e.transactionIndex
              ? Number(e.transactionIndex)
              : null,
            type: e.type ? a[e.type] : void 0,
            typeHex: e.type ? e.type : void 0,
            value: e.value ? BigInt(e.value) : void 0,
            v: e.v ? BigInt(e.v) : void 0,
          };
          return (
            (t.yParity = (() => {
              if (e.yParity) return Number(e.yParity);
              if ("bigint" == typeof t.v) {
                if (0n === t.v || 27n === t.v) return 0;
                if (1n === t.v || 28n === t.v) return 1;
                if (t.v >= 35n) return t.v % 2n === 0n ? 1 : 0;
              }
            })()),
            "legacy" === t.type &&
              (delete t.accessList,
              delete t.maxFeePerGas,
              delete t.maxPriorityFeePerGas,
              delete t.yParity),
            "eip2930" === t.type &&
              (delete t.maxFeePerGas, delete t.maxPriorityFeePerGas),
            t
          );
        }
        let s = (0, i.$)("transaction", o);
      },
      30866: function (e, t, n) {
        "use strict";
        n.d(t, {
          d: function () {
            return l;
          },
          f: function () {
            return u;
          },
        });
        var r = n(95946),
          i = n(21366),
          a = n(53992),
          o = n(6073);
        let s = { "0x0": "reverted", "0x1": "success" };
        function u(e) {
          return {
            ...e,
            blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
            contractAddress: e.contractAddress ? e.contractAddress : null,
            cumulativeGasUsed: e.cumulativeGasUsed
              ? BigInt(e.cumulativeGasUsed)
              : null,
            effectiveGasPrice: e.effectiveGasPrice
              ? BigInt(e.effectiveGasPrice)
              : null,
            gasUsed: e.gasUsed ? BigInt(e.gasUsed) : null,
            logs: e.logs ? e.logs.map((e) => (0, a.U)(e)) : null,
            to: e.to ? e.to : null,
            transactionIndex: e.transactionIndex
              ? (0, r.ly)(e.transactionIndex)
              : null,
            status: e.status ? s[e.status] : null,
            type: e.type ? o.c8[e.type] || e.type : null,
          };
        }
        let l = (0, i.$)("transactionReceipt", u);
      },
      74688: function (e, t, n) {
        "use strict";
        n.d(t, {
          iy: function () {
            return s;
          },
          tG: function () {
            return o;
          },
        });
        var r = n(92106),
          i = n(21366);
        let a = { legacy: "0x0", eip2930: "0x1", eip1559: "0x2" };
        function o(e) {
          return {
            ...e,
            gas: void 0 !== e.gas ? (0, r.eC)(e.gas) : void 0,
            gasPrice: void 0 !== e.gasPrice ? (0, r.eC)(e.gasPrice) : void 0,
            maxFeePerGas:
              void 0 !== e.maxFeePerGas ? (0, r.eC)(e.maxFeePerGas) : void 0,
            maxPriorityFeePerGas:
              void 0 !== e.maxPriorityFeePerGas
                ? (0, r.eC)(e.maxPriorityFeePerGas)
                : void 0,
            nonce: void 0 !== e.nonce ? (0, r.eC)(e.nonce) : void 0,
            type: void 0 !== e.type ? a[e.type] : void 0,
            value: void 0 !== e.value ? (0, r.eC)(e.value) : void 0,
          };
        }
        let s = (0, i.$)("transactionRequest", o);
      },
      93714: function (e, t, n) {
        "use strict";
        function r(e, t, n) {
          return (r) => e[t.name || n]?.(r) ?? t(e, r);
        }
        n.d(t, {
          s: function () {
            return r;
          },
        });
      },
      74059: function (e, t, n) {
        "use strict";
        n.d(t, {
          e: function () {
            return u;
          },
        });
        var r = n(11187),
          i = n(28717);
        let a = (e) => (0, i.r)(e);
        var o = n(88184);
        let s = (e) => (0, o.w)((0, r.O0)(e)),
          u = (e) => s(a(e));
      },
      40552: function (e, t, n) {
        "use strict";
        n.d(t, {
          o: function () {
            return u;
          },
        });
        var r = n(3972),
          i = n(11187),
          a = n(28717),
          o = n(88184);
        let s = (e) => (0, o.w)((0, i.O0)(e)),
          u = (e) => (0, r.tP)(s((0, a.r)(e)), 0, 4);
      },
      28717: function (e, t, n) {
        "use strict";
        n.d(t, {
          r: function () {
            return o;
          },
        });
        let r = /^tuple(?<array>(\[(\d*)\])*)$/;
        function i(e) {
          let t = "",
            n = e.length;
          for (let i = 0; i < n; i++) {
            let a = e[i];
            (t += (function e(t) {
              let n = t.type;
              if (r.test(t.type) && "components" in t) {
                n = "(";
                let i = t.components.length;
                for (let r = 0; r < i; r++) {
                  let a = t.components[r];
                  (n += e(a)), r < i - 1 && (n += ", ");
                }
                let a = (function (e, t) {
                  let n = e.exec(t);
                  return n?.groups;
                })(r, t.type);
                return (n += `)${a?.array ?? ""}`), e({ ...t, type: n });
              }
              return ("indexed" in t && t.indexed && (n = `${n} indexed`),
              t.name)
                ? `${n} ${t.name}`
                : n;
            })(a)),
              i !== n - 1 && (t += ", ");
          }
          return t;
        }
        var a = n(62027);
        let o = (e) => {
          var t;
          let n =
            "string" == typeof e
              ? e
              : "function" === (t = e).type
              ? `function ${t.name}(${i(t.inputs)})${
                  t.stateMutability && "nonpayable" !== t.stateMutability
                    ? ` ${t.stateMutability}`
                    : ""
                }${t.outputs.length ? ` returns (${i(t.outputs)})` : ""}`
              : "event" === t.type
              ? `event ${t.name}(${i(t.inputs)})`
              : "error" === t.type
              ? `error ${t.name}(${i(t.inputs)})`
              : "constructor" === t.type
              ? `constructor(${i(t.inputs)})${
                  "payable" === t.stateMutability ? " payable" : ""
                }`
              : "fallback" === t.type
              ? "fallback()"
              : "receive() external payable";
          return (function (e) {
            let t = !0,
              n = "",
              r = 0,
              i = "",
              o = !1;
            for (let a = 0; a < e.length; a++) {
              let s = e[a];
              if (
                (["(", ")", ","].includes(s) && (t = !0),
                "(" === s && r++,
                ")" === s && r--,
                t)
              ) {
                if (0 === r) {
                  if (" " === s && ["event", "function", ""].includes(i))
                    i = "";
                  else if (((i += s), ")" === s)) {
                    o = !0;
                    break;
                  }
                  continue;
                }
                if (" " === s) {
                  "," !== e[a - 1] &&
                    "," !== n &&
                    ",(" !== n &&
                    ((n = ""), (t = !1));
                  continue;
                }
                (i += s), (n += s);
              }
            }
            if (!o) throw new a.G("Unable to normalize signature.");
            return i;
          })(n);
        };
      },
      88184: function (e, t, n) {
        "use strict";
        function r(e) {
          if (!Number.isSafeInteger(e) || e < 0)
            throw Error(`Wrong positive integer: ${e}`);
        }
        function i(e, ...t) {
          if (!(e instanceof Uint8Array)) throw Error("Expected Uint8Array");
          if (t.length > 0 && !t.includes(e.length))
            throw Error(
              `Expected Uint8Array of length ${t}, not of length=${e.length}`
            );
        }
        function a(e, t = !0) {
          if (e.destroyed) throw Error("Hash instance has been destroyed");
          if (t && e.finished)
            throw Error("Hash#digest() has already been called");
        }
        n.d(t, {
          w: function () {
            return N;
          },
        });
        let o = BigInt(4294967296 - 1),
          s = BigInt(32),
          u = (e, t, n) => (e << n) | (t >>> (32 - n)),
          l = (e, t, n) => (t << n) | (e >>> (32 - n)),
          c = (e, t, n) => (t << (n - 32)) | (e >>> (64 - n)),
          d = (e, t, n) => (e << (n - 32)) | (t >>> (64 - n)),
          f = (e) => e instanceof Uint8Array,
          p = (e) =>
            new Uint32Array(
              e.buffer,
              e.byteOffset,
              Math.floor(e.byteLength / 4)
            ),
          h = 68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0];
        if (!h) throw Error("Non little-endian hardware is not supported");
        function m(e) {
          if (
            ("string" == typeof e &&
              (e = (function (e) {
                if ("string" != typeof e)
                  throw Error(`utf8ToBytes expected string, got ${typeof e}`);
                return new Uint8Array(new TextEncoder().encode(e));
              })(e)),
            !f(e))
          )
            throw Error(`expected Uint8Array, got ${typeof e}`);
          return e;
        }
        class y {
          clone() {
            return this._cloneInto();
          }
        }
        let [g, b, v] = [[], [], []],
          w = BigInt(0),
          E = BigInt(1),
          x = BigInt(2),
          C = BigInt(7),
          _ = BigInt(256),
          T = BigInt(113);
        for (let e = 0, t = E, n = 1, r = 0; e < 24; e++) {
          ([n, r] = [r, (2 * n + 3 * r) % 5]),
            g.push(2 * (5 * r + n)),
            b.push((((e + 1) * (e + 2)) / 2) % 64);
          let i = w;
          for (let e = 0; e < 7; e++)
            (t = ((t << E) ^ ((t >> C) * T)) % _) & x &&
              (i ^= E << ((E << BigInt(e)) - E));
          v.push(i);
        }
        let [S, P] = (function (e, t = !1) {
            let n = new Uint32Array(e.length),
              r = new Uint32Array(e.length);
            for (let i = 0; i < e.length; i++) {
              let { h: a, l: u } = (function (e, t = !1) {
                return t
                  ? { h: Number(e & o), l: Number((e >> s) & o) }
                  : { h: 0 | Number((e >> s) & o), l: 0 | Number(e & o) };
              })(e[i], t);
              [n[i], r[i]] = [a, u];
            }
            return [n, r];
          })(v, !0),
          O = (e, t, n) => (n > 32 ? c(e, t, n) : u(e, t, n)),
          I = (e, t, n) => (n > 32 ? d(e, t, n) : l(e, t, n));
        class A extends y {
          constructor(e, t, n, i = !1, a = 24) {
            if (
              (super(),
              (this.blockLen = e),
              (this.suffix = t),
              (this.outputLen = n),
              (this.enableXOF = i),
              (this.rounds = a),
              (this.pos = 0),
              (this.posOut = 0),
              (this.finished = !1),
              (this.destroyed = !1),
              r(n),
              0 >= this.blockLen || this.blockLen >= 200)
            )
              throw Error("Sha3 supports only keccak-f1600 function");
            (this.state = new Uint8Array(200)), (this.state32 = p(this.state));
          }
          keccak() {
            (function (e, t = 24) {
              let n = new Uint32Array(10);
              for (let r = 24 - t; r < 24; r++) {
                for (let t = 0; t < 10; t++)
                  n[t] = e[t] ^ e[t + 10] ^ e[t + 20] ^ e[t + 30] ^ e[t + 40];
                for (let t = 0; t < 10; t += 2) {
                  let r = (t + 8) % 10,
                    i = (t + 2) % 10,
                    a = n[i],
                    o = n[i + 1],
                    s = O(a, o, 1) ^ n[r],
                    u = I(a, o, 1) ^ n[r + 1];
                  for (let n = 0; n < 50; n += 10)
                    (e[t + n] ^= s), (e[t + n + 1] ^= u);
                }
                let t = e[2],
                  i = e[3];
                for (let n = 0; n < 24; n++) {
                  let r = b[n],
                    a = O(t, i, r),
                    o = I(t, i, r),
                    s = g[n];
                  (t = e[s]), (i = e[s + 1]), (e[s] = a), (e[s + 1] = o);
                }
                for (let t = 0; t < 50; t += 10) {
                  for (let r = 0; r < 10; r++) n[r] = e[t + r];
                  for (let r = 0; r < 10; r++)
                    e[t + r] ^= ~n[(r + 2) % 10] & n[(r + 4) % 10];
                }
                (e[0] ^= S[r]), (e[1] ^= P[r]);
              }
              n.fill(0);
            })(this.state32, this.rounds),
              (this.posOut = 0),
              (this.pos = 0);
          }
          update(e) {
            a(this);
            let { blockLen: t, state: n } = this;
            e = m(e);
            let r = e.length;
            for (let i = 0; i < r; ) {
              let a = Math.min(t - this.pos, r - i);
              for (let t = 0; t < a; t++) n[this.pos++] ^= e[i++];
              this.pos === t && this.keccak();
            }
            return this;
          }
          finish() {
            if (this.finished) return;
            this.finished = !0;
            let { state: e, suffix: t, pos: n, blockLen: r } = this;
            (e[n] ^= t),
              (128 & t) != 0 && n === r - 1 && this.keccak(),
              (e[r - 1] ^= 128),
              this.keccak();
          }
          writeInto(e) {
            a(this, !1), i(e), this.finish();
            let t = this.state,
              { blockLen: n } = this;
            for (let r = 0, i = e.length; r < i; ) {
              this.posOut >= n && this.keccak();
              let a = Math.min(n - this.posOut, i - r);
              e.set(t.subarray(this.posOut, this.posOut + a), r),
                (this.posOut += a),
                (r += a);
            }
            return e;
          }
          xofInto(e) {
            if (!this.enableXOF)
              throw Error("XOF is not possible for this instance");
            return this.writeInto(e);
          }
          xof(e) {
            return r(e), this.xofInto(new Uint8Array(e));
          }
          digestInto(e) {
            if (
              ((function (e, t) {
                i(e);
                let n = t.outputLen;
                if (e.length < n)
                  throw Error(
                    `digestInto() expects output buffer of length at least ${n}`
                  );
              })(e, this),
              this.finished)
            )
              throw Error("digest() was already called");
            return this.writeInto(e), this.destroy(), e;
          }
          digest() {
            return this.digestInto(new Uint8Array(this.outputLen));
          }
          destroy() {
            (this.destroyed = !0), this.state.fill(0);
          }
          _cloneInto(e) {
            let {
              blockLen: t,
              suffix: n,
              outputLen: r,
              rounds: i,
              enableXOF: a,
            } = this;
            return (
              e || (e = new A(t, n, r, a, i)),
              e.state32.set(this.state32),
              (e.pos = this.pos),
              (e.posOut = this.posOut),
              (e.finished = this.finished),
              (e.rounds = i),
              (e.suffix = n),
              (e.outputLen = r),
              (e.enableXOF = a),
              (e.destroyed = this.destroyed),
              e
            );
          }
        }
        let k = (function (e) {
          let t = (t) => e().update(m(t)).digest(),
            n = e();
          return (
            (t.outputLen = n.outputLen),
            (t.blockLen = n.blockLen),
            (t.create = () => e()),
            t
          );
        })(() => new A(136, 1, 32));
        var j = n(15102),
          B = n(11187),
          M = n(92106);
        function N(e, t) {
          let n = k((0, j.v)(e, { strict: !1 }) ? (0, B.O0)(e) : e);
          return "bytes" === (t || "hex") ? n : (0, M.NC)(n);
        }
      },
      32357: function (e, t, n) {
        "use strict";
        n.d(t, {
          S: function () {
            return i;
          },
        });
        let r = new Map();
        function i({
          fn: e,
          id: t,
          shouldSplitBatch: n,
          wait: i = 0,
          sort: a,
        }) {
          let o = async () => {
              let t = l();
              s();
              let n = t.map(({ args: e }) => e);
              0 !== n.length &&
                e(n)
                  .then((e) => {
                    a && Array.isArray(e) && e.sort(a);
                    for (let n = 0; n < t.length; n++) {
                      let { pendingPromise: r } = t[n];
                      r.resolve?.([e[n], e]);
                    }
                  })
                  .catch((e) => {
                    for (let n = 0; n < t.length; n++) {
                      let { pendingPromise: r } = t[n];
                      r.reject?.(e);
                    }
                  });
            },
            s = () => r.delete(t),
            u = () => l().map(({ args: e }) => e),
            l = () => r.get(t) || [],
            c = (e) => r.set(t, [...l(), e]);
          return {
            flush: s,
            async schedule(e) {
              let t = {},
                r = new Promise((e, n) => {
                  (t.resolve = e), (t.reject = n);
                }),
                a = n?.([...u(), e]);
              a && o();
              let s = l().length > 0;
              return (
                s
                  ? c({ args: e, pendingPromise: t })
                  : (c({ args: e, pendingPromise: t }), setTimeout(o, i)),
                r
              );
            },
          };
        }
      },
      7760: function (e, t, n) {
        "use strict";
        n.d(t, {
          J: function () {
            return i;
          },
        });
        var r = n(62914);
        function i(
          e,
          { delay: t = 100, retryCount: n = 2, shouldRetry: i = () => !0 } = {}
        ) {
          return new Promise((a, o) => {
            let s = async ({ count: u = 0 } = {}) => {
              let l = async ({ error: e }) => {
                let n = "function" == typeof t ? t({ count: u, error: e }) : t;
                n && (await (0, r.D)(n)), s({ count: u + 1 });
              };
              try {
                let t = await e();
                a(t);
              } catch (e) {
                if (u < n && (await i({ count: u, error: e })))
                  return l({ error: e });
                o(e);
              }
            };
            s();
          });
        }
      },
      66558: function (e, t, n) {
        "use strict";
        n.d(t, {
          hb: function () {
            return d;
          },
          f4: function () {
            return p;
          },
        });
        var r = n(54943),
          i = n(78863),
          a = n(32357);
        function o(
          e,
          { errorInstance: t = Error("timed out"), timeout: n, signal: r }
        ) {
          return new Promise((i, a) => {
            (async () => {
              let o;
              try {
                let s = new AbortController();
                n > 0 &&
                  (o = setTimeout(() => {
                    r ? s.abort() : a(t);
                  }, n)),
                  i(await e({ signal: s?.signal }));
              } catch (e) {
                "AbortError" === e.name && a(t), a(e);
              } finally {
                clearTimeout(o);
              }
            })();
          });
        }
        var s = n(96070);
        let u = 0;
        async function l(
          e,
          { body: t, fetchOptions: n = {}, timeout: r = 1e4 }
        ) {
          let { headers: a, method: l, signal: c } = n;
          try {
            let d;
            let f = await o(
              async ({ signal: i }) => {
                let o = await fetch(e, {
                  ...n,
                  body: Array.isArray(t)
                    ? (0, s.P)(
                        t.map((e) => ({
                          jsonrpc: "2.0",
                          id: e.id ?? u++,
                          ...e,
                        }))
                      )
                    : (0, s.P)({ jsonrpc: "2.0", id: t.id ?? u++, ...t }),
                  headers: { ...a, "Content-Type": "application/json" },
                  method: l || "POST",
                  signal: c || (r > 0 ? i : void 0),
                });
                return o;
              },
              {
                errorInstance: new i.W5({ body: t, url: e }),
                timeout: r,
                signal: !0,
              }
            );
            if (
              ((d = f.headers
                .get("Content-Type")
                ?.startsWith("application/json")
                ? await f.json()
                : await f.text()),
              !f.ok)
            )
              throw new i.Gg({
                body: t,
                details: (0, s.P)(d.error) || f.statusText,
                headers: f.headers,
                status: f.status,
                url: e,
              });
            return d;
          } catch (n) {
            if (n instanceof i.Gg || n instanceof i.W5) throw n;
            throw new i.Gg({ body: t, details: n.message, url: e });
          }
        }
        let c = new Map();
        async function d(e) {
          let t = c.get(e);
          if (t) return t;
          let { schedule: n } = (0, a.S)({
              id: e,
              fn: async () => {
                let n = new r.WebSocket(e),
                  i = new Map(),
                  a = new Map(),
                  o = ({ data: e }) => {
                    let t = JSON.parse(e),
                      n = "eth_subscription" === t.method,
                      r = n ? t.params.subscription : t.id,
                      o = n ? a : i,
                      s = o.get(r);
                    s && s({ data: e }), n || o.delete(r);
                  },
                  s = () => {
                    c.delete(e),
                      n.removeEventListener("close", s),
                      n.removeEventListener("message", o);
                  };
                return (
                  n.addEventListener("close", s),
                  n.addEventListener("message", o),
                  n.readyState === r.WebSocket.CONNECTING &&
                    (await new Promise((e, t) => {
                      n && ((n.onopen = e), (n.onerror = t));
                    })),
                  (t = Object.assign(n, { requests: i, subscriptions: a })),
                  c.set(e, t),
                  [t]
                );
              },
            }),
            [i, [o]] = await n();
          return o;
        }
        async function f(e, { body: t, timeout: n = 1e4 }) {
          return o(
            () =>
              new Promise((n) => p.webSocket(e, { body: t, onResponse: n })),
            { errorInstance: new i.W5({ body: t, url: e.url }), timeout: n }
          );
        }
        let p = {
          http: l,
          webSocket: function (e, { body: t, onResponse: n }) {
            if (e.readyState === e.CLOSED || e.readyState === e.CLOSING)
              throw new i.c9({
                body: t,
                url: e.url,
                details: "Socket is closed.",
              });
            let r = u++,
              a = ({ data: i }) => {
                let o = JSON.parse(i);
                ("number" != typeof o.id || r === o.id) &&
                  (n?.(o),
                  "eth_subscribe" === t.method &&
                    "string" == typeof o.result &&
                    e.subscriptions.set(o.result, a),
                  "eth_unsubscribe" === t.method &&
                    e.subscriptions.delete(t.params?.[0]));
              };
            return (
              e.requests.set(r, a),
              e.send(JSON.stringify({ jsonrpc: "2.0", ...t, id: r })),
              e
            );
          },
          webSocketAsync: f,
        };
      },
      96070: function (e, t, n) {
        "use strict";
        n.d(t, {
          P: function () {
            return r;
          },
        });
        let r = (e, t, n) =>
          JSON.stringify(
            e,
            (e, n) => {
              let r = "bigint" == typeof n ? n.toString() : n;
              return "function" == typeof t ? t(e, r) : r;
            },
            n
          );
      },
      47531: function (e, t, n) {
        "use strict";
        n.d(t, {
          F: function () {
            return u;
          },
        });
        var r = n(14503),
          i = n(26087),
          a = n(26445),
          o = n(33639),
          s = n(49321);
        function u(e) {
          let {
              account: t,
              gasPrice: n,
              maxFeePerGas: u,
              maxPriorityFeePerGas: l,
              to: c,
            } = e,
            d = t ? (0, r.T)(t) : void 0;
          if (d && !(0, s.U)(d.address)) throw new i.b({ address: d.address });
          if (c && !(0, s.U)(c)) throw new i.b({ address: c });
          if (void 0 !== n && (void 0 !== u || void 0 !== l)) throw new o.xY();
          if (u && u > 2n ** 256n - 1n) throw new a.Hh({ maxFeePerGas: u });
          if (l && u && l > u)
            throw new a.cs({ maxFeePerGas: u, maxPriorityFeePerGas: l });
        }
      },
      82994: function (e, t, n) {
        "use strict";
        n.d(t, {
          l: function () {
            return i;
          },
        });
        var r = n(33639);
        function i(e) {
          if (e.type) return e.type;
          if (void 0 !== e.maxFeePerGas || void 0 !== e.maxPriorityFeePerGas)
            return "eip1559";
          if (void 0 !== e.gasPrice)
            return void 0 !== e.accessList ? "eip2930" : "legacy";
          throw new r.j3({ transaction: e });
        }
      },
      71352: function (e, t, n) {
        "use strict";
        n.d(t, {
          cj: function () {
            return d;
          },
          iC: function () {
            return c;
          },
        });
        var r = n(57412),
          i = n(26087),
          a = n(49321),
          o = n(39135),
          s = n(92106);
        let u = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/,
          l =
            /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;
        function c({ domain: e, message: t, primaryType: n, types: c }) {
          let d = (e, t) => {
            for (let n of e) {
              let { name: e, type: f } = n,
                p = t[e],
                h = f.match(l);
              if (h && ("number" == typeof p || "bigint" == typeof p)) {
                let [e, t, n] = h;
                (0, s.eC)(p, { signed: "int" === t, size: parseInt(n) / 8 });
              }
              if ("address" === f && "string" == typeof p && !(0, a.U)(p))
                throw new i.b({ address: p });
              let m = f.match(u);
              if (m) {
                let [e, t] = m;
                if (t && (0, o.d)(p) !== parseInt(t))
                  throw new r.KY({
                    expectedSize: parseInt(t),
                    givenSize: (0, o.d)(p),
                  });
              }
              let y = c[f];
              y && d(y, p);
            }
          };
          if (
            (c.EIP712Domain && e && d(c.EIP712Domain, e), "EIP712Domain" !== n)
          ) {
            let e = c[n];
            d(e, t);
          }
        }
        function d({ domain: e }) {
          return [
            "string" == typeof e?.name && { name: "name", type: "string" },
            e?.version && { name: "version", type: "string" },
            "number" == typeof e?.chainId && {
              name: "chainId",
              type: "uint256",
            },
            e?.verifyingContract && {
              name: "verifyingContract",
              type: "address",
            },
            e?.salt && { name: "salt", type: "bytes32" },
          ].filter(Boolean);
        }
      },
      39625: function (e, t, n) {
        "use strict";
        n.d(t, {
          d: function () {
            return a;
          },
        });
        var r = n(84192),
          i = n(15229);
        function a(e, t = "wei") {
          return (0, i.b)(e, r.ez[t]);
        }
      },
      67795: function (e, t, n) {
        "use strict";
        n.d(t, {
          o: function () {
            return a;
          },
        });
        var r = n(84192),
          i = n(15229);
        function a(e, t = "wei") {
          return (0, i.b)(e, r.Zn[t]);
        }
      },
      15229: function (e, t, n) {
        "use strict";
        function r(e, t) {
          let n = e.toString(),
            r = n.startsWith("-");
          r && (n = n.slice(1));
          let [i, a] = [
            (n = n.padStart(t, "0")).slice(0, n.length - t),
            n.slice(n.length - t),
          ];
          return (
            (a = a.replace(/(0+)$/, "")),
            `${r ? "-" : ""}${i || "0"}${a ? `.${a}` : ""}`
          );
        }
        n.d(t, {
          b: function () {
            return r;
          },
        });
      },
      21803: function (e, t, n) {
        "use strict";
        function r(e, t) {
          let [n, r = "0"] = e.split("."),
            i = n.startsWith("-");
          if ((i && (n = n.slice(1)), (r = r.replace(/(0+)$/, "")), 0 === t))
            1 === Math.round(Number(`.${r}`)) && (n = `${BigInt(n) + 1n}`),
              (r = "");
          else if (r.length > t) {
            let [e, i, a] = [r.slice(0, t - 1), r.slice(t - 1, t), r.slice(t)],
              o = Math.round(Number(`${i}.${a}`));
            (r =
              o > 9
                ? `${BigInt(e) + BigInt(1)}0`.padStart(e.length + 1, "0")
                : `${e}${o}`).length > t &&
              ((r = r.slice(1)), (n = `${BigInt(n) + 1n}`)),
              (r = r.slice(0, t));
          } else r = r.padEnd(t, "0");
          return BigInt(`${i ? "-" : ""}${n}${r}`);
        }
        n.d(t, {
          v: function () {
            return r;
          },
        });
      },
      62914: function (e, t, n) {
        "use strict";
        async function r(e) {
          return new Promise((t) => setTimeout(t, e));
        }
        n.d(t, {
          D: function () {
            return r;
          },
        });
      },
      69077: function (e, t, n) {
        "use strict";
        let r;
        function i() {}
        n.d(t, {
          eM: function () {
            return ew;
          },
          _g: function () {
            return eg;
          },
          mA: function () {
            return eU;
          },
          KQ: function () {
            return eq;
          },
          $4: function () {
            return eG;
          },
          qL: function () {
            return eK;
          },
          c9: function () {
            return e6;
          },
          F6: function () {
            return e5;
          },
          LK: function () {
            return eD;
          },
          LN: function () {
            return eZ;
          },
          t_: function () {
            return eO;
          },
          aM: function () {
            return eS;
          },
          NL: function () {
            return eP;
          },
          QW: function () {
            return eX;
          },
          g0: function () {
            return e1;
          },
          py: function () {
            return ek;
          },
        });
        let a = "undefined" == typeof window || "Deno" in window;
        function o() {}
        function s(e) {
          return "number" == typeof e && e >= 0 && e !== 1 / 0;
        }
        function u(e, t) {
          return Math.max(e + (t || 0) - Date.now(), 0);
        }
        function l(e, t, n) {
          return E(e)
            ? "function" == typeof t
              ? { ...n, queryKey: e, queryFn: t }
              : { ...t, queryKey: e }
            : e;
        }
        function c(e, t, n) {
          return E(e)
            ? "function" == typeof t
              ? { ...n, mutationKey: e, mutationFn: t }
              : { ...t, mutationKey: e }
            : "function" == typeof e
            ? { ...t, mutationFn: e }
            : { ...e };
        }
        function d(e, t, n) {
          return E(e) ? [{ ...t, queryKey: e }, n] : [e || {}, t];
        }
        function f(e, t) {
          let {
            type: n = "all",
            exact: r,
            fetchStatus: i,
            predicate: a,
            queryKey: o,
            stale: s,
          } = e;
          if (E(o)) {
            if (r) {
              if (t.queryHash !== h(o, t.options)) return !1;
            } else {
              if (!y(t.queryKey, o)) return !1;
            }
          }
          if ("all" !== n) {
            let e = t.isActive();
            if (("active" === n && !e) || ("inactive" === n && e)) return !1;
          }
          return (
            ("boolean" != typeof s || t.isStale() === s) &&
            (void 0 === i || i === t.state.fetchStatus) &&
            (!a || !!a(t))
          );
        }
        function p(e, t) {
          let { exact: n, fetching: r, predicate: i, mutationKey: a } = e;
          if (E(a)) {
            if (!t.options.mutationKey) return !1;
            if (n) {
              if (m(t.options.mutationKey) !== m(a)) return !1;
            } else {
              if (!y(t.options.mutationKey, a)) return !1;
            }
          }
          return (
            ("boolean" != typeof r || ("loading" === t.state.status) === r) &&
            (!i || !!i(t))
          );
        }
        function h(e, t) {
          let n = (null == t ? void 0 : t.queryKeyHashFn) || m;
          return n(e);
        }
        function m(e) {
          return JSON.stringify(e, (e, t) =>
            v(t)
              ? Object.keys(t)
                  .sort()
                  .reduce((e, n) => ((e[n] = t[n]), e), {})
              : t
          );
        }
        function y(e, t) {
          return (
            e === t ||
            (typeof e == typeof t &&
              !!e &&
              !!t &&
              "object" == typeof e &&
              "object" == typeof t &&
              !Object.keys(t).some((n) => !y(e[n], t[n])))
          );
        }
        function g(e, t) {
          if ((e && !t) || (t && !e)) return !1;
          for (let n in e) if (e[n] !== t[n]) return !1;
          return !0;
        }
        function b(e) {
          return Array.isArray(e) && e.length === Object.keys(e).length;
        }
        function v(e) {
          if (!w(e)) return !1;
          let t = e.constructor;
          if (void 0 === t) return !0;
          let n = t.prototype;
          return !!(w(n) && n.hasOwnProperty("isPrototypeOf"));
        }
        function w(e) {
          return "[object Object]" === Object.prototype.toString.call(e);
        }
        function E(e) {
          return Array.isArray(e);
        }
        function x(e) {
          return new Promise((t) => {
            setTimeout(t, e);
          });
        }
        function C(e) {
          x(0).then(e);
        }
        function _(e, t, n) {
          return null != n.isDataEqual && n.isDataEqual(e, t)
            ? e
            : "function" == typeof n.structuralSharing
            ? n.structuralSharing(e, t)
            : !1 !== n.structuralSharing
            ? (function e(t, n) {
                if (t === n) return t;
                let r = b(t) && b(n);
                if (r || (v(t) && v(n))) {
                  let i = r ? t.length : Object.keys(t).length,
                    a = r ? n : Object.keys(n),
                    o = a.length,
                    s = r ? [] : {},
                    u = 0;
                  for (let i = 0; i < o; i++) {
                    let o = r ? i : a[i];
                    (s[o] = e(t[o], n[o])), s[o] === t[o] && u++;
                  }
                  return i === o && u === i ? t : s;
                }
                return n;
              })(e, t)
            : t;
        }
        let T = console,
          S = (function () {
            let e = [],
              t = 0,
              n = (e) => {
                e();
              },
              r = (e) => {
                e();
              },
              i = (r) => {
                t
                  ? e.push(r)
                  : C(() => {
                      n(r);
                    });
              },
              a = () => {
                let t = e;
                (e = []),
                  t.length &&
                    C(() => {
                      r(() => {
                        t.forEach((e) => {
                          n(e);
                        });
                      });
                    });
              };
            return {
              batch: (e) => {
                let n;
                t++;
                try {
                  n = e();
                } finally {
                  --t || a();
                }
                return n;
              },
              batchCalls:
                (e) =>
                (...t) => {
                  i(() => {
                    e(...t);
                  });
                },
              schedule: i,
              setNotifyFunction: (e) => {
                n = e;
              },
              setBatchNotifyFunction: (e) => {
                r = e;
              },
            };
          })();
        class P {
          constructor() {
            (this.listeners = new Set()),
              (this.subscribe = this.subscribe.bind(this));
          }
          subscribe(e) {
            let t = { listener: e };
            return (
              this.listeners.add(t),
              this.onSubscribe(),
              () => {
                this.listeners.delete(t), this.onUnsubscribe();
              }
            );
          }
          hasListeners() {
            return this.listeners.size > 0;
          }
          onSubscribe() {}
          onUnsubscribe() {}
        }
        let O = new (class extends P {
            constructor() {
              super(),
                (this.setup = (e) => {
                  if (!a && window.addEventListener) {
                    let t = () => e();
                    return (
                      window.addEventListener("visibilitychange", t, !1),
                      window.addEventListener("focus", t, !1),
                      () => {
                        window.removeEventListener("visibilitychange", t),
                          window.removeEventListener("focus", t);
                      }
                    );
                  }
                });
            }
            onSubscribe() {
              this.cleanup || this.setEventListener(this.setup);
            }
            onUnsubscribe() {
              if (!this.hasListeners()) {
                var e;
                null == (e = this.cleanup) || e.call(this),
                  (this.cleanup = void 0);
              }
            }
            setEventListener(e) {
              var t;
              (this.setup = e),
                null == (t = this.cleanup) || t.call(this),
                (this.cleanup = e((e) => {
                  "boolean" == typeof e ? this.setFocused(e) : this.onFocus();
                }));
            }
            setFocused(e) {
              let t = this.focused !== e;
              t && ((this.focused = e), this.onFocus());
            }
            onFocus() {
              this.listeners.forEach(({ listener: e }) => {
                e();
              });
            }
            isFocused() {
              return "boolean" == typeof this.focused
                ? this.focused
                : "undefined" == typeof document ||
                    [void 0, "visible", "prerender"].includes(
                      document.visibilityState
                    );
            }
          })(),
          I = ["online", "offline"],
          A = new (class extends P {
            constructor() {
              super(),
                (this.setup = (e) => {
                  if (!a && window.addEventListener) {
                    let t = () => e();
                    return (
                      I.forEach((e) => {
                        window.addEventListener(e, t, !1);
                      }),
                      () => {
                        I.forEach((e) => {
                          window.removeEventListener(e, t);
                        });
                      }
                    );
                  }
                });
            }
            onSubscribe() {
              this.cleanup || this.setEventListener(this.setup);
            }
            onUnsubscribe() {
              if (!this.hasListeners()) {
                var e;
                null == (e = this.cleanup) || e.call(this),
                  (this.cleanup = void 0);
              }
            }
            setEventListener(e) {
              var t;
              (this.setup = e),
                null == (t = this.cleanup) || t.call(this),
                (this.cleanup = e((e) => {
                  "boolean" == typeof e ? this.setOnline(e) : this.onOnline();
                }));
            }
            setOnline(e) {
              let t = this.online !== e;
              t && ((this.online = e), this.onOnline());
            }
            onOnline() {
              this.listeners.forEach(({ listener: e }) => {
                e();
              });
            }
            isOnline() {
              return "boolean" == typeof this.online
                ? this.online
                : "undefined" == typeof navigator ||
                    void 0 === navigator.onLine ||
                    navigator.onLine;
            }
          })();
        function k(e) {
          return Math.min(1e3 * 2 ** e, 3e4);
        }
        function j(e) {
          return (null != e ? e : "online") !== "online" || A.isOnline();
        }
        class B {
          constructor(e) {
            (this.revert = null == e ? void 0 : e.revert),
              (this.silent = null == e ? void 0 : e.silent);
          }
        }
        function M(e) {
          return e instanceof B;
        }
        function N(e) {
          let t,
            n,
            r,
            i = !1,
            a = 0,
            o = !1,
            s = new Promise((e, t) => {
              (n = e), (r = t);
            }),
            u = () =>
              !O.isFocused() || ("always" !== e.networkMode && !A.isOnline()),
            l = (r) => {
              o ||
                ((o = !0),
                null == e.onSuccess || e.onSuccess(r),
                null == t || t(),
                n(r));
            },
            c = (n) => {
              o ||
                ((o = !0),
                null == e.onError || e.onError(n),
                null == t || t(),
                r(n));
            },
            d = () =>
              new Promise((n) => {
                (t = (e) => {
                  let t = o || !u();
                  return t && n(e), t;
                }),
                  null == e.onPause || e.onPause();
              }).then(() => {
                (t = void 0), o || null == e.onContinue || e.onContinue();
              }),
            f = () => {
              let t;
              if (!o) {
                try {
                  t = e.fn();
                } catch (e) {
                  t = Promise.reject(e);
                }
                Promise.resolve(t)
                  .then(l)
                  .catch((t) => {
                    var n, r;
                    if (o) return;
                    let s = null != (n = e.retry) ? n : 3,
                      l = null != (r = e.retryDelay) ? r : k,
                      p = "function" == typeof l ? l(a, t) : l,
                      h =
                        !0 === s ||
                        ("number" == typeof s && a < s) ||
                        ("function" == typeof s && s(a, t));
                    if (i || !h) {
                      c(t);
                      return;
                    }
                    a++,
                      null == e.onFail || e.onFail(a, t),
                      x(p)
                        .then(() => {
                          if (u()) return d();
                        })
                        .then(() => {
                          i ? c(t) : f();
                        });
                  });
              }
            };
          return (
            j(e.networkMode) ? f() : d().then(f),
            {
              promise: s,
              cancel: (t) => {
                o || (c(new B(t)), null == e.abort || e.abort());
              },
              continue: () => {
                let e = null == t ? void 0 : t();
                return e ? s : Promise.resolve();
              },
              cancelRetry: () => {
                i = !0;
              },
              continueRetry: () => {
                i = !1;
              },
            }
          );
        }
        class D {
          destroy() {
            this.clearGcTimeout();
          }
          scheduleGc() {
            this.clearGcTimeout(),
              s(this.cacheTime) &&
                (this.gcTimeout = setTimeout(() => {
                  this.optionalRemove();
                }, this.cacheTime));
          }
          updateCacheTime(e) {
            this.cacheTime = Math.max(
              this.cacheTime || 0,
              null != e ? e : a ? 1 / 0 : 3e5
            );
          }
          clearGcTimeout() {
            this.gcTimeout &&
              (clearTimeout(this.gcTimeout), (this.gcTimeout = void 0));
          }
        }
        class R extends D {
          constructor(e) {
            super(),
              (this.abortSignalConsumed = !1),
              (this.defaultOptions = e.defaultOptions),
              this.setOptions(e.options),
              (this.observers = []),
              (this.cache = e.cache),
              (this.logger = e.logger || T),
              (this.queryKey = e.queryKey),
              (this.queryHash = e.queryHash),
              (this.initialState =
                e.state ||
                (function (e) {
                  let t =
                      "function" == typeof e.initialData
                        ? e.initialData()
                        : e.initialData,
                    n = void 0 !== t,
                    r = n
                      ? "function" == typeof e.initialDataUpdatedAt
                        ? e.initialDataUpdatedAt()
                        : e.initialDataUpdatedAt
                      : 0;
                  return {
                    data: t,
                    dataUpdateCount: 0,
                    dataUpdatedAt: n ? (null != r ? r : Date.now()) : 0,
                    error: null,
                    errorUpdateCount: 0,
                    errorUpdatedAt: 0,
                    fetchFailureCount: 0,
                    fetchFailureReason: null,
                    fetchMeta: null,
                    isInvalidated: !1,
                    status: n ? "success" : "loading",
                    fetchStatus: "idle",
                  };
                })(this.options)),
              (this.state = this.initialState),
              this.scheduleGc();
          }
          get meta() {
            return this.options.meta;
          }
          setOptions(e) {
            (this.options = { ...this.defaultOptions, ...e }),
              this.updateCacheTime(this.options.cacheTime);
          }
          optionalRemove() {
            this.observers.length ||
              "idle" !== this.state.fetchStatus ||
              this.cache.remove(this);
          }
          setData(e, t) {
            let n = _(this.state.data, e, this.options);
            return (
              this.dispatch({
                data: n,
                type: "success",
                dataUpdatedAt: null == t ? void 0 : t.updatedAt,
                manual: null == t ? void 0 : t.manual,
              }),
              n
            );
          }
          setState(e, t) {
            this.dispatch({ type: "setState", state: e, setStateOptions: t });
          }
          cancel(e) {
            var t;
            let n = this.promise;
            return (
              null == (t = this.retryer) || t.cancel(e),
              n ? n.then(o).catch(o) : Promise.resolve()
            );
          }
          destroy() {
            super.destroy(), this.cancel({ silent: !0 });
          }
          reset() {
            this.destroy(), this.setState(this.initialState);
          }
          isActive() {
            return this.observers.some((e) => !1 !== e.options.enabled);
          }
          isDisabled() {
            return this.getObserversCount() > 0 && !this.isActive();
          }
          isStale() {
            return (
              this.state.isInvalidated ||
              !this.state.dataUpdatedAt ||
              this.observers.some((e) => e.getCurrentResult().isStale)
            );
          }
          isStaleByTime(e = 0) {
            return (
              this.state.isInvalidated ||
              !this.state.dataUpdatedAt ||
              !u(this.state.dataUpdatedAt, e)
            );
          }
          onFocus() {
            var e;
            let t = this.observers.find((e) => e.shouldFetchOnWindowFocus());
            t && t.refetch({ cancelRefetch: !1 }),
              null == (e = this.retryer) || e.continue();
          }
          onOnline() {
            var e;
            let t = this.observers.find((e) => e.shouldFetchOnReconnect());
            t && t.refetch({ cancelRefetch: !1 }),
              null == (e = this.retryer) || e.continue();
          }
          addObserver(e) {
            this.observers.includes(e) ||
              (this.observers.push(e),
              this.clearGcTimeout(),
              this.cache.notify({
                type: "observerAdded",
                query: this,
                observer: e,
              }));
          }
          removeObserver(e) {
            this.observers.includes(e) &&
              ((this.observers = this.observers.filter((t) => t !== e)),
              this.observers.length ||
                (this.retryer &&
                  (this.abortSignalConsumed
                    ? this.retryer.cancel({ revert: !0 })
                    : this.retryer.cancelRetry()),
                this.scheduleGc()),
              this.cache.notify({
                type: "observerRemoved",
                query: this,
                observer: e,
              }));
          }
          getObserversCount() {
            return this.observers.length;
          }
          invalidate() {
            this.state.isInvalidated || this.dispatch({ type: "invalidate" });
          }
          fetch(e, t) {
            var n, r, i, a;
            if ("idle" !== this.state.fetchStatus) {
              if (this.state.dataUpdatedAt && null != t && t.cancelRefetch)
                this.cancel({ silent: !0 });
              else if (this.promise)
                return (
                  null == (i = this.retryer) || i.continueRetry(), this.promise
                );
            }
            if ((e && this.setOptions(e), !this.options.queryFn)) {
              let e = this.observers.find((e) => e.options.queryFn);
              e && this.setOptions(e.options);
            }
            let o = (function () {
                if ("function" == typeof AbortController)
                  return new AbortController();
              })(),
              s = {
                queryKey: this.queryKey,
                pageParam: void 0,
                meta: this.meta,
              },
              u = (e) => {
                Object.defineProperty(e, "signal", {
                  enumerable: !0,
                  get: () => {
                    if (o) return (this.abortSignalConsumed = !0), o.signal;
                  },
                });
              };
            u(s);
            let l = {
              fetchOptions: t,
              options: this.options,
              queryKey: this.queryKey,
              state: this.state,
              fetchFn: () =>
                this.options.queryFn
                  ? ((this.abortSignalConsumed = !1), this.options.queryFn(s))
                  : Promise.reject(
                      "Missing queryFn for queryKey '" +
                        this.options.queryHash +
                        "'"
                    ),
            };
            u(l),
              null == (n = this.options.behavior) || n.onFetch(l),
              (this.revertState = this.state),
              ("idle" === this.state.fetchStatus ||
                this.state.fetchMeta !==
                  (null == (r = l.fetchOptions) ? void 0 : r.meta)) &&
                this.dispatch({
                  type: "fetch",
                  meta: null == (a = l.fetchOptions) ? void 0 : a.meta,
                });
            let c = (e) => {
              if (
                ((M(e) && e.silent) ||
                  this.dispatch({ type: "error", error: e }),
                !M(e))
              ) {
                var t, n, r, i;
                null == (t = (n = this.cache.config).onError) ||
                  t.call(n, e, this),
                  null == (r = (i = this.cache.config).onSettled) ||
                    r.call(i, this.state.data, e, this);
              }
              this.isFetchingOptimistic || this.scheduleGc(),
                (this.isFetchingOptimistic = !1);
            };
            return (
              (this.retryer = N({
                fn: l.fetchFn,
                abort: null == o ? void 0 : o.abort.bind(o),
                onSuccess: (e) => {
                  var t, n, r, i;
                  if (void 0 === e) {
                    c(Error(this.queryHash + " data is undefined"));
                    return;
                  }
                  this.setData(e),
                    null == (t = (n = this.cache.config).onSuccess) ||
                      t.call(n, e, this),
                    null == (r = (i = this.cache.config).onSettled) ||
                      r.call(i, e, this.state.error, this),
                    this.isFetchingOptimistic || this.scheduleGc(),
                    (this.isFetchingOptimistic = !1);
                },
                onError: c,
                onFail: (e, t) => {
                  this.dispatch({ type: "failed", failureCount: e, error: t });
                },
                onPause: () => {
                  this.dispatch({ type: "pause" });
                },
                onContinue: () => {
                  this.dispatch({ type: "continue" });
                },
                retry: l.options.retry,
                retryDelay: l.options.retryDelay,
                networkMode: l.options.networkMode,
              })),
              (this.promise = this.retryer.promise),
              this.promise
            );
          }
          dispatch(e) {
            (this.state = ((t) => {
              var n, r;
              switch (e.type) {
                case "failed":
                  return {
                    ...t,
                    fetchFailureCount: e.failureCount,
                    fetchFailureReason: e.error,
                  };
                case "pause":
                  return { ...t, fetchStatus: "paused" };
                case "continue":
                  return { ...t, fetchStatus: "fetching" };
                case "fetch":
                  return {
                    ...t,
                    fetchFailureCount: 0,
                    fetchFailureReason: null,
                    fetchMeta: null != (n = e.meta) ? n : null,
                    fetchStatus: j(this.options.networkMode)
                      ? "fetching"
                      : "paused",
                    ...(!t.dataUpdatedAt && { error: null, status: "loading" }),
                  };
                case "success":
                  return {
                    ...t,
                    data: e.data,
                    dataUpdateCount: t.dataUpdateCount + 1,
                    dataUpdatedAt:
                      null != (r = e.dataUpdatedAt) ? r : Date.now(),
                    error: null,
                    isInvalidated: !1,
                    status: "success",
                    ...(!e.manual && {
                      fetchStatus: "idle",
                      fetchFailureCount: 0,
                      fetchFailureReason: null,
                    }),
                  };
                case "error":
                  let i = e.error;
                  if (M(i) && i.revert && this.revertState)
                    return { ...this.revertState, fetchStatus: "idle" };
                  return {
                    ...t,
                    error: i,
                    errorUpdateCount: t.errorUpdateCount + 1,
                    errorUpdatedAt: Date.now(),
                    fetchFailureCount: t.fetchFailureCount + 1,
                    fetchFailureReason: i,
                    fetchStatus: "idle",
                    status: "error",
                  };
                case "invalidate":
                  return { ...t, isInvalidated: !0 };
                case "setState":
                  return { ...t, ...e.state };
              }
            })(this.state)),
              S.batch(() => {
                this.observers.forEach((t) => {
                  t.onQueryUpdate(e);
                }),
                  this.cache.notify({
                    query: this,
                    type: "updated",
                    action: e,
                  });
              });
          }
        }
        class F extends P {
          constructor(e) {
            super(),
              (this.config = e || {}),
              (this.queries = []),
              (this.queriesMap = {});
          }
          build(e, t, n) {
            var r;
            let i = t.queryKey,
              a = null != (r = t.queryHash) ? r : h(i, t),
              o = this.get(a);
            return (
              o ||
                ((o = new R({
                  cache: this,
                  logger: e.getLogger(),
                  queryKey: i,
                  queryHash: a,
                  options: e.defaultQueryOptions(t),
                  state: n,
                  defaultOptions: e.getQueryDefaults(i),
                })),
                this.add(o)),
              o
            );
          }
          add(e) {
            this.queriesMap[e.queryHash] ||
              ((this.queriesMap[e.queryHash] = e),
              this.queries.push(e),
              this.notify({ type: "added", query: e }));
          }
          remove(e) {
            let t = this.queriesMap[e.queryHash];
            t &&
              (e.destroy(),
              (this.queries = this.queries.filter((t) => t !== e)),
              t === e && delete this.queriesMap[e.queryHash],
              this.notify({ type: "removed", query: e }));
          }
          clear() {
            S.batch(() => {
              this.queries.forEach((e) => {
                this.remove(e);
              });
            });
          }
          get(e) {
            return this.queriesMap[e];
          }
          getAll() {
            return this.queries;
          }
          find(e, t) {
            let [n] = d(e, t);
            return (
              void 0 === n.exact && (n.exact = !0),
              this.queries.find((e) => f(n, e))
            );
          }
          findAll(e, t) {
            let [n] = d(e, t);
            return Object.keys(n).length > 0
              ? this.queries.filter((e) => f(n, e))
              : this.queries;
          }
          notify(e) {
            S.batch(() => {
              this.listeners.forEach(({ listener: t }) => {
                t(e);
              });
            });
          }
          onFocus() {
            S.batch(() => {
              this.queries.forEach((e) => {
                e.onFocus();
              });
            });
          }
          onOnline() {
            S.batch(() => {
              this.queries.forEach((e) => {
                e.onOnline();
              });
            });
          }
        }
        class L extends D {
          constructor(e) {
            super(),
              (this.defaultOptions = e.defaultOptions),
              (this.mutationId = e.mutationId),
              (this.mutationCache = e.mutationCache),
              (this.logger = e.logger || T),
              (this.observers = []),
              (this.state = e.state || U()),
              this.setOptions(e.options),
              this.scheduleGc();
          }
          setOptions(e) {
            (this.options = { ...this.defaultOptions, ...e }),
              this.updateCacheTime(this.options.cacheTime);
          }
          get meta() {
            return this.options.meta;
          }
          setState(e) {
            this.dispatch({ type: "setState", state: e });
          }
          addObserver(e) {
            this.observers.includes(e) ||
              (this.observers.push(e),
              this.clearGcTimeout(),
              this.mutationCache.notify({
                type: "observerAdded",
                mutation: this,
                observer: e,
              }));
          }
          removeObserver(e) {
            (this.observers = this.observers.filter((t) => t !== e)),
              this.scheduleGc(),
              this.mutationCache.notify({
                type: "observerRemoved",
                mutation: this,
                observer: e,
              });
          }
          optionalRemove() {
            this.observers.length ||
              ("loading" === this.state.status
                ? this.scheduleGc()
                : this.mutationCache.remove(this));
          }
          continue() {
            var e, t;
            return null !=
              (e = null == (t = this.retryer) ? void 0 : t.continue())
              ? e
              : this.execute();
          }
          async execute() {
            var e, t, n, r, i, a, o, s, u, l, c, d, f, p, h, m, y, g, b, v;
            let w = "loading" === this.state.status;
            try {
              if (!w) {
                this.dispatch({
                  type: "loading",
                  variables: this.options.variables,
                }),
                  await (null == (u = (l = this.mutationCache.config).onMutate)
                    ? void 0
                    : u.call(l, this.state.variables, this));
                let e = await (null == (c = (d = this.options).onMutate)
                  ? void 0
                  : c.call(d, this.state.variables));
                e !== this.state.context &&
                  this.dispatch({
                    type: "loading",
                    context: e,
                    variables: this.state.variables,
                  });
              }
              let f = await (() => {
                var e;
                return (
                  (this.retryer = N({
                    fn: () =>
                      this.options.mutationFn
                        ? this.options.mutationFn(this.state.variables)
                        : Promise.reject("No mutationFn found"),
                    onFail: (e, t) => {
                      this.dispatch({
                        type: "failed",
                        failureCount: e,
                        error: t,
                      });
                    },
                    onPause: () => {
                      this.dispatch({ type: "pause" });
                    },
                    onContinue: () => {
                      this.dispatch({ type: "continue" });
                    },
                    retry: null != (e = this.options.retry) ? e : 0,
                    retryDelay: this.options.retryDelay,
                    networkMode: this.options.networkMode,
                  })),
                  this.retryer.promise
                );
              })();
              return (
                await (null == (e = (t = this.mutationCache.config).onSuccess)
                  ? void 0
                  : e.call(
                      t,
                      f,
                      this.state.variables,
                      this.state.context,
                      this
                    )),
                await (null == (n = (r = this.options).onSuccess)
                  ? void 0
                  : n.call(r, f, this.state.variables, this.state.context)),
                await (null == (i = (a = this.mutationCache.config).onSettled)
                  ? void 0
                  : i.call(
                      a,
                      f,
                      null,
                      this.state.variables,
                      this.state.context,
                      this
                    )),
                await (null == (o = (s = this.options).onSettled)
                  ? void 0
                  : o.call(
                      s,
                      f,
                      null,
                      this.state.variables,
                      this.state.context
                    )),
                this.dispatch({ type: "success", data: f }),
                f
              );
            } catch (e) {
              try {
                throw (
                  (await (null == (f = (p = this.mutationCache.config).onError)
                    ? void 0
                    : f.call(
                        p,
                        e,
                        this.state.variables,
                        this.state.context,
                        this
                      )),
                  await (null == (h = (m = this.options).onError)
                    ? void 0
                    : h.call(m, e, this.state.variables, this.state.context)),
                  await (null == (y = (g = this.mutationCache.config).onSettled)
                    ? void 0
                    : y.call(
                        g,
                        void 0,
                        e,
                        this.state.variables,
                        this.state.context,
                        this
                      )),
                  await (null == (b = (v = this.options).onSettled)
                    ? void 0
                    : b.call(
                        v,
                        void 0,
                        e,
                        this.state.variables,
                        this.state.context
                      )),
                  e)
                );
              } finally {
                this.dispatch({ type: "error", error: e });
              }
            }
          }
          dispatch(e) {
            (this.state = ((t) => {
              switch (e.type) {
                case "failed":
                  return {
                    ...t,
                    failureCount: e.failureCount,
                    failureReason: e.error,
                  };
                case "pause":
                  return { ...t, isPaused: !0 };
                case "continue":
                  return { ...t, isPaused: !1 };
                case "loading":
                  return {
                    ...t,
                    context: e.context,
                    data: void 0,
                    failureCount: 0,
                    failureReason: null,
                    error: null,
                    isPaused: !j(this.options.networkMode),
                    status: "loading",
                    variables: e.variables,
                  };
                case "success":
                  return {
                    ...t,
                    data: e.data,
                    failureCount: 0,
                    failureReason: null,
                    error: null,
                    status: "success",
                    isPaused: !1,
                  };
                case "error":
                  return {
                    ...t,
                    data: void 0,
                    error: e.error,
                    failureCount: t.failureCount + 1,
                    failureReason: e.error,
                    isPaused: !1,
                    status: "error",
                  };
                case "setState":
                  return { ...t, ...e.state };
              }
            })(this.state)),
              S.batch(() => {
                this.observers.forEach((t) => {
                  t.onMutationUpdate(e);
                }),
                  this.mutationCache.notify({
                    mutation: this,
                    type: "updated",
                    action: e,
                  });
              });
          }
        }
        function U() {
          return {
            context: void 0,
            data: void 0,
            error: null,
            failureCount: 0,
            failureReason: null,
            isPaused: !1,
            status: "idle",
            variables: void 0,
          };
        }
        class $ extends P {
          constructor(e) {
            super(),
              (this.config = e || {}),
              (this.mutations = []),
              (this.mutationId = 0);
          }
          build(e, t, n) {
            let r = new L({
              mutationCache: this,
              logger: e.getLogger(),
              mutationId: ++this.mutationId,
              options: e.defaultMutationOptions(t),
              state: n,
              defaultOptions: t.mutationKey
                ? e.getMutationDefaults(t.mutationKey)
                : void 0,
            });
            return this.add(r), r;
          }
          add(e) {
            this.mutations.push(e), this.notify({ type: "added", mutation: e });
          }
          remove(e) {
            (this.mutations = this.mutations.filter((t) => t !== e)),
              this.notify({ type: "removed", mutation: e });
          }
          clear() {
            S.batch(() => {
              this.mutations.forEach((e) => {
                this.remove(e);
              });
            });
          }
          getAll() {
            return this.mutations;
          }
          find(e) {
            return (
              void 0 === e.exact && (e.exact = !0),
              this.mutations.find((t) => p(e, t))
            );
          }
          findAll(e) {
            return this.mutations.filter((t) => p(e, t));
          }
          notify(e) {
            S.batch(() => {
              this.listeners.forEach(({ listener: t }) => {
                t(e);
              });
            });
          }
          resumePausedMutations() {
            var e;
            return (
              (this.resuming = (
                null != (e = this.resuming) ? e : Promise.resolve()
              )
                .then(() => {
                  let e = this.mutations.filter((e) => e.state.isPaused);
                  return S.batch(() =>
                    e.reduce(
                      (e, t) => e.then(() => t.continue().catch(o)),
                      Promise.resolve()
                    )
                  );
                })
                .then(() => {
                  this.resuming = void 0;
                })),
              this.resuming
            );
          }
        }
        function q(e, t) {
          return null == e.getNextPageParam
            ? void 0
            : e.getNextPageParam(t[t.length - 1], t);
        }
        class H {
          constructor(e = {}) {
            (this.queryCache = e.queryCache || new F()),
              (this.mutationCache = e.mutationCache || new $()),
              (this.logger = e.logger || T),
              (this.defaultOptions = e.defaultOptions || {}),
              (this.queryDefaults = []),
              (this.mutationDefaults = []),
              (this.mountCount = 0);
          }
          mount() {
            this.mountCount++,
              1 === this.mountCount &&
                ((this.unsubscribeFocus = O.subscribe(() => {
                  O.isFocused() &&
                    (this.resumePausedMutations(), this.queryCache.onFocus());
                })),
                (this.unsubscribeOnline = A.subscribe(() => {
                  A.isOnline() &&
                    (this.resumePausedMutations(), this.queryCache.onOnline());
                })));
          }
          unmount() {
            var e, t;
            this.mountCount--,
              0 === this.mountCount &&
                (null == (e = this.unsubscribeFocus) || e.call(this),
                (this.unsubscribeFocus = void 0),
                null == (t = this.unsubscribeOnline) || t.call(this),
                (this.unsubscribeOnline = void 0));
          }
          isFetching(e, t) {
            let [n] = d(e, t);
            return (
              (n.fetchStatus = "fetching"), this.queryCache.findAll(n).length
            );
          }
          isMutating(e) {
            return this.mutationCache.findAll({ ...e, fetching: !0 }).length;
          }
          getQueryData(e, t) {
            var n;
            return null == (n = this.queryCache.find(e, t))
              ? void 0
              : n.state.data;
          }
          ensureQueryData(e, t, n) {
            let r = l(e, t, n),
              i = this.getQueryData(r.queryKey);
            return i ? Promise.resolve(i) : this.fetchQuery(r);
          }
          getQueriesData(e) {
            return this.getQueryCache()
              .findAll(e)
              .map(({ queryKey: e, state: t }) => {
                let n = t.data;
                return [e, n];
              });
          }
          setQueryData(e, t, n) {
            let r = this.queryCache.find(e),
              i = null == r ? void 0 : r.state.data,
              a = "function" == typeof t ? t(i) : t;
            if (void 0 === a) return;
            let o = l(e),
              s = this.defaultQueryOptions(o);
            return this.queryCache
              .build(this, s)
              .setData(a, { ...n, manual: !0 });
          }
          setQueriesData(e, t, n) {
            return S.batch(() =>
              this.getQueryCache()
                .findAll(e)
                .map(({ queryKey: e }) => [e, this.setQueryData(e, t, n)])
            );
          }
          getQueryState(e, t) {
            var n;
            return null == (n = this.queryCache.find(e, t)) ? void 0 : n.state;
          }
          removeQueries(e, t) {
            let [n] = d(e, t),
              r = this.queryCache;
            S.batch(() => {
              r.findAll(n).forEach((e) => {
                r.remove(e);
              });
            });
          }
          resetQueries(e, t, n) {
            let [r, i] = d(e, t, n),
              a = this.queryCache,
              o = { type: "active", ...r };
            return S.batch(
              () => (
                a.findAll(r).forEach((e) => {
                  e.reset();
                }),
                this.refetchQueries(o, i)
              )
            );
          }
          cancelQueries(e, t, n) {
            let [r, i = {}] = d(e, t, n);
            void 0 === i.revert && (i.revert = !0);
            let a = S.batch(() =>
              this.queryCache.findAll(r).map((e) => e.cancel(i))
            );
            return Promise.all(a).then(o).catch(o);
          }
          invalidateQueries(e, t, n) {
            let [r, i] = d(e, t, n);
            return S.batch(() => {
              var e, t;
              if (
                (this.queryCache.findAll(r).forEach((e) => {
                  e.invalidate();
                }),
                "none" === r.refetchType)
              )
                return Promise.resolve();
              let n = {
                ...r,
                type:
                  null != (e = null != (t = r.refetchType) ? t : r.type)
                    ? e
                    : "active",
              };
              return this.refetchQueries(n, i);
            });
          }
          refetchQueries(e, t, n) {
            let [r, i] = d(e, t, n),
              a = S.batch(() =>
                this.queryCache
                  .findAll(r)
                  .filter((e) => !e.isDisabled())
                  .map((e) => {
                    var t;
                    return e.fetch(void 0, {
                      ...i,
                      cancelRefetch:
                        null == (t = null == i ? void 0 : i.cancelRefetch) || t,
                      meta: { refetchPage: r.refetchPage },
                    });
                  })
              ),
              s = Promise.all(a).then(o);
            return (null != i && i.throwOnError) || (s = s.catch(o)), s;
          }
          fetchQuery(e, t, n) {
            let r = l(e, t, n),
              i = this.defaultQueryOptions(r);
            void 0 === i.retry && (i.retry = !1);
            let a = this.queryCache.build(this, i);
            return a.isStaleByTime(i.staleTime)
              ? a.fetch(i)
              : Promise.resolve(a.state.data);
          }
          prefetchQuery(e, t, n) {
            return this.fetchQuery(e, t, n).then(o).catch(o);
          }
          fetchInfiniteQuery(e, t, n) {
            let r = l(e, t, n);
            return (
              (r.behavior = {
                onFetch: (e) => {
                  e.fetchFn = () => {
                    var t, n, r, i, a, o, s;
                    let u;
                    let l =
                        null == (t = e.fetchOptions)
                          ? void 0
                          : null == (n = t.meta)
                          ? void 0
                          : n.refetchPage,
                      c =
                        null == (r = e.fetchOptions)
                          ? void 0
                          : null == (i = r.meta)
                          ? void 0
                          : i.fetchMore,
                      d = null == c ? void 0 : c.pageParam,
                      f = (null == c ? void 0 : c.direction) === "forward",
                      p = (null == c ? void 0 : c.direction) === "backward",
                      h = (null == (a = e.state.data) ? void 0 : a.pages) || [],
                      m =
                        (null == (o = e.state.data) ? void 0 : o.pageParams) ||
                        [],
                      y = m,
                      g = !1,
                      b = (t) => {
                        Object.defineProperty(t, "signal", {
                          enumerable: !0,
                          get: () => {
                            var t, n;
                            return (
                              null != (t = e.signal) && t.aborted
                                ? (g = !0)
                                : null == (n = e.signal) ||
                                  n.addEventListener("abort", () => {
                                    g = !0;
                                  }),
                              e.signal
                            );
                          },
                        });
                      },
                      v =
                        e.options.queryFn ||
                        (() =>
                          Promise.reject(
                            "Missing queryFn for queryKey '" +
                              e.options.queryHash +
                              "'"
                          )),
                      w = (e, t, n, r) => (
                        (y = r ? [t, ...y] : [...y, t]),
                        r ? [n, ...e] : [...e, n]
                      ),
                      E = (t, n, r, i) => {
                        if (g) return Promise.reject("Cancelled");
                        if (void 0 === r && !n && t.length)
                          return Promise.resolve(t);
                        let a = {
                          queryKey: e.queryKey,
                          pageParam: r,
                          meta: e.options.meta,
                        };
                        b(a);
                        let o = v(a),
                          s = Promise.resolve(o).then((e) => w(t, r, e, i));
                        return s;
                      };
                    if (h.length) {
                      if (f) {
                        let t = void 0 !== d,
                          n = t ? d : q(e.options, h);
                        u = E(h, t, n);
                      } else if (p) {
                        let t = void 0 !== d,
                          n = t
                            ? d
                            : null == (s = e.options).getPreviousPageParam
                            ? void 0
                            : s.getPreviousPageParam(h[0], h);
                        u = E(h, t, n, !0);
                      } else {
                        y = [];
                        let t = void 0 === e.options.getNextPageParam,
                          n = !l || !h[0] || l(h[0], 0, h);
                        u = n
                          ? E([], t, m[0])
                          : Promise.resolve(w([], m[0], h[0]));
                        for (let n = 1; n < h.length; n++)
                          u = u.then((r) => {
                            let i = !l || !h[n] || l(h[n], n, h);
                            if (i) {
                              let i = t ? m[n] : q(e.options, r);
                              return E(r, t, i);
                            }
                            return Promise.resolve(w(r, m[n], h[n]));
                          });
                      }
                    } else u = E([]);
                    let x = u.then((e) => ({ pages: e, pageParams: y }));
                    return x;
                  };
                },
              }),
              this.fetchQuery(r)
            );
          }
          prefetchInfiniteQuery(e, t, n) {
            return this.fetchInfiniteQuery(e, t, n).then(o).catch(o);
          }
          resumePausedMutations() {
            return this.mutationCache.resumePausedMutations();
          }
          getQueryCache() {
            return this.queryCache;
          }
          getMutationCache() {
            return this.mutationCache;
          }
          getLogger() {
            return this.logger;
          }
          getDefaultOptions() {
            return this.defaultOptions;
          }
          setDefaultOptions(e) {
            this.defaultOptions = e;
          }
          setQueryDefaults(e, t) {
            let n = this.queryDefaults.find((t) => m(e) === m(t.queryKey));
            n
              ? (n.defaultOptions = t)
              : this.queryDefaults.push({ queryKey: e, defaultOptions: t });
          }
          getQueryDefaults(e) {
            if (!e) return;
            let t = this.queryDefaults.find((t) => y(e, t.queryKey));
            return null == t ? void 0 : t.defaultOptions;
          }
          setMutationDefaults(e, t) {
            let n = this.mutationDefaults.find(
              (t) => m(e) === m(t.mutationKey)
            );
            n
              ? (n.defaultOptions = t)
              : this.mutationDefaults.push({
                  mutationKey: e,
                  defaultOptions: t,
                });
          }
          getMutationDefaults(e) {
            if (!e) return;
            let t = this.mutationDefaults.find((t) => y(e, t.mutationKey));
            return null == t ? void 0 : t.defaultOptions;
          }
          defaultQueryOptions(e) {
            if (null != e && e._defaulted) return e;
            let t = {
              ...this.defaultOptions.queries,
              ...this.getQueryDefaults(null == e ? void 0 : e.queryKey),
              ...e,
              _defaulted: !0,
            };
            return (
              !t.queryHash && t.queryKey && (t.queryHash = h(t.queryKey, t)),
              void 0 === t.refetchOnReconnect &&
                (t.refetchOnReconnect = "always" !== t.networkMode),
              void 0 === t.useErrorBoundary &&
                (t.useErrorBoundary = !!t.suspense),
              t
            );
          }
          defaultMutationOptions(e) {
            return null != e && e._defaulted
              ? e
              : {
                  ...this.defaultOptions.mutations,
                  ...this.getMutationDefaults(
                    null == e ? void 0 : e.mutationKey
                  ),
                  ...e,
                  _defaulted: !0,
                };
          }
          clear() {
            this.queryCache.clear(), this.mutationCache.clear();
          }
        }
        function z(e) {
          return e.state.isPaused;
        }
        function G(e) {
          return "success" === e.state.status;
        }
        let W = ["added", "removed", "updated"];
        function V(e) {
          return W.includes(e);
        }
        async function K({
          queryClient: e,
          persister: t,
          maxAge: n = 864e5,
          buster: r = "",
          hydrateOptions: i,
        }) {
          try {
            let a = await t.restoreClient();
            if (a) {
              if (a.timestamp) {
                let o = Date.now() - a.timestamp > n,
                  s = a.buster !== r;
                o || s
                  ? t.removeClient()
                  : (function (e, t, n) {
                      if ("object" != typeof t || null === t) return;
                      let r = e.getMutationCache(),
                        i = e.getQueryCache(),
                        a = t.mutations || [],
                        o = t.queries || [];
                      a.forEach((t) => {
                        var i;
                        r.build(
                          e,
                          {
                            ...(null == n
                              ? void 0
                              : null == (i = n.defaultOptions)
                              ? void 0
                              : i.mutations),
                            mutationKey: t.mutationKey,
                          },
                          t.state
                        );
                      }),
                        o.forEach((t) => {
                          var r;
                          let a = i.get(t.queryHash),
                            o = { ...t.state, fetchStatus: "idle" };
                          if (a) {
                            a.state.dataUpdatedAt < o.dataUpdatedAt &&
                              a.setState(o);
                            return;
                          }
                          i.build(
                            e,
                            {
                              ...(null == n
                                ? void 0
                                : null == (r = n.defaultOptions)
                                ? void 0
                                : r.queries),
                              queryKey: t.queryKey,
                              queryHash: t.queryHash,
                            },
                            o
                          );
                        });
                    })(e, a.clientState, i);
              } else t.removeClient();
            }
          } catch (e) {
            t.removeClient();
          }
        }
        async function Z({
          queryClient: e,
          persister: t,
          buster: n = "",
          dehydrateOptions: r,
        }) {
          let i = {
            buster: n,
            timestamp: Date.now(),
            clientState: (function (e, t = {}) {
              let n = [],
                r = [];
              if (!1 !== t.dehydrateMutations) {
                let r = t.shouldDehydrateMutation || z;
                e.getMutationCache()
                  .getAll()
                  .forEach((e) => {
                    r(e) &&
                      n.push({
                        mutationKey: e.options.mutationKey,
                        state: e.state,
                      });
                  });
              }
              if (!1 !== t.dehydrateQueries) {
                let n = t.shouldDehydrateQuery || G;
                e.getQueryCache()
                  .getAll()
                  .forEach((e) => {
                    n(e) &&
                      r.push({
                        state: e.state,
                        queryKey: e.queryKey,
                        queryHash: e.queryHash,
                      });
                  });
              }
              return { mutations: n, queries: r };
            })(e, r),
          };
          await t.persistClient(i);
        }
        var J = n(89401),
          Y = n(67294);
        let X = Y.createContext(void 0),
          Q = Y.createContext(!1);
        function ee(e, t) {
          return (
            e ||
            (t && "undefined" != typeof window
              ? (window.ReactQueryClientContext ||
                  (window.ReactQueryClientContext = X),
                window.ReactQueryClientContext)
              : X)
          );
        }
        let et = ({ context: e } = {}) => {
            let t = Y.useContext(ee(e, Y.useContext(Q)));
            if (!t)
              throw Error(
                "No QueryClient set, use QueryClientProvider to set one"
              );
            return t;
          },
          en = ({
            client: e,
            children: t,
            context: n,
            contextSharing: r = !1,
          }) => {
            Y.useEffect(
              () => (
                e.mount(),
                () => {
                  e.unmount();
                }
              ),
              [e]
            );
            let i = ee(n, r);
            return Y.createElement(
              Q.Provider,
              { value: !n && r },
              Y.createElement(i.Provider, { value: e }, t)
            );
          },
          er = Y.createContext(!1),
          ei = () => Y.useContext(er);
        er.Provider;
        let ea = Y.createContext(
            ((r = !1),
            {
              clearReset: () => {
                r = !1;
              },
              reset: () => {
                r = !0;
              },
              isReset: () => r,
            })
          ),
          eo = () => Y.useContext(ea);
        var es = n(61688);
        class eu extends P {
          constructor(e, t) {
            super(),
              (this.client = e),
              this.setOptions(t),
              this.bindMethods(),
              this.updateResult();
          }
          bindMethods() {
            (this.mutate = this.mutate.bind(this)),
              (this.reset = this.reset.bind(this));
          }
          setOptions(e) {
            var t;
            let n = this.options;
            (this.options = this.client.defaultMutationOptions(e)),
              g(n, this.options) ||
                this.client
                  .getMutationCache()
                  .notify({
                    type: "observerOptionsUpdated",
                    mutation: this.currentMutation,
                    observer: this,
                  }),
              null == (t = this.currentMutation) || t.setOptions(this.options);
          }
          onUnsubscribe() {
            if (!this.hasListeners()) {
              var e;
              null == (e = this.currentMutation) || e.removeObserver(this);
            }
          }
          onMutationUpdate(e) {
            this.updateResult();
            let t = { listeners: !0 };
            "success" === e.type
              ? (t.onSuccess = !0)
              : "error" === e.type && (t.onError = !0),
              this.notify(t);
          }
          getCurrentResult() {
            return this.currentResult;
          }
          reset() {
            (this.currentMutation = void 0),
              this.updateResult(),
              this.notify({ listeners: !0 });
          }
          mutate(e, t) {
            return (
              (this.mutateOptions = t),
              this.currentMutation && this.currentMutation.removeObserver(this),
              (this.currentMutation = this.client
                .getMutationCache()
                .build(this.client, {
                  ...this.options,
                  variables: void 0 !== e ? e : this.options.variables,
                })),
              this.currentMutation.addObserver(this),
              this.currentMutation.execute()
            );
          }
          updateResult() {
            let e = this.currentMutation ? this.currentMutation.state : U(),
              t = {
                ...e,
                isLoading: "loading" === e.status,
                isSuccess: "success" === e.status,
                isError: "error" === e.status,
                isIdle: "idle" === e.status,
                mutate: this.mutate,
                reset: this.reset,
              };
            this.currentResult = t;
          }
          notify(e) {
            S.batch(() => {
              if (this.mutateOptions && this.hasListeners()) {
                var t, n, r, i, a, o, s, u;
                e.onSuccess
                  ? (null == (t = (n = this.mutateOptions).onSuccess) ||
                      t.call(
                        n,
                        this.currentResult.data,
                        this.currentResult.variables,
                        this.currentResult.context
                      ),
                    null == (r = (i = this.mutateOptions).onSettled) ||
                      r.call(
                        i,
                        this.currentResult.data,
                        null,
                        this.currentResult.variables,
                        this.currentResult.context
                      ))
                  : e.onError &&
                    (null == (a = (o = this.mutateOptions).onError) ||
                      a.call(
                        o,
                        this.currentResult.error,
                        this.currentResult.variables,
                        this.currentResult.context
                      ),
                    null == (s = (u = this.mutateOptions).onSettled) ||
                      s.call(
                        u,
                        void 0,
                        this.currentResult.error,
                        this.currentResult.variables,
                        this.currentResult.context
                      ));
              }
              e.listeners &&
                this.listeners.forEach(({ listener: e }) => {
                  e(this.currentResult);
                });
            });
          }
        }
        let el = es.useSyncExternalStore;
        function ec() {}
        class ed extends P {
          constructor(e, t) {
            super(),
              (this.client = e),
              (this.options = t),
              (this.trackedProps = new Set()),
              (this.selectError = null),
              this.bindMethods(),
              this.setOptions(t);
          }
          bindMethods() {
            (this.remove = this.remove.bind(this)),
              (this.refetch = this.refetch.bind(this));
          }
          onSubscribe() {
            1 === this.listeners.size &&
              (this.currentQuery.addObserver(this),
              ef(this.currentQuery, this.options) && this.executeFetch(),
              this.updateTimers());
          }
          onUnsubscribe() {
            this.hasListeners() || this.destroy();
          }
          shouldFetchOnReconnect() {
            return ep(
              this.currentQuery,
              this.options,
              this.options.refetchOnReconnect
            );
          }
          shouldFetchOnWindowFocus() {
            return ep(
              this.currentQuery,
              this.options,
              this.options.refetchOnWindowFocus
            );
          }
          destroy() {
            (this.listeners = new Set()),
              this.clearStaleTimeout(),
              this.clearRefetchInterval(),
              this.currentQuery.removeObserver(this);
          }
          setOptions(e, t) {
            let n = this.options,
              r = this.currentQuery;
            if (
              ((this.options = this.client.defaultQueryOptions(e)),
              g(n, this.options) ||
                this.client
                  .getQueryCache()
                  .notify({
                    type: "observerOptionsUpdated",
                    query: this.currentQuery,
                    observer: this,
                  }),
              void 0 !== this.options.enabled &&
                "boolean" != typeof this.options.enabled)
            )
              throw Error("Expected enabled to be a boolean");
            this.options.queryKey || (this.options.queryKey = n.queryKey),
              this.updateQuery();
            let i = this.hasListeners();
            i &&
              eh(this.currentQuery, r, this.options, n) &&
              this.executeFetch(),
              this.updateResult(t),
              i &&
                (this.currentQuery !== r ||
                  this.options.enabled !== n.enabled ||
                  this.options.staleTime !== n.staleTime) &&
                this.updateStaleTimeout();
            let a = this.computeRefetchInterval();
            i &&
              (this.currentQuery !== r ||
                this.options.enabled !== n.enabled ||
                a !== this.currentRefetchInterval) &&
              this.updateRefetchInterval(a);
          }
          getOptimisticResult(e) {
            let t = this.client.getQueryCache().build(this.client, e),
              n = this.createResult(t, e);
            return (
              e.keepPreviousData ||
                (void 0 !== e.placeholderData
                  ? !n.isPlaceholderData
                  : g(this.getCurrentResult(), n)) ||
                ((this.currentResult = n),
                (this.currentResultOptions = this.options),
                (this.currentResultState = this.currentQuery.state)),
              n
            );
          }
          getCurrentResult() {
            return this.currentResult;
          }
          trackResult(e) {
            let t = {};
            return (
              Object.keys(e).forEach((n) => {
                Object.defineProperty(t, n, {
                  configurable: !1,
                  enumerable: !0,
                  get: () => (this.trackedProps.add(n), e[n]),
                });
              }),
              t
            );
          }
          getCurrentQuery() {
            return this.currentQuery;
          }
          remove() {
            this.client.getQueryCache().remove(this.currentQuery);
          }
          refetch({ refetchPage: e, ...t } = {}) {
            return this.fetch({ ...t, meta: { refetchPage: e } });
          }
          fetchOptimistic(e) {
            let t = this.client.defaultQueryOptions(e),
              n = this.client.getQueryCache().build(this.client, t);
            return (
              (n.isFetchingOptimistic = !0),
              n.fetch().then(() => this.createResult(n, t))
            );
          }
          fetch(e) {
            var t;
            return this.executeFetch({
              ...e,
              cancelRefetch: null == (t = e.cancelRefetch) || t,
            }).then(() => (this.updateResult(), this.currentResult));
          }
          executeFetch(e) {
            this.updateQuery();
            let t = this.currentQuery.fetch(this.options, e);
            return (null != e && e.throwOnError) || (t = t.catch(o)), t;
          }
          updateStaleTimeout() {
            if (
              (this.clearStaleTimeout(),
              a || this.currentResult.isStale || !s(this.options.staleTime))
            )
              return;
            let e = u(this.currentResult.dataUpdatedAt, this.options.staleTime);
            this.staleTimeoutId = setTimeout(() => {
              this.currentResult.isStale || this.updateResult();
            }, e + 1);
          }
          computeRefetchInterval() {
            var e;
            return "function" == typeof this.options.refetchInterval
              ? this.options.refetchInterval(
                  this.currentResult.data,
                  this.currentQuery
                )
              : null != (e = this.options.refetchInterval) && e;
          }
          updateRefetchInterval(e) {
            this.clearRefetchInterval(),
              (this.currentRefetchInterval = e),
              !a &&
                !1 !== this.options.enabled &&
                s(this.currentRefetchInterval) &&
                0 !== this.currentRefetchInterval &&
                (this.refetchIntervalId = setInterval(() => {
                  (this.options.refetchIntervalInBackground || O.isFocused()) &&
                    this.executeFetch();
                }, this.currentRefetchInterval));
          }
          updateTimers() {
            this.updateStaleTimeout(),
              this.updateRefetchInterval(this.computeRefetchInterval());
          }
          clearStaleTimeout() {
            this.staleTimeoutId &&
              (clearTimeout(this.staleTimeoutId),
              (this.staleTimeoutId = void 0));
          }
          clearRefetchInterval() {
            this.refetchIntervalId &&
              (clearInterval(this.refetchIntervalId),
              (this.refetchIntervalId = void 0));
          }
          createResult(e, t) {
            let n;
            let r = this.currentQuery,
              i = this.options,
              a = this.currentResult,
              o = this.currentResultState,
              s = this.currentResultOptions,
              u = e !== r,
              l = u ? e.state : this.currentQueryInitialState,
              c = u ? this.currentResult : this.previousQueryResult,
              { state: d } = e,
              {
                dataUpdatedAt: f,
                error: p,
                errorUpdatedAt: h,
                fetchStatus: m,
                status: y,
              } = d,
              g = !1,
              b = !1;
            if (t._optimisticResults) {
              let n = this.hasListeners(),
                a = !n && ef(e, t),
                o = n && eh(e, r, t, i);
              (a || o) &&
                ((m = j(e.options.networkMode) ? "fetching" : "paused"),
                f || (y = "loading")),
                "isRestoring" === t._optimisticResults && (m = "idle");
            }
            if (
              t.keepPreviousData &&
              !d.dataUpdatedAt &&
              null != c &&
              c.isSuccess &&
              "error" !== y
            )
              (n = c.data), (f = c.dataUpdatedAt), (y = c.status), (g = !0);
            else if (t.select && void 0 !== d.data) {
              if (
                a &&
                d.data === (null == o ? void 0 : o.data) &&
                t.select === this.selectFn
              )
                n = this.selectResult;
              else
                try {
                  (this.selectFn = t.select),
                    (n = t.select(d.data)),
                    (n = _(null == a ? void 0 : a.data, n, t)),
                    (this.selectResult = n),
                    (this.selectError = null);
                } catch (e) {
                  this.selectError = e;
                }
            } else n = d.data;
            if (
              void 0 !== t.placeholderData &&
              void 0 === n &&
              "loading" === y
            ) {
              let e;
              if (
                null != a &&
                a.isPlaceholderData &&
                t.placeholderData === (null == s ? void 0 : s.placeholderData)
              )
                e = a.data;
              else if (
                ((e =
                  "function" == typeof t.placeholderData
                    ? t.placeholderData()
                    : t.placeholderData),
                t.select && void 0 !== e)
              )
                try {
                  (e = t.select(e)), (this.selectError = null);
                } catch (e) {
                  this.selectError = e;
                }
              void 0 !== e &&
                ((y = "success"),
                (n = _(null == a ? void 0 : a.data, e, t)),
                (b = !0));
            }
            this.selectError &&
              ((p = this.selectError),
              (n = this.selectResult),
              (h = Date.now()),
              (y = "error"));
            let v = "fetching" === m,
              w = "loading" === y,
              E = "error" === y,
              x = {
                status: y,
                fetchStatus: m,
                isLoading: w,
                isSuccess: "success" === y,
                isError: E,
                isInitialLoading: w && v,
                data: n,
                dataUpdatedAt: f,
                error: p,
                errorUpdatedAt: h,
                failureCount: d.fetchFailureCount,
                failureReason: d.fetchFailureReason,
                errorUpdateCount: d.errorUpdateCount,
                isFetched: d.dataUpdateCount > 0 || d.errorUpdateCount > 0,
                isFetchedAfterMount:
                  d.dataUpdateCount > l.dataUpdateCount ||
                  d.errorUpdateCount > l.errorUpdateCount,
                isFetching: v,
                isRefetching: v && !w,
                isLoadingError: E && 0 === d.dataUpdatedAt,
                isPaused: "paused" === m,
                isPlaceholderData: b,
                isPreviousData: g,
                isRefetchError: E && 0 !== d.dataUpdatedAt,
                isStale: em(e, t),
                refetch: this.refetch,
                remove: this.remove,
              };
            return x;
          }
          updateResult(e) {
            let t = this.currentResult,
              n = this.createResult(this.currentQuery, this.options);
            if (
              ((this.currentResultState = this.currentQuery.state),
              (this.currentResultOptions = this.options),
              g(n, t))
            )
              return;
            this.currentResult = n;
            let r = { cache: !0 };
            (null == e ? void 0 : e.listeners) !== !1 &&
              (() => {
                if (!t) return !0;
                let { notifyOnChangeProps: e } = this.options,
                  n = "function" == typeof e ? e() : e;
                if ("all" === n || (!n && !this.trackedProps.size)) return !0;
                let r = new Set(null != n ? n : this.trackedProps);
                return (
                  this.options.useErrorBoundary && r.add("error"),
                  Object.keys(this.currentResult).some((e) => {
                    let n = this.currentResult[e] !== t[e];
                    return n && r.has(e);
                  })
                );
              })() &&
              (r.listeners = !0),
              this.notify({ ...r, ...e });
          }
          updateQuery() {
            let e = this.client
              .getQueryCache()
              .build(this.client, this.options);
            if (e === this.currentQuery) return;
            let t = this.currentQuery;
            (this.currentQuery = e),
              (this.currentQueryInitialState = e.state),
              (this.previousQueryResult = this.currentResult),
              this.hasListeners() &&
                (null == t || t.removeObserver(this), e.addObserver(this));
          }
          onQueryUpdate(e) {
            let t = {};
            "success" === e.type
              ? (t.onSuccess = !e.manual)
              : "error" !== e.type || M(e.error) || (t.onError = !0),
              this.updateResult(t),
              this.hasListeners() && this.updateTimers();
          }
          notify(e) {
            S.batch(() => {
              var t, n, r, i, a, o, s, u;
              e.onSuccess
                ? (null == (t = (n = this.options).onSuccess) ||
                    t.call(n, this.currentResult.data),
                  null == (r = (i = this.options).onSettled) ||
                    r.call(i, this.currentResult.data, null))
                : e.onError &&
                  (null == (a = (o = this.options).onError) ||
                    a.call(o, this.currentResult.error),
                  null == (s = (u = this.options).onSettled) ||
                    s.call(u, void 0, this.currentResult.error)),
                e.listeners &&
                  this.listeners.forEach(({ listener: e }) => {
                    e(this.currentResult);
                  }),
                e.cache &&
                  this.client
                    .getQueryCache()
                    .notify({
                      query: this.currentQuery,
                      type: "observerResultsUpdated",
                    });
            });
          }
        }
        function ef(e, t) {
          return (
            (!1 !== t.enabled &&
              !e.state.dataUpdatedAt &&
              !("error" === e.state.status && !1 === t.retryOnMount)) ||
            (e.state.dataUpdatedAt > 0 && ep(e, t, t.refetchOnMount))
          );
        }
        function ep(e, t, n) {
          if (!1 !== t.enabled) {
            let r = "function" == typeof n ? n(e) : n;
            return "always" === r || (!1 !== r && em(e, t));
          }
          return !1;
        }
        function eh(e, t, n, r) {
          return (
            !1 !== n.enabled &&
            (e !== t || !1 === r.enabled) &&
            (!n.suspense || "error" !== e.state.status) &&
            em(e, n)
          );
        }
        function em(e, t) {
          return e.isStaleByTime(t.staleTime);
        }
        var ey = n(52798);
        function eg({
          queryClient: e = new H({
            defaultOptions: {
              queries: {
                cacheTime: 864e5,
                networkMode: "offlineFirst",
                refetchOnWindowFocus: !1,
                retry: 0,
              },
              mutations: { networkMode: "offlineFirst" },
            },
          }),
          storage: t = (0, J.o6)({
            storage:
              "undefined" != typeof window && window.localStorage
                ? window.localStorage
                : J.wp,
          }),
          persister: n = "undefined" != typeof window
            ? (function ({
                storage: e,
                key: t = "REACT_QUERY_OFFLINE_CACHE",
                throttleTime: n = 1e3,
                serialize: r = JSON.stringify,
                deserialize: a = JSON.parse,
                retry: o,
              }) {
                if (e) {
                  let i = (n) => {
                    try {
                      e.setItem(t, r(n));
                      return;
                    } catch (e) {
                      return e;
                    }
                  };
                  return {
                    persistClient: (function (e, t = 100) {
                      let n,
                        r = null;
                      return function (...i) {
                        (n = i),
                          null === r &&
                            (r = setTimeout(() => {
                              e(...n), (r = null);
                            }, t));
                      };
                    })((e) => {
                      let t = e,
                        n = i(t),
                        r = 0;
                      for (; n && t; )
                        r++,
                          (t =
                            null == o
                              ? void 0
                              : o({
                                  persistedClient: t,
                                  error: n,
                                  errorCount: r,
                                })) && (n = i(t));
                    }, n),
                    restoreClient: () => {
                      let n = e.getItem(t);
                      if (n) return a(n);
                    },
                    removeClient: () => {
                      e.removeItem(t);
                    },
                  };
                }
                return {
                  persistClient: i,
                  restoreClient: () => void 0,
                  removeClient: i,
                };
              })({
                key: "cache",
                storage: t,
                serialize: (e) => e,
                deserialize: (e) => e,
              })
            : void 0,
          ...r
        }) {
          let a = (0, J._g)({ ...r, storage: t });
          return (
            n &&
              (function (e) {
                K(e).then(() => {
                  (function (e) {
                    let t = e.queryClient.getQueryCache().subscribe((t) => {
                        V(t.type) && Z(e);
                      }),
                      n = e.queryClient.getMutationCache().subscribe((t) => {
                        V(t.type) && Z(e);
                      });
                  })(e);
                });
              })({
                queryClient: e,
                persister: n,
                dehydrateOptions: {
                  shouldDehydrateQuery: (e) =>
                    0 !== e.cacheTime && !1 !== e.queryKey[0].persist,
                },
              }),
            Object.assign(a, { queryClient: e })
          );
        }
        var eb = Y.createContext(void 0),
          ev = Y.createContext(void 0);
        function ew({ children: e, config: t }) {
          return Y.createElement(eb.Provider, {
            children: Y.createElement(en, {
              children: e,
              client: t.queryClient,
              context: ev,
            }),
            value: t,
          });
        }
        function eE() {
          let e = Y.useContext(eb);
          if (!e)
            throw Error(
              "`useConfig` must be used within `WagmiConfig`.\n\nRead more: https://wagmi.sh/react/WagmiConfig"
            );
          return e;
        }
        var ex = es.useSyncExternalStore;
        function eC(e) {
          return "[object Object]" === Object.prototype.toString.call(e);
        }
        function e_(e) {
          return JSON.stringify(e, (e, t) =>
            !(function (e) {
              if (!eC(e)) return !1;
              let t = e.constructor;
              if (void 0 === t) return !0;
              let n = t.prototype;
              return !!(eC(n) && n.hasOwnProperty("isPrototypeOf"));
            })(t)
              ? "bigint" == typeof t
                ? t.toString()
                : t
              : Object.keys(t)
                  .sort()
                  .reduce((e, n) => ((e[n] = t[n]), e), {})
          );
        }
        function eT(e, t, n) {
          let r = c(e, t, n);
          return (function (e, t, n) {
            var r, i;
            let a = c(e, void 0, void 0),
              o = et({ context: a.context }),
              [s] = Y.useState(() => new eu(o, a));
            Y.useEffect(() => {
              s.setOptions(a);
            }, [s, a]);
            let u = el(
                Y.useCallback((e) => s.subscribe(S.batchCalls(e)), [s]),
                () => s.getCurrentResult(),
                () => s.getCurrentResult()
              ),
              l = Y.useCallback(
                (e, t) => {
                  s.mutate(e, t).catch(ec);
                },
                [s]
              );
            if (
              u.error &&
              ((r = s.options.useErrorBoundary),
              (i = [u.error]),
              "function" == typeof r ? r(...i) : !!r)
            )
              throw u.error;
            return { ...u, mutate: l, mutateAsync: u.mutate };
          })({ context: ev, ...r });
        }
        function eS(e, t, n) {
          let r = Array.isArray(e)
              ? "function" == typeof t
                ? { ...n, queryKey: e, queryFn: t }
                : { ...t, queryKey: e }
              : e,
            i = (function (e, t) {
              var n, r;
              let i = et({ context: e.context }),
                a = ei(),
                o = eo(),
                s = i.defaultQueryOptions({ ...e, queryKeyHashFn: e_ });
              (s._optimisticResults = a ? "isRestoring" : "optimistic"),
                s.onError && (s.onError = S.batchCalls(s.onError)),
                s.onSuccess && (s.onSuccess = S.batchCalls(s.onSuccess)),
                s.onSettled && (s.onSettled = S.batchCalls(s.onSettled)),
                s.suspense &&
                  "number" != typeof s.staleTime &&
                  (s.staleTime = 1e3),
                (s.suspense || s.useErrorBoundary) &&
                  !o.isReset() &&
                  (s.retryOnMount = !1);
              let [u] = Y.useState(() => new t(i, s)),
                l = u.getOptimisticResult(s);
              if (
                (ex(
                  Y.useCallback(
                    (e) => (a ? () => void 0 : u.subscribe(S.batchCalls(e))),
                    [u, a]
                  ),
                  () => u.getCurrentResult(),
                  () => u.getCurrentResult()
                ),
                Y.useEffect(() => {
                  o.clearReset();
                }, [o]),
                Y.useEffect(() => {
                  u.setOptions(s, { listeners: !1 });
                }, [s, u]),
                s.suspense && l.isLoading && l.isFetching && !a)
              )
                throw u
                  .fetchOptimistic(s)
                  .then(({ data: e }) => {
                    s.onSuccess?.(e), s.onSettled?.(e, null);
                  })
                  .catch((e) => {
                    o.clearReset(), s.onError?.(e), s.onSettled?.(void 0, e);
                  });
              if (
                l.isError &&
                !o.isReset() &&
                !l.isFetching &&
                ((n = s.useErrorBoundary),
                (r = [l.error, u.getCurrentQuery()]),
                "function" == typeof n ? n(...r) : !!n)
              )
                throw l.error;
              let c =
                  "loading" === l.status && "idle" === l.fetchStatus
                    ? "idle"
                    : l.status,
                d = "loading" === c && "fetching" === l.fetchStatus;
              return {
                ...l,
                defaultedOptions: s,
                isIdle: "idle" === c,
                isLoading: d,
                observer: u,
                status: c,
              };
            })({ context: ev, ...r }, ed),
            a = {
              data: i.data,
              error: i.error,
              fetchStatus: i.fetchStatus,
              isError: i.isError,
              isFetched: i.isFetched,
              isFetchedAfterMount: i.isFetchedAfterMount,
              isFetching: i.isFetching,
              isIdle: i.isIdle,
              isLoading: i.isLoading,
              isRefetching: i.isRefetching,
              isSuccess: i.isSuccess,
              refetch: i.refetch,
              status: i.status,
              internal: {
                dataUpdatedAt: i.dataUpdatedAt,
                errorUpdatedAt: i.errorUpdatedAt,
                failureCount: i.failureCount,
                isFetchedAfterMount: i.isFetchedAfterMount,
                isLoadingError: i.isLoadingError,
                isPaused: i.isPaused,
                isPlaceholderData: i.isPlaceholderData,
                isPreviousData: i.isPreviousData,
                isRefetchError: i.isRefetchError,
                isStale: i.isStale,
                remove: i.remove,
              },
            };
          return i.defaultedOptions.notifyOnChangeProps
            ? a
            : (function (e, t) {
                let n = {};
                return (
                  Object.keys(e).forEach((r) => {
                    Object.defineProperty(n, r, {
                      configurable: !1,
                      enumerable: !0,
                      get: () => (t.trackedProps.add(r), e[r]),
                    });
                  }),
                  n
                );
              })(a, i.observer);
        }
        var eP = () => et({ context: ev });
        function eO({ chainId: e } = {}) {
          return (0, ey.useSyncExternalStoreWithSelector)(
            (t) => (0, J.pC)({ chainId: e }, t),
            () => (0, J.uV)({ chainId: e }),
            () => (0, J.uV)({ chainId: e }),
            (e) => e,
            (e, t) => e.uid === t.uid
          );
        }
        function eI({ chainId: e }) {
          return [{ entity: "walletClient", chainId: e, persist: !1 }];
        }
        function eA({ queryKey: [{ chainId: e }] }) {
          return (0, J.xz)({ chainId: e });
        }
        function ek({
          chainId: e,
          suspense: t,
          onError: n,
          onSettled: r,
          onSuccess: i,
        } = {}) {
          let { connector: a } = eU(),
            o = ej({ chainId: e }),
            s = eS(eI({ chainId: o }), eA, {
              cacheTime: 0,
              enabled: !!a,
              staleTime: 1 / 0,
              suspense: t,
              onError: n,
              onSettled: r,
              onSuccess: i,
            }),
            u = eP();
          return (
            Y.useEffect(() => {
              let e = (0, J.Tb)({ chainId: o }, (e) => {
                e
                  ? u.invalidateQueries(eI({ chainId: o }))
                  : u.removeQueries(eI({ chainId: o }));
              });
              return e;
            }, [u, o]),
            s
          );
        }
        function ej({ chainId: e } = {}) {
          let t = eO({ chainId: e });
          return t.chain.id;
        }
        function eB({ chainId: e, scopeKey: t }) {
          return [{ entity: "blockNumber", chainId: e, scopeKey: t }];
        }
        function eM({ queryKey: [{ chainId: e }] }) {
          return (0, J.RQ)({ chainId: e });
        }
        function eN({ queryKey: [{ chainId: e, formatUnits: t }] }) {
          return (0, J.jS)({ chainId: e, formatUnits: t });
        }
        function eD({
          cacheTime: e,
          chainId: t,
          enabled: n = !0,
          formatUnits: r = "gwei",
          scopeKey: i,
          staleTime: a,
          suspense: o,
          watch: s,
          onError: u,
          onSettled: l,
          onSuccess: c,
        } = {}) {
          let d = ej({ chainId: t }),
            f = Y.useMemo(
              () =>
                (function ({ chainId: e, formatUnits: t, scopeKey: n }) {
                  return [
                    {
                      entity: "feeData",
                      chainId: e,
                      formatUnits: t,
                      scopeKey: n,
                    },
                  ];
                })({ chainId: d, formatUnits: r, scopeKey: i }),
              [d, r, i]
            ),
            p = eS(f, eN, {
              cacheTime: e,
              enabled: n,
              staleTime: a,
              suspense: o,
              onError: u,
              onSettled: l,
              onSuccess: c,
            });
          return eR({ chainId: d, enabled: !!(n && s), queryKey: f }), p;
        }
        function eR({ chainId: e, enabled: t, queryKey: n }) {
          let r = eP(),
            i = Y.useCallback(
              () => r.invalidateQueries({ queryKey: n }, { cancelRefetch: !1 }),
              [r, n]
            );
          !(function ({
            cacheTime: e = 0,
            chainId: t,
            enabled: n = !0,
            scopeKey: r,
            staleTime: i,
            suspense: a,
            watch: o = !1,
            onBlock: s,
            onError: u,
            onSettled: l,
            onSuccess: c,
          } = {}) {
            let d = ej({ chainId: t }),
              f = eO({ chainId: d }),
              p = (function ({ chainId: e } = {}) {
                return (0, ey.useSyncExternalStoreWithSelector)(
                  (t) => (0, J.fq)({ chainId: e }, t),
                  () => (0, J.jr)({ chainId: e }),
                  () => (0, J.jr)({ chainId: e }),
                  (e) => e,
                  (e, t) => e?.uid === t?.uid
                );
              })({ chainId: d }),
              h = eP();
            Y.useEffect(() => {
              if (!n || (!o && !s)) return;
              let e = p ?? f,
                t = e.watchBlockNumber({
                  onBlockNumber: (e) => {
                    o && h.setQueryData(eB({ chainId: d, scopeKey: r }), e),
                      s && s(e);
                  },
                  emitOnBegin: !0,
                });
              return t;
            }, [d, r, s, f, h, o, p, n]),
              eS(eB({ scopeKey: r, chainId: d }), eM, {
                cacheTime: e,
                enabled: n,
                staleTime: i,
                suspense: a,
                onError: u,
                onSettled: l,
                onSuccess: c,
              });
          })({
            chainId: e,
            enabled: t,
            onBlock: t ? i : void 0,
            scopeKey: t ? void 0 : "idle",
          });
        }
        var eF = (e) => "object" == typeof e && !Array.isArray(e);
        function eL(e, t, n = t, r = J.vZ) {
          let i = Y.useRef([]),
            a = (0, ey.useSyncExternalStoreWithSelector)(
              e,
              t,
              n,
              (e) => e,
              (e, t) => {
                if (eF(e) && eF(t) && i.current.length) {
                  for (let n of i.current) {
                    let i = r(e[n], t[n]);
                    if (!i) return !1;
                  }
                  return !0;
                }
                return r(e, t);
              }
            );
          if (eF(a)) {
            let e = { ...a };
            return (
              Object.defineProperties(
                e,
                Object.entries(e).reduce(
                  (e, [t, n]) => ({
                    ...e,
                    [t]: {
                      configurable: !1,
                      enumerable: !0,
                      get: () => (
                        i.current.includes(t) || i.current.push(t), n
                      ),
                    },
                  }),
                  {}
                )
              ),
              e
            );
          }
          return a;
        }
        function eU({ onConnect: e, onDisconnect: t } = {}) {
          let n = eE(),
            r = Y.useCallback((e) => (0, J.uH)(e), [n]),
            i = eL(r, J.D0),
            a = Y.useRef(),
            o = a.current;
          return (
            Y.useEffect(() => {
              o?.status !== "connected" &&
                "connected" === i.status &&
                e?.({
                  address: i.address,
                  connector: i.connector,
                  isReconnected:
                    o?.status === "reconnecting" || o?.status === void 0,
                }),
                o?.status === "connected" &&
                  "disconnected" === i.status &&
                  t?.(),
                (a.current = i);
            }, [e, t, o, i]),
            i
          );
        }
        function e$({
          queryKey: [{ address: e, chainId: t, formatUnits: n, token: r }],
        }) {
          if (!e) throw Error("address is required");
          return (0, J.EG)({
            address: e,
            chainId: t,
            formatUnits: n,
            token: r,
          });
        }
        function eq({
          address: e,
          cacheTime: t,
          chainId: n,
          enabled: r = !0,
          formatUnits: i,
          scopeKey: a,
          staleTime: o,
          suspense: s,
          token: u,
          watch: l,
          onError: c,
          onSettled: d,
          onSuccess: f,
        } = {}) {
          let p = ej({ chainId: n }),
            h = Y.useMemo(
              () =>
                (function ({
                  address: e,
                  chainId: t,
                  formatUnits: n,
                  scopeKey: r,
                  token: i,
                }) {
                  return [
                    {
                      entity: "balance",
                      address: e,
                      chainId: t,
                      formatUnits: n,
                      scopeKey: r,
                      token: i,
                    },
                  ];
                })({
                  address: e,
                  chainId: p,
                  formatUnits: i,
                  scopeKey: a,
                  token: u,
                }),
              [e, p, i, a, u]
            ),
            m = eS(h, e$, {
              cacheTime: t,
              enabled: !!(r && e),
              staleTime: o,
              suspense: s,
              onError: c,
              onSettled: d,
              onSuccess: f,
            });
          return eR({ chainId: p, enabled: !!(r && l && e), queryKey: h }), m;
        }
        var eH = (e) => [{ entity: "connect", ...e }],
          ez = (e) => {
            let { connector: t, chainId: n } = e;
            if (!t) throw Error("connector is required");
            return (0, J.$j)({ connector: t, chainId: n });
          };
        function eG({
          chainId: e,
          connector: t,
          onError: n,
          onMutate: r,
          onSettled: i,
          onSuccess: a,
        } = {}) {
          let o = eE(),
            {
              data: s,
              error: u,
              isError: l,
              isIdle: c,
              isLoading: d,
              isSuccess: f,
              mutate: p,
              mutateAsync: h,
              reset: m,
              status: y,
              variables: g,
            } = eT(eH({ connector: t, chainId: e }), ez, {
              onError: n,
              onMutate: r,
              onSettled: i,
              onSuccess: a,
            }),
            b = Y.useCallback(
              (n) =>
                p({ chainId: n?.chainId ?? e, connector: n?.connector ?? t }),
              [e, t, p]
            ),
            v = Y.useCallback(
              (n) =>
                h({ chainId: n?.chainId ?? e, connector: n?.connector ?? t }),
              [e, t, h]
            );
          return {
            connect: b,
            connectAsync: v,
            connectors: o.connectors,
            data: s,
            error: u,
            isError: l,
            isIdle: c,
            isLoading: d,
            isSuccess: f,
            pendingConnector: g?.connector,
            reset: m,
            status: y,
            variables: g,
          };
        }
        var eW = [{ entity: "disconnect" }],
          eV = () => (0, J.zP)();
        function eK({
          onError: e,
          onMutate: t,
          onSettled: n,
          onSuccess: r,
        } = {}) {
          let {
            error: i,
            isError: a,
            isIdle: o,
            isLoading: s,
            isSuccess: u,
            mutate: l,
            mutateAsync: c,
            reset: d,
            status: f,
          } = eT(eW, eV, {
            ...(e
              ? {
                  onError(t, n, r) {
                    e(t, r);
                  },
                }
              : {}),
            onMutate: t,
            ...(n
              ? {
                  onSettled(e, t, r, i) {
                    n(t, i);
                  },
                }
              : {}),
            ...(r
              ? {
                  onSuccess(e, t, n) {
                    r(n);
                  },
                }
              : {}),
          });
          return {
            disconnect: l,
            disconnectAsync: c,
            error: i,
            isError: a,
            isIdle: o,
            isLoading: s,
            isSuccess: u,
            reset: d,
            status: f,
          };
        }
        function eZ() {
          let e = eE(),
            t = (0, Y.useCallback)((e) => (0, J.QC)(e), [e]);
          return eL(t, J.Hy);
        }
        var eJ = (e) => [{ entity: "signMessage", ...e }],
          eY = (e) => {
            let { message: t } = e;
            if (!t) throw Error("message is required");
            return (0, J.l)({ message: t });
          };
        function eX({
          message: e,
          onError: t,
          onMutate: n,
          onSettled: r,
          onSuccess: i,
        } = {}) {
          let {
              data: a,
              error: o,
              isError: s,
              isIdle: u,
              isLoading: l,
              isSuccess: c,
              mutate: d,
              mutateAsync: f,
              reset: p,
              status: h,
              variables: m,
            } = eT(eJ({ message: e }), eY, {
              onError: t,
              onMutate: n,
              onSettled: r,
              onSuccess: i,
            }),
            y = Y.useCallback((t) => d(t || { message: e }), [e, d]),
            g = Y.useCallback((t) => f(t || { message: e }), [e, f]);
          return {
            data: a,
            error: o,
            isError: s,
            isIdle: u,
            isLoading: l,
            isSuccess: c,
            reset: p,
            signMessage: y,
            signMessageAsync: g,
            status: h,
            variables: m,
          };
        }
        var eQ = (e) => [{ entity: "switchNetwork", ...e }],
          e0 = (e) => {
            let { chainId: t } = e;
            if (!t) throw Error("chainId is required");
            return (0, J.If)({ chainId: t });
          };
        function e1({
          chainId: e,
          throwForSwitchChainNotSupported: t,
          onError: n,
          onMutate: r,
          onSettled: i,
          onSuccess: a,
        } = {}) {
          let o, s;
          let u = eE(),
            l = (function () {
              let [, e] = Y.useReducer((e) => e + 1, 0);
              return e;
            })(),
            {
              data: c,
              error: d,
              isError: f,
              isIdle: p,
              isLoading: h,
              isSuccess: m,
              mutate: y,
              mutateAsync: g,
              reset: b,
              status: v,
              variables: w,
            } = eT(eQ({ chainId: e }), e0, {
              onError: n,
              onMutate: r,
              onSettled: i,
              onSuccess: a,
            }),
            E = Y.useCallback((t) => y({ chainId: t ?? e }), [e, y]),
            x = Y.useCallback((t) => g({ chainId: t ?? e }), [e, g]);
          Y.useEffect(() => {
            let e = u.subscribe(
              ({ chains: e, connector: t }) => ({ chains: e, connector: t }),
              l
            );
            return e;
          }, [u, l]);
          let C = !!u.connector?.switchChain;
          return (
            (t || C) && ((o = E), (s = x)),
            {
              chains: u.chains ?? [],
              data: c,
              error: d,
              isError: f,
              isIdle: p,
              isLoading: h,
              isSuccess: m,
              pendingChainId: w?.chainId,
              reset: b,
              status: v,
              switchNetwork: o,
              switchNetworkAsync: s,
              variables: w,
            }
          );
        }
        function e2({ queryKey: [{ name: e, chainId: t }] }) {
          if (!e) throw Error("name is required");
          return (0, J.w6)({ name: e, chainId: t });
        }
        function e6({
          cacheTime: e,
          chainId: t,
          enabled: n = !0,
          name: r,
          scopeKey: i,
          staleTime: a = 864e5,
          suspense: o,
          onError: s,
          onSettled: u,
          onSuccess: l,
        } = {}) {
          let c = ej({ chainId: t });
          return eS(
            (function ({ name: e, chainId: t, scopeKey: n }) {
              return [
                { entity: "ensAvatar", name: e, chainId: t, scopeKey: n },
              ];
            })({ name: r, chainId: c, scopeKey: i }),
            e2,
            {
              cacheTime: e,
              enabled: !!(n && r && c),
              staleTime: a,
              suspense: o,
              onError: s,
              onSettled: u,
              onSuccess: l,
            }
          );
        }
        function e3({ queryKey: [{ address: e, chainId: t }] }) {
          if (!e) throw Error("address is required");
          return (0, J.Lk)({ address: e, chainId: t });
        }
        function e5({
          address: e,
          cacheTime: t,
          chainId: n,
          enabled: r = !0,
          scopeKey: i,
          staleTime: a = 864e5,
          suspense: o,
          onError: s,
          onSettled: u,
          onSuccess: l,
        } = {}) {
          let c = ej({ chainId: n });
          return eS(
            (function ({ address: e, chainId: t, scopeKey: n }) {
              return [
                { entity: "ensName", address: e, chainId: t, scopeKey: n },
              ];
            })({ address: e, chainId: c, scopeKey: i }),
            e3,
            {
              cacheTime: t,
              enabled: !!(r && e && c),
              staleTime: a,
              suspense: o,
              onError: s,
              onSettled: u,
              onSuccess: l,
            }
          );
        }
      },
      76248: function (e, t, n) {
        "use strict";
        function r(e, t) {
          if (Object.is(e, t)) return !0;
          if (
            "object" != typeof e ||
            null === e ||
            "object" != typeof t ||
            null === t
          )
            return !1;
          if (e instanceof Map && t instanceof Map) {
            if (e.size !== t.size) return !1;
            for (let [n, r] of e) if (!Object.is(r, t.get(n))) return !1;
            return !0;
          }
          if (e instanceof Set && t instanceof Set) {
            if (e.size !== t.size) return !1;
            for (let n of e) if (!t.has(n)) return !1;
            return !0;
          }
          let n = Object.keys(e);
          if (n.length !== Object.keys(t).length) return !1;
          for (let r = 0; r < n.length; r++)
            if (
              !Object.prototype.hasOwnProperty.call(t, n[r]) ||
              !Object.is(e[n[r]], t[n[r]])
            )
              return !1;
          return !0;
        }
        n.d(t, {
          X: function () {
            return r;
          },
        });
      },
      43973: function (e, t, n) {
        "use strict";
        n.d(t, {
          M: function () {
            return i;
          },
        });
        let r = (e) => {
            let t;
            let n = new Set(),
              r = (e, r) => {
                let i = "function" == typeof e ? e(t) : e;
                if (!Object.is(i, t)) {
                  let e = t;
                  (t = (null != r ? r : "object" != typeof i)
                    ? i
                    : Object.assign({}, t, i)),
                    n.forEach((n) => n(t, e));
                }
              },
              i = () => t,
              a = {
                setState: r,
                getState: i,
                subscribe: (e) => (n.add(e), () => n.delete(e)),
                destroy: () => {
                  console.warn(
                    "[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."
                  ),
                    n.clear();
                },
              };
            return (t = e(r, i, a)), a;
          },
          i = (e) => (e ? r(e) : r);
      },
      29242: function (e) {
        "use strict";
        e.exports = JSON.parse(
          '{"name":"@safe-global/safe-apps-sdk","version":"8.1.0","description":"SDK developed to integrate third-party apps with Safe app.","main":"dist/src/index.js","typings":"dist/src/index.d.ts","_files":["dist/**/*","src/**/*","CHANGELOG.md","README.md"],"sideEffects":false,"keywords":["Safe","sdk","apps"],"scripts":{"test":"jest","format-dist":"sed -i \'\' \'s/\\"files\\":/\\"_files\\":/\' dist/package.json","build":"yarn rimraf dist && tsc && yarn format-dist"},"author":"Safe (https://safe.global)","license":"MIT","dependencies":{"@safe-global/safe-gateway-typescript-sdk":"^3.5.3","viem":"^1.0.0"},"repository":{"type":"git","url":"git+https://github.com/safe-global/safe-apps-sdk.git"},"bugs":{"url":"https://github.com/safe-global/safe-apps-sdk/issues"},"homepage":"https://github.com/safe-global/safe-apps-sdk#readme","publishConfig":{"access":"public"}}'
        );
      },
    },
    function (e) {
      var t = function (t) {
        return e((e.s = t));
      };
      e.O(0, [9774, 179], function () {
        return t(84062), t(6840), t(90387);
      }),
        (_N_E = e.O());
    },
  ]);
